
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         000202e4  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00003c14  90020584  90020584  00040584  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000004  90024198  90024198  00044198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002419c  9002419c  000d8644  2**0
                  CONTENTS
  6 .ARM          00000008  9002419c  9002419c  0004419c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  900241a4  900241a4  000d8644  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000014  900241a4  900241a4  000441a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  900241b8  900241b8  000441b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000130  24000000  900241c0  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          00012fbc  24000130  900242f0  00050130  2**2
                  ALLOC
 12 ._user_heap_stack 00002004  240130ec  900242f0  000530ec  2**0
                  ALLOC
 13 .ARM.attributes 0000002e  00000000  00000000  000d8644  2**0
                  CONTENTS, READONLY
 14 FontFlashSection 000028cc  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000018  902028cc  902028cc  000628cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 ExtFlashSection 00075d60  902028e4  902028e4  000628e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .debug_line   00054220  00000000  00000000  000d8672  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000c25a3  00000000  00000000  0012c892  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 000142bc  00000000  00000000  001eee35  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00003808  00000000  00000000  002030f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00196e3f  00000000  00000000  00206900  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00004440  00000000  00000000  0039d740  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00023c63  00000000  00000000  003a1b80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00048894  00000000  00000000  003c57e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000d2  00000000  00000000  0040e077  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000cb78  00000000  00000000  0040e14c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24000130 	.word	0x24000130
900002bc:	00000000 	.word	0x00000000
900002c0:	9002056c 	.word	0x9002056c

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24000134 	.word	0x24000134
900002dc:	9002056c 	.word	0x9002056c

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_uldivmod>:
90000380:	b953      	cbnz	r3, 90000398 <__aeabi_uldivmod+0x18>
90000382:	b94a      	cbnz	r2, 90000398 <__aeabi_uldivmod+0x18>
90000384:	2900      	cmp	r1, #0
90000386:	bf08      	it	eq
90000388:	2800      	cmpeq	r0, #0
9000038a:	bf1c      	itt	ne
9000038c:	f04f 31ff 	movne.w	r1, #4294967295
90000390:	f04f 30ff 	movne.w	r0, #4294967295
90000394:	f000 b96e 	b.w	90000674 <__aeabi_idiv0>
90000398:	f1ad 0c08 	sub.w	ip, sp, #8
9000039c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
900003a0:	f000 f806 	bl	900003b0 <__udivmoddi4>
900003a4:	f8dd e004 	ldr.w	lr, [sp, #4]
900003a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
900003ac:	b004      	add	sp, #16
900003ae:	4770      	bx	lr

900003b0 <__udivmoddi4>:
900003b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900003b4:	9d08      	ldr	r5, [sp, #32]
900003b6:	4604      	mov	r4, r0
900003b8:	468c      	mov	ip, r1
900003ba:	2b00      	cmp	r3, #0
900003bc:	f040 8083 	bne.w	900004c6 <__udivmoddi4+0x116>
900003c0:	428a      	cmp	r2, r1
900003c2:	4617      	mov	r7, r2
900003c4:	d947      	bls.n	90000456 <__udivmoddi4+0xa6>
900003c6:	fab2 f282 	clz	r2, r2
900003ca:	b142      	cbz	r2, 900003de <__udivmoddi4+0x2e>
900003cc:	f1c2 0020 	rsb	r0, r2, #32
900003d0:	fa24 f000 	lsr.w	r0, r4, r0
900003d4:	4091      	lsls	r1, r2
900003d6:	4097      	lsls	r7, r2
900003d8:	ea40 0c01 	orr.w	ip, r0, r1
900003dc:	4094      	lsls	r4, r2
900003de:	ea4f 4817 	mov.w	r8, r7, lsr #16
900003e2:	0c23      	lsrs	r3, r4, #16
900003e4:	fbbc f6f8 	udiv	r6, ip, r8
900003e8:	fa1f fe87 	uxth.w	lr, r7
900003ec:	fb08 c116 	mls	r1, r8, r6, ip
900003f0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900003f4:	fb06 f10e 	mul.w	r1, r6, lr
900003f8:	4299      	cmp	r1, r3
900003fa:	d909      	bls.n	90000410 <__udivmoddi4+0x60>
900003fc:	18fb      	adds	r3, r7, r3
900003fe:	f106 30ff 	add.w	r0, r6, #4294967295
90000402:	f080 8119 	bcs.w	90000638 <__udivmoddi4+0x288>
90000406:	4299      	cmp	r1, r3
90000408:	f240 8116 	bls.w	90000638 <__udivmoddi4+0x288>
9000040c:	3e02      	subs	r6, #2
9000040e:	443b      	add	r3, r7
90000410:	1a5b      	subs	r3, r3, r1
90000412:	b2a4      	uxth	r4, r4
90000414:	fbb3 f0f8 	udiv	r0, r3, r8
90000418:	fb08 3310 	mls	r3, r8, r0, r3
9000041c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
90000420:	fb00 fe0e 	mul.w	lr, r0, lr
90000424:	45a6      	cmp	lr, r4
90000426:	d909      	bls.n	9000043c <__udivmoddi4+0x8c>
90000428:	193c      	adds	r4, r7, r4
9000042a:	f100 33ff 	add.w	r3, r0, #4294967295
9000042e:	f080 8105 	bcs.w	9000063c <__udivmoddi4+0x28c>
90000432:	45a6      	cmp	lr, r4
90000434:	f240 8102 	bls.w	9000063c <__udivmoddi4+0x28c>
90000438:	3802      	subs	r0, #2
9000043a:	443c      	add	r4, r7
9000043c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
90000440:	eba4 040e 	sub.w	r4, r4, lr
90000444:	2600      	movs	r6, #0
90000446:	b11d      	cbz	r5, 90000450 <__udivmoddi4+0xa0>
90000448:	40d4      	lsrs	r4, r2
9000044a:	2300      	movs	r3, #0
9000044c:	e9c5 4300 	strd	r4, r3, [r5]
90000450:	4631      	mov	r1, r6
90000452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000456:	b902      	cbnz	r2, 9000045a <__udivmoddi4+0xaa>
90000458:	deff      	udf	#255	; 0xff
9000045a:	fab2 f282 	clz	r2, r2
9000045e:	2a00      	cmp	r2, #0
90000460:	d150      	bne.n	90000504 <__udivmoddi4+0x154>
90000462:	1bcb      	subs	r3, r1, r7
90000464:	ea4f 4e17 	mov.w	lr, r7, lsr #16
90000468:	fa1f f887 	uxth.w	r8, r7
9000046c:	2601      	movs	r6, #1
9000046e:	fbb3 fcfe 	udiv	ip, r3, lr
90000472:	0c21      	lsrs	r1, r4, #16
90000474:	fb0e 331c 	mls	r3, lr, ip, r3
90000478:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
9000047c:	fb08 f30c 	mul.w	r3, r8, ip
90000480:	428b      	cmp	r3, r1
90000482:	d907      	bls.n	90000494 <__udivmoddi4+0xe4>
90000484:	1879      	adds	r1, r7, r1
90000486:	f10c 30ff 	add.w	r0, ip, #4294967295
9000048a:	d202      	bcs.n	90000492 <__udivmoddi4+0xe2>
9000048c:	428b      	cmp	r3, r1
9000048e:	f200 80e9 	bhi.w	90000664 <__udivmoddi4+0x2b4>
90000492:	4684      	mov	ip, r0
90000494:	1ac9      	subs	r1, r1, r3
90000496:	b2a3      	uxth	r3, r4
90000498:	fbb1 f0fe 	udiv	r0, r1, lr
9000049c:	fb0e 1110 	mls	r1, lr, r0, r1
900004a0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
900004a4:	fb08 f800 	mul.w	r8, r8, r0
900004a8:	45a0      	cmp	r8, r4
900004aa:	d907      	bls.n	900004bc <__udivmoddi4+0x10c>
900004ac:	193c      	adds	r4, r7, r4
900004ae:	f100 33ff 	add.w	r3, r0, #4294967295
900004b2:	d202      	bcs.n	900004ba <__udivmoddi4+0x10a>
900004b4:	45a0      	cmp	r8, r4
900004b6:	f200 80d9 	bhi.w	9000066c <__udivmoddi4+0x2bc>
900004ba:	4618      	mov	r0, r3
900004bc:	eba4 0408 	sub.w	r4, r4, r8
900004c0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
900004c4:	e7bf      	b.n	90000446 <__udivmoddi4+0x96>
900004c6:	428b      	cmp	r3, r1
900004c8:	d909      	bls.n	900004de <__udivmoddi4+0x12e>
900004ca:	2d00      	cmp	r5, #0
900004cc:	f000 80b1 	beq.w	90000632 <__udivmoddi4+0x282>
900004d0:	2600      	movs	r6, #0
900004d2:	e9c5 0100 	strd	r0, r1, [r5]
900004d6:	4630      	mov	r0, r6
900004d8:	4631      	mov	r1, r6
900004da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900004de:	fab3 f683 	clz	r6, r3
900004e2:	2e00      	cmp	r6, #0
900004e4:	d14a      	bne.n	9000057c <__udivmoddi4+0x1cc>
900004e6:	428b      	cmp	r3, r1
900004e8:	d302      	bcc.n	900004f0 <__udivmoddi4+0x140>
900004ea:	4282      	cmp	r2, r0
900004ec:	f200 80b8 	bhi.w	90000660 <__udivmoddi4+0x2b0>
900004f0:	1a84      	subs	r4, r0, r2
900004f2:	eb61 0103 	sbc.w	r1, r1, r3
900004f6:	2001      	movs	r0, #1
900004f8:	468c      	mov	ip, r1
900004fa:	2d00      	cmp	r5, #0
900004fc:	d0a8      	beq.n	90000450 <__udivmoddi4+0xa0>
900004fe:	e9c5 4c00 	strd	r4, ip, [r5]
90000502:	e7a5      	b.n	90000450 <__udivmoddi4+0xa0>
90000504:	f1c2 0320 	rsb	r3, r2, #32
90000508:	fa20 f603 	lsr.w	r6, r0, r3
9000050c:	4097      	lsls	r7, r2
9000050e:	fa01 f002 	lsl.w	r0, r1, r2
90000512:	ea4f 4e17 	mov.w	lr, r7, lsr #16
90000516:	40d9      	lsrs	r1, r3
90000518:	4330      	orrs	r0, r6
9000051a:	0c03      	lsrs	r3, r0, #16
9000051c:	fbb1 f6fe 	udiv	r6, r1, lr
90000520:	fa1f f887 	uxth.w	r8, r7
90000524:	fb0e 1116 	mls	r1, lr, r6, r1
90000528:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000052c:	fb06 f108 	mul.w	r1, r6, r8
90000530:	4299      	cmp	r1, r3
90000532:	fa04 f402 	lsl.w	r4, r4, r2
90000536:	d909      	bls.n	9000054c <__udivmoddi4+0x19c>
90000538:	18fb      	adds	r3, r7, r3
9000053a:	f106 3cff 	add.w	ip, r6, #4294967295
9000053e:	f080 808d 	bcs.w	9000065c <__udivmoddi4+0x2ac>
90000542:	4299      	cmp	r1, r3
90000544:	f240 808a 	bls.w	9000065c <__udivmoddi4+0x2ac>
90000548:	3e02      	subs	r6, #2
9000054a:	443b      	add	r3, r7
9000054c:	1a5b      	subs	r3, r3, r1
9000054e:	b281      	uxth	r1, r0
90000550:	fbb3 f0fe 	udiv	r0, r3, lr
90000554:	fb0e 3310 	mls	r3, lr, r0, r3
90000558:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
9000055c:	fb00 f308 	mul.w	r3, r0, r8
90000560:	428b      	cmp	r3, r1
90000562:	d907      	bls.n	90000574 <__udivmoddi4+0x1c4>
90000564:	1879      	adds	r1, r7, r1
90000566:	f100 3cff 	add.w	ip, r0, #4294967295
9000056a:	d273      	bcs.n	90000654 <__udivmoddi4+0x2a4>
9000056c:	428b      	cmp	r3, r1
9000056e:	d971      	bls.n	90000654 <__udivmoddi4+0x2a4>
90000570:	3802      	subs	r0, #2
90000572:	4439      	add	r1, r7
90000574:	1acb      	subs	r3, r1, r3
90000576:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
9000057a:	e778      	b.n	9000046e <__udivmoddi4+0xbe>
9000057c:	f1c6 0c20 	rsb	ip, r6, #32
90000580:	fa03 f406 	lsl.w	r4, r3, r6
90000584:	fa22 f30c 	lsr.w	r3, r2, ip
90000588:	431c      	orrs	r4, r3
9000058a:	fa20 f70c 	lsr.w	r7, r0, ip
9000058e:	fa01 f306 	lsl.w	r3, r1, r6
90000592:	ea4f 4e14 	mov.w	lr, r4, lsr #16
90000596:	fa21 f10c 	lsr.w	r1, r1, ip
9000059a:	431f      	orrs	r7, r3
9000059c:	0c3b      	lsrs	r3, r7, #16
9000059e:	fbb1 f9fe 	udiv	r9, r1, lr
900005a2:	fa1f f884 	uxth.w	r8, r4
900005a6:	fb0e 1119 	mls	r1, lr, r9, r1
900005aa:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
900005ae:	fb09 fa08 	mul.w	sl, r9, r8
900005b2:	458a      	cmp	sl, r1
900005b4:	fa02 f206 	lsl.w	r2, r2, r6
900005b8:	fa00 f306 	lsl.w	r3, r0, r6
900005bc:	d908      	bls.n	900005d0 <__udivmoddi4+0x220>
900005be:	1861      	adds	r1, r4, r1
900005c0:	f109 30ff 	add.w	r0, r9, #4294967295
900005c4:	d248      	bcs.n	90000658 <__udivmoddi4+0x2a8>
900005c6:	458a      	cmp	sl, r1
900005c8:	d946      	bls.n	90000658 <__udivmoddi4+0x2a8>
900005ca:	f1a9 0902 	sub.w	r9, r9, #2
900005ce:	4421      	add	r1, r4
900005d0:	eba1 010a 	sub.w	r1, r1, sl
900005d4:	b2bf      	uxth	r7, r7
900005d6:	fbb1 f0fe 	udiv	r0, r1, lr
900005da:	fb0e 1110 	mls	r1, lr, r0, r1
900005de:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
900005e2:	fb00 f808 	mul.w	r8, r0, r8
900005e6:	45b8      	cmp	r8, r7
900005e8:	d907      	bls.n	900005fa <__udivmoddi4+0x24a>
900005ea:	19e7      	adds	r7, r4, r7
900005ec:	f100 31ff 	add.w	r1, r0, #4294967295
900005f0:	d22e      	bcs.n	90000650 <__udivmoddi4+0x2a0>
900005f2:	45b8      	cmp	r8, r7
900005f4:	d92c      	bls.n	90000650 <__udivmoddi4+0x2a0>
900005f6:	3802      	subs	r0, #2
900005f8:	4427      	add	r7, r4
900005fa:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
900005fe:	eba7 0708 	sub.w	r7, r7, r8
90000602:	fba0 8902 	umull	r8, r9, r0, r2
90000606:	454f      	cmp	r7, r9
90000608:	46c6      	mov	lr, r8
9000060a:	4649      	mov	r1, r9
9000060c:	d31a      	bcc.n	90000644 <__udivmoddi4+0x294>
9000060e:	d017      	beq.n	90000640 <__udivmoddi4+0x290>
90000610:	b15d      	cbz	r5, 9000062a <__udivmoddi4+0x27a>
90000612:	ebb3 020e 	subs.w	r2, r3, lr
90000616:	eb67 0701 	sbc.w	r7, r7, r1
9000061a:	fa07 fc0c 	lsl.w	ip, r7, ip
9000061e:	40f2      	lsrs	r2, r6
90000620:	ea4c 0202 	orr.w	r2, ip, r2
90000624:	40f7      	lsrs	r7, r6
90000626:	e9c5 2700 	strd	r2, r7, [r5]
9000062a:	2600      	movs	r6, #0
9000062c:	4631      	mov	r1, r6
9000062e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000632:	462e      	mov	r6, r5
90000634:	4628      	mov	r0, r5
90000636:	e70b      	b.n	90000450 <__udivmoddi4+0xa0>
90000638:	4606      	mov	r6, r0
9000063a:	e6e9      	b.n	90000410 <__udivmoddi4+0x60>
9000063c:	4618      	mov	r0, r3
9000063e:	e6fd      	b.n	9000043c <__udivmoddi4+0x8c>
90000640:	4543      	cmp	r3, r8
90000642:	d2e5      	bcs.n	90000610 <__udivmoddi4+0x260>
90000644:	ebb8 0e02 	subs.w	lr, r8, r2
90000648:	eb69 0104 	sbc.w	r1, r9, r4
9000064c:	3801      	subs	r0, #1
9000064e:	e7df      	b.n	90000610 <__udivmoddi4+0x260>
90000650:	4608      	mov	r0, r1
90000652:	e7d2      	b.n	900005fa <__udivmoddi4+0x24a>
90000654:	4660      	mov	r0, ip
90000656:	e78d      	b.n	90000574 <__udivmoddi4+0x1c4>
90000658:	4681      	mov	r9, r0
9000065a:	e7b9      	b.n	900005d0 <__udivmoddi4+0x220>
9000065c:	4666      	mov	r6, ip
9000065e:	e775      	b.n	9000054c <__udivmoddi4+0x19c>
90000660:	4630      	mov	r0, r6
90000662:	e74a      	b.n	900004fa <__udivmoddi4+0x14a>
90000664:	f1ac 0c02 	sub.w	ip, ip, #2
90000668:	4439      	add	r1, r7
9000066a:	e713      	b.n	90000494 <__udivmoddi4+0xe4>
9000066c:	3802      	subs	r0, #2
9000066e:	443c      	add	r4, r7
90000670:	e724      	b.n	900004bc <__udivmoddi4+0x10c>
90000672:	bf00      	nop

90000674 <__aeabi_idiv0>:
90000674:	4770      	bx	lr
90000676:	bf00      	nop

90000678 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000678:	f8df d034 	ldr.w	sp, [pc, #52]	; 900006b0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
9000067c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
9000067e:	e003      	b.n	90000688 <LoopCopyDataInit>

90000680 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000680:	4b0c      	ldr	r3, [pc, #48]	; (900006b4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000682:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000684:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000686:	3104      	adds	r1, #4

90000688 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000688:	480b      	ldr	r0, [pc, #44]	; (900006b8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
9000068a:	4b0c      	ldr	r3, [pc, #48]	; (900006bc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
9000068c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
9000068e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000690:	d3f6      	bcc.n	90000680 <CopyDataInit>
  ldr  r2, =_sbss
90000692:	4a0b      	ldr	r2, [pc, #44]	; (900006c0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000694:	e002      	b.n	9000069c <LoopFillZerobss>

90000696 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000696:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000698:	f842 3b04 	str.w	r3, [r2], #4

9000069c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
9000069c:	4b09      	ldr	r3, [pc, #36]	; (900006c4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
9000069e:	429a      	cmp	r2, r3
  bcc  FillZerobss
900006a0:	d3f9      	bcc.n	90000696 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900006a2:	f006 f9f5 	bl	90006a90 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900006a6:	f01e fe47 	bl	9001f338 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900006aa:	f002 fc01 	bl	90002eb0 <main>
  bx  lr    
900006ae:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900006b0:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900006b4:	900241c0 	.word	0x900241c0
  ldr  r0, =_sdata
900006b8:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900006bc:	24000130 	.word	0x24000130
  ldr  r2, =_sbss
900006c0:	24000130 	.word	0x24000130
  ldr  r3, = _ebss
900006c4:	240130ec 	.word	0x240130ec

900006c8 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900006c8:	e7fe      	b.n	900006c8 <ADC3_IRQHandler>

900006ca <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
900006ca:	f001 be87 	b.w	900023dc <touchgfx_init>

900006ce <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
900006ce:	f001 beaf 	b.w	90002430 <touchgfx_taskEntry>
	...

900006d4 <_ZN8touchgfx18MCUInstrumentationD1Ev>:

    /** Initialize. */
    virtual void init() = 0;

    /** Finalizes an instance of the MCUInstrumentation class. */
    virtual ~MCUInstrumentation()
900006d4:	b480      	push	{r7}
900006d6:	b083      	sub	sp, #12
900006d8:	af00      	add	r7, sp, #0
900006da:	6078      	str	r0, [r7, #4]
    {
900006dc:	4a04      	ldr	r2, [pc, #16]	; (900006f0 <_ZN8touchgfx18MCUInstrumentationD1Ev+0x1c>)
900006de:	687b      	ldr	r3, [r7, #4]
900006e0:	601a      	str	r2, [r3, #0]
    }
900006e2:	687b      	ldr	r3, [r7, #4]
900006e4:	4618      	mov	r0, r3
900006e6:	370c      	adds	r7, #12
900006e8:	46bd      	mov	sp, r7
900006ea:	f85d 7b04 	ldr.w	r7, [sp], #4
900006ee:	4770      	bx	lr
900006f0:	90021124 	.word	0x90021124

900006f4 <_ZN8touchgfx18MCUInstrumentationD0Ev>:
    virtual ~MCUInstrumentation()
900006f4:	b580      	push	{r7, lr}
900006f6:	b082      	sub	sp, #8
900006f8:	af00      	add	r7, sp, #0
900006fa:	6078      	str	r0, [r7, #4]
    }
900006fc:	6878      	ldr	r0, [r7, #4]
900006fe:	f7ff ffe9 	bl	900006d4 <_ZN8touchgfx18MCUInstrumentationD1Ev>
90000702:	210c      	movs	r1, #12
90000704:	6878      	ldr	r0, [r7, #4]
90000706:	f01e fd9e 	bl	9001f246 <_ZdlPvj>
9000070a:	687b      	ldr	r3, [r7, #4]
9000070c:	4618      	mov	r0, r3
9000070e:	3708      	adds	r7, #8
90000710:	46bd      	mov	sp, r7
90000712:	bd80      	pop	{r7, pc}

90000714 <_ZN8touchgfx18MCUInstrumentation12setMCUActiveEb>:
    /**
     * Sets MCU activity high.
     *
     * @param  active if True, inactive otherwise.
     */
    virtual void setMCUActive(bool active)
90000714:	b580      	push	{r7, lr}
90000716:	b084      	sub	sp, #16
90000718:	af00      	add	r7, sp, #0
9000071a:	6078      	str	r0, [r7, #4]
9000071c:	460b      	mov	r3, r1
9000071e:	70fb      	strb	r3, [r7, #3]
    {
        if (active) //idle task sched out
90000720:	78fb      	ldrb	r3, [r7, #3]
90000722:	2b00      	cmp	r3, #0
90000724:	d011      	beq.n	9000074a <_ZN8touchgfx18MCUInstrumentation12setMCUActiveEb+0x36>
        {
            uint32_t cc_temp = getCPUCycles() - cc_in;
90000726:	687b      	ldr	r3, [r7, #4]
90000728:	681b      	ldr	r3, [r3, #0]
9000072a:	3310      	adds	r3, #16
9000072c:	681b      	ldr	r3, [r3, #0]
9000072e:	6878      	ldr	r0, [r7, #4]
90000730:	4798      	blx	r3
90000732:	4602      	mov	r2, r0
90000734:	687b      	ldr	r3, [r7, #4]
90000736:	689b      	ldr	r3, [r3, #8]
90000738:	1ad3      	subs	r3, r2, r3
9000073a:	60fb      	str	r3, [r7, #12]
            cc_consumed += cc_temp;
9000073c:	687b      	ldr	r3, [r7, #4]
9000073e:	685a      	ldr	r2, [r3, #4]
90000740:	68fb      	ldr	r3, [r7, #12]
90000742:	441a      	add	r2, r3
90000744:	687b      	ldr	r3, [r7, #4]
90000746:	605a      	str	r2, [r3, #4]
        }
        else //idle task sched in
        {
            cc_in = getCPUCycles();
        }
    }
90000748:	e008      	b.n	9000075c <_ZN8touchgfx18MCUInstrumentation12setMCUActiveEb+0x48>
            cc_in = getCPUCycles();
9000074a:	687b      	ldr	r3, [r7, #4]
9000074c:	681b      	ldr	r3, [r3, #0]
9000074e:	3310      	adds	r3, #16
90000750:	681b      	ldr	r3, [r3, #0]
90000752:	6878      	ldr	r0, [r7, #4]
90000754:	4798      	blx	r3
90000756:	4602      	mov	r2, r0
90000758:	687b      	ldr	r3, [r7, #4]
9000075a:	609a      	str	r2, [r3, #8]
    }
9000075c:	bf00      	nop
9000075e:	3710      	adds	r7, #16
90000760:	46bd      	mov	sp, r7
90000762:	bd80      	pop	{r7, pc}

90000764 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
    /**
     * Gets number of consumed clock cycles.
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
90000764:	b480      	push	{r7}
90000766:	b083      	sub	sp, #12
90000768:	af00      	add	r7, sp, #0
9000076a:	6078      	str	r0, [r7, #4]
    {
        return cc_consumed;
9000076c:	687b      	ldr	r3, [r7, #4]
9000076e:	685b      	ldr	r3, [r3, #4]
    }
90000770:	4618      	mov	r0, r3
90000772:	370c      	adds	r7, #12
90000774:	46bd      	mov	sp, r7
90000776:	f85d 7b04 	ldr.w	r7, [sp], #4
9000077a:	4770      	bx	lr

9000077c <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
    /**
     * Sets number of consumed clock cycles.
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
9000077c:	b480      	push	{r7}
9000077e:	b083      	sub	sp, #12
90000780:	af00      	add	r7, sp, #0
90000782:	6078      	str	r0, [r7, #4]
90000784:	6039      	str	r1, [r7, #0]
    {
        cc_consumed = val;
90000786:	687b      	ldr	r3, [r7, #4]
90000788:	683a      	ldr	r2, [r7, #0]
9000078a:	605a      	str	r2, [r3, #4]
    }
9000078c:	bf00      	nop
9000078e:	370c      	adds	r7, #12
90000790:	46bd      	mov	sp, r7
90000792:	f85d 7b04 	ldr.w	r7, [sp], #4
90000796:	4770      	bx	lr

90000798 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
#include <touchgfx/hal/HAL.hpp>

namespace touchgfx
{
void CortexMMCUInstrumentation::init()
{
90000798:	b480      	push	{r7}
9000079a:	b083      	sub	sp, #12
9000079c:	af00      	add	r7, sp, #0
9000079e:	6078      	str	r0, [r7, #4]
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900007a0:	4b0b      	ldr	r3, [pc, #44]	; (900007d0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x38>)
900007a2:	681b      	ldr	r3, [r3, #0]
900007a4:	4a0a      	ldr	r2, [pc, #40]	; (900007d0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x38>)
900007a6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
900007aa:	6013      	str	r3, [r2, #0]
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900007ac:	4b09      	ldr	r3, [pc, #36]	; (900007d4 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x3c>)
900007ae:	681a      	ldr	r2, [r3, #0]
900007b0:	4908      	ldr	r1, [pc, #32]	; (900007d4 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x3c>)
900007b2:	4b09      	ldr	r3, [pc, #36]	; (900007d8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x40>)
900007b4:	4313      	orrs	r3, r2
900007b6:	600b      	str	r3, [r1, #0]
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
900007b8:	4b08      	ldr	r3, [pc, #32]	; (900007dc <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x44>)
900007ba:	681b      	ldr	r3, [r3, #0]
900007bc:	4a07      	ldr	r2, [pc, #28]	; (900007dc <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x44>)
900007be:	f043 0301 	orr.w	r3, r3, #1
900007c2:	6013      	str	r3, [r2, #0]
}
900007c4:	bf00      	nop
900007c6:	370c      	adds	r7, #12
900007c8:	46bd      	mov	sp, r7
900007ca:	f85d 7b04 	ldr.w	r7, [sp], #4
900007ce:	4770      	bx	lr
900007d0:	e000edfc 	.word	0xe000edfc
900007d4:	e0001fb0 	.word	0xe0001fb0
900007d8:	c5acce55 	.word	0xc5acce55
900007dc:	e0001000 	.word	0xe0001000

900007e0 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
900007e0:	b480      	push	{r7}
900007e2:	b085      	sub	sp, #20
900007e4:	af00      	add	r7, sp, #0
900007e6:	60f8      	str	r0, [r7, #12]
900007e8:	60b9      	str	r1, [r7, #8]
900007ea:	607a      	str	r2, [r7, #4]
900007ec:	603b      	str	r3, [r7, #0]
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
900007ee:	687a      	ldr	r2, [r7, #4]
900007f0:	68bb      	ldr	r3, [r7, #8]
900007f2:	1ad2      	subs	r2, r2, r3
900007f4:	683b      	ldr	r3, [r7, #0]
900007f6:	085b      	lsrs	r3, r3, #1
900007f8:	441a      	add	r2, r3
900007fa:	683b      	ldr	r3, [r7, #0]
900007fc:	fbb2 f3f3 	udiv	r3, r2, r3
}
90000800:	4618      	mov	r0, r3
90000802:	3714      	adds	r7, #20
90000804:	46bd      	mov	sp, r7
90000806:	f85d 7b04 	ldr.w	r7, [sp], #4
9000080a:	4770      	bx	lr

9000080c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
9000080c:	b480      	push	{r7}
9000080e:	b083      	sub	sp, #12
90000810:	af00      	add	r7, sp, #0
90000812:	6078      	str	r0, [r7, #4]
    return *((volatile unsigned int*)0xE0001004);
90000814:	4b03      	ldr	r3, [pc, #12]	; (90000824 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x18>)
90000816:	681b      	ldr	r3, [r3, #0]
}
90000818:	4618      	mov	r0, r3
9000081a:	370c      	adds	r7, #12
9000081c:	46bd      	mov	sp, r7
9000081e:	f85d 7b04 	ldr.w	r7, [sp], #4
90000822:	4770      	bx	lr
90000824:	e0001004 	.word	0xe0001004

90000828 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
90000828:	b580      	push	{r7, lr}
9000082a:	b084      	sub	sp, #16
9000082c:	af00      	add	r7, sp, #0
9000082e:	6078      	str	r0, [r7, #4]
90000830:	460b      	mov	r3, r1
90000832:	70fb      	strb	r3, [r7, #3]
    if (active) //idle task sched out
90000834:	78fb      	ldrb	r3, [r7, #3]
90000836:	2b00      	cmp	r3, #0
90000838:	d011      	beq.n	9000085e <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x36>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
9000083a:	687b      	ldr	r3, [r7, #4]
9000083c:	681b      	ldr	r3, [r3, #0]
9000083e:	3310      	adds	r3, #16
90000840:	681b      	ldr	r3, [r3, #0]
90000842:	6878      	ldr	r0, [r7, #4]
90000844:	4798      	blx	r3
90000846:	4602      	mov	r2, r0
90000848:	687b      	ldr	r3, [r7, #4]
9000084a:	689b      	ldr	r3, [r3, #8]
9000084c:	1ad3      	subs	r3, r2, r3
9000084e:	60fb      	str	r3, [r7, #12]
        cc_consumed += cc_temp;
90000850:	687b      	ldr	r3, [r7, #4]
90000852:	685a      	ldr	r2, [r3, #4]
90000854:	68fb      	ldr	r3, [r7, #12]
90000856:	441a      	add	r2, r3
90000858:	687b      	ldr	r3, [r7, #4]
9000085a:	605a      	str	r2, [r3, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
9000085c:	e008      	b.n	90000870 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x48>
        cc_in = getCPUCycles();
9000085e:	687b      	ldr	r3, [r7, #4]
90000860:	681b      	ldr	r3, [r3, #0]
90000862:	3310      	adds	r3, #16
90000864:	681b      	ldr	r3, [r3, #0]
90000866:	6878      	ldr	r0, [r7, #4]
90000868:	4798      	blx	r3
9000086a:	4602      	mov	r2, r0
9000086c:	687b      	ldr	r3, [r7, #4]
9000086e:	609a      	str	r2, [r3, #8]
}
90000870:	bf00      	nop
90000872:	3710      	adds	r7, #16
90000874:	46bd      	mov	sp, r7
90000876:	bd80      	pop	{r7, pc}

90000878 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000878:	b580      	push	{r7, lr}
9000087a:	b082      	sub	sp, #8
9000087c:	af00      	add	r7, sp, #0
9000087e:	6078      	str	r0, [r7, #4]
90000880:	4a05      	ldr	r2, [pc, #20]	; (90000898 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev+0x20>)
90000882:	687b      	ldr	r3, [r7, #4]
90000884:	601a      	str	r2, [r3, #0]
90000886:	687b      	ldr	r3, [r7, #4]
90000888:	4618      	mov	r0, r3
9000088a:	f7ff ff23 	bl	900006d4 <_ZN8touchgfx18MCUInstrumentationD1Ev>
9000088e:	687b      	ldr	r3, [r7, #4]
90000890:	4618      	mov	r0, r3
90000892:	3708      	adds	r7, #8
90000894:	46bd      	mov	sp, r7
90000896:	bd80      	pop	{r7, pc}
90000898:	900210fc 	.word	0x900210fc

9000089c <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
9000089c:	b580      	push	{r7, lr}
9000089e:	b082      	sub	sp, #8
900008a0:	af00      	add	r7, sp, #0
900008a2:	6078      	str	r0, [r7, #4]
900008a4:	6878      	ldr	r0, [r7, #4]
900008a6:	f7ff ffe7 	bl	90000878 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>
900008aa:	210c      	movs	r1, #12
900008ac:	6878      	ldr	r0, [r7, #4]
900008ae:	f01e fcca 	bl	9001f246 <_ZdlPvj>
900008b2:	687b      	ldr	r3, [r7, #4]
900008b4:	4618      	mov	r0, r3
900008b6:	3708      	adds	r7, #8
900008b8:	46bd      	mov	sp, r7
900008ba:	bd80      	pop	{r7, pc}

900008bc <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
900008bc:	b480      	push	{r7}
900008be:	b083      	sub	sp, #12
900008c0:	af00      	add	r7, sp, #0
900008c2:	6078      	str	r0, [r7, #4]
    {
900008c4:	4a04      	ldr	r2, [pc, #16]	; (900008d8 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
900008c6:	687b      	ldr	r3, [r7, #4]
900008c8:	601a      	str	r2, [r3, #0]
    }
900008ca:	687b      	ldr	r3, [r7, #4]
900008cc:	4618      	mov	r0, r3
900008ce:	370c      	adds	r7, #12
900008d0:	46bd      	mov	sp, r7
900008d2:	f85d 7b04 	ldr.w	r7, [sp], #4
900008d6:	4770      	bx	lr
900008d8:	90021164 	.word	0x90021164

900008dc <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
900008dc:	b580      	push	{r7, lr}
900008de:	b082      	sub	sp, #8
900008e0:	af00      	add	r7, sp, #0
900008e2:	6078      	str	r0, [r7, #4]
    }
900008e4:	6878      	ldr	r0, [r7, #4]
900008e6:	f7ff ffe9 	bl	900008bc <_ZN8touchgfx15TouchControllerD1Ev>
900008ea:	2104      	movs	r1, #4
900008ec:	6878      	ldr	r0, [r7, #4]
900008ee:	f01e fcaa 	bl	9001f246 <_ZdlPvj>
900008f2:	687b      	ldr	r3, [r7, #4]
900008f4:	4618      	mov	r0, r3
900008f6:	3708      	adds	r7, #8
900008f8:	46bd      	mov	sp, r7
900008fa:	bd80      	pop	{r7, pc}

900008fc <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
900008fc:	b580      	push	{r7, lr}
900008fe:	b086      	sub	sp, #24
90000900:	af00      	add	r7, sp, #0
90000902:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
90000904:	2308      	movs	r3, #8
90000906:	613b      	str	r3, [r7, #16]
    hTS.Accuracy = 0;
90000908:	2300      	movs	r3, #0
9000090a:	617b      	str	r3, [r7, #20]
    hTS.Width = 480;
9000090c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
90000910:	60bb      	str	r3, [r7, #8]
    hTS.Height = 272;
90000912:	f44f 7388 	mov.w	r3, #272	; 0x110
90000916:	60fb      	str	r3, [r7, #12]
    BSP_TS_Init(0, &hTS);
90000918:	f107 0308 	add.w	r3, r7, #8
9000091c:	4619      	mov	r1, r3
9000091e:	2000      	movs	r0, #0
90000920:	f005 ffce 	bl	900068c0 <BSP_TS_Init>
}
90000924:	bf00      	nop
90000926:	3718      	adds	r7, #24
90000928:	46bd      	mov	sp, r7
9000092a:	bd80      	pop	{r7, pc}

9000092c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
9000092c:	b580      	push	{r7, lr}
9000092e:	b088      	sub	sp, #32
90000930:	af00      	add	r7, sp, #0
90000932:	60f8      	str	r0, [r7, #12]
90000934:	60b9      	str	r1, [r7, #8]
90000936:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000938:	f107 0314 	add.w	r3, r7, #20
9000093c:	2200      	movs	r2, #0
9000093e:	601a      	str	r2, [r3, #0]
90000940:	605a      	str	r2, [r3, #4]
90000942:	609a      	str	r2, [r3, #8]
    BSP_TS_GetState(0, &TS_State);
90000944:	f107 0314 	add.w	r3, r7, #20
90000948:	4619      	mov	r1, r3
9000094a:	2000      	movs	r0, #0
9000094c:	f006 f840 	bl	900069d0 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000950:	697b      	ldr	r3, [r7, #20]
90000952:	2b00      	cmp	r3, #0
90000954:	d009      	beq.n	9000096a <_ZN20STM32TouchController11sampleTouchERlS0_+0x3e>
    {
        x = TS_State.TouchX;
90000956:	69bb      	ldr	r3, [r7, #24]
90000958:	461a      	mov	r2, r3
9000095a:	68bb      	ldr	r3, [r7, #8]
9000095c:	601a      	str	r2, [r3, #0]
        y = TS_State.TouchY;
9000095e:	69fb      	ldr	r3, [r7, #28]
90000960:	461a      	mov	r2, r3
90000962:	687b      	ldr	r3, [r7, #4]
90000964:	601a      	str	r2, [r3, #0]
        return true;
90000966:	2301      	movs	r3, #1
90000968:	e000      	b.n	9000096c <_ZN20STM32TouchController11sampleTouchERlS0_+0x40>
    }

    return false;
9000096a:	2300      	movs	r3, #0
}
9000096c:	4618      	mov	r0, r3
9000096e:	3720      	adds	r7, #32
90000970:	46bd      	mov	sp, r7
90000972:	bd80      	pop	{r7, pc}

90000974 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000974:	b580      	push	{r7, lr}
90000976:	b082      	sub	sp, #8
90000978:	af00      	add	r7, sp, #0
9000097a:	6078      	str	r0, [r7, #4]
9000097c:	4a05      	ldr	r2, [pc, #20]	; (90000994 <_ZN20STM32TouchControllerD1Ev+0x20>)
9000097e:	687b      	ldr	r3, [r7, #4]
90000980:	601a      	str	r2, [r3, #0]
90000982:	687b      	ldr	r3, [r7, #4]
90000984:	4618      	mov	r0, r3
90000986:	f7ff ff99 	bl	900008bc <_ZN8touchgfx15TouchControllerD1Ev>
9000098a:	687b      	ldr	r3, [r7, #4]
9000098c:	4618      	mov	r0, r3
9000098e:	3708      	adds	r7, #8
90000990:	46bd      	mov	sp, r7
90000992:	bd80      	pop	{r7, pc}
90000994:	9002114c 	.word	0x9002114c

90000998 <_ZN20STM32TouchControllerD0Ev>:
90000998:	b580      	push	{r7, lr}
9000099a:	b082      	sub	sp, #8
9000099c:	af00      	add	r7, sp, #0
9000099e:	6078      	str	r0, [r7, #4]
900009a0:	6878      	ldr	r0, [r7, #4]
900009a2:	f7ff ffe7 	bl	90000974 <_ZN20STM32TouchControllerD1Ev>
900009a6:	2104      	movs	r1, #4
900009a8:	6878      	ldr	r0, [r7, #4]
900009aa:	f01e fc4c 	bl	9001f246 <_ZdlPvj>
900009ae:	687b      	ldr	r3, [r7, #4]
900009b0:	4618      	mov	r0, r3
900009b2:	3708      	adds	r7, #8
900009b4:	46bd      	mov	sp, r7
900009b6:	bd80      	pop	{r7, pc}

900009b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
900009b8:	b580      	push	{r7, lr}
900009ba:	b082      	sub	sp, #8
900009bc:	af00      	add	r7, sp, #0
900009be:	4603      	mov	r3, r0
900009c0:	71fb      	strb	r3, [r7, #7]
    switch (id)
900009c2:	79fb      	ldrb	r3, [r7, #7]
900009c4:	2b03      	cmp	r3, #3
900009c6:	d82b      	bhi.n	90000a20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x68>
900009c8:	a201      	add	r2, pc, #4	; (adr r2, 900009d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
900009ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
900009ce:	bf00      	nop
900009d0:	900009e1 	.word	0x900009e1
900009d4:	900009ff 	.word	0x900009ff
900009d8:	90000a1f 	.word	0x90000a1f
900009dc:	90000a1f 	.word	0x90000a1f
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
900009e0:	79fb      	ldrb	r3, [r7, #7]
900009e2:	4a11      	ldr	r2, [pc, #68]	; (90000a28 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x70>)
900009e4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
900009e8:	2b00      	cmp	r3, #0
900009ea:	bf0c      	ite	eq
900009ec:	2301      	moveq	r3, #1
900009ee:	2300      	movne	r3, #0
900009f0:	b2db      	uxtb	r3, r3
900009f2:	461a      	mov	r2, r3
900009f4:	2104      	movs	r1, #4
900009f6:	480d      	ldr	r0, [pc, #52]	; (90000a2c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x74>)
900009f8:	f006 fefc 	bl	900077f4 <HAL_GPIO_WritePin>
#endif
        break;
900009fc:	e010      	b.n	90000a20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x68>
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
900009fe:	79fb      	ldrb	r3, [r7, #7]
90000a00:	4a09      	ldr	r2, [pc, #36]	; (90000a28 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x70>)
90000a02:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
90000a06:	2b00      	cmp	r3, #0
90000a08:	bf0c      	ite	eq
90000a0a:	2301      	moveq	r3, #1
90000a0c:	2300      	movne	r3, #0
90000a0e:	b2db      	uxtb	r3, r3
90000a10:	461a      	mov	r2, r3
90000a12:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90000a16:	4806      	ldr	r0, [pc, #24]	; (90000a30 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x78>)
90000a18:	f006 feec 	bl	900077f4 <HAL_GPIO_WritePin>
#endif
        break;
90000a1c:	e000      	b.n	90000a20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x68>
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
90000a1e:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    }
}
90000a20:	bf00      	nop
90000a22:	3708      	adds	r7, #8
90000a24:	46bd      	mov	sp, r7
90000a26:	bd80      	pop	{r7, pc}
90000a28:	2400014c 	.word	0x2400014c
90000a2c:	58022400 	.word	0x58022400
90000a30:	58022000 	.word	0x58022000

90000a34 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
90000a34:	b580      	push	{r7, lr}
90000a36:	b082      	sub	sp, #8
90000a38:	af00      	add	r7, sp, #0
90000a3a:	4603      	mov	r3, r0
90000a3c:	71fb      	strb	r3, [r7, #7]
    switch (id)
90000a3e:	79fb      	ldrb	r3, [r7, #7]
90000a40:	2b03      	cmp	r3, #3
90000a42:	d82b      	bhi.n	90000a9c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x68>
90000a44:	a201      	add	r2, pc, #4	; (adr r2, 90000a4c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
90000a46:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90000a4a:	bf00      	nop
90000a4c:	90000a5d 	.word	0x90000a5d
90000a50:	90000a7b 	.word	0x90000a7b
90000a54:	90000a9b 	.word	0x90000a9b
90000a58:	90000a9b 	.word	0x90000a9b
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000a5c:	79fb      	ldrb	r3, [r7, #7]
90000a5e:	4a11      	ldr	r2, [pc, #68]	; (90000aa4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x70>)
90000a60:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
90000a64:	2b00      	cmp	r3, #0
90000a66:	d001      	beq.n	90000a6c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x38>
90000a68:	2301      	movs	r3, #1
90000a6a:	e000      	b.n	90000a6e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x3a>
90000a6c:	2300      	movs	r3, #0
90000a6e:	461a      	mov	r2, r3
90000a70:	2104      	movs	r1, #4
90000a72:	480d      	ldr	r0, [pc, #52]	; (90000aa8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x74>)
90000a74:	f006 febe 	bl	900077f4 <HAL_GPIO_WritePin>
#endif
        break;
90000a78:	e010      	b.n	90000a9c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x68>
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000a7a:	79fb      	ldrb	r3, [r7, #7]
90000a7c:	4a09      	ldr	r2, [pc, #36]	; (90000aa4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x70>)
90000a7e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
90000a82:	2b00      	cmp	r3, #0
90000a84:	d001      	beq.n	90000a8a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x56>
90000a86:	2301      	movs	r3, #1
90000a88:	e000      	b.n	90000a8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>
90000a8a:	2300      	movs	r3, #0
90000a8c:	461a      	mov	r2, r3
90000a8e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90000a92:	4806      	ldr	r0, [pc, #24]	; (90000aac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x78>)
90000a94:	f006 feae 	bl	900077f4 <HAL_GPIO_WritePin>
#endif
        break;
90000a98:	e000      	b.n	90000a9c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x68>
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
90000a9a:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    }
}
90000a9c:	bf00      	nop
90000a9e:	3708      	adds	r7, #8
90000aa0:	46bd      	mov	sp, r7
90000aa2:	bd80      	pop	{r7, pc}
90000aa4:	2400014c 	.word	0x2400014c
90000aa8:	58022400 	.word	0x58022400
90000aac:	58022000 	.word	0x58022000

90000ab0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
90000ab0:	b580      	push	{r7, lr}
90000ab2:	b082      	sub	sp, #8
90000ab4:	af00      	add	r7, sp, #0
90000ab6:	4603      	mov	r3, r0
90000ab8:	71fb      	strb	r3, [r7, #7]
    switch (id)
90000aba:	79fb      	ldrb	r3, [r7, #7]
90000abc:	2b03      	cmp	r3, #3
90000abe:	d817      	bhi.n	90000af0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x40>
90000ac0:	a201      	add	r2, pc, #4	; (adr r2, 90000ac8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
90000ac2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90000ac6:	bf00      	nop
90000ac8:	90000ad9 	.word	0x90000ad9
90000acc:	90000ae3 	.word	0x90000ae3
90000ad0:	90000aef 	.word	0x90000aef
90000ad4:	90000aef 	.word	0x90000aef
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000ad8:	2104      	movs	r1, #4
90000ada:	4807      	ldr	r0, [pc, #28]	; (90000af8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x48>)
90000adc:	f006 fe8f 	bl	900077fe <HAL_GPIO_TogglePin>
#endif
        break;
90000ae0:	e006      	b.n	90000af0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x40>
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000ae2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90000ae6:	4805      	ldr	r0, [pc, #20]	; (90000afc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x4c>)
90000ae8:	f006 fe89 	bl	900077fe <HAL_GPIO_TogglePin>
#endif
        break;
90000aec:	e000      	b.n	90000af0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x40>
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
90000aee:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
90000af0:	bf00      	nop
90000af2:	3708      	adds	r7, #8
90000af4:	46bd      	mov	sp, r7
90000af6:	bd80      	pop	{r7, pc}
90000af8:	58022400 	.word	0x58022400
90000afc:	58022000 	.word	0x58022000

90000b00 <_ZN8touchgfx3HALD1Ev>:
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
    }

    /** Finalizes an instance of the HAL class. */
    virtual ~HAL()
90000b00:	b480      	push	{r7}
90000b02:	b083      	sub	sp, #12
90000b04:	af00      	add	r7, sp, #0
90000b06:	6078      	str	r0, [r7, #4]
    {
90000b08:	4a04      	ldr	r2, [pc, #16]	; (90000b1c <_ZN8touchgfx3HALD1Ev+0x1c>)
90000b0a:	687b      	ldr	r3, [r7, #4]
90000b0c:	601a      	str	r2, [r3, #0]
    }
90000b0e:	687b      	ldr	r3, [r7, #4]
90000b10:	4618      	mov	r0, r3
90000b12:	370c      	adds	r7, #12
90000b14:	46bd      	mov	sp, r7
90000b16:	f85d 7b04 	ldr.w	r7, [sp], #4
90000b1a:	4770      	bx	lr
90000b1c:	90021f08 	.word	0x90021f08

90000b20 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
90000b20:	b580      	push	{r7, lr}
90000b22:	b082      	sub	sp, #8
90000b24:	af00      	add	r7, sp, #0
90000b26:	6078      	str	r0, [r7, #4]
    }
90000b28:	6878      	ldr	r0, [r7, #4]
90000b2a:	f7ff ffe9 	bl	90000b00 <_ZN8touchgfx3HALD1Ev>
90000b2e:	217c      	movs	r1, #124	; 0x7c
90000b30:	6878      	ldr	r0, [r7, #4]
90000b32:	f01e fb88 	bl	9001f246 <_ZdlPvj>
90000b36:	687b      	ldr	r3, [r7, #4]
90000b38:	4618      	mov	r0, r3
90000b3a:	3708      	adds	r7, #8
90000b3c:	46bd      	mov	sp, r7
90000b3e:	bd80      	pop	{r7, pc}

90000b40 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
90000b40:	b480      	push	{r7}
90000b42:	af00      	add	r7, sp, #0
    {
        return instance;
90000b44:	4b03      	ldr	r3, [pc, #12]	; (90000b54 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
90000b46:	681b      	ldr	r3, [r3, #0]
    }
90000b48:	4618      	mov	r0, r3
90000b4a:	46bd      	mov	sp, r7
90000b4c:	f85d 7b04 	ldr.w	r7, [sp], #4
90000b50:	4770      	bx	lr
90000b52:	bf00      	nop
90000b54:	24012ae0 	.word	0x24012ae0

90000b58 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     *
     * @param  orientation The desired display orientation.
     *
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
90000b58:	b480      	push	{r7}
90000b5a:	b083      	sub	sp, #12
90000b5c:	af00      	add	r7, sp, #0
90000b5e:	6078      	str	r0, [r7, #4]
90000b60:	460b      	mov	r3, r1
90000b62:	70fb      	strb	r3, [r7, #3]
    {
        requestedOrientation = orientation;
90000b64:	687b      	ldr	r3, [r7, #4]
90000b66:	78fa      	ldrb	r2, [r7, #3]
90000b68:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
        displayOrientationChangeRequested = true;
90000b6c:	687b      	ldr	r3, [r7, #4]
90000b6e:	2201      	movs	r2, #1
90000b70:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
    }
90000b74:	bf00      	nop
90000b76:	370c      	adds	r7, #12
90000b78:	46bd      	mov	sp, r7
90000b7a:	f85d 7b04 	ldr.w	r7, [sp], #4
90000b7e:	4770      	bx	lr

90000b80 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
90000b80:	b580      	push	{r7, lr}
90000b82:	b082      	sub	sp, #8
90000b84:	af00      	add	r7, sp, #0
90000b86:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
90000b88:	687b      	ldr	r3, [r7, #4]
90000b8a:	f893 3077 	ldrb.w	r3, [r3, #119]	; 0x77
90000b8e:	2b00      	cmp	r3, #0
90000b90:	d009      	beq.n	90000ba6 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
90000b92:	687b      	ldr	r3, [r7, #4]
90000b94:	685a      	ldr	r2, [r3, #4]
90000b96:	687b      	ldr	r3, [r7, #4]
90000b98:	685b      	ldr	r3, [r3, #4]
90000b9a:	681b      	ldr	r3, [r3, #0]
90000b9c:	681b      	ldr	r3, [r3, #0]
90000b9e:	4610      	mov	r0, r2
90000ba0:	4798      	blx	r3
90000ba2:	4603      	mov	r3, r0
90000ba4:	e000      	b.n	90000ba8 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        else
        {
            return static_cast<BlitOperations>(0);
90000ba6:	2300      	movs	r3, #0
        }
    }
90000ba8:	4618      	mov	r0, r3
90000baa:	3708      	adds	r7, #8
90000bac:	46bd      	mov	sp, r7
90000bae:	bd80      	pop	{r7, pc}

90000bb0 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
90000bb0:	b580      	push	{r7, lr}
90000bb2:	b082      	sub	sp, #8
90000bb4:	af00      	add	r7, sp, #0
90000bb6:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
90000bb8:	6878      	ldr	r0, [r7, #4]
90000bba:	f00d fad7 	bl	9000e16c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000bbe:	687b      	ldr	r3, [r7, #4]
90000bc0:	681b      	ldr	r3, [r3, #0]
90000bc2:	3390      	adds	r3, #144	; 0x90
90000bc4:	681b      	ldr	r3, [r3, #0]
90000bc6:	6878      	ldr	r0, [r7, #4]
90000bc8:	4798      	blx	r3
    }
90000bca:	bf00      	nop
90000bcc:	3708      	adds	r7, #8
90000bce:	46bd      	mov	sp, r7
90000bd0:	bd80      	pop	{r7, pc}

90000bd2 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
90000bd2:	b480      	push	{r7}
90000bd4:	b083      	sub	sp, #12
90000bd6:	af00      	add	r7, sp, #0
90000bd8:	6078      	str	r0, [r7, #4]
90000bda:	6039      	str	r1, [r7, #0]
    {
        return false;
90000bdc:	2300      	movs	r3, #0
    }
90000bde:	4618      	mov	r0, r3
90000be0:	370c      	adds	r7, #12
90000be2:	46bd      	mov	sp, r7
90000be4:	f85d 7b04 	ldr.w	r7, [sp], #4
90000be8:	4770      	bx	lr
	...

90000bec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] doubleBuffer     If non-null, buffer for double buffer data. If null double
     *                              buffering is disabled.
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000bec:	b580      	push	{r7, lr}
90000bee:	b084      	sub	sp, #16
90000bf0:	af00      	add	r7, sp, #0
90000bf2:	60f8      	str	r0, [r7, #12]
90000bf4:	60b9      	str	r1, [r7, #8]
90000bf6:	607a      	str	r2, [r7, #4]
90000bf8:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000bfa:	68bb      	ldr	r3, [r7, #8]
90000bfc:	2b00      	cmp	r3, #0
90000bfe:	d106      	bne.n	90000c0e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
90000c00:	4b11      	ldr	r3, [pc, #68]	; (90000c48 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
90000c02:	4a12      	ldr	r2, [pc, #72]	; (90000c4c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
90000c04:	f240 216b 	movw	r1, #619	; 0x26b
90000c08:	4811      	ldr	r0, [pc, #68]	; (90000c50 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x64>)
90000c0a:	f01e fb4b 	bl	9001f2a4 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000c0e:	68fb      	ldr	r3, [r7, #12]
90000c10:	68ba      	ldr	r2, [r7, #8]
90000c12:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000c14:	68fb      	ldr	r3, [r7, #12]
90000c16:	687a      	ldr	r2, [r7, #4]
90000c18:	641a      	str	r2, [r3, #64]	; 0x40
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000c1a:	68fb      	ldr	r3, [r7, #12]
90000c1c:	683a      	ldr	r2, [r7, #0]
90000c1e:	645a      	str	r2, [r3, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000c20:	687b      	ldr	r3, [r7, #4]
90000c22:	2b00      	cmp	r3, #0
90000c24:	bf14      	ite	ne
90000c26:	2301      	movne	r3, #1
90000c28:	2300      	moveq	r3, #0
90000c2a:	b2da      	uxtb	r2, r3
90000c2c:	4b09      	ldr	r3, [pc, #36]	; (90000c54 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x68>)
90000c2e:	701a      	strb	r2, [r3, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000c30:	683b      	ldr	r3, [r7, #0]
90000c32:	2b00      	cmp	r3, #0
90000c34:	bf14      	ite	ne
90000c36:	2301      	movne	r3, #1
90000c38:	2300      	moveq	r3, #0
90000c3a:	b2da      	uxtb	r2, r3
90000c3c:	4b06      	ldr	r3, [pc, #24]	; (90000c58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x6c>)
90000c3e:	701a      	strb	r2, [r3, #0]
    }
90000c40:	bf00      	nop
90000c42:	3710      	adds	r7, #16
90000c44:	46bd      	mov	sp, r7
90000c46:	bd80      	pop	{r7, pc}
90000c48:	90020584 	.word	0x90020584
90000c4c:	900205bc 	.word	0x900205bc
90000c50:	9002060c 	.word	0x9002060c
90000c54:	24012ade 	.word	0x24012ade
90000c58:	24012adf 	.word	0x24012adf

90000c5c <_ZN8touchgfx3HAL21setMCUInstrumentationEPNS_18MCUInstrumentationE>:
    /**
     * Stores a pointer to an instance of an MCU specific instrumentation class.
     *
     * @param [in] mcuInstr pointer to MCU instrumentation.
     */
    void setMCUInstrumentation(MCUInstrumentation* mcuInstr)
90000c5c:	b480      	push	{r7}
90000c5e:	b083      	sub	sp, #12
90000c60:	af00      	add	r7, sp, #0
90000c62:	6078      	str	r0, [r7, #4]
90000c64:	6039      	str	r1, [r7, #0]
    {
        mcuInstrumentation = mcuInstr;
90000c66:	687b      	ldr	r3, [r7, #4]
90000c68:	683a      	ldr	r2, [r7, #0]
90000c6a:	611a      	str	r2, [r3, #16]
    }
90000c6c:	bf00      	nop
90000c6e:	370c      	adds	r7, #12
90000c70:	46bd      	mov	sp, r7
90000c72:	f85d 7b04 	ldr.w	r7, [sp], #4
90000c76:	4770      	bx	lr

90000c78 <_ZN8touchgfx3HAL24enableMCULoadCalculationEb>:
     * This method sets a flag that determines if generic HAL should calculate MCU load
     * based on concrete MCU instrumentation.
     *
     * @param  enabled If true, set flag to update MCU load.
     */
    void enableMCULoadCalculation(bool enabled)
90000c78:	b480      	push	{r7}
90000c7a:	b083      	sub	sp, #12
90000c7c:	af00      	add	r7, sp, #0
90000c7e:	6078      	str	r0, [r7, #4]
90000c80:	460b      	mov	r3, r1
90000c82:	70fb      	strb	r3, [r7, #3]
    {
        updateMCULoad = enabled;
90000c84:	687b      	ldr	r3, [r7, #4]
90000c86:	78fa      	ldrb	r2, [r7, #3]
90000c88:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
    }
90000c8c:	bf00      	nop
90000c8e:	370c      	adds	r7, #12
90000c90:	46bd      	mov	sp, r7
90000c92:	f85d 7b04 	ldr.w	r7, [sp], #4
90000c96:	4770      	bx	lr

90000c98 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
90000c98:	b480      	push	{r7}
90000c9a:	b083      	sub	sp, #12
90000c9c:	af00      	add	r7, sp, #0
90000c9e:	6078      	str	r0, [r7, #4]
    {
        return 0;
90000ca0:	2300      	movs	r3, #0
    }
90000ca2:	4618      	mov	r0, r3
90000ca4:	370c      	adds	r7, #12
90000ca6:	46bd      	mov	sp, r7
90000ca8:	f85d 7b04 	ldr.w	r7, [sp], #4
90000cac:	4770      	bx	lr

90000cae <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
90000cae:	b580      	push	{r7, lr}
90000cb0:	b082      	sub	sp, #8
90000cb2:	af00      	add	r7, sp, #0
90000cb4:	6078      	str	r0, [r7, #4]
90000cb6:	460b      	mov	r3, r1
90000cb8:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
90000cba:	687b      	ldr	r3, [r7, #4]
90000cbc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90000cbe:	2b00      	cmp	r3, #0
90000cc0:	d004      	beq.n	90000ccc <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
90000cc2:	687b      	ldr	r3, [r7, #4]
90000cc4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90000cc6:	887a      	ldrh	r2, [r7, #2]
90000cc8:	4610      	mov	r0, r2
90000cca:	4798      	blx	r3
        }
    }
90000ccc:	bf00      	nop
90000cce:	3708      	adds	r7, #8
90000cd0:	46bd      	mov	sp, r7
90000cd2:	bd80      	pop	{r7, pc}

90000cd4 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
90000cd4:	b480      	push	{r7}
90000cd6:	b083      	sub	sp, #12
90000cd8:	af00      	add	r7, sp, #0
90000cda:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
90000cdc:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
90000ce0:	4618      	mov	r0, r3
90000ce2:	370c      	adds	r7, #12
90000ce4:	46bd      	mov	sp, r7
90000ce6:	f85d 7b04 	ldr.w	r7, [sp], #4
90000cea:	4770      	bx	lr

90000cec <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
90000cec:	b580      	push	{r7, lr}
90000cee:	b082      	sub	sp, #8
90000cf0:	af00      	add	r7, sp, #0
90000cf2:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
90000cf4:	687b      	ldr	r3, [r7, #4]
90000cf6:	685a      	ldr	r2, [r3, #4]
90000cf8:	687b      	ldr	r3, [r7, #4]
90000cfa:	685b      	ldr	r3, [r3, #4]
90000cfc:	681b      	ldr	r3, [r3, #0]
90000cfe:	3318      	adds	r3, #24
90000d00:	681b      	ldr	r3, [r3, #0]
90000d02:	4610      	mov	r0, r2
90000d04:	4798      	blx	r3
90000d06:	4603      	mov	r3, r0
    }
90000d08:	4618      	mov	r0, r3
90000d0a:	3708      	adds	r7, #8
90000d0c:	46bd      	mov	sp, r7
90000d0e:	bd80      	pop	{r7, pc}

90000d10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
90000d10:	b480      	push	{r7}
90000d12:	b083      	sub	sp, #12
90000d14:	af00      	add	r7, sp, #0
90000d16:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
90000d18:	687b      	ldr	r3, [r7, #4]
90000d1a:	f893 2074 	ldrb.w	r2, [r3, #116]	; 0x74
90000d1e:	687b      	ldr	r3, [r7, #4]
90000d20:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
90000d24:	429a      	cmp	r2, r3
90000d26:	d017      	beq.n	90000d58 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>
        {
            if (DISPLAY_ROTATION == rotate0)
90000d28:	4b1a      	ldr	r3, [pc, #104]	; (90000d94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
90000d2a:	781b      	ldrb	r3, [r3, #0]
90000d2c:	2b00      	cmp	r3, #0
90000d2e:	d12a      	bne.n	90000d86 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
90000d30:	4b19      	ldr	r3, [pc, #100]	; (90000d98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
90000d32:	881a      	ldrh	r2, [r3, #0]
90000d34:	4b19      	ldr	r3, [pc, #100]	; (90000d9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
90000d36:	801a      	strh	r2, [r3, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
90000d38:	4b19      	ldr	r3, [pc, #100]	; (90000da0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
90000d3a:	881a      	ldrh	r2, [r3, #0]
90000d3c:	4b19      	ldr	r3, [pc, #100]	; (90000da4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
90000d3e:	801a      	strh	r2, [r3, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
90000d40:	4b16      	ldr	r3, [pc, #88]	; (90000d9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
90000d42:	881a      	ldrh	r2, [r3, #0]
90000d44:	4b16      	ldr	r3, [pc, #88]	; (90000da0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
90000d46:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
90000d48:	4b16      	ldr	r3, [pc, #88]	; (90000da4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
90000d4a:	881a      	ldrh	r2, [r3, #0]
90000d4c:	4b12      	ldr	r3, [pc, #72]	; (90000d98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
90000d4e:	801a      	strh	r2, [r3, #0]
                DISPLAY_ROTATION = rotate90;
90000d50:	4b10      	ldr	r3, [pc, #64]	; (90000d94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
90000d52:	2201      	movs	r2, #1
90000d54:	701a      	strb	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
        }
    }
90000d56:	e016      	b.n	90000d86 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
        else if (DISPLAY_ROTATION != rotate0)
90000d58:	4b0e      	ldr	r3, [pc, #56]	; (90000d94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
90000d5a:	781b      	ldrb	r3, [r3, #0]
90000d5c:	2b00      	cmp	r3, #0
90000d5e:	d012      	beq.n	90000d86 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
90000d60:	4b0f      	ldr	r3, [pc, #60]	; (90000da0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
90000d62:	881a      	ldrh	r2, [r3, #0]
90000d64:	4b0d      	ldr	r3, [pc, #52]	; (90000d9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
90000d66:	801a      	strh	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
90000d68:	4b0b      	ldr	r3, [pc, #44]	; (90000d98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
90000d6a:	881a      	ldrh	r2, [r3, #0]
90000d6c:	4b0d      	ldr	r3, [pc, #52]	; (90000da4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
90000d6e:	801a      	strh	r2, [r3, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
90000d70:	4b0c      	ldr	r3, [pc, #48]	; (90000da4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
90000d72:	881a      	ldrh	r2, [r3, #0]
90000d74:	4b0a      	ldr	r3, [pc, #40]	; (90000da0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
90000d76:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
90000d78:	4b08      	ldr	r3, [pc, #32]	; (90000d9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
90000d7a:	881a      	ldrh	r2, [r3, #0]
90000d7c:	4b06      	ldr	r3, [pc, #24]	; (90000d98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
90000d7e:	801a      	strh	r2, [r3, #0]
            DISPLAY_ROTATION = rotate0;
90000d80:	4b04      	ldr	r3, [pc, #16]	; (90000d94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
90000d82:	2200      	movs	r2, #0
90000d84:	701a      	strb	r2, [r3, #0]
    }
90000d86:	bf00      	nop
90000d88:	370c      	adds	r7, #12
90000d8a:	46bd      	mov	sp, r7
90000d8c:	f85d 7b04 	ldr.w	r7, [sp], #4
90000d90:	4770      	bx	lr
90000d92:	bf00      	nop
90000d94:	24012ad8 	.word	0x24012ad8
90000d98:	24012ad4 	.word	0x24012ad4
90000d9c:	24012ada 	.word	0x24012ada
90000da0:	24012ad6 	.word	0x24012ad6
90000da4:	24012adc 	.word	0x24012adc

90000da8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
90000da8:	b580      	push	{r7, lr}
90000daa:	b082      	sub	sp, #8
90000dac:	af00      	add	r7, sp, #0
90000dae:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
90000db0:	687b      	ldr	r3, [r7, #4]
90000db2:	4618      	mov	r0, r3
90000db4:	f00c fc60 	bl	9000d678 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
90000db8:	bf00      	nop
90000dba:	3708      	adds	r7, #8
90000dbc:	46bd      	mov	sp, r7
90000dbe:	bd80      	pop	{r7, pc}

90000dc0 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
90000dc0:	b580      	push	{r7, lr}
90000dc2:	b082      	sub	sp, #8
90000dc4:	af00      	add	r7, sp, #0
90000dc6:	6078      	str	r0, [r7, #4]
90000dc8:	4a05      	ldr	r2, [pc, #20]	; (90000de0 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
90000dca:	687b      	ldr	r3, [r7, #4]
90000dcc:	601a      	str	r2, [r3, #0]
90000dce:	687b      	ldr	r3, [r7, #4]
90000dd0:	4618      	mov	r0, r3
90000dd2:	f7ff fe95 	bl	90000b00 <_ZN8touchgfx3HALD1Ev>
90000dd6:	687b      	ldr	r3, [r7, #4]
90000dd8:	4618      	mov	r0, r3
90000dda:	3708      	adds	r7, #8
90000ddc:	46bd      	mov	sp, r7
90000dde:	bd80      	pop	{r7, pc}
90000de0:	900214b8 	.word	0x900214b8

90000de4 <_ZN20TouchGFXGeneratedHALD0Ev>:
90000de4:	b580      	push	{r7, lr}
90000de6:	b082      	sub	sp, #8
90000de8:	af00      	add	r7, sp, #0
90000dea:	6078      	str	r0, [r7, #4]
90000dec:	6878      	ldr	r0, [r7, #4]
90000dee:	f7ff ffe7 	bl	90000dc0 <_ZN20TouchGFXGeneratedHALD1Ev>
90000df2:	217c      	movs	r1, #124	; 0x7c
90000df4:	6878      	ldr	r0, [r7, #4]
90000df6:	f01e fa26 	bl	9001f246 <_ZdlPvj>
90000dfa:	687b      	ldr	r3, [r7, #4]
90000dfc:	4618      	mov	r0, r3
90000dfe:	3708      	adds	r7, #8
90000e00:	46bd      	mov	sp, r7
90000e02:	bd80      	pop	{r7, pc}

90000e04 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
90000e04:	b580      	push	{r7, lr}
90000e06:	b082      	sub	sp, #8
90000e08:	af00      	add	r7, sp, #0
90000e0a:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
90000e0c:	687b      	ldr	r3, [r7, #4]
90000e0e:	4618      	mov	r0, r3
90000e10:	f7ff ffca 	bl	90000da8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
90000e14:	bf00      	nop
90000e16:	3708      	adds	r7, #8
90000e18:	46bd      	mov	sp, r7
90000e1a:	bd80      	pop	{r7, pc}

90000e1c <_ZN11TouchGFXHAL10initializeEv>:
#include "task.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
90000e1c:	b580      	push	{r7, lr}
90000e1e:	b082      	sub	sp, #8
90000e20:	af00      	add	r7, sp, #0
90000e22:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
90000e24:	687b      	ldr	r3, [r7, #4]
90000e26:	4618      	mov	r0, r3
90000e28:	f001 fdf2 	bl	90002a10 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    instrumentation.init();
90000e2c:	687b      	ldr	r3, [r7, #4]
90000e2e:	337c      	adds	r3, #124	; 0x7c
90000e30:	4618      	mov	r0, r3
90000e32:	f7ff fcb1 	bl	90000798 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
    setMCUInstrumentation(&instrumentation);
90000e36:	687a      	ldr	r2, [r7, #4]
90000e38:	687b      	ldr	r3, [r7, #4]
90000e3a:	337c      	adds	r3, #124	; 0x7c
90000e3c:	4619      	mov	r1, r3
90000e3e:	4610      	mov	r0, r2
90000e40:	f7ff ff0c 	bl	90000c5c <_ZN8touchgfx3HAL21setMCUInstrumentationEPNS_18MCUInstrumentationE>
    enableMCULoadCalculation(true);
90000e44:	687b      	ldr	r3, [r7, #4]
90000e46:	2101      	movs	r1, #1
90000e48:	4618      	mov	r0, r3
90000e4a:	f7ff ff15 	bl	90000c78 <_ZN8touchgfx3HAL24enableMCULoadCalculationEb>
}
90000e4e:	bf00      	nop
90000e50:	3708      	adds	r7, #8
90000e52:	46bd      	mov	sp, r7
90000e54:	bd80      	pop	{r7, pc}
	...

90000e58 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
90000e58:	b580      	push	{r7, lr}
90000e5a:	b082      	sub	sp, #8
90000e5c:	af00      	add	r7, sp, #0
90000e5e:	6078      	str	r0, [r7, #4]
    enableLCDControllerInterrupt();
90000e60:	687b      	ldr	r3, [r7, #4]
90000e62:	681b      	ldr	r3, [r3, #0]
90000e64:	3368      	adds	r3, #104	; 0x68
90000e66:	681b      	ldr	r3, [r3, #0]
90000e68:	6878      	ldr	r0, [r7, #4]
90000e6a:	4798      	blx	r3
    enableInterrupts();
90000e6c:	687b      	ldr	r3, [r7, #4]
90000e6e:	681b      	ldr	r3, [r3, #0]
90000e70:	3360      	adds	r3, #96	; 0x60
90000e72:	681b      	ldr	r3, [r3, #0]
90000e74:	6878      	ldr	r0, [r7, #4]
90000e76:	4798      	blx	r3

    OSWrappers::waitForVSync();
90000e78:	f000 f97a 	bl	90001170 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000e7c:	687a      	ldr	r2, [r7, #4]
90000e7e:	687b      	ldr	r3, [r7, #4]
90000e80:	681b      	ldr	r3, [r3, #0]
90000e82:	3358      	adds	r3, #88	; 0x58
90000e84:	681b      	ldr	r3, [r3, #0]
90000e86:	4610      	mov	r0, r2
90000e88:	4798      	blx	r3

#if defined(LCD_RESET_GPIO_Port) && defined(LCD_RESET_Pin)
    /* Display Enable */
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
90000e8a:	2201      	movs	r2, #1
90000e8c:	2104      	movs	r1, #4
90000e8e:	480b      	ldr	r0, [pc, #44]	; (90000ebc <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
90000e90:	f006 fcb0 	bl	900077f4 <HAL_GPIO_WritePin>
#endif
#if defined(LCD_DE_GPIO_Port) && defined(LCD_DE_Pin)
    /* Data Enable */
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000e94:	2201      	movs	r2, #1
90000e96:	2180      	movs	r1, #128	; 0x80
90000e98:	4809      	ldr	r0, [pc, #36]	; (90000ec0 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000e9a:	f006 fcab 	bl	900077f4 <HAL_GPIO_WritePin>
#endif
#if defined(LCD_BL_CTRL_GPIO_Port) && defined(LCD_BL_CTRL_Pin)
    /* Backlight Enable */
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000e9e:	2201      	movs	r2, #1
90000ea0:	2101      	movs	r1, #1
90000ea2:	4808      	ldr	r0, [pc, #32]	; (90000ec4 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
90000ea4:	f006 fca6 	bl	900077f4 <HAL_GPIO_WritePin>
#endif

    for (;;)
    {
        OSWrappers::waitForVSync();
90000ea8:	f000 f962 	bl	90001170 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000eac:	687a      	ldr	r2, [r7, #4]
90000eae:	687b      	ldr	r3, [r7, #4]
90000eb0:	681b      	ldr	r3, [r3, #0]
90000eb2:	3358      	adds	r3, #88	; 0x58
90000eb4:	681b      	ldr	r3, [r3, #0]
90000eb6:	4610      	mov	r0, r2
90000eb8:	4798      	blx	r3
        OSWrappers::waitForVSync();
90000eba:	e7f5      	b.n	90000ea8 <_ZN11TouchGFXHAL9taskEntryEv+0x50>
90000ebc:	58020000 	.word	0x58020000
90000ec0:	58020c00 	.word	0x58020c00
90000ec4:	58022800 	.word	0x58022800

90000ec8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
90000ec8:	b580      	push	{r7, lr}
90000eca:	b082      	sub	sp, #8
90000ecc:	af00      	add	r7, sp, #0
90000ece:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000ed0:	687b      	ldr	r3, [r7, #4]
90000ed2:	4618      	mov	r0, r3
90000ed4:	f001 fe1a 	bl	90002b0c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
90000ed8:	4603      	mov	r3, r0
}
90000eda:	4618      	mov	r0, r3
90000edc:	3708      	adds	r7, #8
90000ede:	46bd      	mov	sp, r7
90000ee0:	bd80      	pop	{r7, pc}

90000ee2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
90000ee2:	b580      	push	{r7, lr}
90000ee4:	b082      	sub	sp, #8
90000ee6:	af00      	add	r7, sp, #0
90000ee8:	6078      	str	r0, [r7, #4]
90000eea:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000eec:	687b      	ldr	r3, [r7, #4]
90000eee:	6839      	ldr	r1, [r7, #0]
90000ef0:	4618      	mov	r0, r3
90000ef2:	f001 fe19 	bl	90002b28 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
90000ef6:	bf00      	nop
90000ef8:	3708      	adds	r7, #8
90000efa:	46bd      	mov	sp, r7
90000efc:	bd80      	pop	{r7, pc}
	...

90000f00 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000f00:	b580      	push	{r7, lr}
90000f02:	b086      	sub	sp, #24
90000f04:	af00      	add	r7, sp, #0
90000f06:	6078      	str	r0, [r7, #4]
90000f08:	6039      	str	r1, [r7, #0]
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000f0a:	687b      	ldr	r3, [r7, #4]
90000f0c:	6839      	ldr	r1, [r7, #0]
90000f0e:	4618      	mov	r0, r3
90000f10:	f001 fe20 	bl	90002b54 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000f14:	4b20      	ldr	r3, [pc, #128]	; (90000f98 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x98>)
90000f16:	2200      	movs	r2, #0
90000f18:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000f1c:	f3bf 8f4f 	dsb	sy
}
90000f20:	bf00      	nop
    __DSB();

    ccsidr = SCB->CCSIDR;
90000f22:	4b1d      	ldr	r3, [pc, #116]	; (90000f98 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x98>)
90000f24:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000f28:	617b      	str	r3, [r7, #20]

                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000f2a:	697b      	ldr	r3, [r7, #20]
90000f2c:	0b5b      	lsrs	r3, r3, #13
90000f2e:	f3c3 030e 	ubfx	r3, r3, #0, #15
90000f32:	613b      	str	r3, [r7, #16]
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000f34:	697b      	ldr	r3, [r7, #20]
90000f36:	08db      	lsrs	r3, r3, #3
90000f38:	f3c3 0309 	ubfx	r3, r3, #0, #10
90000f3c:	60fb      	str	r3, [r7, #12]
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000f3e:	693b      	ldr	r3, [r7, #16]
90000f40:	015a      	lsls	r2, r3, #5
90000f42:	f643 73e0 	movw	r3, #16352	; 0x3fe0
90000f46:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
90000f48:	68fa      	ldr	r2, [r7, #12]
90000f4a:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000f4c:	4912      	ldr	r1, [pc, #72]	; (90000f98 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x98>)
90000f4e:	4313      	orrs	r3, r2
90000f50:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000f54:	68fb      	ldr	r3, [r7, #12]
90000f56:	1e5a      	subs	r2, r3, #1
90000f58:	60fa      	str	r2, [r7, #12]
90000f5a:	2b00      	cmp	r3, #0
90000f5c:	bf14      	ite	ne
90000f5e:	2301      	movne	r3, #1
90000f60:	2300      	moveq	r3, #0
90000f62:	b2db      	uxtb	r3, r3
90000f64:	2b00      	cmp	r3, #0
90000f66:	d000      	beq.n	90000f6a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x6a>
      do {
90000f68:	e7e9      	b.n	90000f3e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x3e>
    } while(sets-- != 0U);
90000f6a:	693b      	ldr	r3, [r7, #16]
90000f6c:	1e5a      	subs	r2, r3, #1
90000f6e:	613a      	str	r2, [r7, #16]
90000f70:	2b00      	cmp	r3, #0
90000f72:	bf14      	ite	ne
90000f74:	2301      	movne	r3, #1
90000f76:	2300      	moveq	r3, #0
90000f78:	b2db      	uxtb	r3, r3
90000f7a:	2b00      	cmp	r3, #0
90000f7c:	d000      	beq.n	90000f80 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x80>
    do {
90000f7e:	e7d9      	b.n	90000f34 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x34>
  __ASM volatile ("dsb 0xF":::"memory");
90000f80:	f3bf 8f4f 	dsb	sy
}
90000f84:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
90000f86:	f3bf 8f6f 	isb	sy
}
90000f8a:	bf00      	nop

    __DSB();
    __ISB();
  #endif
}
90000f8c:	bf00      	nop
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000f8e:	bf00      	nop
90000f90:	3718      	adds	r7, #24
90000f92:	46bd      	mov	sp, r7
90000f94:	bd80      	pop	{r7, pc}
90000f96:	bf00      	nop
90000f98:	e000ed00 	.word	0xe000ed00

90000f9c <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
90000f9c:	b580      	push	{r7, lr}
90000f9e:	b082      	sub	sp, #8
90000fa0:	af00      	add	r7, sp, #0
90000fa2:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000fa4:	687b      	ldr	r3, [r7, #4]
90000fa6:	4618      	mov	r0, r3
90000fa8:	f001 fd56 	bl	90002a58 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
90000fac:	bf00      	nop
90000fae:	3708      	adds	r7, #8
90000fb0:	46bd      	mov	sp, r7
90000fb2:	bd80      	pop	{r7, pc}

90000fb4 <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
90000fb4:	b580      	push	{r7, lr}
90000fb6:	b082      	sub	sp, #8
90000fb8:	af00      	add	r7, sp, #0
90000fba:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000fbc:	687b      	ldr	r3, [r7, #4]
90000fbe:	4618      	mov	r0, r3
90000fc0:	f001 fd5a 	bl	90002a78 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
90000fc4:	bf00      	nop
90000fc6:	3708      	adds	r7, #8
90000fc8:	46bd      	mov	sp, r7
90000fca:	bd80      	pop	{r7, pc}

90000fcc <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
90000fcc:	b580      	push	{r7, lr}
90000fce:	b082      	sub	sp, #8
90000fd0:	af00      	add	r7, sp, #0
90000fd2:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000fd4:	687b      	ldr	r3, [r7, #4]
90000fd6:	4618      	mov	r0, r3
90000fd8:	f001 fd5c 	bl	90002a94 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
90000fdc:	bf00      	nop
90000fde:	3708      	adds	r7, #8
90000fe0:	46bd      	mov	sp, r7
90000fe2:	bd80      	pop	{r7, pc}

90000fe4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
90000fe4:	b580      	push	{r7, lr}
90000fe6:	b082      	sub	sp, #8
90000fe8:	af00      	add	r7, sp, #0
90000fea:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000fec:	687b      	ldr	r3, [r7, #4]
90000fee:	4618      	mov	r0, r3
90000ff0:	f001 fd5e 	bl	90002ab0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
90000ff4:	bf00      	nop
90000ff6:	3708      	adds	r7, #8
90000ff8:	46bd      	mov	sp, r7
90000ffa:	bd80      	pop	{r7, pc}

90000ffc <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000ffc:	b580      	push	{r7, lr}
90000ffe:	b082      	sub	sp, #8
90001000:	af00      	add	r7, sp, #0
90001002:	6078      	str	r0, [r7, #4]
        if ((int)p) //idle task sched out
90001004:	687b      	ldr	r3, [r7, #4]
90001006:	2b00      	cmp	r3, #0
90001008:	d007      	beq.n	9000101a <IdleTaskHook+0x1e>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000100a:	f7ff fd99 	bl	90000b40 <_ZN8touchgfx3HAL11getInstanceEv>
9000100e:	4603      	mov	r3, r0
90001010:	2101      	movs	r1, #1
90001012:	4618      	mov	r0, r3
90001014:	f00d f8c4 	bl	9000e1a0 <_ZN8touchgfx3HAL12setMCUActiveEb>
90001018:	e006      	b.n	90001028 <IdleTaskHook+0x2c>
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
9000101a:	f7ff fd91 	bl	90000b40 <_ZN8touchgfx3HAL11getInstanceEv>
9000101e:	4603      	mov	r3, r0
90001020:	2100      	movs	r1, #0
90001022:	4618      	mov	r0, r3
90001024:	f00d f8bc 	bl	9000e1a0 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
90001028:	2301      	movs	r3, #1
    }
9000102a:	4618      	mov	r0, r3
9000102c:	3708      	adds	r7, #8
9000102e:	46bd      	mov	sp, r7
90001030:	bd80      	pop	{r7, pc}
	...

90001034 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
90001034:	b580      	push	{r7, lr}
90001036:	b082      	sub	sp, #8
90001038:	af00      	add	r7, sp, #0
9000103a:	6078      	str	r0, [r7, #4]
9000103c:	4a08      	ldr	r2, [pc, #32]	; (90001060 <_ZN11TouchGFXHALD1Ev+0x2c>)
9000103e:	687b      	ldr	r3, [r7, #4]
90001040:	601a      	str	r2, [r3, #0]
90001042:	687b      	ldr	r3, [r7, #4]
90001044:	337c      	adds	r3, #124	; 0x7c
90001046:	4618      	mov	r0, r3
90001048:	f7ff fc16 	bl	90000878 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>
9000104c:	687b      	ldr	r3, [r7, #4]
9000104e:	4618      	mov	r0, r3
90001050:	f7ff feb6 	bl	90000dc0 <_ZN20TouchGFXGeneratedHALD1Ev>
90001054:	687b      	ldr	r3, [r7, #4]
90001056:	4618      	mov	r0, r3
90001058:	3708      	adds	r7, #8
9000105a:	46bd      	mov	sp, r7
9000105c:	bd80      	pop	{r7, pc}
9000105e:	bf00      	nop
90001060:	9002117c 	.word	0x9002117c

90001064 <_ZN11TouchGFXHALD0Ev>:
90001064:	b580      	push	{r7, lr}
90001066:	b082      	sub	sp, #8
90001068:	af00      	add	r7, sp, #0
9000106a:	6078      	str	r0, [r7, #4]
9000106c:	6878      	ldr	r0, [r7, #4]
9000106e:	f7ff ffe1 	bl	90001034 <_ZN11TouchGFXHALD1Ev>
90001072:	2188      	movs	r1, #136	; 0x88
90001074:	6878      	ldr	r0, [r7, #4]
90001076:	f01e f8e6 	bl	9001f246 <_ZdlPvj>
9000107a:	687b      	ldr	r3, [r7, #4]
9000107c:	4618      	mov	r0, r3
9000107e:	3708      	adds	r7, #8
90001080:	46bd      	mov	sp, r7
90001082:	bd80      	pop	{r7, pc}

90001084 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
90001084:	b580      	push	{r7, lr}
90001086:	af00      	add	r7, sp, #0
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001088:	2200      	movs	r2, #0
9000108a:	2101      	movs	r1, #1
9000108c:	2001      	movs	r0, #1
9000108e:	f009 fff4 	bl	9000b07a <osSemaphoreNew>
90001092:	4603      	mov	r3, r0
90001094:	4a0f      	ldr	r2, [pc, #60]	; (900010d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90001096:	6013      	str	r3, [r2, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001098:	4b0e      	ldr	r3, [pc, #56]	; (900010d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
9000109a:	681b      	ldr	r3, [r3, #0]
9000109c:	2b00      	cmp	r3, #0
9000109e:	d105      	bne.n	900010ac <_ZN8touchgfx10OSWrappers10initializeEv+0x28>
900010a0:	4b0d      	ldr	r3, [pc, #52]	; (900010d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x54>)
900010a2:	4a0e      	ldr	r2, [pc, #56]	; (900010dc <_ZN8touchgfx10OSWrappers10initializeEv+0x58>)
900010a4:	2125      	movs	r1, #37	; 0x25
900010a6:	480e      	ldr	r0, [pc, #56]	; (900010e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x5c>)
900010a8:	f01e f8fc 	bl	9001f2a4 <__assert_func>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900010ac:	2200      	movs	r2, #0
900010ae:	2104      	movs	r1, #4
900010b0:	2001      	movs	r0, #1
900010b2:	f00a f881 	bl	9000b1b8 <osMessageQueueNew>
900010b6:	4603      	mov	r3, r0
900010b8:	4a0a      	ldr	r2, [pc, #40]	; (900010e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x60>)
900010ba:	6013      	str	r3, [r2, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900010bc:	4b09      	ldr	r3, [pc, #36]	; (900010e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x60>)
900010be:	681b      	ldr	r3, [r3, #0]
900010c0:	2b00      	cmp	r3, #0
900010c2:	d105      	bne.n	900010d0 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>
900010c4:	4b08      	ldr	r3, [pc, #32]	; (900010e8 <_ZN8touchgfx10OSWrappers10initializeEv+0x64>)
900010c6:	4a05      	ldr	r2, [pc, #20]	; (900010dc <_ZN8touchgfx10OSWrappers10initializeEv+0x58>)
900010c8:	2129      	movs	r1, #41	; 0x29
900010ca:	4805      	ldr	r0, [pc, #20]	; (900010e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x5c>)
900010cc:	f01e f8ea 	bl	9001f2a4 <__assert_func>
}
900010d0:	bf00      	nop
900010d2:	bd80      	pop	{r7, pc}
900010d4:	2400015c 	.word	0x2400015c
900010d8:	90020654 	.word	0x90020654
900010dc:	900206a0 	.word	0x900206a0
900010e0:	900206d0 	.word	0x900206d0
900010e4:	24000160 	.word	0x24000160
900010e8:	90020730 	.word	0x90020730

900010ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
900010ec:	b580      	push	{r7, lr}
900010ee:	af00      	add	r7, sp, #0
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
900010f0:	4b04      	ldr	r3, [pc, #16]	; (90001104 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x18>)
900010f2:	681b      	ldr	r3, [r3, #0]
900010f4:	f04f 31ff 	mov.w	r1, #4294967295
900010f8:	4618      	mov	r0, r3
900010fa:	f00a f809 	bl	9000b110 <osSemaphoreAcquire>
}
900010fe:	bf00      	nop
90001100:	bd80      	pop	{r7, pc}
90001102:	bf00      	nop
90001104:	2400015c 	.word	0x2400015c

90001108 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
90001108:	b580      	push	{r7, lr}
9000110a:	af00      	add	r7, sp, #0
    osSemaphoreRelease(frame_buffer_sem);
9000110c:	4b03      	ldr	r3, [pc, #12]	; (9000111c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
9000110e:	681b      	ldr	r3, [r3, #0]
90001110:	4618      	mov	r0, r3
90001112:	f00a f829 	bl	9000b168 <osSemaphoreRelease>
}
90001116:	bf00      	nop
90001118:	bd80      	pop	{r7, pc}
9000111a:	bf00      	nop
9000111c:	2400015c 	.word	0x2400015c

90001120 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
90001120:	b580      	push	{r7, lr}
90001122:	af00      	add	r7, sp, #0
    osSemaphoreAcquire(frame_buffer_sem, 0);
90001124:	4b03      	ldr	r3, [pc, #12]	; (90001134 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
90001126:	681b      	ldr	r3, [r3, #0]
90001128:	2100      	movs	r1, #0
9000112a:	4618      	mov	r0, r3
9000112c:	f009 fff0 	bl	9000b110 <osSemaphoreAcquire>
}
90001130:	bf00      	nop
90001132:	bd80      	pop	{r7, pc}
90001134:	2400015c 	.word	0x2400015c

90001138 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
90001138:	b580      	push	{r7, lr}
9000113a:	af00      	add	r7, sp, #0
    osSemaphoreRelease(frame_buffer_sem);
9000113c:	4b03      	ldr	r3, [pc, #12]	; (9000114c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
9000113e:	681b      	ldr	r3, [r3, #0]
90001140:	4618      	mov	r0, r3
90001142:	f00a f811 	bl	9000b168 <osSemaphoreRelease>
}
90001146:	bf00      	nop
90001148:	bd80      	pop	{r7, pc}
9000114a:	bf00      	nop
9000114c:	2400015c 	.word	0x2400015c

90001150 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
90001150:	b580      	push	{r7, lr}
90001152:	af00      	add	r7, sp, #0
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90001154:	4b04      	ldr	r3, [pc, #16]	; (90001168 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x18>)
90001156:	6818      	ldr	r0, [r3, #0]
90001158:	2300      	movs	r3, #0
9000115a:	2200      	movs	r2, #0
9000115c:	4903      	ldr	r1, [pc, #12]	; (9000116c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x1c>)
9000115e:	f00a f867 	bl	9000b230 <osMessageQueuePut>
}
90001162:	bf00      	nop
90001164:	bd80      	pop	{r7, pc}
90001166:	bf00      	nop
90001168:	24000160 	.word	0x24000160
9000116c:	24000004 	.word	0x24000004

90001170 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
90001170:	b580      	push	{r7, lr}
90001172:	b082      	sub	sp, #8
90001174:	af00      	add	r7, sp, #0
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90001176:	4b09      	ldr	r3, [pc, #36]	; (9000119c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>)
90001178:	6818      	ldr	r0, [r3, #0]
9000117a:	1d39      	adds	r1, r7, #4
9000117c:	2300      	movs	r3, #0
9000117e:	2200      	movs	r2, #0
90001180:	f00a f886 	bl	9000b290 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
90001184:	4b05      	ldr	r3, [pc, #20]	; (9000119c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>)
90001186:	6818      	ldr	r0, [r3, #0]
90001188:	1d39      	adds	r1, r7, #4
9000118a:	f04f 33ff 	mov.w	r3, #4294967295
9000118e:	2200      	movs	r2, #0
90001190:	f00a f87e 	bl	9000b290 <osMessageQueueGet>
}
90001194:	bf00      	nop
90001196:	3708      	adds	r7, #8
90001198:	46bd      	mov	sp, r7
9000119a:	bd80      	pop	{r7, pc}
9000119c:	24000160 	.word	0x24000160

900011a0 <__NVIC_EnableIRQ>:
{
900011a0:	b480      	push	{r7}
900011a2:	b083      	sub	sp, #12
900011a4:	af00      	add	r7, sp, #0
900011a6:	4603      	mov	r3, r0
900011a8:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
900011aa:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
900011ae:	2b00      	cmp	r3, #0
900011b0:	db0b      	blt.n	900011ca <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900011b2:	88fb      	ldrh	r3, [r7, #6]
900011b4:	f003 021f 	and.w	r2, r3, #31
900011b8:	4907      	ldr	r1, [pc, #28]	; (900011d8 <__NVIC_EnableIRQ+0x38>)
900011ba:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
900011be:	095b      	lsrs	r3, r3, #5
900011c0:	2001      	movs	r0, #1
900011c2:	fa00 f202 	lsl.w	r2, r0, r2
900011c6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
900011ca:	bf00      	nop
900011cc:	370c      	adds	r7, #12
900011ce:	46bd      	mov	sp, r7
900011d0:	f85d 7b04 	ldr.w	r7, [sp], #4
900011d4:	4770      	bx	lr
900011d6:	bf00      	nop
900011d8:	e000e100 	.word	0xe000e100

900011dc <__NVIC_DisableIRQ>:
{
900011dc:	b480      	push	{r7}
900011de:	b083      	sub	sp, #12
900011e0:	af00      	add	r7, sp, #0
900011e2:	4603      	mov	r3, r0
900011e4:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
900011e6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
900011ea:	2b00      	cmp	r3, #0
900011ec:	db12      	blt.n	90001214 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900011ee:	88fb      	ldrh	r3, [r7, #6]
900011f0:	f003 021f 	and.w	r2, r3, #31
900011f4:	490a      	ldr	r1, [pc, #40]	; (90001220 <__NVIC_DisableIRQ+0x44>)
900011f6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
900011fa:	095b      	lsrs	r3, r3, #5
900011fc:	2001      	movs	r0, #1
900011fe:	fa00 f202 	lsl.w	r2, r0, r2
90001202:	3320      	adds	r3, #32
90001204:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90001208:	f3bf 8f4f 	dsb	sy
}
9000120c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
9000120e:	f3bf 8f6f 	isb	sy
}
90001212:	bf00      	nop
}
90001214:	bf00      	nop
90001216:	370c      	adds	r7, #12
90001218:	46bd      	mov	sp, r7
9000121a:	f85d 7b04 	ldr.w	r7, [sp], #4
9000121e:	4770      	bx	lr
90001220:	e000e100 	.word	0xe000e100

90001224 <_ZN8touchgfx9colortypeC1Ev>:
 * extract a 24/32-bit color from this type, use the getColor32 function.
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
90001224:	b480      	push	{r7}
90001226:	b083      	sub	sp, #12
90001228:	af00      	add	r7, sp, #0
9000122a:	6078      	str	r0, [r7, #4]
        : color(0)
9000122c:	687b      	ldr	r3, [r7, #4]
9000122e:	2200      	movs	r2, #0
90001230:	601a      	str	r2, [r3, #0]
    {
    }
90001232:	687b      	ldr	r3, [r7, #4]
90001234:	4618      	mov	r0, r3
90001236:	370c      	adds	r7, #12
90001238:	46bd      	mov	sp, r7
9000123a:	f85d 7b04 	ldr.w	r7, [sp], #4
9000123e:	4770      	bx	lr

90001240 <_ZNK8touchgfx9colortypecvmEv>:
    /**
     * Cast that converts the given colortype to an uint32_t.
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
90001240:	b480      	push	{r7}
90001242:	b083      	sub	sp, #12
90001244:	af00      	add	r7, sp, #0
90001246:	6078      	str	r0, [r7, #4]
    {
        return color;
90001248:	687b      	ldr	r3, [r7, #4]
9000124a:	681b      	ldr	r3, [r3, #0]
    }
9000124c:	4618      	mov	r0, r3
9000124e:	370c      	adds	r7, #12
90001250:	46bd      	mov	sp, r7
90001252:	f85d 7b04 	ldr.w	r7, [sp], #4
90001256:	4770      	bx	lr

90001258 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
90001258:	b480      	push	{r7}
9000125a:	b083      	sub	sp, #12
9000125c:	af00      	add	r7, sp, #0
9000125e:	6078      	str	r0, [r7, #4]
    {
90001260:	4a04      	ldr	r2, [pc, #16]	; (90001274 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
90001262:	687b      	ldr	r3, [r7, #4]
90001264:	601a      	str	r2, [r3, #0]
    }
90001266:	687b      	ldr	r3, [r7, #4]
90001268:	4618      	mov	r0, r3
9000126a:	370c      	adds	r7, #12
9000126c:	46bd      	mov	sp, r7
9000126e:	f85d 7b04 	ldr.w	r7, [sp], #4
90001272:	4770      	bx	lr
90001274:	90021288 	.word	0x90021288

90001278 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
90001278:	b580      	push	{r7, lr}
9000127a:	b082      	sub	sp, #8
9000127c:	af00      	add	r7, sp, #0
9000127e:	6078      	str	r0, [r7, #4]
    }
90001280:	6878      	ldr	r0, [r7, #4]
90001282:	f7ff ffe9 	bl	90001258 <_ZN8touchgfx9DMA_QueueD1Ev>
90001286:	2104      	movs	r1, #4
90001288:	6878      	ldr	r0, [r7, #4]
9000128a:	f01d ffdc 	bl	9001f246 <_ZdlPvj>
9000128e:	687b      	ldr	r3, [r7, #4]
90001290:	4618      	mov	r0, r3
90001292:	3708      	adds	r7, #8
90001294:	46bd      	mov	sp, r7
90001296:	bd80      	pop	{r7, pc}

90001298 <_ZN8touchgfx13DMA_Interface5flushEv>:
     * @param  op The operation to add.
     */
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
90001298:	b580      	push	{r7, lr}
9000129a:	b082      	sub	sp, #8
9000129c:	af00      	add	r7, sp, #0
9000129e:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
900012a0:	687b      	ldr	r3, [r7, #4]
900012a2:	681b      	ldr	r3, [r3, #0]
900012a4:	3344      	adds	r3, #68	; 0x44
900012a6:	681b      	ldr	r3, [r3, #0]
900012a8:	6878      	ldr	r0, [r7, #4]
900012aa:	4798      	blx	r3
    }
900012ac:	bf00      	nop
900012ae:	3708      	adds	r7, #8
900012b0:	46bd      	mov	sp, r7
900012b2:	bd80      	pop	{r7, pc}

900012b4 <_ZN8touchgfx13DMA_InterfaceD1Ev>:
    {
        return DMA_TYPE_GENERIC;
    }

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
900012b4:	b480      	push	{r7}
900012b6:	b083      	sub	sp, #12
900012b8:	af00      	add	r7, sp, #0
900012ba:	6078      	str	r0, [r7, #4]
    {
900012bc:	4a04      	ldr	r2, [pc, #16]	; (900012d0 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
900012be:	687b      	ldr	r3, [r7, #4]
900012c0:	601a      	str	r2, [r3, #0]
    }
900012c2:	687b      	ldr	r3, [r7, #4]
900012c4:	4618      	mov	r0, r3
900012c6:	370c      	adds	r7, #12
900012c8:	46bd      	mov	sp, r7
900012ca:	f85d 7b04 	ldr.w	r7, [sp], #4
900012ce:	4770      	bx	lr
900012d0:	90022354 	.word	0x90022354

900012d4 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
900012d4:	b580      	push	{r7, lr}
900012d6:	b082      	sub	sp, #8
900012d8:	af00      	add	r7, sp, #0
900012da:	6078      	str	r0, [r7, #4]
    }
900012dc:	6878      	ldr	r0, [r7, #4]
900012de:	f7ff ffe9 	bl	900012b4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
900012e2:	210c      	movs	r1, #12
900012e4:	6878      	ldr	r0, [r7, #4]
900012e6:	f01d ffae 	bl	9001f246 <_ZdlPvj>
900012ea:	687b      	ldr	r3, [r7, #4]
900012ec:	4618      	mov	r0, r3
900012ee:	3708      	adds	r7, #8
900012f0:	46bd      	mov	sp, r7
900012f2:	bd80      	pop	{r7, pc}

900012f4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
900012f4:	b480      	push	{r7}
900012f6:	b083      	sub	sp, #12
900012f8:	af00      	add	r7, sp, #0
900012fa:	6078      	str	r0, [r7, #4]
900012fc:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900012fe:	4a09      	ldr	r2, [pc, #36]	; (90001324 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
90001300:	687b      	ldr	r3, [r7, #4]
90001302:	601a      	str	r2, [r3, #0]
90001304:	687b      	ldr	r3, [r7, #4]
90001306:	683a      	ldr	r2, [r7, #0]
90001308:	605a      	str	r2, [r3, #4]
9000130a:	687b      	ldr	r3, [r7, #4]
9000130c:	2200      	movs	r2, #0
9000130e:	721a      	strb	r2, [r3, #8]
90001310:	687b      	ldr	r3, [r7, #4]
90001312:	2200      	movs	r2, #0
90001314:	725a      	strb	r2, [r3, #9]
    {
    }
90001316:	687b      	ldr	r3, [r7, #4]
90001318:	4618      	mov	r0, r3
9000131a:	370c      	adds	r7, #12
9000131c:	46bd      	mov	sp, r7
9000131e:	f85d 7b04 	ldr.w	r7, [sp], #4
90001322:	4770      	bx	lr
90001324:	90022354 	.word	0x90022354

90001328 <_ZN10STM32H7DMA10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_CHROMART type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
90001328:	b480      	push	{r7}
9000132a:	b083      	sub	sp, #12
9000132c:	af00      	add	r7, sp, #0
9000132e:	6078      	str	r0, [r7, #4]
    {
        return touchgfx::DMA_TYPE_CHROMART;
90001330:	2301      	movs	r3, #1
    }
90001332:	4618      	mov	r0, r3
90001334:	370c      	adds	r7, #12
90001336:	46bd      	mov	sp, r7
90001338:	f85d 7b04 	ldr.w	r7, [sp], #4
9000133c:	4770      	bx	lr

9000133e <_ZN10STM32H7DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
9000133e:	b580      	push	{r7, lr}
90001340:	b082      	sub	sp, #8
90001342:	af00      	add	r7, sp, #0
90001344:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
90001346:	687a      	ldr	r2, [r7, #4]
90001348:	687b      	ldr	r3, [r7, #4]
9000134a:	681b      	ldr	r3, [r3, #0]
9000134c:	3328      	adds	r3, #40	; 0x28
9000134e:	681b      	ldr	r3, [r3, #0]
90001350:	4610      	mov	r0, r2
90001352:	4798      	blx	r3
    }
90001354:	bf00      	nop
90001356:	3708      	adds	r7, #8
90001358:	46bd      	mov	sp, r7
9000135a:	bd80      	pop	{r7, pc}

9000135c <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
9000135c:	b580      	push	{r7, lr}
9000135e:	b082      	sub	sp, #8
90001360:	af00      	add	r7, sp, #0
90001362:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
90001364:	687b      	ldr	r3, [r7, #4]
90001366:	685a      	ldr	r2, [r3, #4]
90001368:	687b      	ldr	r3, [r7, #4]
9000136a:	685b      	ldr	r3, [r3, #4]
9000136c:	681b      	ldr	r3, [r3, #0]
9000136e:	3314      	adds	r3, #20
90001370:	681b      	ldr	r3, [r3, #0]
90001372:	4610      	mov	r0, r2
90001374:	4798      	blx	r3
    }
90001376:	bf00      	nop
90001378:	3708      	adds	r7, #8
9000137a:	46bd      	mov	sp, r7
9000137c:	bd80      	pop	{r7, pc}

9000137e <DMA2D_XferCpltCallback>:

extern "C" DMA2D_HandleTypeDef hdma2d;

extern "C" {
static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
{
9000137e:	b580      	push	{r7, lr}
90001380:	b082      	sub	sp, #8
90001382:	af00      	add	r7, sp, #0
90001384:	6078      	str	r0, [r7, #4]
    (void)handle; // Unused argument
    HAL::getInstance()->signalDMAInterrupt();
90001386:	f7ff fbdb 	bl	90000b40 <_ZN8touchgfx3HAL11getInstanceEv>
9000138a:	4603      	mov	r3, r0
9000138c:	4618      	mov	r0, r3
9000138e:	f7ff ffe5 	bl	9000135c <_ZN8touchgfx3HAL18signalDMAInterruptEv>
}
90001392:	bf00      	nop
90001394:	3708      	adds	r7, #8
90001396:	46bd      	mov	sp, r7
90001398:	bd80      	pop	{r7, pc}

9000139a <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
9000139a:	b580      	push	{r7, lr}
9000139c:	b082      	sub	sp, #8
9000139e:	af00      	add	r7, sp, #0
900013a0:	6078      	str	r0, [r7, #4]
900013a2:	687b      	ldr	r3, [r7, #4]
900013a4:	3318      	adds	r3, #24
900013a6:	4618      	mov	r0, r3
900013a8:	f7ff ff3c 	bl	90001224 <_ZN8touchgfx9colortypeC1Ev>
900013ac:	687b      	ldr	r3, [r7, #4]
900013ae:	4618      	mov	r0, r3
900013b0:	3708      	adds	r7, #8
900013b2:	46bd      	mov	sp, r7
900013b4:	bd80      	pop	{r7, pc}
	...

900013b8 <_ZN10STM32H7DMAC1Ev>:
}

STM32H7DMA::STM32H7DMA()
900013b8:	b5b0      	push	{r4, r5, r7, lr}
900013ba:	b082      	sub	sp, #8
900013bc:	af00      	add	r7, sp, #0
900013be:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
900013c0:	687a      	ldr	r2, [r7, #4]
900013c2:	687b      	ldr	r3, [r7, #4]
900013c4:	330c      	adds	r3, #12
900013c6:	4619      	mov	r1, r3
900013c8:	4610      	mov	r0, r2
900013ca:	f7ff ff93 	bl	900012f4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
900013ce:	4a0e      	ldr	r2, [pc, #56]	; (90001408 <_ZN10STM32H7DMAC1Ev+0x50>)
900013d0:	687b      	ldr	r3, [r7, #4]
900013d2:	601a      	str	r2, [r3, #0]
900013d4:	687b      	ldr	r3, [r7, #4]
900013d6:	f103 000c 	add.w	r0, r3, #12
900013da:	687b      	ldr	r3, [r7, #4]
900013dc:	3320      	adds	r3, #32
900013de:	2260      	movs	r2, #96	; 0x60
900013e0:	4619      	mov	r1, r3
900013e2:	f00d f83b 	bl	9000e45c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900013e6:	687b      	ldr	r3, [r7, #4]
900013e8:	3320      	adds	r3, #32
900013ea:	245f      	movs	r4, #95	; 0x5f
900013ec:	461d      	mov	r5, r3
900013ee:	2c00      	cmp	r4, #0
900013f0:	db05      	blt.n	900013fe <_ZN10STM32H7DMAC1Ev+0x46>
900013f2:	4628      	mov	r0, r5
900013f4:	f7ff ffd1 	bl	9000139a <_ZN8touchgfx6BlitOpC1Ev>
900013f8:	3520      	adds	r5, #32
900013fa:	3c01      	subs	r4, #1
900013fc:	e7f7      	b.n	900013ee <_ZN10STM32H7DMAC1Ev+0x36>
{
}
900013fe:	687b      	ldr	r3, [r7, #4]
90001400:	4618      	mov	r0, r3
90001402:	3708      	adds	r7, #8
90001404:	46bd      	mov	sp, r7
90001406:	bdb0      	pop	{r4, r5, r7, pc}
90001408:	90021238 	.word	0x90021238

9000140c <_ZN10STM32H7DMAD1Ev>:

STM32H7DMA::~STM32H7DMA()
9000140c:	b580      	push	{r7, lr}
9000140e:	b082      	sub	sp, #8
90001410:	af00      	add	r7, sp, #0
90001412:	6078      	str	r0, [r7, #4]
90001414:	4a09      	ldr	r2, [pc, #36]	; (9000143c <_ZN10STM32H7DMAD1Ev+0x30>)
90001416:	687b      	ldr	r3, [r7, #4]
90001418:	601a      	str	r2, [r3, #0]
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
9000141a:	205a      	movs	r0, #90	; 0x5a
9000141c:	f7ff fede 	bl	900011dc <__NVIC_DisableIRQ>
STM32H7DMA::~STM32H7DMA()
90001420:	687b      	ldr	r3, [r7, #4]
90001422:	330c      	adds	r3, #12
90001424:	4618      	mov	r0, r3
90001426:	f000 fb2b 	bl	90001a80 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
9000142a:	687b      	ldr	r3, [r7, #4]
9000142c:	4618      	mov	r0, r3
9000142e:	f7ff ff41 	bl	900012b4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
}
90001432:	687b      	ldr	r3, [r7, #4]
90001434:	4618      	mov	r0, r3
90001436:	3708      	adds	r7, #8
90001438:	46bd      	mov	sp, r7
9000143a:	bd80      	pop	{r7, pc}
9000143c:	90021238 	.word	0x90021238

90001440 <_ZN10STM32H7DMAD0Ev>:
STM32H7DMA::~STM32H7DMA()
90001440:	b580      	push	{r7, lr}
90001442:	b082      	sub	sp, #8
90001444:	af00      	add	r7, sp, #0
90001446:	6078      	str	r0, [r7, #4]
}
90001448:	6878      	ldr	r0, [r7, #4]
9000144a:	f7ff ffdf 	bl	9000140c <_ZN10STM32H7DMAD1Ev>
9000144e:	f44f 6142 	mov.w	r1, #3104	; 0xc20
90001452:	6878      	ldr	r0, [r7, #4]
90001454:	f01d fef7 	bl	9001f246 <_ZdlPvj>
90001458:	687b      	ldr	r3, [r7, #4]
9000145a:	4618      	mov	r0, r3
9000145c:	3708      	adds	r7, #8
9000145e:	46bd      	mov	sp, r7
90001460:	bd80      	pop	{r7, pc}
	...

90001464 <_ZN10STM32H7DMA10initializeEv>:

void STM32H7DMA::initialize()
{
90001464:	b580      	push	{r7, lr}
90001466:	b084      	sub	sp, #16
90001468:	af00      	add	r7, sp, #0
9000146a:	6078      	str	r0, [r7, #4]
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000146c:	4b12      	ldr	r3, [pc, #72]	; (900014b8 <_ZN10STM32H7DMA10initializeEv+0x54>)
9000146e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90001472:	4a11      	ldr	r2, [pc, #68]	; (900014b8 <_ZN10STM32H7DMA10initializeEv+0x54>)
90001474:	f043 0310 	orr.w	r3, r3, #16
90001478:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
9000147c:	4b0e      	ldr	r3, [pc, #56]	; (900014b8 <_ZN10STM32H7DMA10initializeEv+0x54>)
9000147e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90001482:	f003 0310 	and.w	r3, r3, #16
90001486:	60fb      	str	r3, [r7, #12]
90001488:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000148a:	4b0b      	ldr	r3, [pc, #44]	; (900014b8 <_ZN10STM32H7DMA10initializeEv+0x54>)
9000148c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9000148e:	4a0a      	ldr	r2, [pc, #40]	; (900014b8 <_ZN10STM32H7DMA10initializeEv+0x54>)
90001490:	f043 0310 	orr.w	r3, r3, #16
90001494:	67d3      	str	r3, [r2, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90001496:	4b08      	ldr	r3, [pc, #32]	; (900014b8 <_ZN10STM32H7DMA10initializeEv+0x54>)
90001498:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9000149a:	4a07      	ldr	r2, [pc, #28]	; (900014b8 <_ZN10STM32H7DMA10initializeEv+0x54>)
9000149c:	f023 0310 	bic.w	r3, r3, #16
900014a0:	67d3      	str	r3, [r2, #124]	; 0x7c

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900014a2:	4b06      	ldr	r3, [pc, #24]	; (900014bc <_ZN10STM32H7DMA10initializeEv+0x58>)
900014a4:	4a06      	ldr	r2, [pc, #24]	; (900014c0 <_ZN10STM32H7DMA10initializeEv+0x5c>)
900014a6:	621a      	str	r2, [r3, #32]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
900014a8:	205a      	movs	r0, #90	; 0x5a
900014aa:	f7ff fe79 	bl	900011a0 <__NVIC_EnableIRQ>
}
900014ae:	bf00      	nop
900014b0:	3710      	adds	r7, #16
900014b2:	46bd      	mov	sp, r7
900014b4:	bd80      	pop	{r7, pc}
900014b6:	bf00      	nop
900014b8:	58024400 	.word	0x58024400
900014bc:	24012f18 	.word	0x24012f18
900014c0:	9000137f 	.word	0x9000137f

900014c4 <_ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32H7DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
{
900014c4:	b580      	push	{r7, lr}
900014c6:	b084      	sub	sp, #16
900014c8:	af00      	add	r7, sp, #0
900014ca:	6078      	str	r0, [r7, #4]
900014cc:	460b      	mov	r3, r1
900014ce:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_INPUT_ARGB8888;
900014d0:	2300      	movs	r3, #0
900014d2:	60fb      	str	r3, [r7, #12]

    switch (format)
900014d4:	78fb      	ldrb	r3, [r7, #3]
900014d6:	2b0b      	cmp	r3, #11
900014d8:	d826      	bhi.n	90001528 <_ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x64>
900014da:	a201      	add	r2, pc, #4	; (adr r2, 900014e0 <_ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
900014dc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
900014e0:	9000151d 	.word	0x9000151d
900014e4:	90001517 	.word	0x90001517
900014e8:	90001511 	.word	0x90001511
900014ec:	90001529 	.word	0x90001529
900014f0:	90001529 	.word	0x90001529
900014f4:	90001529 	.word	0x90001529
900014f8:	90001529 	.word	0x90001529
900014fc:	90001523 	.word	0x90001523
90001500:	90001523 	.word	0x90001523
90001504:	90001523 	.word	0x90001523
90001508:	90001523 	.word	0x90001523
9000150c:	90001523 	.word	0x90001523
    {
    case Bitmap::ARGB8888: /* DMA2D input mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001510:	2300      	movs	r3, #0
90001512:	60fb      	str	r3, [r7, #12]
        break;
90001514:	e00e      	b.n	90001534 <_ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB888: /* DMA2D input mode set to 24bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB888;
90001516:	2301      	movs	r3, #1
90001518:	60fb      	str	r3, [r7, #12]
        break;
9000151a:	e00b      	b.n	90001534 <_ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB565: /* DMA2D input mode set to 16bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB565;
9000151c:	2302      	movs	r3, #2
9000151e:	60fb      	str	r3, [r7, #12]
        break;
90001520:	e008      	b.n	90001534 <_ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* Fall through */
    case Bitmap::L8:       /* DMA2D input mode set to 8bit Color Look up table*/
        dma2dColorMode = DMA2D_INPUT_L8;
90001522:	2305      	movs	r3, #5
90001524:	60fb      	str	r3, [r7, #12]
        break;
90001526:	e005      	b.n	90001534 <_ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported input format for DMA2D */
        assert(0 && "Unsupported Format!");
90001528:	4b05      	ldr	r3, [pc, #20]	; (90001540 <_ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x7c>)
9000152a:	4a06      	ldr	r2, [pc, #24]	; (90001544 <_ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x80>)
9000152c:	2165      	movs	r1, #101	; 0x65
9000152e:	4806      	ldr	r0, [pc, #24]	; (90001548 <_ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x84>)
90001530:	f01d feb8 	bl	9001f2a4 <__assert_func>
        break;
    }

    return dma2dColorMode;
90001534:	68fb      	ldr	r3, [r7, #12]
}
90001536:	4618      	mov	r0, r3
90001538:	3710      	adds	r7, #16
9000153a:	46bd      	mov	sp, r7
9000153c:	bd80      	pop	{r7, pc}
9000153e:	bf00      	nop
90001540:	90020774 	.word	0x90020774
90001544:	90020790 	.word	0x90020790
90001548:	900207dc 	.word	0x900207dc

9000154c <_ZN10STM32H7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32H7DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
{
9000154c:	b580      	push	{r7, lr}
9000154e:	b084      	sub	sp, #16
90001550:	af00      	add	r7, sp, #0
90001552:	6078      	str	r0, [r7, #4]
90001554:	460b      	mov	r3, r1
90001556:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001558:	2300      	movs	r3, #0
9000155a:	60fb      	str	r3, [r7, #12]

    switch (format)
9000155c:	78fb      	ldrb	r3, [r7, #3]
9000155e:	2b0a      	cmp	r3, #10
90001560:	d821      	bhi.n	900015a6 <_ZN10STM32H7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x5a>
90001562:	a201      	add	r2, pc, #4	; (adr r2, 90001568 <_ZN10STM32H7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
90001564:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90001568:	900015a1 	.word	0x900015a1
9000156c:	9000159b 	.word	0x9000159b
90001570:	90001595 	.word	0x90001595
90001574:	900015a7 	.word	0x900015a7
90001578:	900015a7 	.word	0x900015a7
9000157c:	900015a7 	.word	0x900015a7
90001580:	900015a7 	.word	0x900015a7
90001584:	9000159b 	.word	0x9000159b
90001588:	9000159b 	.word	0x9000159b
9000158c:	9000159b 	.word	0x9000159b
90001590:	9000159b 	.word	0x9000159b
    {
    case Bitmap::ARGB8888: /* DMA2D output mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001594:	2300      	movs	r3, #0
90001596:	60fb      	str	r3, [r7, #12]
        break;
90001598:	e00b      	b.n	900015b2 <_ZN10STM32H7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB888:   /* Fall through */
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* DMA2D output mode set to 24bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
9000159a:	2301      	movs	r3, #1
9000159c:	60fb      	str	r3, [r7, #12]
        break;
9000159e:	e008      	b.n	900015b2 <_ZN10STM32H7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB565: /* DMA2D output mode set to 16bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900015a0:	2302      	movs	r3, #2
900015a2:	60fb      	str	r3, [r7, #12]
        break;
900015a4:	e005      	b.n	900015b2 <_ZN10STM32H7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported output format for DMA2D */
        assert(0 && "Unsupported Format!");
900015a6:	4b05      	ldr	r3, [pc, #20]	; (900015bc <_ZN10STM32H7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>)
900015a8:	4a05      	ldr	r2, [pc, #20]	; (900015c0 <_ZN10STM32H7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x74>)
900015aa:	2186      	movs	r1, #134	; 0x86
900015ac:	4805      	ldr	r0, [pc, #20]	; (900015c4 <_ZN10STM32H7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x78>)
900015ae:	f01d fe79 	bl	9001f2a4 <__assert_func>
        break;
    }

    return dma2dColorMode;
900015b2:	68fb      	ldr	r3, [r7, #12]
}
900015b4:	4618      	mov	r0, r3
900015b6:	3710      	adds	r7, #16
900015b8:	46bd      	mov	sp, r7
900015ba:	bd80      	pop	{r7, pc}
900015bc:	90020774 	.word	0x90020774
900015c0:	9002083c 	.word	0x9002083c
900015c4:	900207dc 	.word	0x900207dc

900015c8 <_ZN10STM32H7DMA11getBlitCapsEv>:

BlitOperations STM32H7DMA::getBlitCaps()
{
900015c8:	b480      	push	{r7}
900015ca:	b083      	sub	sp, #12
900015cc:	af00      	add	r7, sp, #0
900015ce:	6078      	str	r0, [r7, #4]
                                       | BLIT_OP_COPY
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
900015d0:	f240 13ef 	movw	r3, #495	; 0x1ef
}
900015d4:	4618      	mov	r0, r3
900015d6:	370c      	adds	r7, #12
900015d8:	46bd      	mov	sp, r7
900015da:	f85d 7b04 	ldr.w	r7, [sp], #4
900015de:	4770      	bx	lr

900015e0 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32H7DMA::setupDataCopy(const BlitOp& blitOp)
{
900015e0:	b590      	push	{r4, r7, lr}
900015e2:	b089      	sub	sp, #36	; 0x24
900015e4:	af00      	add	r7, sp, #0
900015e6:	6078      	str	r0, [r7, #4]
900015e8:	6039      	str	r1, [r7, #0]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900015ea:	683b      	ldr	r3, [r7, #0]
900015ec:	7f5b      	ldrb	r3, [r3, #29]
900015ee:	4619      	mov	r1, r3
900015f0:	6878      	ldr	r0, [r7, #4]
900015f2:	f7ff ff67 	bl	900014c4 <_ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
900015f6:	61f8      	str	r0, [r7, #28]
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
900015f8:	683b      	ldr	r3, [r7, #0]
900015fa:	7f9b      	ldrb	r3, [r3, #30]
900015fc:	4619      	mov	r1, r3
900015fe:	6878      	ldr	r0, [r7, #4]
90001600:	f7ff ff60 	bl	900014c4 <_ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
90001604:	61b8      	str	r0, [r7, #24]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001606:	683b      	ldr	r3, [r7, #0]
90001608:	7f9b      	ldrb	r3, [r3, #30]
9000160a:	4619      	mov	r1, r3
9000160c:	6878      	ldr	r0, [r7, #4]
9000160e:	f7ff ff9d 	bl	9000154c <_ZN10STM32H7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
90001612:	6178      	str	r0, [r7, #20]

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001614:	683b      	ldr	r3, [r7, #0]
90001616:	8adb      	ldrh	r3, [r3, #22]
90001618:	461a      	mov	r2, r3
9000161a:	683b      	ldr	r3, [r7, #0]
9000161c:	8a1b      	ldrh	r3, [r3, #16]
9000161e:	1ad2      	subs	r2, r2, r3
90001620:	4b8b      	ldr	r3, [pc, #556]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001622:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001624:	683b      	ldr	r3, [r7, #0]
90001626:	8adb      	ldrh	r3, [r3, #22]
90001628:	461a      	mov	r2, r3
9000162a:	683b      	ldr	r3, [r7, #0]
9000162c:	8a1b      	ldrh	r3, [r3, #16]
9000162e:	1ad2      	subs	r2, r2, r3
90001630:	4b87      	ldr	r3, [pc, #540]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001632:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001634:	683b      	ldr	r3, [r7, #0]
90001636:	8a9b      	ldrh	r3, [r3, #20]
90001638:	461a      	mov	r2, r3
9000163a:	683b      	ldr	r3, [r7, #0]
9000163c:	8a1b      	ldrh	r3, [r3, #16]
9000163e:	1ad2      	subs	r2, r2, r3
90001640:	4b83      	ldr	r3, [pc, #524]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001642:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001644:	4a82      	ldr	r2, [pc, #520]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001646:	697b      	ldr	r3, [r7, #20]
90001648:	6353      	str	r3, [r2, #52]	; 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000164a:	683b      	ldr	r3, [r7, #0]
9000164c:	8a5b      	ldrh	r3, [r3, #18]
9000164e:	461a      	mov	r2, r3
90001650:	683b      	ldr	r3, [r7, #0]
90001652:	8a1b      	ldrh	r3, [r3, #16]
90001654:	041b      	lsls	r3, r3, #16
90001656:	431a      	orrs	r2, r3
90001658:	4b7d      	ldr	r3, [pc, #500]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
9000165a:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000165c:	683b      	ldr	r3, [r7, #0]
9000165e:	68da      	ldr	r2, [r3, #12]
90001660:	4b7b      	ldr	r3, [pc, #492]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001662:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001664:	683b      	ldr	r3, [r7, #0]
90001666:	685a      	ldr	r2, [r3, #4]
90001668:	4b79      	ldr	r3, [pc, #484]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
9000166a:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
9000166c:	683b      	ldr	r3, [r7, #0]
9000166e:	681b      	ldr	r3, [r3, #0]
90001670:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90001674:	d046      	beq.n	90001704 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
90001676:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000167a:	f200 80f9 	bhi.w	90001870 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>
9000167e:	2b80      	cmp	r3, #128	; 0x80
90001680:	d00e      	beq.n	900016a0 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
90001682:	2b80      	cmp	r3, #128	; 0x80
90001684:	f200 80f4 	bhi.w	90001870 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>
90001688:	2b40      	cmp	r3, #64	; 0x40
9000168a:	f000 80cc 	beq.w	90001826 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x246>
9000168e:	2b40      	cmp	r3, #64	; 0x40
90001690:	f200 80ee 	bhi.w	90001870 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>
90001694:	2b04      	cmp	r3, #4
90001696:	d067      	beq.n	90001768 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>
90001698:	2b20      	cmp	r3, #32
9000169a:	f000 80c4 	beq.w	90001826 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x246>
9000169e:	e0e7      	b.n	90001870 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900016a0:	683b      	ldr	r3, [r7, #0]
900016a2:	7f1b      	ldrb	r3, [r3, #28]
900016a4:	061b      	lsls	r3, r3, #24
900016a6:	4619      	mov	r1, r3
900016a8:	4a69      	ldr	r2, [pc, #420]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
900016aa:	4b6a      	ldr	r3, [pc, #424]	; (90001854 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x274>)
900016ac:	430b      	orrs	r3, r1
900016ae:	61d3      	str	r3, [r2, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
900016b0:	683b      	ldr	r3, [r7, #0]
900016b2:	3318      	adds	r3, #24
900016b4:	4618      	mov	r0, r3
900016b6:	f7ff fdc3 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
900016ba:	4603      	mov	r3, r0
900016bc:	021b      	lsls	r3, r3, #8
900016be:	f403 0478 	and.w	r4, r3, #16252928	; 0xf80000
900016c2:	683b      	ldr	r3, [r7, #0]
900016c4:	3318      	adds	r3, #24
900016c6:	4618      	mov	r0, r3
900016c8:	f7ff fdba 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
900016cc:	4603      	mov	r3, r0
900016ce:	015b      	lsls	r3, r3, #5
900016d0:	f403 437c 	and.w	r3, r3, #64512	; 0xfc00
900016d4:	431c      	orrs	r4, r3
900016d6:	683b      	ldr	r3, [r7, #0]
900016d8:	3318      	adds	r3, #24
900016da:	4618      	mov	r0, r3
900016dc:	f7ff fdb0 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
900016e0:	4603      	mov	r3, r0
900016e2:	00db      	lsls	r3, r3, #3
900016e4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900016e8:	4a59      	ldr	r2, [pc, #356]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
900016ea:	4323      	orrs	r3, r4
900016ec:	6213      	str	r3, [r2, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900016ee:	4a58      	ldr	r2, [pc, #352]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
900016f0:	69bb      	ldr	r3, [r7, #24]
900016f2:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900016f4:	683b      	ldr	r3, [r7, #0]
900016f6:	68da      	ldr	r2, [r3, #12]
900016f8:	4b55      	ldr	r3, [pc, #340]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
900016fa:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
900016fc:	4b54      	ldr	r3, [pc, #336]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
900016fe:	4a56      	ldr	r2, [pc, #344]	; (90001858 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x278>)
90001700:	601a      	str	r2, [r3, #0]
        break;
90001702:	e0f6      	b.n	900018f2 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x312>
    case BLIT_OP_COPY_A8:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001704:	683b      	ldr	r3, [r7, #0]
90001706:	7f1b      	ldrb	r3, [r3, #28]
90001708:	061b      	lsls	r3, r3, #24
9000170a:	4619      	mov	r1, r3
9000170c:	4a50      	ldr	r2, [pc, #320]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
9000170e:	4b53      	ldr	r3, [pc, #332]	; (9000185c <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x27c>)
90001710:	430b      	orrs	r3, r1
90001712:	61d3      	str	r3, [r2, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
90001714:	683b      	ldr	r3, [r7, #0]
90001716:	3318      	adds	r3, #24
90001718:	4618      	mov	r0, r3
9000171a:	f7ff fd91 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
9000171e:	4603      	mov	r3, r0
90001720:	021b      	lsls	r3, r3, #8
90001722:	f403 0478 	and.w	r4, r3, #16252928	; 0xf80000
90001726:	683b      	ldr	r3, [r7, #0]
90001728:	3318      	adds	r3, #24
9000172a:	4618      	mov	r0, r3
9000172c:	f7ff fd88 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
90001730:	4603      	mov	r3, r0
90001732:	015b      	lsls	r3, r3, #5
90001734:	f403 437c 	and.w	r3, r3, #64512	; 0xfc00
90001738:	431c      	orrs	r4, r3
9000173a:	683b      	ldr	r3, [r7, #0]
9000173c:	3318      	adds	r3, #24
9000173e:	4618      	mov	r0, r3
90001740:	f7ff fd7e 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
90001744:	4603      	mov	r3, r0
90001746:	00db      	lsls	r3, r3, #3
90001748:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
9000174c:	4a40      	ldr	r2, [pc, #256]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
9000174e:	4323      	orrs	r3, r4
90001750:	6213      	str	r3, [r2, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001752:	4a3f      	ldr	r2, [pc, #252]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001754:	69bb      	ldr	r3, [r7, #24]
90001756:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001758:	683b      	ldr	r3, [r7, #0]
9000175a:	68da      	ldr	r2, [r3, #12]
9000175c:	4b3c      	ldr	r3, [pc, #240]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
9000175e:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001760:	4b3b      	ldr	r3, [pc, #236]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001762:	4a3d      	ldr	r2, [pc, #244]	; (90001858 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x278>)
90001764:	601a      	str	r2, [r3, #0]
        break;
90001766:	e0c4      	b.n	900018f2 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x312>
    case BLIT_OP_COPY_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001768:	683b      	ldr	r3, [r7, #0]
9000176a:	7f1b      	ldrb	r3, [r3, #28]
9000176c:	061b      	lsls	r3, r3, #24
9000176e:	461a      	mov	r2, r3
90001770:	69fb      	ldr	r3, [r7, #28]
90001772:	4313      	orrs	r3, r2
90001774:	4a36      	ldr	r2, [pc, #216]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001776:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000177a:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000177c:	4a34      	ldr	r2, [pc, #208]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
9000177e:	69bb      	ldr	r3, [r7, #24]
90001780:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001782:	683b      	ldr	r3, [r7, #0]
90001784:	68da      	ldr	r2, [r3, #12]
90001786:	4b32      	ldr	r3, [pc, #200]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001788:	615a      	str	r2, [r3, #20]

        if (blitOp.srcFormat == Bitmap::L8)
9000178a:	683b      	ldr	r3, [r7, #0]
9000178c:	7f5b      	ldrb	r3, [r3, #29]
9000178e:	2b0b      	cmp	r3, #11
90001790:	d145      	bne.n	9000181e <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x23e>
        {
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90001792:	683b      	ldr	r3, [r7, #0]
90001794:	689b      	ldr	r3, [r3, #8]
90001796:	613b      	str	r3, [r7, #16]

            /* Write foreground CLUT memory address */
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001798:	693b      	ldr	r3, [r7, #16]
9000179a:	1d1a      	adds	r2, r3, #4
9000179c:	4b2c      	ldr	r3, [pc, #176]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
9000179e:	62da      	str	r2, [r3, #44]	; 0x2c

            switch ((Bitmap::ClutFormat)palette->format)
900017a0:	693b      	ldr	r3, [r7, #16]
900017a2:	881b      	ldrh	r3, [r3, #0]
900017a4:	b2db      	uxtb	r3, r3
900017a6:	2b00      	cmp	r3, #0
900017a8:	d002      	beq.n	900017b0 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>
900017aa:	2b01      	cmp	r3, #1
900017ac:	d00d      	beq.n	900017ca <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ea>
900017ae:	e01a      	b.n	900017e6 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x206>
            {
            case Bitmap::CLUT_FORMAT_L8_ARGB8888:
                /* Write foreground CLUT size and CLUT color mode */
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900017b0:	4b27      	ldr	r3, [pc, #156]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
900017b2:	69da      	ldr	r2, [r3, #28]
900017b4:	4b2a      	ldr	r3, [pc, #168]	; (90001860 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x280>)
900017b6:	4013      	ands	r3, r2
900017b8:	693a      	ldr	r2, [r7, #16]
900017ba:	8852      	ldrh	r2, [r2, #2]
900017bc:	3a01      	subs	r2, #1
900017be:	0212      	lsls	r2, r2, #8
900017c0:	4611      	mov	r1, r2
900017c2:	4a23      	ldr	r2, [pc, #140]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
900017c4:	430b      	orrs	r3, r1
900017c6:	61d3      	str	r3, [r2, #28]
                break;
900017c8:	e013      	b.n	900017f2 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x212>
            case Bitmap::CLUT_FORMAT_L8_RGB888:
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900017ca:	4b21      	ldr	r3, [pc, #132]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
900017cc:	69da      	ldr	r2, [r3, #28]
900017ce:	4b24      	ldr	r3, [pc, #144]	; (90001860 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x280>)
900017d0:	4013      	ands	r3, r2
900017d2:	693a      	ldr	r2, [r7, #16]
900017d4:	8852      	ldrh	r2, [r2, #2]
900017d6:	3a01      	subs	r2, #1
900017d8:	0212      	lsls	r2, r2, #8
900017da:	4313      	orrs	r3, r2
900017dc:	4a1c      	ldr	r2, [pc, #112]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
900017de:	f043 0310 	orr.w	r3, r3, #16
900017e2:	61d3      	str	r3, [r2, #28]
                break;
900017e4:	e005      	b.n	900017f2 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x212>

            case Bitmap::CLUT_FORMAT_L8_RGB565:
            default:
                assert(0 && "Unsupported format");
900017e6:	4b1f      	ldr	r3, [pc, #124]	; (90001864 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x284>)
900017e8:	4a1f      	ldr	r2, [pc, #124]	; (90001868 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>)
900017ea:	21fc      	movs	r1, #252	; 0xfc
900017ec:	481f      	ldr	r0, [pc, #124]	; (9000186c <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
900017ee:	f01d fd59 	bl	9001f2a4 <__assert_func>
                break;
            }

            /* Enable the CLUT loading for the foreground */
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900017f2:	4b17      	ldr	r3, [pc, #92]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
900017f4:	69db      	ldr	r3, [r3, #28]
900017f6:	4a16      	ldr	r2, [pc, #88]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
900017f8:	f043 0320 	orr.w	r3, r3, #32
900017fc:	61d3      	str	r3, [r2, #28]

            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900017fe:	4b14      	ldr	r3, [pc, #80]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001800:	69db      	ldr	r3, [r3, #28]
90001802:	f003 0320 	and.w	r3, r3, #32
90001806:	2b00      	cmp	r3, #0
90001808:	bf14      	ite	ne
9000180a:	2301      	movne	r3, #1
9000180c:	2300      	moveq	r3, #0
9000180e:	b2db      	uxtb	r3, r3
90001810:	2b00      	cmp	r3, #0
90001812:	d001      	beq.n	90001818 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x238>
            {
                __NOP();
90001814:	bf00      	nop
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001816:	e7f2      	b.n	900017fe <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x21e>
            }
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90001818:	4b0d      	ldr	r3, [pc, #52]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
9000181a:	2210      	movs	r2, #16
9000181c:	609a      	str	r2, [r3, #8]
        }

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
9000181e:	4b0c      	ldr	r3, [pc, #48]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001820:	4a0d      	ldr	r2, [pc, #52]	; (90001858 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x278>)
90001822:	601a      	str	r2, [r3, #0]
        break;
90001824:	e065      	b.n	900018f2 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x312>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001826:	683b      	ldr	r3, [r7, #0]
90001828:	7f1b      	ldrb	r3, [r3, #28]
9000182a:	061b      	lsls	r3, r3, #24
9000182c:	461a      	mov	r2, r3
9000182e:	69fb      	ldr	r3, [r7, #28]
90001830:	4313      	orrs	r3, r2
90001832:	4a07      	ldr	r2, [pc, #28]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001834:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001838:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000183a:	4a05      	ldr	r2, [pc, #20]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
9000183c:	69bb      	ldr	r3, [r7, #24]
9000183e:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001840:	683b      	ldr	r3, [r7, #0]
90001842:	68da      	ldr	r2, [r3, #12]
90001844:	4b02      	ldr	r3, [pc, #8]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
90001846:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001848:	4b01      	ldr	r3, [pc, #4]	; (90001850 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
9000184a:	4a03      	ldr	r2, [pc, #12]	; (90001858 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x278>)
9000184c:	601a      	str	r2, [r3, #0]
        break;
9000184e:	e050      	b.n	900018f2 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x312>
90001850:	52001000 	.word	0x52001000
90001854:	0002000a 	.word	0x0002000a
90001858:	00020201 	.word	0x00020201
9000185c:	00020009 	.word	0x00020009
90001860:	ffff00ef 	.word	0xffff00ef
90001864:	9002088c 	.word	0x9002088c
90001868:	900208a8 	.word	0x900208a8
9000186c:	900207dc 	.word	0x900207dc
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001870:	683b      	ldr	r3, [r7, #0]
90001872:	7f1b      	ldrb	r3, [r3, #28]
90001874:	061b      	lsls	r3, r3, #24
90001876:	461a      	mov	r2, r3
90001878:	69fb      	ldr	r3, [r7, #28]
9000187a:	4313      	orrs	r3, r2
9000187c:	4a1f      	ldr	r2, [pc, #124]	; (900018fc <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
9000187e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001882:	61d3      	str	r3, [r2, #28]

        if (blitOp.srcFormat == Bitmap::L8)
90001884:	683b      	ldr	r3, [r7, #0]
90001886:	7f5b      	ldrb	r3, [r3, #29]
90001888:	2b0b      	cmp	r3, #11
9000188a:	d12d      	bne.n	900018e8 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x308>
        {
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
9000188c:	683b      	ldr	r3, [r7, #0]
9000188e:	689b      	ldr	r3, [r3, #8]
90001890:	60fb      	str	r3, [r7, #12]

            /* Write foreground CLUT memory address */
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001892:	68fb      	ldr	r3, [r7, #12]
90001894:	1d1a      	adds	r2, r3, #4
90001896:	4b19      	ldr	r3, [pc, #100]	; (900018fc <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
90001898:	62da      	str	r2, [r3, #44]	; 0x2c

            /* Write foreground CLUT size and CLUT color mode */
            MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
9000189a:	4b18      	ldr	r3, [pc, #96]	; (900018fc <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
9000189c:	69da      	ldr	r2, [r3, #28]
9000189e:	4b18      	ldr	r3, [pc, #96]	; (90001900 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x320>)
900018a0:	4013      	ands	r3, r2
900018a2:	68fa      	ldr	r2, [r7, #12]
900018a4:	8852      	ldrh	r2, [r2, #2]
900018a6:	3a01      	subs	r2, #1
900018a8:	0212      	lsls	r2, r2, #8
900018aa:	4313      	orrs	r3, r2
900018ac:	4a13      	ldr	r2, [pc, #76]	; (900018fc <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
900018ae:	f043 0310 	orr.w	r3, r3, #16
900018b2:	61d3      	str	r3, [r2, #28]

            /* Enable the CLUT loading for the foreground */
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900018b4:	4b11      	ldr	r3, [pc, #68]	; (900018fc <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
900018b6:	69db      	ldr	r3, [r3, #28]
900018b8:	4a10      	ldr	r2, [pc, #64]	; (900018fc <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
900018ba:	f043 0320 	orr.w	r3, r3, #32
900018be:	61d3      	str	r3, [r2, #28]

            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900018c0:	4b0e      	ldr	r3, [pc, #56]	; (900018fc <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
900018c2:	69db      	ldr	r3, [r3, #28]
900018c4:	f003 0320 	and.w	r3, r3, #32
900018c8:	2b00      	cmp	r3, #0
900018ca:	bf14      	ite	ne
900018cc:	2301      	movne	r3, #1
900018ce:	2300      	moveq	r3, #0
900018d0:	b2db      	uxtb	r3, r3
900018d2:	2b00      	cmp	r3, #0
900018d4:	d001      	beq.n	900018da <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2fa>
            {
                __NOP();
900018d6:	bf00      	nop
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900018d8:	e7f2      	b.n	900018c0 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2e0>
            }
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
900018da:	4b08      	ldr	r3, [pc, #32]	; (900018fc <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
900018dc:	2210      	movs	r2, #16
900018de:	609a      	str	r2, [r3, #8]
            /* Start DMA2D */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900018e0:	4b06      	ldr	r3, [pc, #24]	; (900018fc <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
900018e2:	4a08      	ldr	r2, [pc, #32]	; (90001904 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x324>)
900018e4:	601a      	str	r2, [r3, #0]
        else
        {
            /* Start DMA2D */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
        }
        break;
900018e6:	e003      	b.n	900018f0 <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x310>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
900018e8:	4b04      	ldr	r3, [pc, #16]	; (900018fc <_ZN10STM32H7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
900018ea:	f240 2201 	movw	r2, #513	; 0x201
900018ee:	601a      	str	r2, [r3, #0]
        break;
900018f0:	bf00      	nop
    }
}
900018f2:	bf00      	nop
900018f4:	3724      	adds	r7, #36	; 0x24
900018f6:	46bd      	mov	sp, r7
900018f8:	bd90      	pop	{r4, r7, pc}
900018fa:	bf00      	nop
900018fc:	52001000 	.word	0x52001000
90001900:	ffff00ef 	.word	0xffff00ef
90001904:	00010201 	.word	0x00010201

90001908 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32H7DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32H7DMA::setupDataFill(const BlitOp& blitOp)
{
90001908:	b590      	push	{r4, r7, lr}
9000190a:	b085      	sub	sp, #20
9000190c:	af00      	add	r7, sp, #0
9000190e:	6078      	str	r0, [r7, #4]
90001910:	6039      	str	r1, [r7, #0]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001912:	683b      	ldr	r3, [r7, #0]
90001914:	7f9b      	ldrb	r3, [r3, #30]
90001916:	4619      	mov	r1, r3
90001918:	6878      	ldr	r0, [r7, #4]
9000191a:	f7ff fe17 	bl	9000154c <_ZN10STM32H7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
9000191e:	60f8      	str	r0, [r7, #12]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001920:	4a53      	ldr	r2, [pc, #332]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
90001922:	68fb      	ldr	r3, [r7, #12]
90001924:	6353      	str	r3, [r2, #52]	; 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001926:	683b      	ldr	r3, [r7, #0]
90001928:	8a5b      	ldrh	r3, [r3, #18]
9000192a:	461a      	mov	r2, r3
9000192c:	683b      	ldr	r3, [r7, #0]
9000192e:	8a1b      	ldrh	r3, [r3, #16]
90001930:	041b      	lsls	r3, r3, #16
90001932:	431a      	orrs	r2, r3
90001934:	4b4e      	ldr	r3, [pc, #312]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
90001936:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001938:	683b      	ldr	r3, [r7, #0]
9000193a:	68da      	ldr	r2, [r3, #12]
9000193c:	4b4c      	ldr	r3, [pc, #304]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
9000193e:	63da      	str	r2, [r3, #60]	; 0x3c

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001940:	683b      	ldr	r3, [r7, #0]
90001942:	8adb      	ldrh	r3, [r3, #22]
90001944:	461a      	mov	r2, r3
90001946:	683b      	ldr	r3, [r7, #0]
90001948:	8a1b      	ldrh	r3, [r3, #16]
9000194a:	1ad2      	subs	r2, r2, r3
9000194c:	4b48      	ldr	r3, [pc, #288]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
9000194e:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90001950:	683b      	ldr	r3, [r7, #0]
90001952:	681b      	ldr	r3, [r3, #0]
90001954:	2b08      	cmp	r3, #8
90001956:	d14c      	bne.n	900019f2 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0xea>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001958:	683b      	ldr	r3, [r7, #0]
9000195a:	8adb      	ldrh	r3, [r3, #22]
9000195c:	461a      	mov	r2, r3
9000195e:	683b      	ldr	r3, [r7, #0]
90001960:	8a1b      	ldrh	r3, [r3, #16]
90001962:	1ad2      	subs	r2, r2, r3
90001964:	4b42      	ldr	r3, [pc, #264]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
90001966:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001968:	683b      	ldr	r3, [r7, #0]
9000196a:	8adb      	ldrh	r3, [r3, #22]
9000196c:	461a      	mov	r2, r3
9000196e:	683b      	ldr	r3, [r7, #0]
90001970:	8a1b      	ldrh	r3, [r3, #16]
90001972:	1ad2      	subs	r2, r2, r3
90001974:	4b3e      	ldr	r3, [pc, #248]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
90001976:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001978:	4a3d      	ldr	r2, [pc, #244]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
9000197a:	68fb      	ldr	r3, [r7, #12]
9000197c:	6253      	str	r3, [r2, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
9000197e:	683b      	ldr	r3, [r7, #0]
90001980:	7f1b      	ldrb	r3, [r3, #28]
90001982:	061b      	lsls	r3, r3, #24
90001984:	4619      	mov	r1, r3
90001986:	4a3a      	ldr	r2, [pc, #232]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
90001988:	4b3a      	ldr	r3, [pc, #232]	; (90001a74 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x16c>)
9000198a:	430b      	orrs	r3, r1
9000198c:	61d3      	str	r3, [r2, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3)) & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
9000198e:	683b      	ldr	r3, [r7, #0]
90001990:	7f1b      	ldrb	r3, [r3, #28]
90001992:	061b      	lsls	r3, r3, #24
90001994:	461c      	mov	r4, r3
90001996:	683b      	ldr	r3, [r7, #0]
90001998:	3318      	adds	r3, #24
9000199a:	4618      	mov	r0, r3
9000199c:	f7ff fc50 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
900019a0:	4603      	mov	r3, r0
900019a2:	021b      	lsls	r3, r3, #8
900019a4:	f403 0378 	and.w	r3, r3, #16252928	; 0xf80000
900019a8:	431c      	orrs	r4, r3
900019aa:	683b      	ldr	r3, [r7, #0]
900019ac:	3318      	adds	r3, #24
900019ae:	4618      	mov	r0, r3
900019b0:	f7ff fc46 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
900019b4:	4603      	mov	r3, r0
900019b6:	015b      	lsls	r3, r3, #5
900019b8:	f403 437c 	and.w	r3, r3, #64512	; 0xfc00
900019bc:	431c      	orrs	r4, r3
900019be:	683b      	ldr	r3, [r7, #0]
900019c0:	3318      	adds	r3, #24
900019c2:	4618      	mov	r0, r3
900019c4:	f7ff fc3c 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
900019c8:	4603      	mov	r3, r0
900019ca:	00db      	lsls	r3, r3, #3
900019cc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900019d0:	4323      	orrs	r3, r4
900019d2:	4a27      	ldr	r2, [pc, #156]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
900019d4:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
900019d8:	6213      	str	r3, [r2, #32]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900019da:	683b      	ldr	r3, [r7, #0]
900019dc:	68da      	ldr	r2, [r3, #12]
900019de:	4b24      	ldr	r3, [pc, #144]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
900019e0:	615a      	str	r2, [r3, #20]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900019e2:	683b      	ldr	r3, [r7, #0]
900019e4:	68da      	ldr	r2, [r3, #12]
900019e6:	4b22      	ldr	r3, [pc, #136]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
900019e8:	60da      	str	r2, [r3, #12]

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
900019ea:	4b21      	ldr	r3, [pc, #132]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
900019ec:	4a22      	ldr	r2, [pc, #136]	; (90001a78 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x170>)
900019ee:	601a      	str	r2, [r3, #0]
        }

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
    }
}
900019f0:	e039      	b.n	90001a66 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x15e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900019f2:	4a1f      	ldr	r2, [pc, #124]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
900019f4:	68fb      	ldr	r3, [r7, #12]
900019f6:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->FGOR, 0);
900019f8:	4b1d      	ldr	r3, [pc, #116]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
900019fa:	2200      	movs	r2, #0
900019fc:	611a      	str	r2, [r3, #16]
        if (blitOp.dstFormat == Bitmap::RGB565)
900019fe:	683b      	ldr	r3, [r7, #0]
90001a00:	7f9b      	ldrb	r3, [r3, #30]
90001a02:	2b00      	cmp	r3, #0
90001a04:	d108      	bne.n	90001a18 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x110>
            WRITE_REG(DMA2D->OCOLR, blitOp.color);
90001a06:	683b      	ldr	r3, [r7, #0]
90001a08:	3318      	adds	r3, #24
90001a0a:	4c19      	ldr	r4, [pc, #100]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
90001a0c:	4618      	mov	r0, r3
90001a0e:	f7ff fc17 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
90001a12:	4603      	mov	r3, r0
90001a14:	63a3      	str	r3, [r4, #56]	; 0x38
90001a16:	e023      	b.n	90001a60 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x158>
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
90001a18:	683b      	ldr	r3, [r7, #0]
90001a1a:	7f1b      	ldrb	r3, [r3, #28]
90001a1c:	061b      	lsls	r3, r3, #24
90001a1e:	461c      	mov	r4, r3
90001a20:	683b      	ldr	r3, [r7, #0]
90001a22:	3318      	adds	r3, #24
90001a24:	4618      	mov	r0, r3
90001a26:	f7ff fc0b 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
90001a2a:	4603      	mov	r3, r0
90001a2c:	021b      	lsls	r3, r3, #8
90001a2e:	f403 0378 	and.w	r3, r3, #16252928	; 0xf80000
90001a32:	431c      	orrs	r4, r3
90001a34:	683b      	ldr	r3, [r7, #0]
90001a36:	3318      	adds	r3, #24
90001a38:	4618      	mov	r0, r3
90001a3a:	f7ff fc01 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
90001a3e:	4603      	mov	r3, r0
90001a40:	015b      	lsls	r3, r3, #5
90001a42:	f403 437c 	and.w	r3, r3, #64512	; 0xfc00
90001a46:	431c      	orrs	r4, r3
90001a48:	683b      	ldr	r3, [r7, #0]
90001a4a:	3318      	adds	r3, #24
90001a4c:	4618      	mov	r0, r3
90001a4e:	f7ff fbf7 	bl	90001240 <_ZNK8touchgfx9colortypecvmEv>
90001a52:	4603      	mov	r3, r0
90001a54:	00db      	lsls	r3, r3, #3
90001a56:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90001a5a:	4a05      	ldr	r2, [pc, #20]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
90001a5c:	4323      	orrs	r3, r4
90001a5e:	6393      	str	r3, [r2, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001a60:	4b03      	ldr	r3, [pc, #12]	; (90001a70 <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
90001a62:	4a06      	ldr	r2, [pc, #24]	; (90001a7c <_ZN10STM32H7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x174>)
90001a64:	601a      	str	r2, [r3, #0]
}
90001a66:	bf00      	nop
90001a68:	3714      	adds	r7, #20
90001a6a:	46bd      	mov	sp, r7
90001a6c:	bd90      	pop	{r4, r7, pc}
90001a6e:	bf00      	nop
90001a70:	52001000 	.word	0x52001000
90001a74:	00010009 	.word	0x00010009
90001a78:	00020201 	.word	0x00020201
90001a7c:	00030201 	.word	0x00030201

90001a80 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
90001a80:	b580      	push	{r7, lr}
90001a82:	b082      	sub	sp, #8
90001a84:	af00      	add	r7, sp, #0
90001a86:	6078      	str	r0, [r7, #4]
90001a88:	4a05      	ldr	r2, [pc, #20]	; (90001aa0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
90001a8a:	687b      	ldr	r3, [r7, #4]
90001a8c:	601a      	str	r2, [r3, #0]
90001a8e:	687b      	ldr	r3, [r7, #4]
90001a90:	4618      	mov	r0, r3
90001a92:	f7ff fbe1 	bl	90001258 <_ZN8touchgfx9DMA_QueueD1Ev>
90001a96:	687b      	ldr	r3, [r7, #4]
90001a98:	4618      	mov	r0, r3
90001a9a:	3708      	adds	r7, #8
90001a9c:	46bd      	mov	sp, r7
90001a9e:	bd80      	pop	{r7, pc}
90001aa0:	900223a4 	.word	0x900223a4

90001aa4 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90001aa4:	b580      	push	{r7, lr}
90001aa6:	b082      	sub	sp, #8
90001aa8:	af00      	add	r7, sp, #0
90001aaa:	6078      	str	r0, [r7, #4]
90001aac:	6878      	ldr	r0, [r7, #4]
90001aae:	f7ff ffe7 	bl	90001a80 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
90001ab2:	2114      	movs	r1, #20
90001ab4:	6878      	ldr	r0, [r7, #4]
90001ab6:	f01d fbc6 	bl	9001f246 <_ZdlPvj>
90001aba:	687b      	ldr	r3, [r7, #4]
90001abc:	4618      	mov	r0, r3
90001abe:	3708      	adds	r7, #8
90001ac0:	46bd      	mov	sp, r7
90001ac2:	bd80      	pop	{r7, pc}

90001ac4 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
90001ac4:	b480      	push	{r7}
90001ac6:	b083      	sub	sp, #12
90001ac8:	af00      	add	r7, sp, #0
90001aca:	6078      	str	r0, [r7, #4]
    {
        x = 0;
90001acc:	687b      	ldr	r3, [r7, #4]
90001ace:	2200      	movs	r2, #0
90001ad0:	801a      	strh	r2, [r3, #0]
        y = 0;
90001ad2:	687b      	ldr	r3, [r7, #4]
90001ad4:	2200      	movs	r2, #0
90001ad6:	805a      	strh	r2, [r3, #2]
        width = 0;
90001ad8:	687b      	ldr	r3, [r7, #4]
90001ada:	2200      	movs	r2, #0
90001adc:	809a      	strh	r2, [r3, #4]
        height = 0;
90001ade:	687b      	ldr	r3, [r7, #4]
90001ae0:	2200      	movs	r2, #0
90001ae2:	80da      	strh	r2, [r3, #6]
    }
90001ae4:	687b      	ldr	r3, [r7, #4]
90001ae6:	4618      	mov	r0, r3
90001ae8:	370c      	adds	r7, #12
90001aea:	46bd      	mov	sp, r7
90001aec:	f85d 7b04 	ldr.w	r7, [sp], #4
90001af0:	4770      	bx	lr
	...

90001af4 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
90001af4:	b480      	push	{r7}
90001af6:	b083      	sub	sp, #12
90001af8:	af00      	add	r7, sp, #0
90001afa:	6078      	str	r0, [r7, #4]
    {
        texts = t;
90001afc:	4a04      	ldr	r2, [pc, #16]	; (90001b10 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
90001afe:	687b      	ldr	r3, [r7, #4]
90001b00:	6013      	str	r3, [r2, #0]
    }
90001b02:	bf00      	nop
90001b04:	370c      	adds	r7, #12
90001b06:	46bd      	mov	sp, r7
90001b08:	f85d 7b04 	ldr.w	r7, [sp], #4
90001b0c:	4770      	bx	lr
90001b0e:	bf00      	nop
90001b10:	24012b3c 	.word	0x24012b3c

90001b14 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
90001b14:	b480      	push	{r7}
90001b16:	b083      	sub	sp, #12
90001b18:	af00      	add	r7, sp, #0
90001b1a:	6078      	str	r0, [r7, #4]
    {
90001b1c:	4a04      	ldr	r2, [pc, #16]	; (90001b30 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
90001b1e:	687b      	ldr	r3, [r7, #4]
90001b20:	601a      	str	r2, [r3, #0]
    }
90001b22:	687b      	ldr	r3, [r7, #4]
90001b24:	4618      	mov	r0, r3
90001b26:	370c      	adds	r7, #12
90001b28:	46bd      	mov	sp, r7
90001b2a:	f85d 7b04 	ldr.w	r7, [sp], #4
90001b2e:	4770      	bx	lr
90001b30:	900214a4 	.word	0x900214a4

90001b34 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
90001b34:	b580      	push	{r7, lr}
90001b36:	b082      	sub	sp, #8
90001b38:	af00      	add	r7, sp, #0
90001b3a:	6078      	str	r0, [r7, #4]
    }
90001b3c:	6878      	ldr	r0, [r7, #4]
90001b3e:	f7ff ffe9 	bl	90001b14 <_ZN8touchgfx12FontProviderD1Ev>
90001b42:	2104      	movs	r1, #4
90001b44:	6878      	ldr	r0, [r7, #4]
90001b46:	f01d fb7e 	bl	9001f246 <_ZdlPvj>
90001b4a:	687b      	ldr	r3, [r7, #4]
90001b4c:	4618      	mov	r0, r3
90001b4e:	3708      	adds	r7, #8
90001b50:	46bd      	mov	sp, r7
90001b52:	bd80      	pop	{r7, pc}

90001b54 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
90001b54:	b480      	push	{r7}
90001b56:	b085      	sub	sp, #20
90001b58:	af00      	add	r7, sp, #0
90001b5a:	60f8      	str	r0, [r7, #12]
90001b5c:	60b9      	str	r1, [r7, #8]
90001b5e:	607a      	str	r2, [r7, #4]
90001b60:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
90001b62:	4a0b      	ldr	r2, [pc, #44]	; (90001b90 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
90001b64:	68fb      	ldr	r3, [r7, #12]
90001b66:	601a      	str	r2, [r3, #0]
90001b68:	68fb      	ldr	r3, [r7, #12]
90001b6a:	68ba      	ldr	r2, [r7, #8]
90001b6c:	605a      	str	r2, [r3, #4]
90001b6e:	68fb      	ldr	r3, [r7, #12]
90001b70:	687a      	ldr	r2, [r7, #4]
90001b72:	609a      	str	r2, [r3, #8]
90001b74:	68fb      	ldr	r3, [r7, #12]
90001b76:	683a      	ldr	r2, [r7, #0]
90001b78:	60da      	str	r2, [r3, #12]
90001b7a:	68fb      	ldr	r3, [r7, #12]
90001b7c:	69ba      	ldr	r2, [r7, #24]
90001b7e:	611a      	str	r2, [r3, #16]
    {
    }
90001b80:	68fb      	ldr	r3, [r7, #12]
90001b82:	4618      	mov	r0, r3
90001b84:	3714      	adds	r7, #20
90001b86:	46bd      	mov	sp, r7
90001b88:	f85d 7b04 	ldr.w	r7, [sp], #4
90001b8c:	4770      	bx	lr
90001b8e:	bf00      	nop
90001b90:	90021494 	.word	0x90021494

90001b94 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
90001b94:	b480      	push	{r7}
90001b96:	b083      	sub	sp, #12
90001b98:	af00      	add	r7, sp, #0
90001b9a:	6078      	str	r0, [r7, #4]
    {
90001b9c:	4a04      	ldr	r2, [pc, #16]	; (90001bb0 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
90001b9e:	687b      	ldr	r3, [r7, #4]
90001ba0:	601a      	str	r2, [r3, #0]
    }
90001ba2:	687b      	ldr	r3, [r7, #4]
90001ba4:	4618      	mov	r0, r3
90001ba6:	370c      	adds	r7, #12
90001ba8:	46bd      	mov	sp, r7
90001baa:	f85d 7b04 	ldr.w	r7, [sp], #4
90001bae:	4770      	bx	lr
90001bb0:	90021494 	.word	0x90021494

90001bb4 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
90001bb4:	b580      	push	{r7, lr}
90001bb6:	b082      	sub	sp, #8
90001bb8:	af00      	add	r7, sp, #0
90001bba:	6078      	str	r0, [r7, #4]
    }
90001bbc:	6878      	ldr	r0, [r7, #4]
90001bbe:	f7ff ffe9 	bl	90001b94 <_ZN8touchgfx7MVPHeapD1Ev>
90001bc2:	2114      	movs	r1, #20
90001bc4:	6878      	ldr	r0, [r7, #4]
90001bc6:	f01d fb3e 	bl	9001f246 <_ZdlPvj>
90001bca:	687b      	ldr	r3, [r7, #4]
90001bcc:	4618      	mov	r0, r3
90001bce:	3708      	adds	r7, #8
90001bd0:	46bd      	mov	sp, r7
90001bd2:	bd80      	pop	{r7, pc}

90001bd4 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
90001bd4:	b480      	push	{r7}
90001bd6:	b083      	sub	sp, #12
90001bd8:	af00      	add	r7, sp, #0
90001bda:	6078      	str	r0, [r7, #4]
90001bdc:	6039      	str	r1, [r7, #0]
    {
    }
90001bde:	bf00      	nop
90001be0:	370c      	adds	r7, #12
90001be2:	46bd      	mov	sp, r7
90001be4:	f85d 7b04 	ldr.w	r7, [sp], #4
90001be8:	4770      	bx	lr

90001bea <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
90001bea:	b480      	push	{r7}
90001bec:	b083      	sub	sp, #12
90001bee:	af00      	add	r7, sp, #0
90001bf0:	6078      	str	r0, [r7, #4]
90001bf2:	6039      	str	r1, [r7, #0]
    {
    }
90001bf4:	bf00      	nop
90001bf6:	370c      	adds	r7, #12
90001bf8:	46bd      	mov	sp, r7
90001bfa:	f85d 7b04 	ldr.w	r7, [sp], #4
90001bfe:	4770      	bx	lr

90001c00 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
90001c00:	b480      	push	{r7}
90001c02:	b083      	sub	sp, #12
90001c04:	af00      	add	r7, sp, #0
90001c06:	6078      	str	r0, [r7, #4]
90001c08:	6039      	str	r1, [r7, #0]
    {
    }
90001c0a:	bf00      	nop
90001c0c:	370c      	adds	r7, #12
90001c0e:	46bd      	mov	sp, r7
90001c10:	f85d 7b04 	ldr.w	r7, [sp], #4
90001c14:	4770      	bx	lr

90001c16 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
90001c16:	b480      	push	{r7}
90001c18:	b083      	sub	sp, #12
90001c1a:	af00      	add	r7, sp, #0
90001c1c:	6078      	str	r0, [r7, #4]
90001c1e:	460b      	mov	r3, r1
90001c20:	70fb      	strb	r3, [r7, #3]
    {
    }
90001c22:	bf00      	nop
90001c24:	370c      	adds	r7, #12
90001c26:	46bd      	mov	sp, r7
90001c28:	f85d 7b04 	ldr.w	r7, [sp], #4
90001c2c:	4770      	bx	lr

90001c2e <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
90001c2e:	b480      	push	{r7}
90001c30:	b083      	sub	sp, #12
90001c32:	af00      	add	r7, sp, #0
90001c34:	6078      	str	r0, [r7, #4]
    {
    }
90001c36:	bf00      	nop
90001c38:	370c      	adds	r7, #12
90001c3a:	46bd      	mov	sp, r7
90001c3c:	f85d 7b04 	ldr.w	r7, [sp], #4
90001c40:	4770      	bx	lr

90001c42 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
90001c42:	b480      	push	{r7}
90001c44:	b083      	sub	sp, #12
90001c46:	af00      	add	r7, sp, #0
90001c48:	6078      	str	r0, [r7, #4]
    {
    }
90001c4a:	bf00      	nop
90001c4c:	370c      	adds	r7, #12
90001c4e:	46bd      	mov	sp, r7
90001c50:	f85d 7b04 	ldr.w	r7, [sp], #4
90001c54:	4770      	bx	lr
	...

90001c58 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
90001c58:	b480      	push	{r7}
90001c5a:	b083      	sub	sp, #12
90001c5c:	af00      	add	r7, sp, #0
90001c5e:	6078      	str	r0, [r7, #4]
    {
90001c60:	4a04      	ldr	r2, [pc, #16]	; (90001c74 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
90001c62:	687b      	ldr	r3, [r7, #4]
90001c64:	601a      	str	r2, [r3, #0]
    }
90001c66:	687b      	ldr	r3, [r7, #4]
90001c68:	4618      	mov	r0, r3
90001c6a:	370c      	adds	r7, #12
90001c6c:	46bd      	mov	sp, r7
90001c6e:	f85d 7b04 	ldr.w	r7, [sp], #4
90001c72:	4770      	bx	lr
90001c74:	9002146c 	.word	0x9002146c

90001c78 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
90001c78:	b580      	push	{r7, lr}
90001c7a:	b082      	sub	sp, #8
90001c7c:	af00      	add	r7, sp, #0
90001c7e:	6078      	str	r0, [r7, #4]
    }
90001c80:	6878      	ldr	r0, [r7, #4]
90001c82:	f7ff ffe9 	bl	90001c58 <_ZN8touchgfx15UIEventListenerD1Ev>
90001c86:	2104      	movs	r1, #4
90001c88:	6878      	ldr	r0, [r7, #4]
90001c8a:	f01d fadc 	bl	9001f246 <_ZdlPvj>
90001c8e:	687b      	ldr	r3, [r7, #4]
90001c90:	4618      	mov	r0, r3
90001c92:	3708      	adds	r7, #8
90001c94:	46bd      	mov	sp, r7
90001c96:	bd80      	pop	{r7, pc}

90001c98 <_ZN8touchgfx3LCDD1Ev>:
 */
class LCD
{
public:
    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
90001c98:	b480      	push	{r7}
90001c9a:	b083      	sub	sp, #12
90001c9c:	af00      	add	r7, sp, #0
90001c9e:	6078      	str	r0, [r7, #4]
    {
90001ca0:	4a04      	ldr	r2, [pc, #16]	; (90001cb4 <_ZN8touchgfx3LCDD1Ev+0x1c>)
90001ca2:	687b      	ldr	r3, [r7, #4]
90001ca4:	601a      	str	r2, [r3, #0]
    }
90001ca6:	687b      	ldr	r3, [r7, #4]
90001ca8:	4618      	mov	r0, r3
90001caa:	370c      	adds	r7, #12
90001cac:	46bd      	mov	sp, r7
90001cae:	f85d 7b04 	ldr.w	r7, [sp], #4
90001cb2:	4770      	bx	lr
90001cb4:	900228c8 	.word	0x900228c8

90001cb8 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
90001cb8:	b580      	push	{r7, lr}
90001cba:	b082      	sub	sp, #8
90001cbc:	af00      	add	r7, sp, #0
90001cbe:	6078      	str	r0, [r7, #4]
    }
90001cc0:	6878      	ldr	r0, [r7, #4]
90001cc2:	f7ff ffe9 	bl	90001c98 <_ZN8touchgfx3LCDD1Ev>
90001cc6:	2108      	movs	r1, #8
90001cc8:	6878      	ldr	r0, [r7, #4]
90001cca:	f01d fabc 	bl	9001f246 <_ZdlPvj>
90001cce:	687b      	ldr	r3, [r7, #4]
90001cd0:	4618      	mov	r0, r3
90001cd2:	3708      	adds	r7, #8
90001cd4:	46bd      	mov	sp, r7
90001cd6:	bd80      	pop	{r7, pc}

90001cd8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
90001cd8:	b480      	push	{r7}
90001cda:	b083      	sub	sp, #12
90001cdc:	af00      	add	r7, sp, #0
90001cde:	6078      	str	r0, [r7, #4]
90001ce0:	460b      	mov	r3, r1
90001ce2:	70fb      	strb	r3, [r7, #3]
    {
    }
90001ce4:	bf00      	nop
90001ce6:	370c      	adds	r7, #12
90001ce8:	46bd      	mov	sp, r7
90001cea:	f85d 7b04 	ldr.w	r7, [sp], #4
90001cee:	4770      	bx	lr

90001cf0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
90001cf0:	b480      	push	{r7}
90001cf2:	b083      	sub	sp, #12
90001cf4:	af00      	add	r7, sp, #0
90001cf6:	6078      	str	r0, [r7, #4]
90001cf8:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
90001cfa:	687b      	ldr	r3, [r7, #4]
90001cfc:	683a      	ldr	r2, [r7, #0]
90001cfe:	f503 7396 	add.w	r3, r3, #300	; 0x12c
90001d02:	6810      	ldr	r0, [r2, #0]
90001d04:	6851      	ldr	r1, [r2, #4]
90001d06:	c303      	stmia	r3!, {r0, r1}
    };
90001d08:	bf00      	nop
90001d0a:	370c      	adds	r7, #12
90001d0c:	46bd      	mov	sp, r7
90001d0e:	f85d 7b04 	ldr.w	r7, [sp], #4
90001d12:	4770      	bx	lr

90001d14 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
90001d14:	b480      	push	{r7}
90001d16:	b083      	sub	sp, #12
90001d18:	af00      	add	r7, sp, #0
90001d1a:	6078      	str	r0, [r7, #4]
    {
90001d1c:	4a04      	ldr	r2, [pc, #16]	; (90001d30 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
90001d1e:	687b      	ldr	r3, [r7, #4]
90001d20:	601a      	str	r2, [r3, #0]
    }
90001d22:	687b      	ldr	r3, [r7, #4]
90001d24:	4618      	mov	r0, r3
90001d26:	370c      	adds	r7, #12
90001d28:	46bd      	mov	sp, r7
90001d2a:	f85d 7b04 	ldr.w	r7, [sp], #4
90001d2e:	4770      	bx	lr
90001d30:	90021454 	.word	0x90021454

90001d34 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
90001d34:	b580      	push	{r7, lr}
90001d36:	b082      	sub	sp, #8
90001d38:	af00      	add	r7, sp, #0
90001d3a:	6078      	str	r0, [r7, #4]
    }
90001d3c:	6878      	ldr	r0, [r7, #4]
90001d3e:	f7ff ffe9 	bl	90001d14 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
90001d42:	2104      	movs	r1, #4
90001d44:	6878      	ldr	r0, [r7, #4]
90001d46:	f01d fa7e 	bl	9001f246 <_ZdlPvj>
90001d4a:	687b      	ldr	r3, [r7, #4]
90001d4c:	4618      	mov	r0, r3
90001d4e:	3708      	adds	r7, #8
90001d50:	46bd      	mov	sp, r7
90001d52:	bd80      	pop	{r7, pc}

90001d54 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
90001d54:	b480      	push	{r7}
90001d56:	b083      	sub	sp, #12
90001d58:	af00      	add	r7, sp, #0
90001d5a:	6078      	str	r0, [r7, #4]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
90001d5c:	687b      	ldr	r3, [r7, #4]
90001d5e:	2200      	movs	r2, #0
90001d60:	801a      	strh	r2, [r3, #0]
90001d62:	687b      	ldr	r3, [r7, #4]
90001d64:	2200      	movs	r2, #0
90001d66:	805a      	strh	r2, [r3, #2]
90001d68:	687b      	ldr	r3, [r7, #4]
90001d6a:	2200      	movs	r2, #0
90001d6c:	809a      	strh	r2, [r3, #4]
90001d6e:	687b      	ldr	r3, [r7, #4]
90001d70:	2200      	movs	r2, #0
90001d72:	80da      	strh	r2, [r3, #6]
90001d74:	687b      	ldr	r3, [r7, #4]
90001d76:	2200      	movs	r2, #0
90001d78:	811a      	strh	r2, [r3, #8]
90001d7a:	687b      	ldr	r3, [r7, #4]
90001d7c:	2200      	movs	r2, #0
90001d7e:	815a      	strh	r2, [r3, #10]
90001d80:	687b      	ldr	r3, [r7, #4]
90001d82:	2200      	movs	r2, #0
90001d84:	819a      	strh	r2, [r3, #12]
90001d86:	687b      	ldr	r3, [r7, #4]
90001d88:	2200      	movs	r2, #0
90001d8a:	739a      	strb	r2, [r3, #14]
        {
        }
90001d8c:	687b      	ldr	r3, [r7, #4]
90001d8e:	4618      	mov	r0, r3
90001d90:	370c      	adds	r7, #12
90001d92:	46bd      	mov	sp, r7
90001d94:	f85d 7b04 	ldr.w	r7, [sp], #4
90001d98:	4770      	bx	lr

90001d9a <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
90001d9a:	b580      	push	{r7, lr}
90001d9c:	b082      	sub	sp, #8
90001d9e:	af00      	add	r7, sp, #0
90001da0:	6078      	str	r0, [r7, #4]
        : listener(0), dragThresholdValue(0)
90001da2:	687b      	ldr	r3, [r7, #4]
90001da4:	4618      	mov	r0, r3
90001da6:	f7ff ffd5 	bl	90001d54 <_ZN8touchgfx8Gestures9DragStateC1Ev>
90001daa:	687b      	ldr	r3, [r7, #4]
90001dac:	2200      	movs	r2, #0
90001dae:	611a      	str	r2, [r3, #16]
90001db0:	687b      	ldr	r3, [r7, #4]
90001db2:	2200      	movs	r2, #0
90001db4:	829a      	strh	r2, [r3, #20]
    {
    }
90001db6:	687b      	ldr	r3, [r7, #4]
90001db8:	4618      	mov	r0, r3
90001dba:	3708      	adds	r7, #8
90001dbc:	46bd      	mov	sp, r7
90001dbe:	bd80      	pop	{r7, pc}

90001dc0 <_ZN8touchgfx18MCUInstrumentationC1Ev>:
    MCUInstrumentation()
90001dc0:	b480      	push	{r7}
90001dc2:	b083      	sub	sp, #12
90001dc4:	af00      	add	r7, sp, #0
90001dc6:	6078      	str	r0, [r7, #4]
          cc_in(0)
90001dc8:	4a07      	ldr	r2, [pc, #28]	; (90001de8 <_ZN8touchgfx18MCUInstrumentationC1Ev+0x28>)
90001dca:	687b      	ldr	r3, [r7, #4]
90001dcc:	601a      	str	r2, [r3, #0]
90001dce:	687b      	ldr	r3, [r7, #4]
90001dd0:	2200      	movs	r2, #0
90001dd2:	605a      	str	r2, [r3, #4]
90001dd4:	687b      	ldr	r3, [r7, #4]
90001dd6:	2200      	movs	r2, #0
90001dd8:	609a      	str	r2, [r3, #8]
    }
90001dda:	687b      	ldr	r3, [r7, #4]
90001ddc:	4618      	mov	r0, r3
90001dde:	370c      	adds	r7, #12
90001de0:	46bd      	mov	sp, r7
90001de2:	f85d 7b04 	ldr.w	r7, [sp], #4
90001de6:	4770      	bx	lr
90001de8:	90021124 	.word	0x90021124

90001dec <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
90001dec:	b580      	push	{r7, lr}
90001dee:	b084      	sub	sp, #16
90001df0:	af00      	add	r7, sp, #0
90001df2:	60f8      	str	r0, [r7, #12]
90001df4:	60b9      	str	r1, [r7, #8]
90001df6:	607a      	str	r2, [r7, #4]
90001df8:	603b      	str	r3, [r7, #0]
          lastRenderVariant(HARDWARE)
90001dfa:	4a4a      	ldr	r2, [pc, #296]	; (90001f24 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x138>)
90001dfc:	68fb      	ldr	r3, [r7, #12]
90001dfe:	601a      	str	r2, [r3, #0]
90001e00:	68fb      	ldr	r3, [r7, #12]
90001e02:	68ba      	ldr	r2, [r7, #8]
90001e04:	605a      	str	r2, [r3, #4]
90001e06:	68fb      	ldr	r3, [r7, #12]
90001e08:	687a      	ldr	r2, [r7, #4]
90001e0a:	609a      	str	r2, [r3, #8]
90001e0c:	68fb      	ldr	r3, [r7, #12]
90001e0e:	683a      	ldr	r2, [r7, #0]
90001e10:	60da      	str	r2, [r3, #12]
90001e12:	68fb      	ldr	r3, [r7, #12]
90001e14:	2200      	movs	r2, #0
90001e16:	611a      	str	r2, [r3, #16]
90001e18:	68fb      	ldr	r3, [r7, #12]
90001e1a:	2200      	movs	r2, #0
90001e1c:	615a      	str	r2, [r3, #20]
90001e1e:	68fb      	ldr	r3, [r7, #12]
90001e20:	2200      	movs	r2, #0
90001e22:	619a      	str	r2, [r3, #24]
90001e24:	68fb      	ldr	r3, [r7, #12]
90001e26:	331c      	adds	r3, #28
90001e28:	4618      	mov	r0, r3
90001e2a:	f7ff ffb6 	bl	90001d9a <_ZN8touchgfx8GesturesC1Ev>
90001e2e:	68fb      	ldr	r3, [r7, #12]
90001e30:	2200      	movs	r2, #0
90001e32:	639a      	str	r2, [r3, #56]	; 0x38
90001e34:	68fb      	ldr	r3, [r7, #12]
90001e36:	2200      	movs	r2, #0
90001e38:	63da      	str	r2, [r3, #60]	; 0x3c
90001e3a:	68fb      	ldr	r3, [r7, #12]
90001e3c:	2200      	movs	r2, #0
90001e3e:	641a      	str	r2, [r3, #64]	; 0x40
90001e40:	68fb      	ldr	r3, [r7, #12]
90001e42:	2200      	movs	r2, #0
90001e44:	645a      	str	r2, [r3, #68]	; 0x44
90001e46:	68fb      	ldr	r3, [r7, #12]
90001e48:	2200      	movs	r2, #0
90001e4a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
90001e4e:	68fb      	ldr	r3, [r7, #12]
90001e50:	2201      	movs	r2, #1
90001e52:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
90001e56:	68fb      	ldr	r3, [r7, #12]
90001e58:	2200      	movs	r2, #0
90001e5a:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
90001e5e:	68fb      	ldr	r3, [r7, #12]
90001e60:	2200      	movs	r2, #0
90001e62:	64da      	str	r2, [r3, #76]	; 0x4c
90001e64:	68fb      	ldr	r3, [r7, #12]
90001e66:	3350      	adds	r3, #80	; 0x50
90001e68:	4618      	mov	r0, r3
90001e6a:	f7ff fe2b 	bl	90001ac4 <_ZN8touchgfx4RectC1Ev>
90001e6e:	68fb      	ldr	r3, [r7, #12]
90001e70:	2201      	movs	r2, #1
90001e72:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
90001e76:	68fb      	ldr	r3, [r7, #12]
90001e78:	2200      	movs	r2, #0
90001e7a:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
90001e7e:	68fb      	ldr	r3, [r7, #12]
90001e80:	2200      	movs	r2, #0
90001e82:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
90001e86:	68fb      	ldr	r3, [r7, #12]
90001e88:	2201      	movs	r2, #1
90001e8a:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
90001e8e:	68fb      	ldr	r3, [r7, #12]
90001e90:	2200      	movs	r2, #0
90001e92:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
90001e96:	68fb      	ldr	r3, [r7, #12]
90001e98:	2200      	movs	r2, #0
90001e9a:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
90001e9e:	68fb      	ldr	r3, [r7, #12]
90001ea0:	2200      	movs	r2, #0
90001ea2:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
90001ea6:	68fb      	ldr	r3, [r7, #12]
90001ea8:	2200      	movs	r2, #0
90001eaa:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
90001eae:	68fb      	ldr	r3, [r7, #12]
90001eb0:	2200      	movs	r2, #0
90001eb2:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
90001eb6:	68fb      	ldr	r3, [r7, #12]
90001eb8:	2200      	movs	r2, #0
90001eba:	671a      	str	r2, [r3, #112]	; 0x70
90001ebc:	68fb      	ldr	r3, [r7, #12]
90001ebe:	2200      	movs	r2, #0
90001ec0:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
90001ec4:	68fb      	ldr	r3, [r7, #12]
90001ec6:	2200      	movs	r2, #0
90001ec8:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
90001ecc:	68fb      	ldr	r3, [r7, #12]
90001ece:	2201      	movs	r2, #1
90001ed0:	f883 2077 	strb.w	r2, [r3, #119]	; 0x77
90001ed4:	68fb      	ldr	r3, [r7, #12]
90001ed6:	2201      	movs	r2, #1
90001ed8:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        instance = this;
90001edc:	4a12      	ldr	r2, [pc, #72]	; (90001f28 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x13c>)
90001ede:	68fb      	ldr	r3, [r7, #12]
90001ee0:	6013      	str	r3, [r2, #0]
        DISPLAY_WIDTH = width;
90001ee2:	4a12      	ldr	r2, [pc, #72]	; (90001f2c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x140>)
90001ee4:	8b3b      	ldrh	r3, [r7, #24]
90001ee6:	8013      	strh	r3, [r2, #0]
        DISPLAY_HEIGHT = height;
90001ee8:	4a11      	ldr	r2, [pc, #68]	; (90001f30 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x144>)
90001eea:	8bbb      	ldrh	r3, [r7, #28]
90001eec:	8013      	strh	r3, [r2, #0]
        DISPLAY_ROTATION = rotate0;
90001eee:	4b11      	ldr	r3, [pc, #68]	; (90001f34 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x148>)
90001ef0:	2200      	movs	r2, #0
90001ef2:	701a      	strb	r2, [r3, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
90001ef4:	4b0d      	ldr	r3, [pc, #52]	; (90001f2c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x140>)
90001ef6:	881a      	ldrh	r2, [r3, #0]
90001ef8:	4b0f      	ldr	r3, [pc, #60]	; (90001f38 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x14c>)
90001efa:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
90001efc:	4b0c      	ldr	r3, [pc, #48]	; (90001f30 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x144>)
90001efe:	881a      	ldrh	r2, [r3, #0]
90001f00:	4b0e      	ldr	r3, [pc, #56]	; (90001f3c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x150>)
90001f02:	801a      	strh	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90001f04:	8b3a      	ldrh	r2, [r7, #24]
90001f06:	8bbb      	ldrh	r3, [r7, #28]
90001f08:	429a      	cmp	r2, r3
90001f0a:	bf34      	ite	cc
90001f0c:	2301      	movcc	r3, #1
90001f0e:	2300      	movcs	r3, #0
90001f10:	b2db      	uxtb	r3, r3
90001f12:	461a      	mov	r2, r3
90001f14:	68fb      	ldr	r3, [r7, #12]
90001f16:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
90001f1a:	68fb      	ldr	r3, [r7, #12]
90001f1c:	4618      	mov	r0, r3
90001f1e:	3710      	adds	r7, #16
90001f20:	46bd      	mov	sp, r7
90001f22:	bd80      	pop	{r7, pc}
90001f24:	90021f08 	.word	0x90021f08
90001f28:	24012ae0 	.word	0x24012ae0
90001f2c:	24012ad4 	.word	0x24012ad4
90001f30:	24012ad6 	.word	0x24012ad6
90001f34:	24012ad8 	.word	0x24012ad8
90001f38:	24012ada 	.word	0x24012ada
90001f3c:	24012adc 	.word	0x24012adc

90001f40 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
90001f40:	b580      	push	{r7, lr}
90001f42:	b082      	sub	sp, #8
90001f44:	af00      	add	r7, sp, #0
90001f46:	6078      	str	r0, [r7, #4]
90001f48:	4a05      	ldr	r2, [pc, #20]	; (90001f60 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
90001f4a:	687b      	ldr	r3, [r7, #4]
90001f4c:	601a      	str	r2, [r3, #0]
90001f4e:	687b      	ldr	r3, [r7, #4]
90001f50:	4618      	mov	r0, r3
90001f52:	f7ff fe81 	bl	90001c58 <_ZN8touchgfx15UIEventListenerD1Ev>
90001f56:	687b      	ldr	r3, [r7, #4]
90001f58:	4618      	mov	r0, r3
90001f5a:	3708      	adds	r7, #8
90001f5c:	46bd      	mov	sp, r7
90001f5e:	bd80      	pop	{r7, pc}
90001f60:	900229a8 	.word	0x900229a8

90001f64 <_ZN8touchgfx11ApplicationD0Ev>:
90001f64:	b580      	push	{r7, lr}
90001f66:	b082      	sub	sp, #8
90001f68:	af00      	add	r7, sp, #0
90001f6a:	6078      	str	r0, [r7, #4]
90001f6c:	6878      	ldr	r0, [r7, #4]
90001f6e:	f7ff ffe7 	bl	90001f40 <_ZN8touchgfx11ApplicationD1Ev>
90001f72:	f44f 719c 	mov.w	r1, #312	; 0x138
90001f76:	6878      	ldr	r0, [r7, #4]
90001f78:	f01d f965 	bl	9001f246 <_ZdlPvj>
90001f7c:	687b      	ldr	r3, [r7, #4]
90001f7e:	4618      	mov	r0, r3
90001f80:	3708      	adds	r7, #8
90001f82:	46bd      	mov	sp, r7
90001f84:	bd80      	pop	{r7, pc}

90001f86 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
90001f86:	b580      	push	{r7, lr}
90001f88:	b082      	sub	sp, #8
90001f8a:	af00      	add	r7, sp, #0
90001f8c:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
90001f8e:	6878      	ldr	r0, [r7, #4]
90001f90:	f000 f804 	bl	90001f9c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
90001f94:	bf00      	nop
90001f96:	3708      	adds	r7, #8
90001f98:	46bd      	mov	sp, r7
90001f9a:	bd80      	pop	{r7, pc}

90001f9c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
90001f9c:	b580      	push	{r7, lr}
90001f9e:	b082      	sub	sp, #8
90001fa0:	af00      	add	r7, sp, #0
90001fa2:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90001fa4:	687b      	ldr	r3, [r7, #4]
90001fa6:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
90001faa:	2b00      	cmp	r3, #0
90001fac:	d00f      	beq.n	90001fce <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
90001fae:	687b      	ldr	r3, [r7, #4]
90001fb0:	f8d3 213c 	ldr.w	r2, [r3, #316]	; 0x13c
90001fb4:	687b      	ldr	r3, [r7, #4]
90001fb6:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
90001fba:	681b      	ldr	r3, [r3, #0]
90001fbc:	330c      	adds	r3, #12
90001fbe:	681b      	ldr	r3, [r3, #0]
90001fc0:	4610      	mov	r0, r2
90001fc2:	4798      	blx	r3
90001fc4:	4603      	mov	r3, r0
90001fc6:	2b00      	cmp	r3, #0
90001fc8:	d001      	beq.n	90001fce <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
90001fca:	2301      	movs	r3, #1
90001fcc:	e000      	b.n	90001fd0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
90001fce:	2300      	movs	r3, #0
90001fd0:	2b00      	cmp	r3, #0
90001fd2:	d00e      	beq.n	90001ff2 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
90001fd4:	687b      	ldr	r3, [r7, #4]
90001fd6:	f8d3 213c 	ldr.w	r2, [r3, #316]	; 0x13c
90001fda:	687b      	ldr	r3, [r7, #4]
90001fdc:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
90001fe0:	681b      	ldr	r3, [r3, #0]
90001fe2:	3308      	adds	r3, #8
90001fe4:	681b      	ldr	r3, [r3, #0]
90001fe6:	4610      	mov	r0, r2
90001fe8:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90001fea:	687b      	ldr	r3, [r7, #4]
90001fec:	2200      	movs	r2, #0
90001fee:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
        }
    }
90001ff2:	bf00      	nop
90001ff4:	3708      	adds	r7, #8
90001ff6:	46bd      	mov	sp, r7
90001ff8:	bd80      	pop	{r7, pc}
	...

90001ffc <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
90001ffc:	b580      	push	{r7, lr}
90001ffe:	b082      	sub	sp, #8
90002000:	af00      	add	r7, sp, #0
90002002:	6078      	str	r0, [r7, #4]
90002004:	4a05      	ldr	r2, [pc, #20]	; (9000201c <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
90002006:	687b      	ldr	r3, [r7, #4]
90002008:	601a      	str	r2, [r3, #0]
9000200a:	687b      	ldr	r3, [r7, #4]
9000200c:	4618      	mov	r0, r3
9000200e:	f7ff ff97 	bl	90001f40 <_ZN8touchgfx11ApplicationD1Ev>
90002012:	687b      	ldr	r3, [r7, #4]
90002014:	4618      	mov	r0, r3
90002016:	3708      	adds	r7, #8
90002018:	46bd      	mov	sp, r7
9000201a:	bd80      	pop	{r7, pc}
9000201c:	90021410 	.word	0x90021410

90002020 <_ZN8touchgfx14MVPApplicationD0Ev>:
90002020:	b580      	push	{r7, lr}
90002022:	b082      	sub	sp, #8
90002024:	af00      	add	r7, sp, #0
90002026:	6078      	str	r0, [r7, #4]
90002028:	6878      	ldr	r0, [r7, #4]
9000202a:	f7ff ffe7 	bl	90001ffc <_ZN8touchgfx14MVPApplicationD1Ev>
9000202e:	f44f 71a0 	mov.w	r1, #320	; 0x140
90002032:	6878      	ldr	r0, [r7, #4]
90002034:	f01d f907 	bl	9001f246 <_ZdlPvj>
90002038:	687b      	ldr	r3, [r7, #4]
9000203a:	4618      	mov	r0, r3
9000203c:	3708      	adds	r7, #8
9000203e:	46bd      	mov	sp, r7
90002040:	bd80      	pop	{r7, pc}
	...

90002044 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90002044:	b580      	push	{r7, lr}
90002046:	b082      	sub	sp, #8
90002048:	af00      	add	r7, sp, #0
9000204a:	6078      	str	r0, [r7, #4]
9000204c:	4a08      	ldr	r2, [pc, #32]	; (90002070 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
9000204e:	687b      	ldr	r3, [r7, #4]
90002050:	601a      	str	r2, [r3, #0]
90002052:	687b      	ldr	r3, [r7, #4]
90002054:	f503 73a0 	add.w	r3, r3, #320	; 0x140
90002058:	4618      	mov	r0, r3
9000205a:	f000 faff 	bl	9000265c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
9000205e:	687b      	ldr	r3, [r7, #4]
90002060:	4618      	mov	r0, r3
90002062:	f7ff ffcb 	bl	90001ffc <_ZN8touchgfx14MVPApplicationD1Ev>
90002066:	687b      	ldr	r3, [r7, #4]
90002068:	4618      	mov	r0, r3
9000206a:	3708      	adds	r7, #8
9000206c:	46bd      	mov	sp, r7
9000206e:	bd80      	pop	{r7, pc}
90002070:	900213b4 	.word	0x900213b4

90002074 <_ZN23FrontendApplicationBaseD0Ev>:
90002074:	b580      	push	{r7, lr}
90002076:	b082      	sub	sp, #8
90002078:	af00      	add	r7, sp, #0
9000207a:	6078      	str	r0, [r7, #4]
9000207c:	6878      	ldr	r0, [r7, #4]
9000207e:	f7ff ffe1 	bl	90002044 <_ZN23FrontendApplicationBaseD1Ev>
90002082:	f44f 71ac 	mov.w	r1, #344	; 0x158
90002086:	6878      	ldr	r0, [r7, #4]
90002088:	f01d f8dd 	bl	9001f246 <_ZdlPvj>
9000208c:	687b      	ldr	r3, [r7, #4]
9000208e:	4618      	mov	r0, r3
90002090:	3708      	adds	r7, #8
90002092:	46bd      	mov	sp, r7
90002094:	bd80      	pop	{r7, pc}
	...

90002098 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90002098:	b580      	push	{r7, lr}
9000209a:	b082      	sub	sp, #8
9000209c:	af00      	add	r7, sp, #0
9000209e:	6078      	str	r0, [r7, #4]
900020a0:	4a05      	ldr	r2, [pc, #20]	; (900020b8 <_ZN19FrontendApplicationD1Ev+0x20>)
900020a2:	687b      	ldr	r3, [r7, #4]
900020a4:	601a      	str	r2, [r3, #0]
900020a6:	687b      	ldr	r3, [r7, #4]
900020a8:	4618      	mov	r0, r3
900020aa:	f7ff ffcb 	bl	90002044 <_ZN23FrontendApplicationBaseD1Ev>
900020ae:	687b      	ldr	r3, [r7, #4]
900020b0:	4618      	mov	r0, r3
900020b2:	3708      	adds	r7, #8
900020b4:	46bd      	mov	sp, r7
900020b6:	bd80      	pop	{r7, pc}
900020b8:	90021370 	.word	0x90021370

900020bc <_ZN19FrontendApplicationD0Ev>:
900020bc:	b580      	push	{r7, lr}
900020be:	b082      	sub	sp, #8
900020c0:	af00      	add	r7, sp, #0
900020c2:	6078      	str	r0, [r7, #4]
900020c4:	6878      	ldr	r0, [r7, #4]
900020c6:	f7ff ffe7 	bl	90002098 <_ZN19FrontendApplicationD1Ev>
900020ca:	f44f 71ac 	mov.w	r1, #344	; 0x158
900020ce:	6878      	ldr	r0, [r7, #4]
900020d0:	f01d f8b9 	bl	9001f246 <_ZdlPvj>
900020d4:	687b      	ldr	r3, [r7, #4]
900020d6:	4618      	mov	r0, r3
900020d8:	3708      	adds	r7, #8
900020da:	46bd      	mov	sp, r7
900020dc:	bd80      	pop	{r7, pc}

900020de <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
900020de:	b580      	push	{r7, lr}
900020e0:	b082      	sub	sp, #8
900020e2:	af00      	add	r7, sp, #0
900020e4:	6078      	str	r0, [r7, #4]
    {
        model.tick();
900020e6:	687b      	ldr	r3, [r7, #4]
900020e8:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
900020ec:	4618      	mov	r0, r3
900020ee:	f003 fea3 	bl	90005e38 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
900020f2:	687b      	ldr	r3, [r7, #4]
900020f4:	4618      	mov	r0, r3
900020f6:	f00e f981 	bl	900103fc <_ZN8touchgfx11Application15handleTickEventEv>
    }
900020fa:	bf00      	nop
900020fc:	3708      	adds	r7, #8
900020fe:	46bd      	mov	sp, r7
90002100:	bd80      	pop	{r7, pc}

90002102 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
90002102:	b580      	push	{r7, lr}
90002104:	b082      	sub	sp, #8
90002106:	af00      	add	r7, sp, #0
90002108:	6078      	str	r0, [r7, #4]
9000210a:	6039      	str	r1, [r7, #0]
    {
        app.gotoMainScreenNoTransition();
9000210c:	683b      	ldr	r3, [r7, #0]
9000210e:	4618      	mov	r0, r3
90002110:	f001 fea8 	bl	90003e64 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
90002114:	bf00      	nop
90002116:	3708      	adds	r7, #8
90002118:	46bd      	mov	sp, r7
9000211a:	bd80      	pop	{r7, pc}

9000211c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
9000211c:	b580      	push	{r7, lr}
9000211e:	b086      	sub	sp, #24
90002120:	af02      	add	r7, sp, #8
90002122:	60f8      	str	r0, [r7, #12]
90002124:	60b9      	str	r1, [r7, #8]
90002126:	607a      	str	r2, [r7, #4]
90002128:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
9000212a:	68f8      	ldr	r0, [r7, #12]
9000212c:	69bb      	ldr	r3, [r7, #24]
9000212e:	9300      	str	r3, [sp, #0]
90002130:	683b      	ldr	r3, [r7, #0]
90002132:	687a      	ldr	r2, [r7, #4]
90002134:	68b9      	ldr	r1, [r7, #8]
90002136:	f7ff fd0d 	bl	90001b54 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
9000213a:	4a04      	ldr	r2, [pc, #16]	; (9000214c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
9000213c:	68fb      	ldr	r3, [r7, #12]
9000213e:	601a      	str	r2, [r3, #0]
    {

    }
90002140:	68fb      	ldr	r3, [r7, #12]
90002142:	4618      	mov	r0, r3
90002144:	3710      	adds	r7, #16
90002146:	46bd      	mov	sp, r7
90002148:	bd80      	pop	{r7, pc}
9000214a:	bf00      	nop
9000214c:	9002135c 	.word	0x9002135c

90002150 <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002150:	b580      	push	{r7, lr}
90002152:	af00      	add	r7, sp, #0
90002154:	4801      	ldr	r0, [pc, #4]	; (9000215c <__tcf_0+0xc>)
90002156:	f000 f975 	bl	90002444 <_ZN12FrontendHeapD1Ev>
9000215a:	bd80      	pop	{r7, pc}
9000215c:	24000164 	.word	0x24000164

90002160 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
90002160:	b580      	push	{r7, lr}
90002162:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
90002164:	4b12      	ldr	r3, [pc, #72]	; (900021b0 <_ZN12FrontendHeap11getInstanceEv+0x50>)
90002166:	781b      	ldrb	r3, [r3, #0]
90002168:	f3bf 8f5b 	dmb	ish
9000216c:	b2db      	uxtb	r3, r3
9000216e:	f003 0301 	and.w	r3, r3, #1
90002172:	2b00      	cmp	r3, #0
90002174:	bf0c      	ite	eq
90002176:	2301      	moveq	r3, #1
90002178:	2300      	movne	r3, #0
9000217a:	b2db      	uxtb	r3, r3
9000217c:	2b00      	cmp	r3, #0
9000217e:	d013      	beq.n	900021a8 <_ZN12FrontendHeap11getInstanceEv+0x48>
90002180:	480b      	ldr	r0, [pc, #44]	; (900021b0 <_ZN12FrontendHeap11getInstanceEv+0x50>)
90002182:	f01d f862 	bl	9001f24a <__cxa_guard_acquire>
90002186:	4603      	mov	r3, r0
90002188:	2b00      	cmp	r3, #0
9000218a:	bf14      	ite	ne
9000218c:	2301      	movne	r3, #1
9000218e:	2300      	moveq	r3, #0
90002190:	b2db      	uxtb	r3, r3
90002192:	2b00      	cmp	r3, #0
90002194:	d008      	beq.n	900021a8 <_ZN12FrontendHeap11getInstanceEv+0x48>
90002196:	4807      	ldr	r0, [pc, #28]	; (900021b4 <_ZN12FrontendHeap11getInstanceEv+0x54>)
90002198:	f000 f868 	bl	9000226c <_ZN12FrontendHeapC1Ev>
9000219c:	4804      	ldr	r0, [pc, #16]	; (900021b0 <_ZN12FrontendHeap11getInstanceEv+0x50>)
9000219e:	f01d f860 	bl	9001f262 <__cxa_guard_release>
900021a2:	4805      	ldr	r0, [pc, #20]	; (900021b8 <_ZN12FrontendHeap11getInstanceEv+0x58>)
900021a4:	f01d f89c 	bl	9001f2e0 <atexit>
        return instance;
900021a8:	4b02      	ldr	r3, [pc, #8]	; (900021b4 <_ZN12FrontendHeap11getInstanceEv+0x54>)
    }
900021aa:	4618      	mov	r0, r3
900021ac:	bd80      	pop	{r7, pc}
900021ae:	bf00      	nop
900021b0:	240004bc 	.word	0x240004bc
900021b4:	24000164 	.word	0x24000164
900021b8:	90002151 	.word	0x90002151

900021bc <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
900021bc:	b580      	push	{r7, lr}
900021be:	b082      	sub	sp, #8
900021c0:	af00      	add	r7, sp, #0
900021c2:	6078      	str	r0, [r7, #4]
900021c4:	4a05      	ldr	r2, [pc, #20]	; (900021dc <_ZN16FrontendHeapBaseD1Ev+0x20>)
900021c6:	687b      	ldr	r3, [r7, #4]
900021c8:	601a      	str	r2, [r3, #0]
900021ca:	687b      	ldr	r3, [r7, #4]
900021cc:	4618      	mov	r0, r3
900021ce:	f7ff fce1 	bl	90001b94 <_ZN8touchgfx7MVPHeapD1Ev>
900021d2:	687b      	ldr	r3, [r7, #4]
900021d4:	4618      	mov	r0, r3
900021d6:	3708      	adds	r7, #8
900021d8:	46bd      	mov	sp, r7
900021da:	bd80      	pop	{r7, pc}
900021dc:	9002135c 	.word	0x9002135c

900021e0 <_ZN16FrontendHeapBaseD0Ev>:
900021e0:	b580      	push	{r7, lr}
900021e2:	b082      	sub	sp, #8
900021e4:	af00      	add	r7, sp, #0
900021e6:	6078      	str	r0, [r7, #4]
900021e8:	6878      	ldr	r0, [r7, #4]
900021ea:	f7ff ffe7 	bl	900021bc <_ZN16FrontendHeapBaseD1Ev>
900021ee:	2114      	movs	r1, #20
900021f0:	6878      	ldr	r0, [r7, #4]
900021f2:	f01d f828 	bl	9001f246 <_ZdlPvj>
900021f6:	687b      	ldr	r3, [r7, #4]
900021f8:	4618      	mov	r0, r3
900021fa:	3708      	adds	r7, #8
900021fc:	46bd      	mov	sp, r7
900021fe:	bd80      	pop	{r7, pc}

90002200 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
90002200:	b580      	push	{r7, lr}
90002202:	b082      	sub	sp, #8
90002204:	af00      	add	r7, sp, #0
90002206:	6078      	str	r0, [r7, #4]
90002208:	687b      	ldr	r3, [r7, #4]
9000220a:	4618      	mov	r0, r3
9000220c:	f00b f850 	bl	9000d2b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002210:	4a03      	ldr	r2, [pc, #12]	; (90002220 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
90002212:	687b      	ldr	r3, [r7, #4]
90002214:	601a      	str	r2, [r3, #0]
90002216:	687b      	ldr	r3, [r7, #4]
90002218:	4618      	mov	r0, r3
9000221a:	3708      	adds	r7, #8
9000221c:	46bd      	mov	sp, r7
9000221e:	bd80      	pop	{r7, pc}
90002220:	90021328 	.word	0x90021328

90002224 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
90002224:	b580      	push	{r7, lr}
90002226:	b082      	sub	sp, #8
90002228:	af00      	add	r7, sp, #0
9000222a:	6078      	str	r0, [r7, #4]
9000222c:	687b      	ldr	r3, [r7, #4]
9000222e:	4618      	mov	r0, r3
90002230:	f00b f83e 	bl	9000d2b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002234:	4a03      	ldr	r2, [pc, #12]	; (90002244 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
90002236:	687b      	ldr	r3, [r7, #4]
90002238:	601a      	str	r2, [r3, #0]
9000223a:	687b      	ldr	r3, [r7, #4]
9000223c:	4618      	mov	r0, r3
9000223e:	3708      	adds	r7, #8
90002240:	46bd      	mov	sp, r7
90002242:	bd80      	pop	{r7, pc}
90002244:	900212f4 	.word	0x900212f4

90002248 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
90002248:	b580      	push	{r7, lr}
9000224a:	b082      	sub	sp, #8
9000224c:	af00      	add	r7, sp, #0
9000224e:	6078      	str	r0, [r7, #4]
90002250:	687b      	ldr	r3, [r7, #4]
90002252:	4618      	mov	r0, r3
90002254:	f00b f82c 	bl	9000d2b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002258:	4a03      	ldr	r2, [pc, #12]	; (90002268 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
9000225a:	687b      	ldr	r3, [r7, #4]
9000225c:	601a      	str	r2, [r3, #0]
9000225e:	687b      	ldr	r3, [r7, #4]
90002260:	4618      	mov	r0, r3
90002262:	3708      	adds	r7, #8
90002264:	46bd      	mov	sp, r7
90002266:	bd80      	pop	{r7, pc}
90002268:	900212c0 	.word	0x900212c0

9000226c <_ZN12FrontendHeapC1Ev>:
    Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
9000226c:	b590      	push	{r4, r7, lr}
9000226e:	b085      	sub	sp, #20
90002270:	af02      	add	r7, sp, #8
90002272:	6078      	str	r0, [r7, #4]
        app(model, *this)
90002274:	6878      	ldr	r0, [r7, #4]
90002276:	687b      	ldr	r3, [r7, #4]
90002278:	f103 0114 	add.w	r1, r3, #20
9000227c:	687b      	ldr	r3, [r7, #4]
9000227e:	f103 022c 	add.w	r2, r3, #44	; 0x2c
90002282:	687b      	ldr	r3, [r7, #4]
90002284:	f503 74f4 	add.w	r4, r3, #488	; 0x1e8
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
90002288:	687b      	ldr	r3, [r7, #4]
9000228a:	f503 73fe 	add.w	r3, r3, #508	; 0x1fc
        app(model, *this)
9000228e:	9300      	str	r3, [sp, #0]
90002290:	4623      	mov	r3, r4
90002292:	f7ff ff43 	bl	9000211c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
90002296:	4a18      	ldr	r2, [pc, #96]	; (900022f8 <_ZN12FrontendHeapC1Ev+0x8c>)
90002298:	687b      	ldr	r3, [r7, #4]
9000229a:	601a      	str	r2, [r3, #0]
9000229c:	687b      	ldr	r3, [r7, #4]
9000229e:	3314      	adds	r3, #20
900022a0:	4618      	mov	r0, r3
900022a2:	f7ff ffad 	bl	90002200 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
900022a6:	687b      	ldr	r3, [r7, #4]
900022a8:	332c      	adds	r3, #44	; 0x2c
900022aa:	4618      	mov	r0, r3
900022ac:	f7ff ffba 	bl	90002224 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
900022b0:	687b      	ldr	r3, [r7, #4]
900022b2:	f503 73f4 	add.w	r3, r3, #488	; 0x1e8
900022b6:	4618      	mov	r0, r3
900022b8:	f7ff ffc6 	bl	90002248 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
900022bc:	687b      	ldr	r3, [r7, #4]
900022be:	f503 70fe 	add.w	r0, r3, #508	; 0x1fc
900022c2:	687b      	ldr	r3, [r7, #4]
900022c4:	f503 7355 	add.w	r3, r3, #852	; 0x354
900022c8:	687a      	ldr	r2, [r7, #4]
900022ca:	4619      	mov	r1, r3
900022cc:	f003 faf0 	bl	900058b0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
900022d0:	687b      	ldr	r3, [r7, #4]
900022d2:	f503 7355 	add.w	r3, r3, #852	; 0x354
900022d6:	4618      	mov	r0, r3
900022d8:	f003 fda0 	bl	90005e1c <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
900022dc:	687a      	ldr	r2, [r7, #4]
900022de:	687b      	ldr	r3, [r7, #4]
900022e0:	f503 73fe 	add.w	r3, r3, #508	; 0x1fc
900022e4:	4619      	mov	r1, r3
900022e6:	4610      	mov	r0, r2
900022e8:	f7ff ff0b 	bl	90002102 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
900022ec:	687b      	ldr	r3, [r7, #4]
900022ee:	4618      	mov	r0, r3
900022f0:	370c      	adds	r7, #12
900022f2:	46bd      	mov	sp, r7
900022f4:	bd90      	pop	{r4, r7, pc}
900022f6:	bf00      	nop
900022f8:	900212ac 	.word	0x900212ac

900022fc <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
900022fc:	b580      	push	{r7, lr}
900022fe:	b086      	sub	sp, #24
90002300:	af02      	add	r7, sp, #8
90002302:	60f8      	str	r0, [r7, #12]
90002304:	60b9      	str	r1, [r7, #8]
90002306:	607a      	str	r2, [r7, #4]
90002308:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
9000230a:	68f8      	ldr	r0, [r7, #12]
9000230c:	8bbb      	ldrh	r3, [r7, #28]
9000230e:	9301      	str	r3, [sp, #4]
90002310:	8b3b      	ldrh	r3, [r7, #24]
90002312:	9300      	str	r3, [sp, #0]
90002314:	683b      	ldr	r3, [r7, #0]
90002316:	687a      	ldr	r2, [r7, #4]
90002318:	68b9      	ldr	r1, [r7, #8]
9000231a:	f7ff fd67 	bl	90001dec <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
9000231e:	4a04      	ldr	r2, [pc, #16]	; (90002330 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
90002320:	68fb      	ldr	r3, [r7, #12]
90002322:	601a      	str	r2, [r3, #0]
    }
90002324:	68fb      	ldr	r3, [r7, #12]
90002326:	4618      	mov	r0, r3
90002328:	3710      	adds	r7, #16
9000232a:	46bd      	mov	sp, r7
9000232c:	bd80      	pop	{r7, pc}
9000232e:	bf00      	nop
90002330:	900214b8 	.word	0x900214b8

90002334 <_ZN8touchgfx25CortexMMCUInstrumentationC1Ev>:
90002334:	b580      	push	{r7, lr}
90002336:	b082      	sub	sp, #8
90002338:	af00      	add	r7, sp, #0
9000233a:	6078      	str	r0, [r7, #4]
9000233c:	687b      	ldr	r3, [r7, #4]
9000233e:	4618      	mov	r0, r3
90002340:	f7ff fd3e 	bl	90001dc0 <_ZN8touchgfx18MCUInstrumentationC1Ev>
90002344:	4a03      	ldr	r2, [pc, #12]	; (90002354 <_ZN8touchgfx25CortexMMCUInstrumentationC1Ev+0x20>)
90002346:	687b      	ldr	r3, [r7, #4]
90002348:	601a      	str	r2, [r3, #0]
9000234a:	687b      	ldr	r3, [r7, #4]
9000234c:	4618      	mov	r0, r3
9000234e:	3708      	adds	r7, #8
90002350:	46bd      	mov	sp, r7
90002352:	bd80      	pop	{r7, pc}
90002354:	900210fc 	.word	0x900210fc

90002358 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002358:	b580      	push	{r7, lr}
9000235a:	b086      	sub	sp, #24
9000235c:	af02      	add	r7, sp, #8
9000235e:	60f8      	str	r0, [r7, #12]
90002360:	60b9      	str	r1, [r7, #8]
90002362:	607a      	str	r2, [r7, #4]
90002364:	603b      	str	r3, [r7, #0]
90002366:	68f8      	ldr	r0, [r7, #12]
90002368:	8bbb      	ldrh	r3, [r7, #28]
9000236a:	9301      	str	r3, [sp, #4]
9000236c:	8b3b      	ldrh	r3, [r7, #24]
9000236e:	9300      	str	r3, [sp, #0]
90002370:	683b      	ldr	r3, [r7, #0]
90002372:	687a      	ldr	r2, [r7, #4]
90002374:	68b9      	ldr	r1, [r7, #8]
90002376:	f7ff ffc1 	bl	900022fc <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
9000237a:	4a06      	ldr	r2, [pc, #24]	; (90002394 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x3c>)
9000237c:	68fb      	ldr	r3, [r7, #12]
9000237e:	601a      	str	r2, [r3, #0]
90002380:	68fb      	ldr	r3, [r7, #12]
90002382:	337c      	adds	r3, #124	; 0x7c
90002384:	4618      	mov	r0, r3
90002386:	f7ff ffd5 	bl	90002334 <_ZN8touchgfx25CortexMMCUInstrumentationC1Ev>
    }
9000238a:	68fb      	ldr	r3, [r7, #12]
9000238c:	4618      	mov	r0, r3
9000238e:	3710      	adds	r7, #16
90002390:	46bd      	mov	sp, r7
90002392:	bd80      	pop	{r7, pc}
90002394:	9002117c 	.word	0x9002117c

90002398 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
90002398:	b480      	push	{r7}
9000239a:	b083      	sub	sp, #12
9000239c:	af00      	add	r7, sp, #0
9000239e:	6078      	str	r0, [r7, #4]
900023a0:	4a04      	ldr	r2, [pc, #16]	; (900023b4 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
900023a2:	687b      	ldr	r3, [r7, #4]
900023a4:	601a      	str	r2, [r3, #0]
900023a6:	687b      	ldr	r3, [r7, #4]
900023a8:	4618      	mov	r0, r3
900023aa:	370c      	adds	r7, #12
900023ac:	46bd      	mov	sp, r7
900023ae:	f85d 7b04 	ldr.w	r7, [sp], #4
900023b2:	4770      	bx	lr
900023b4:	90021164 	.word	0x90021164

900023b8 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
900023b8:	b580      	push	{r7, lr}
900023ba:	b082      	sub	sp, #8
900023bc:	af00      	add	r7, sp, #0
900023be:	6078      	str	r0, [r7, #4]
900023c0:	687b      	ldr	r3, [r7, #4]
900023c2:	4618      	mov	r0, r3
900023c4:	f7ff ffe8 	bl	90002398 <_ZN8touchgfx15TouchControllerC1Ev>
900023c8:	4a03      	ldr	r2, [pc, #12]	; (900023d8 <_ZN20STM32TouchControllerC1Ev+0x20>)
900023ca:	687b      	ldr	r3, [r7, #4]
900023cc:	601a      	str	r2, [r3, #0]
900023ce:	687b      	ldr	r3, [r7, #4]
900023d0:	4618      	mov	r0, r3
900023d2:	3708      	adds	r7, #8
900023d4:	46bd      	mov	sp, r7
900023d6:	bd80      	pop	{r7, pc}
900023d8:	9002114c 	.word	0x9002114c

900023dc <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
900023dc:	b590      	push	{r4, r7, lr}
900023de:	b085      	sub	sp, #20
900023e0:	af02      	add	r7, sp, #8
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
900023e2:	f001 faf5 	bl	900039d0 <_ZN14BitmapDatabase11getInstanceEv>
900023e6:	4604      	mov	r4, r0
900023e8:	f001 fafc 	bl	900039e4 <_ZN14BitmapDatabase15getInstanceSizeEv>
900023ec:	4603      	mov	r3, r0
900023ee:	4619      	mov	r1, r3
900023f0:	2300      	movs	r3, #0
900023f2:	9300      	str	r3, [sp, #0]
900023f4:	2300      	movs	r3, #0
900023f6:	2200      	movs	r2, #0
900023f8:	4620      	mov	r0, r4
900023fa:	f011 f915 	bl	90013628 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
  TypedText::registerTexts(&texts);
900023fe:	4809      	ldr	r0, [pc, #36]	; (90002424 <touchgfx_init+0x48>)
90002400:	f7ff fb78 	bl	90001af4 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
  Texts::setLanguage(0);
90002404:	2000      	movs	r0, #0
90002406:	f003 f9b1 	bl	9000576c <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
9000240a:	4807      	ldr	r0, [pc, #28]	; (90002428 <touchgfx_init+0x4c>)
9000240c:	f011 f84e 	bl	900134ac <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

  FrontendHeap& heap = FrontendHeap::getInstance();
90002410:	f7ff fea6 	bl	90002160 <_ZN12FrontendHeap11getInstanceEv>
90002414:	6078      	str	r0, [r7, #4]
  (void)heap;

  /*
   * Initialize TouchGFX
   */
  hal.initialize();
90002416:	4805      	ldr	r0, [pc, #20]	; (9000242c <touchgfx_init+0x50>)
90002418:	f7fe fd00 	bl	90000e1c <_ZN11TouchGFXHAL10initializeEv>
}
9000241c:	bf00      	nop
9000241e:	370c      	adds	r7, #12
90002420:	46bd      	mov	sp, r7
90002422:	bd90      	pop	{r4, r7, pc}
90002424:	2400115c 	.word	0x2400115c
90002428:	24000008 	.word	0x24000008
9000242c:	24001160 	.word	0x24001160

90002430 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
90002430:	b580      	push	{r7, lr}
90002432:	af00      	add	r7, sp, #0
  * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
  * this function from your GUI task.
  *
  * Note This function never returns
  */
  hal.taskEntry();
90002434:	4802      	ldr	r0, [pc, #8]	; (90002440 <touchgfx_taskEntry+0x10>)
90002436:	f7fe fd0f 	bl	90000e58 <_ZN11TouchGFXHAL9taskEntryEv>
}
9000243a:	bf00      	nop
9000243c:	bd80      	pop	{r7, pc}
9000243e:	bf00      	nop
90002440:	24001160 	.word	0x24001160

90002444 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
90002444:	b580      	push	{r7, lr}
90002446:	b082      	sub	sp, #8
90002448:	af00      	add	r7, sp, #0
9000244a:	6078      	str	r0, [r7, #4]
9000244c:	4a10      	ldr	r2, [pc, #64]	; (90002490 <_ZN12FrontendHeapD1Ev+0x4c>)
9000244e:	687b      	ldr	r3, [r7, #4]
90002450:	601a      	str	r2, [r3, #0]
90002452:	687b      	ldr	r3, [r7, #4]
90002454:	f503 73fe 	add.w	r3, r3, #508	; 0x1fc
90002458:	4618      	mov	r0, r3
9000245a:	f7ff fe1d 	bl	90002098 <_ZN19FrontendApplicationD1Ev>
9000245e:	687b      	ldr	r3, [r7, #4]
90002460:	f503 73f4 	add.w	r3, r3, #488	; 0x1e8
90002464:	4618      	mov	r0, r3
90002466:	f000 f827 	bl	900024b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
9000246a:	687b      	ldr	r3, [r7, #4]
9000246c:	332c      	adds	r3, #44	; 0x2c
9000246e:	4618      	mov	r0, r3
90002470:	f000 f844 	bl	900024fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
90002474:	687b      	ldr	r3, [r7, #4]
90002476:	3314      	adds	r3, #20
90002478:	4618      	mov	r0, r3
9000247a:	f000 f863 	bl	90002544 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
9000247e:	687b      	ldr	r3, [r7, #4]
90002480:	4618      	mov	r0, r3
90002482:	f7ff fe9b 	bl	900021bc <_ZN16FrontendHeapBaseD1Ev>
90002486:	687b      	ldr	r3, [r7, #4]
90002488:	4618      	mov	r0, r3
9000248a:	3708      	adds	r7, #8
9000248c:	46bd      	mov	sp, r7
9000248e:	bd80      	pop	{r7, pc}
90002490:	900212ac 	.word	0x900212ac

90002494 <_ZN12FrontendHeapD0Ev>:
90002494:	b580      	push	{r7, lr}
90002496:	b082      	sub	sp, #8
90002498:	af00      	add	r7, sp, #0
9000249a:	6078      	str	r0, [r7, #4]
9000249c:	6878      	ldr	r0, [r7, #4]
9000249e:	f7ff ffd1 	bl	90002444 <_ZN12FrontendHeapD1Ev>
900024a2:	f44f 7156 	mov.w	r1, #856	; 0x358
900024a6:	6878      	ldr	r0, [r7, #4]
900024a8:	f01c fecd 	bl	9001f246 <_ZdlPvj>
900024ac:	687b      	ldr	r3, [r7, #4]
900024ae:	4618      	mov	r0, r3
900024b0:	3708      	adds	r7, #8
900024b2:	46bd      	mov	sp, r7
900024b4:	bd80      	pop	{r7, pc}
	...

900024b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
900024b8:	b580      	push	{r7, lr}
900024ba:	b082      	sub	sp, #8
900024bc:	af00      	add	r7, sp, #0
900024be:	6078      	str	r0, [r7, #4]
900024c0:	4a05      	ldr	r2, [pc, #20]	; (900024d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
900024c2:	687b      	ldr	r3, [r7, #4]
900024c4:	601a      	str	r2, [r3, #0]
900024c6:	687b      	ldr	r3, [r7, #4]
900024c8:	4618      	mov	r0, r3
900024ca:	f00a feef 	bl	9000d2ac <_ZN8touchgfx17AbstractPartitionD1Ev>
900024ce:	687b      	ldr	r3, [r7, #4]
900024d0:	4618      	mov	r0, r3
900024d2:	3708      	adds	r7, #8
900024d4:	46bd      	mov	sp, r7
900024d6:	bd80      	pop	{r7, pc}
900024d8:	900212c0 	.word	0x900212c0

900024dc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
900024dc:	b580      	push	{r7, lr}
900024de:	b082      	sub	sp, #8
900024e0:	af00      	add	r7, sp, #0
900024e2:	6078      	str	r0, [r7, #4]
900024e4:	6878      	ldr	r0, [r7, #4]
900024e6:	f7ff ffe7 	bl	900024b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
900024ea:	2114      	movs	r1, #20
900024ec:	6878      	ldr	r0, [r7, #4]
900024ee:	f01c feaa 	bl	9001f246 <_ZdlPvj>
900024f2:	687b      	ldr	r3, [r7, #4]
900024f4:	4618      	mov	r0, r3
900024f6:	3708      	adds	r7, #8
900024f8:	46bd      	mov	sp, r7
900024fa:	bd80      	pop	{r7, pc}

900024fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900024fc:	b580      	push	{r7, lr}
900024fe:	b082      	sub	sp, #8
90002500:	af00      	add	r7, sp, #0
90002502:	6078      	str	r0, [r7, #4]
90002504:	4a05      	ldr	r2, [pc, #20]	; (9000251c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
90002506:	687b      	ldr	r3, [r7, #4]
90002508:	601a      	str	r2, [r3, #0]
9000250a:	687b      	ldr	r3, [r7, #4]
9000250c:	4618      	mov	r0, r3
9000250e:	f00a fecd 	bl	9000d2ac <_ZN8touchgfx17AbstractPartitionD1Ev>
90002512:	687b      	ldr	r3, [r7, #4]
90002514:	4618      	mov	r0, r3
90002516:	3708      	adds	r7, #8
90002518:	46bd      	mov	sp, r7
9000251a:	bd80      	pop	{r7, pc}
9000251c:	900212f4 	.word	0x900212f4

90002520 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002520:	b580      	push	{r7, lr}
90002522:	b082      	sub	sp, #8
90002524:	af00      	add	r7, sp, #0
90002526:	6078      	str	r0, [r7, #4]
90002528:	6878      	ldr	r0, [r7, #4]
9000252a:	f7ff ffe7 	bl	900024fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
9000252e:	f44f 71de 	mov.w	r1, #444	; 0x1bc
90002532:	6878      	ldr	r0, [r7, #4]
90002534:	f01c fe87 	bl	9001f246 <_ZdlPvj>
90002538:	687b      	ldr	r3, [r7, #4]
9000253a:	4618      	mov	r0, r3
9000253c:	3708      	adds	r7, #8
9000253e:	46bd      	mov	sp, r7
90002540:	bd80      	pop	{r7, pc}
	...

90002544 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002544:	b580      	push	{r7, lr}
90002546:	b082      	sub	sp, #8
90002548:	af00      	add	r7, sp, #0
9000254a:	6078      	str	r0, [r7, #4]
9000254c:	4a05      	ldr	r2, [pc, #20]	; (90002564 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
9000254e:	687b      	ldr	r3, [r7, #4]
90002550:	601a      	str	r2, [r3, #0]
90002552:	687b      	ldr	r3, [r7, #4]
90002554:	4618      	mov	r0, r3
90002556:	f00a fea9 	bl	9000d2ac <_ZN8touchgfx17AbstractPartitionD1Ev>
9000255a:	687b      	ldr	r3, [r7, #4]
9000255c:	4618      	mov	r0, r3
9000255e:	3708      	adds	r7, #8
90002560:	46bd      	mov	sp, r7
90002562:	bd80      	pop	{r7, pc}
90002564:	90021328 	.word	0x90021328

90002568 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002568:	b580      	push	{r7, lr}
9000256a:	b082      	sub	sp, #8
9000256c:	af00      	add	r7, sp, #0
9000256e:	6078      	str	r0, [r7, #4]
90002570:	6878      	ldr	r0, [r7, #4]
90002572:	f7ff ffe7 	bl	90002544 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
90002576:	2118      	movs	r1, #24
90002578:	6878      	ldr	r0, [r7, #4]
9000257a:	f01c fe64 	bl	9001f246 <_ZdlPvj>
9000257e:	687b      	ldr	r3, [r7, #4]
90002580:	4618      	mov	r0, r3
90002582:	3708      	adds	r7, #8
90002584:	46bd      	mov	sp, r7
90002586:	bd80      	pop	{r7, pc}

90002588 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
90002588:	b580      	push	{r7, lr}
9000258a:	b082      	sub	sp, #8
9000258c:	af00      	add	r7, sp, #0
9000258e:	6078      	str	r0, [r7, #4]
90002590:	4a05      	ldr	r2, [pc, #20]	; (900025a8 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
90002592:	687b      	ldr	r3, [r7, #4]
90002594:	601a      	str	r2, [r3, #0]
90002596:	687b      	ldr	r3, [r7, #4]
90002598:	4618      	mov	r0, r3
9000259a:	f7ff fb7d 	bl	90001c98 <_ZN8touchgfx3LCDD1Ev>
9000259e:	687b      	ldr	r3, [r7, #4]
900025a0:	4618      	mov	r0, r3
900025a2:	3708      	adds	r7, #8
900025a4:	46bd      	mov	sp, r7
900025a6:	bd80      	pop	{r7, pc}
900025a8:	90023a3c 	.word	0x90023a3c

900025ac <_ZN8touchgfx8LCD16bppD0Ev>:
900025ac:	b580      	push	{r7, lr}
900025ae:	b082      	sub	sp, #8
900025b0:	af00      	add	r7, sp, #0
900025b2:	6078      	str	r0, [r7, #4]
900025b4:	6878      	ldr	r0, [r7, #4]
900025b6:	f7ff ffe7 	bl	90002588 <_ZN8touchgfx8LCD16bppD1Ev>
900025ba:	2178      	movs	r1, #120	; 0x78
900025bc:	6878      	ldr	r0, [r7, #4]
900025be:	f01c fe42 	bl	9001f246 <_ZdlPvj>
900025c2:	687b      	ldr	r3, [r7, #4]
900025c4:	4618      	mov	r0, r3
900025c6:	3708      	adds	r7, #8
900025c8:	46bd      	mov	sp, r7
900025ca:	bd80      	pop	{r7, pc}

900025cc <_Z41__static_initialization_and_destruction_0ii>:
900025cc:	b580      	push	{r7, lr}
900025ce:	b084      	sub	sp, #16
900025d0:	af02      	add	r7, sp, #8
900025d2:	6078      	str	r0, [r7, #4]
900025d4:	6039      	str	r1, [r7, #0]
900025d6:	687b      	ldr	r3, [r7, #4]
900025d8:	2b01      	cmp	r3, #1
900025da:	d119      	bne.n	90002610 <_Z41__static_initialization_and_destruction_0ii+0x44>
900025dc:	683b      	ldr	r3, [r7, #0]
900025de:	f64f 72ff 	movw	r2, #65535	; 0xffff
900025e2:	4293      	cmp	r3, r2
900025e4:	d114      	bne.n	90002610 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
900025e6:	4818      	ldr	r0, [pc, #96]	; (90002648 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
900025e8:	f7ff fee6 	bl	900023b8 <_ZN20STM32TouchControllerC1Ev>
static STM32H7DMA dma;
900025ec:	4817      	ldr	r0, [pc, #92]	; (9000264c <_Z41__static_initialization_and_destruction_0ii+0x80>)
900025ee:	f7fe fee3 	bl	900013b8 <_ZN10STM32H7DMAC1Ev>
static LCD16bpp display;
900025f2:	4817      	ldr	r0, [pc, #92]	; (90002650 <_Z41__static_initialization_and_destruction_0ii+0x84>)
900025f4:	f014 f89c 	bl	90016730 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 480, 272);
900025f8:	f44f 7388 	mov.w	r3, #272	; 0x110
900025fc:	9301      	str	r3, [sp, #4]
900025fe:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
90002602:	9300      	str	r3, [sp, #0]
90002604:	4b10      	ldr	r3, [pc, #64]	; (90002648 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
90002606:	4a12      	ldr	r2, [pc, #72]	; (90002650 <_Z41__static_initialization_and_destruction_0ii+0x84>)
90002608:	4910      	ldr	r1, [pc, #64]	; (9000264c <_Z41__static_initialization_and_destruction_0ii+0x80>)
9000260a:	4812      	ldr	r0, [pc, #72]	; (90002654 <_Z41__static_initialization_and_destruction_0ii+0x88>)
9000260c:	f7ff fea4 	bl	90002358 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
90002610:	687b      	ldr	r3, [r7, #4]
90002612:	2b00      	cmp	r3, #0
90002614:	d113      	bne.n	9000263e <_Z41__static_initialization_and_destruction_0ii+0x72>
90002616:	683b      	ldr	r3, [r7, #0]
90002618:	f64f 72ff 	movw	r2, #65535	; 0xffff
9000261c:	4293      	cmp	r3, r2
9000261e:	d10e      	bne.n	9000263e <_Z41__static_initialization_and_destruction_0ii+0x72>
90002620:	480c      	ldr	r0, [pc, #48]	; (90002654 <_Z41__static_initialization_and_destruction_0ii+0x88>)
90002622:	f7fe fd07 	bl	90001034 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
90002626:	480c      	ldr	r0, [pc, #48]	; (90002658 <_Z41__static_initialization_and_destruction_0ii+0x8c>)
90002628:	f000 f83a 	bl	900026a0 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
9000262c:	4808      	ldr	r0, [pc, #32]	; (90002650 <_Z41__static_initialization_and_destruction_0ii+0x84>)
9000262e:	f7ff ffab 	bl	90002588 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32H7DMA dma;
90002632:	4806      	ldr	r0, [pc, #24]	; (9000264c <_Z41__static_initialization_and_destruction_0ii+0x80>)
90002634:	f7fe feea 	bl	9000140c <_ZN10STM32H7DMAD1Ev>
static STM32TouchController tc;
90002638:	4803      	ldr	r0, [pc, #12]	; (90002648 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
9000263a:	f7fe f99b 	bl	90000974 <_ZN20STM32TouchControllerD1Ev>
}
9000263e:	bf00      	nop
90002640:	3708      	adds	r7, #8
90002642:	46bd      	mov	sp, r7
90002644:	bd80      	pop	{r7, pc}
90002646:	bf00      	nop
90002648:	240004c0 	.word	0x240004c0
9000264c:	240004c4 	.word	0x240004c4
90002650:	240010e4 	.word	0x240010e4
90002654:	24001160 	.word	0x24001160
90002658:	24000008 	.word	0x24000008

9000265c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
9000265c:	b580      	push	{r7, lr}
9000265e:	b082      	sub	sp, #8
90002660:	af00      	add	r7, sp, #0
90002662:	6078      	str	r0, [r7, #4]
90002664:	4a05      	ldr	r2, [pc, #20]	; (9000267c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
90002666:	687b      	ldr	r3, [r7, #4]
90002668:	601a      	str	r2, [r3, #0]
9000266a:	687b      	ldr	r3, [r7, #4]
9000266c:	4618      	mov	r0, r3
9000266e:	f7ff fb51 	bl	90001d14 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
90002672:	687b      	ldr	r3, [r7, #4]
90002674:	4618      	mov	r0, r3
90002676:	3708      	adds	r7, #8
90002678:	46bd      	mov	sp, r7
9000267a:	bd80      	pop	{r7, pc}
9000267c:	900213f8 	.word	0x900213f8

90002680 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
90002680:	b580      	push	{r7, lr}
90002682:	b082      	sub	sp, #8
90002684:	af00      	add	r7, sp, #0
90002686:	6078      	str	r0, [r7, #4]
90002688:	6878      	ldr	r0, [r7, #4]
9000268a:	f7ff ffe7 	bl	9000265c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
9000268e:	2110      	movs	r1, #16
90002690:	6878      	ldr	r0, [r7, #4]
90002692:	f01c fdd8 	bl	9001f246 <_ZdlPvj>
90002696:	687b      	ldr	r3, [r7, #4]
90002698:	4618      	mov	r0, r3
9000269a:	3708      	adds	r7, #8
9000269c:	46bd      	mov	sp, r7
9000269e:	bd80      	pop	{r7, pc}

900026a0 <_ZN23ApplicationFontProviderD1Ev>:
{
    static const touchgfx::FontId DEFAULT = 0; // Asap_Regular_80_4bpp
    static const uint16_t NUMBER_OF_FONTS = 1;
};

class ApplicationFontProvider : public touchgfx::FontProvider
900026a0:	b580      	push	{r7, lr}
900026a2:	b082      	sub	sp, #8
900026a4:	af00      	add	r7, sp, #0
900026a6:	6078      	str	r0, [r7, #4]
900026a8:	4a05      	ldr	r2, [pc, #20]	; (900026c0 <_ZN23ApplicationFontProviderD1Ev+0x20>)
900026aa:	687b      	ldr	r3, [r7, #4]
900026ac:	601a      	str	r2, [r3, #0]
900026ae:	687b      	ldr	r3, [r7, #4]
900026b0:	4618      	mov	r0, r3
900026b2:	f7ff fa2f 	bl	90001b14 <_ZN8touchgfx12FontProviderD1Ev>
900026b6:	687b      	ldr	r3, [r7, #4]
900026b8:	4618      	mov	r0, r3
900026ba:	3708      	adds	r7, #8
900026bc:	46bd      	mov	sp, r7
900026be:	bd80      	pop	{r7, pc}
900026c0:	900215dc 	.word	0x900215dc

900026c4 <_ZN23ApplicationFontProviderD0Ev>:
900026c4:	b580      	push	{r7, lr}
900026c6:	b082      	sub	sp, #8
900026c8:	af00      	add	r7, sp, #0
900026ca:	6078      	str	r0, [r7, #4]
900026cc:	6878      	ldr	r0, [r7, #4]
900026ce:	f7ff ffe7 	bl	900026a0 <_ZN23ApplicationFontProviderD1Ev>
900026d2:	2104      	movs	r1, #4
900026d4:	6878      	ldr	r0, [r7, #4]
900026d6:	f01c fdb6 	bl	9001f246 <_ZdlPvj>
900026da:	687b      	ldr	r3, [r7, #4]
900026dc:	4618      	mov	r0, r3
900026de:	3708      	adds	r7, #8
900026e0:	46bd      	mov	sp, r7
900026e2:	bd80      	pop	{r7, pc}

900026e4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
900026e4:	b480      	push	{r7}
900026e6:	b083      	sub	sp, #12
900026e8:	af00      	add	r7, sp, #0
900026ea:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
900026ec:	2301      	movs	r3, #1
    }
900026ee:	4618      	mov	r0, r3
900026f0:	370c      	adds	r7, #12
900026f2:	46bd      	mov	sp, r7
900026f4:	f85d 7b04 	ldr.w	r7, [sp], #4
900026f8:	4770      	bx	lr

900026fa <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
900026fa:	b480      	push	{r7}
900026fc:	b083      	sub	sp, #12
900026fe:	af00      	add	r7, sp, #0
90002700:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
90002702:	230c      	movs	r3, #12
    }
90002704:	4618      	mov	r0, r3
90002706:	370c      	adds	r7, #12
90002708:	46bd      	mov	sp, r7
9000270a:	f85d 7b04 	ldr.w	r7, [sp], #4
9000270e:	4770      	bx	lr

90002710 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
90002710:	b480      	push	{r7}
90002712:	b083      	sub	sp, #12
90002714:	af00      	add	r7, sp, #0
90002716:	6078      	str	r0, [r7, #4]
90002718:	460b      	mov	r3, r1
9000271a:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
9000271c:	887a      	ldrh	r2, [r7, #2]
9000271e:	4613      	mov	r3, r2
90002720:	005b      	lsls	r3, r3, #1
90002722:	4413      	add	r3, r2
90002724:	009b      	lsls	r3, r3, #2
90002726:	3308      	adds	r3, #8
90002728:	687a      	ldr	r2, [r7, #4]
9000272a:	4413      	add	r3, r2
    }
9000272c:	4618      	mov	r0, r3
9000272e:	370c      	adds	r7, #12
90002730:	46bd      	mov	sp, r7
90002732:	f85d 7b04 	ldr.w	r7, [sp], #4
90002736:	4770      	bx	lr

90002738 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
90002738:	b480      	push	{r7}
9000273a:	b083      	sub	sp, #12
9000273c:	af00      	add	r7, sp, #0
9000273e:	6078      	str	r0, [r7, #4]
90002740:	460b      	mov	r3, r1
90002742:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
90002744:	887a      	ldrh	r2, [r7, #2]
90002746:	4613      	mov	r3, r2
90002748:	005b      	lsls	r3, r3, #1
9000274a:	4413      	add	r3, r2
9000274c:	009b      	lsls	r3, r3, #2
9000274e:	3308      	adds	r3, #8
90002750:	687a      	ldr	r2, [r7, #4]
90002752:	4413      	add	r3, r2
    }
90002754:	4618      	mov	r0, r3
90002756:	370c      	adds	r7, #12
90002758:	46bd      	mov	sp, r7
9000275a:	f85d 7b04 	ldr.w	r7, [sp], #4
9000275e:	4770      	bx	lr

90002760 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
90002760:	b480      	push	{r7}
90002762:	b083      	sub	sp, #12
90002764:	af00      	add	r7, sp, #0
90002766:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
90002768:	2301      	movs	r3, #1
    }
9000276a:	4618      	mov	r0, r3
9000276c:	370c      	adds	r7, #12
9000276e:	46bd      	mov	sp, r7
90002770:	f85d 7b04 	ldr.w	r7, [sp], #4
90002774:	4770      	bx	lr

90002776 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
90002776:	b480      	push	{r7}
90002778:	b083      	sub	sp, #12
9000277a:	af00      	add	r7, sp, #0
9000277c:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
9000277e:	f44f 73da 	mov.w	r3, #436	; 0x1b4
    }
90002782:	4618      	mov	r0, r3
90002784:	370c      	adds	r7, #12
90002786:	46bd      	mov	sp, r7
90002788:	f85d 7b04 	ldr.w	r7, [sp], #4
9000278c:	4770      	bx	lr

9000278e <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
9000278e:	b480      	push	{r7}
90002790:	b083      	sub	sp, #12
90002792:	af00      	add	r7, sp, #0
90002794:	6078      	str	r0, [r7, #4]
90002796:	460b      	mov	r3, r1
90002798:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
9000279a:	887b      	ldrh	r3, [r7, #2]
9000279c:	f44f 72da 	mov.w	r2, #436	; 0x1b4
900027a0:	fb02 f303 	mul.w	r3, r2, r3
900027a4:	3308      	adds	r3, #8
900027a6:	687a      	ldr	r2, [r7, #4]
900027a8:	4413      	add	r3, r2
    }
900027aa:	4618      	mov	r0, r3
900027ac:	370c      	adds	r7, #12
900027ae:	46bd      	mov	sp, r7
900027b0:	f85d 7b04 	ldr.w	r7, [sp], #4
900027b4:	4770      	bx	lr

900027b6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
900027b6:	b480      	push	{r7}
900027b8:	b083      	sub	sp, #12
900027ba:	af00      	add	r7, sp, #0
900027bc:	6078      	str	r0, [r7, #4]
900027be:	460b      	mov	r3, r1
900027c0:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
900027c2:	887b      	ldrh	r3, [r7, #2]
900027c4:	f44f 72da 	mov.w	r2, #436	; 0x1b4
900027c8:	fb02 f303 	mul.w	r3, r2, r3
900027cc:	3308      	adds	r3, #8
900027ce:	687a      	ldr	r2, [r7, #4]
900027d0:	4413      	add	r3, r2
    }
900027d2:	4618      	mov	r0, r3
900027d4:	370c      	adds	r7, #12
900027d6:	46bd      	mov	sp, r7
900027d8:	f85d 7b04 	ldr.w	r7, [sp], #4
900027dc:	4770      	bx	lr

900027de <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
900027de:	b480      	push	{r7}
900027e0:	b083      	sub	sp, #12
900027e2:	af00      	add	r7, sp, #0
900027e4:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
900027e6:	2301      	movs	r3, #1
    }
900027e8:	4618      	mov	r0, r3
900027ea:	370c      	adds	r7, #12
900027ec:	46bd      	mov	sp, r7
900027ee:	f85d 7b04 	ldr.w	r7, [sp], #4
900027f2:	4770      	bx	lr

900027f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
900027f4:	b480      	push	{r7}
900027f6:	b083      	sub	sp, #12
900027f8:	af00      	add	r7, sp, #0
900027fa:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
900027fc:	2310      	movs	r3, #16
    }
900027fe:	4618      	mov	r0, r3
90002800:	370c      	adds	r7, #12
90002802:	46bd      	mov	sp, r7
90002804:	f85d 7b04 	ldr.w	r7, [sp], #4
90002808:	4770      	bx	lr

9000280a <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
9000280a:	b480      	push	{r7}
9000280c:	b083      	sub	sp, #12
9000280e:	af00      	add	r7, sp, #0
90002810:	6078      	str	r0, [r7, #4]
90002812:	460b      	mov	r3, r1
90002814:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
90002816:	887b      	ldrh	r3, [r7, #2]
90002818:	011b      	lsls	r3, r3, #4
9000281a:	3308      	adds	r3, #8
9000281c:	687a      	ldr	r2, [r7, #4]
9000281e:	4413      	add	r3, r2
    }
90002820:	4618      	mov	r0, r3
90002822:	370c      	adds	r7, #12
90002824:	46bd      	mov	sp, r7
90002826:	f85d 7b04 	ldr.w	r7, [sp], #4
9000282a:	4770      	bx	lr

9000282c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
9000282c:	b480      	push	{r7}
9000282e:	b083      	sub	sp, #12
90002830:	af00      	add	r7, sp, #0
90002832:	6078      	str	r0, [r7, #4]
90002834:	460b      	mov	r3, r1
90002836:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
90002838:	887b      	ldrh	r3, [r7, #2]
9000283a:	011b      	lsls	r3, r3, #4
9000283c:	3308      	adds	r3, #8
9000283e:	687a      	ldr	r2, [r7, #4]
90002840:	4413      	add	r3, r2
    }
90002842:	4618      	mov	r0, r3
90002844:	370c      	adds	r7, #12
90002846:	46bd      	mov	sp, r7
90002848:	f85d 7b04 	ldr.w	r7, [sp], #4
9000284c:	4770      	bx	lr

9000284e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
9000284e:	b580      	push	{r7, lr}
90002850:	b082      	sub	sp, #8
90002852:	af00      	add	r7, sp, #0
90002854:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun_0)();
90002856:	687b      	ldr	r3, [r7, #4]
90002858:	685b      	ldr	r3, [r3, #4]
9000285a:	687a      	ldr	r2, [r7, #4]
9000285c:	68d2      	ldr	r2, [r2, #12]
9000285e:	1052      	asrs	r2, r2, #1
90002860:	1899      	adds	r1, r3, r2
90002862:	687b      	ldr	r3, [r7, #4]
90002864:	68db      	ldr	r3, [r3, #12]
90002866:	f003 0301 	and.w	r3, r3, #1
9000286a:	2b00      	cmp	r3, #0
9000286c:	d102      	bne.n	90002874 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
9000286e:	687b      	ldr	r3, [r7, #4]
90002870:	689b      	ldr	r3, [r3, #8]
90002872:	e00a      	b.n	9000288a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
90002874:	687b      	ldr	r3, [r7, #4]
90002876:	685b      	ldr	r3, [r3, #4]
90002878:	687a      	ldr	r2, [r7, #4]
9000287a:	68d2      	ldr	r2, [r2, #12]
9000287c:	1052      	asrs	r2, r2, #1
9000287e:	4413      	add	r3, r2
90002880:	681b      	ldr	r3, [r3, #0]
90002882:	687a      	ldr	r2, [r7, #4]
90002884:	6892      	ldr	r2, [r2, #8]
90002886:	4413      	add	r3, r2
90002888:	681b      	ldr	r3, [r3, #0]
9000288a:	4608      	mov	r0, r1
9000288c:	4798      	blx	r3
    }
9000288e:	bf00      	nop
90002890:	3708      	adds	r7, #8
90002892:	46bd      	mov	sp, r7
90002894:	bd80      	pop	{r7, pc}

90002896 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
90002896:	b480      	push	{r7}
90002898:	b083      	sub	sp, #12
9000289a:	af00      	add	r7, sp, #0
9000289c:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun_0 != 0);
9000289e:	687b      	ldr	r3, [r7, #4]
900028a0:	685b      	ldr	r3, [r3, #4]
900028a2:	2b00      	cmp	r3, #0
900028a4:	d010      	beq.n	900028c8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
900028a6:	687b      	ldr	r3, [r7, #4]
900028a8:	689b      	ldr	r3, [r3, #8]
900028aa:	2b00      	cmp	r3, #0
900028ac:	d107      	bne.n	900028be <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
900028ae:	687b      	ldr	r3, [r7, #4]
900028b0:	68db      	ldr	r3, [r3, #12]
900028b2:	f003 0301 	and.w	r3, r3, #1
900028b6:	2b00      	cmp	r3, #0
900028b8:	d101      	bne.n	900028be <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
900028ba:	2301      	movs	r3, #1
900028bc:	e000      	b.n	900028c0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
900028be:	2300      	movs	r3, #0
900028c0:	2b01      	cmp	r3, #1
900028c2:	d001      	beq.n	900028c8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
900028c4:	2301      	movs	r3, #1
900028c6:	e000      	b.n	900028ca <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
900028c8:	2300      	movs	r3, #0
    }
900028ca:	4618      	mov	r0, r3
900028cc:	370c      	adds	r7, #12
900028ce:	46bd      	mov	sp, r7
900028d0:	f85d 7b04 	ldr.w	r7, [sp], #4
900028d4:	4770      	bx	lr

900028d6 <_GLOBAL__sub_I_touchgfx_init>:
900028d6:	b580      	push	{r7, lr}
900028d8:	af00      	add	r7, sp, #0
900028da:	f64f 71ff 	movw	r1, #65535	; 0xffff
900028de:	2001      	movs	r0, #1
900028e0:	f7ff fe74 	bl	900025cc <_Z41__static_initialization_and_destruction_0ii>
900028e4:	bd80      	pop	{r7, pc}

900028e6 <_GLOBAL__sub_D_touchgfx_init>:
900028e6:	b580      	push	{r7, lr}
900028e8:	af00      	add	r7, sp, #0
900028ea:	f64f 71ff 	movw	r1, #65535	; 0xffff
900028ee:	2000      	movs	r0, #0
900028f0:	f7ff fe6c 	bl	900025cc <_Z41__static_initialization_and_destruction_0ii>
900028f4:	bd80      	pop	{r7, pc}

900028f6 <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
900028f6:	b580      	push	{r7, lr}
900028f8:	b082      	sub	sp, #8
900028fa:	af00      	add	r7, sp, #0
900028fc:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
900028fe:	687b      	ldr	r3, [r7, #4]
90002900:	681b      	ldr	r3, [r3, #0]
90002902:	3318      	adds	r3, #24
90002904:	681b      	ldr	r3, [r3, #0]
90002906:	6878      	ldr	r0, [r7, #4]
90002908:	4798      	blx	r3
    }
9000290a:	bf00      	nop
9000290c:	3708      	adds	r7, #8
9000290e:	46bd      	mov	sp, r7
90002910:	bd80      	pop	{r7, pc}

90002912 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
90002912:	b480      	push	{r7}
90002914:	b083      	sub	sp, #12
90002916:	af00      	add	r7, sp, #0
90002918:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
9000291a:	687b      	ldr	r3, [r7, #4]
9000291c:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
90002920:	3301      	adds	r3, #1
90002922:	b2da      	uxtb	r2, r3
90002924:	687b      	ldr	r3, [r7, #4]
90002926:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
    }
9000292a:	bf00      	nop
9000292c:	370c      	adds	r7, #12
9000292e:	46bd      	mov	sp, r7
90002930:	f85d 7b04 	ldr.w	r7, [sp], #4
90002934:	4770      	bx	lr
	...

90002938 <__NVIC_EnableIRQ>:
{
90002938:	b480      	push	{r7}
9000293a:	b083      	sub	sp, #12
9000293c:	af00      	add	r7, sp, #0
9000293e:	4603      	mov	r3, r0
90002940:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
90002942:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
90002946:	2b00      	cmp	r3, #0
90002948:	db0b      	blt.n	90002962 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000294a:	88fb      	ldrh	r3, [r7, #6]
9000294c:	f003 021f 	and.w	r2, r3, #31
90002950:	4907      	ldr	r1, [pc, #28]	; (90002970 <__NVIC_EnableIRQ+0x38>)
90002952:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
90002956:	095b      	lsrs	r3, r3, #5
90002958:	2001      	movs	r0, #1
9000295a:	fa00 f202 	lsl.w	r2, r0, r2
9000295e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
90002962:	bf00      	nop
90002964:	370c      	adds	r7, #12
90002966:	46bd      	mov	sp, r7
90002968:	f85d 7b04 	ldr.w	r7, [sp], #4
9000296c:	4770      	bx	lr
9000296e:	bf00      	nop
90002970:	e000e100 	.word	0xe000e100

90002974 <__NVIC_DisableIRQ>:
{
90002974:	b480      	push	{r7}
90002976:	b083      	sub	sp, #12
90002978:	af00      	add	r7, sp, #0
9000297a:	4603      	mov	r3, r0
9000297c:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
9000297e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
90002982:	2b00      	cmp	r3, #0
90002984:	db12      	blt.n	900029ac <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002986:	88fb      	ldrh	r3, [r7, #6]
90002988:	f003 021f 	and.w	r2, r3, #31
9000298c:	490a      	ldr	r1, [pc, #40]	; (900029b8 <__NVIC_DisableIRQ+0x44>)
9000298e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
90002992:	095b      	lsrs	r3, r3, #5
90002994:	2001      	movs	r0, #1
90002996:	fa00 f202 	lsl.w	r2, r0, r2
9000299a:	3320      	adds	r3, #32
9000299c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
900029a0:	f3bf 8f4f 	dsb	sy
}
900029a4:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
900029a6:	f3bf 8f6f 	isb	sy
}
900029aa:	bf00      	nop
}
900029ac:	bf00      	nop
900029ae:	370c      	adds	r7, #12
900029b0:	46bd      	mov	sp, r7
900029b2:	f85d 7b04 	ldr.w	r7, [sp], #4
900029b6:	4770      	bx	lr
900029b8:	e000e100 	.word	0xe000e100

900029bc <__NVIC_SetPriority>:
{
900029bc:	b480      	push	{r7}
900029be:	b083      	sub	sp, #12
900029c0:	af00      	add	r7, sp, #0
900029c2:	4603      	mov	r3, r0
900029c4:	6039      	str	r1, [r7, #0]
900029c6:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
900029c8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
900029cc:	2b00      	cmp	r3, #0
900029ce:	db0a      	blt.n	900029e6 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
900029d0:	683b      	ldr	r3, [r7, #0]
900029d2:	b2da      	uxtb	r2, r3
900029d4:	490c      	ldr	r1, [pc, #48]	; (90002a08 <__NVIC_SetPriority+0x4c>)
900029d6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
900029da:	0112      	lsls	r2, r2, #4
900029dc:	b2d2      	uxtb	r2, r2
900029de:	440b      	add	r3, r1
900029e0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
900029e4:	e00a      	b.n	900029fc <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
900029e6:	683b      	ldr	r3, [r7, #0]
900029e8:	b2da      	uxtb	r2, r3
900029ea:	4908      	ldr	r1, [pc, #32]	; (90002a0c <__NVIC_SetPriority+0x50>)
900029ec:	88fb      	ldrh	r3, [r7, #6]
900029ee:	f003 030f 	and.w	r3, r3, #15
900029f2:	3b04      	subs	r3, #4
900029f4:	0112      	lsls	r2, r2, #4
900029f6:	b2d2      	uxtb	r2, r2
900029f8:	440b      	add	r3, r1
900029fa:	761a      	strb	r2, [r3, #24]
}
900029fc:	bf00      	nop
900029fe:	370c      	adds	r7, #12
90002a00:	46bd      	mov	sp, r7
90002a02:	f85d 7b04 	ldr.w	r7, [sp], #4
90002a06:	4770      	bx	lr
90002a08:	e000e100 	.word	0xe000e100
90002a0c:	e000ed00 	.word	0xe000ed00

90002a10 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
    static uint16_t lcd_int_active_line;
    static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
90002a10:	b5b0      	push	{r4, r5, r7, lr}
90002a12:	b082      	sub	sp, #8
90002a14:	af00      	add	r7, sp, #0
90002a16:	6078      	str	r0, [r7, #4]
    HAL::initialize();
90002a18:	687b      	ldr	r3, [r7, #4]
90002a1a:	4618      	mov	r0, r3
90002a1c:	f00b f91e 	bl	9000dc5c <_ZN8touchgfx3HAL10initializeEv>

    registerEventListener(*(Application::getInstance()));
90002a20:	687d      	ldr	r5, [r7, #4]
90002a22:	687b      	ldr	r3, [r7, #4]
90002a24:	681b      	ldr	r3, [r3, #0]
90002a26:	334c      	adds	r3, #76	; 0x4c
90002a28:	681c      	ldr	r4, [r3, #0]
90002a2a:	f00d fe05 	bl	90010638 <_ZN8touchgfx11Application11getInstanceEv>
90002a2e:	4603      	mov	r3, r0
90002a30:	4619      	mov	r1, r3
90002a32:	4628      	mov	r0, r5
90002a34:	47a0      	blx	r4
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0xD003FC00, (void*)0);
90002a36:	6878      	ldr	r0, [r7, #4]
90002a38:	687b      	ldr	r3, [r7, #4]
90002a3a:	681b      	ldr	r3, [r3, #0]
90002a3c:	3370      	adds	r3, #112	; 0x70
90002a3e:	681c      	ldr	r4, [r3, #0]
90002a40:	2300      	movs	r3, #0
90002a42:	4a04      	ldr	r2, [pc, #16]	; (90002a54 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>)
90002a44:	f04f 4150 	mov.w	r1, #3489660928	; 0xd0000000
90002a48:	47a0      	blx	r4
}
90002a4a:	bf00      	nop
90002a4c:	3708      	adds	r7, #8
90002a4e:	46bd      	mov	sp, r7
90002a50:	bdb0      	pop	{r4, r5, r7, pc}
90002a52:	bf00      	nop
90002a54:	d003fc00 	.word	0xd003fc00

90002a58 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
90002a58:	b580      	push	{r7, lr}
90002a5a:	b082      	sub	sp, #8
90002a5c:	af00      	add	r7, sp, #0
90002a5e:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
90002a60:	2109      	movs	r1, #9
90002a62:	205a      	movs	r0, #90	; 0x5a
90002a64:	f7ff ffaa 	bl	900029bc <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
90002a68:	2109      	movs	r1, #9
90002a6a:	2058      	movs	r0, #88	; 0x58
90002a6c:	f7ff ffa6 	bl	900029bc <__NVIC_SetPriority>
}
90002a70:	bf00      	nop
90002a72:	3708      	adds	r7, #8
90002a74:	46bd      	mov	sp, r7
90002a76:	bd80      	pop	{r7, pc}

90002a78 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
90002a78:	b580      	push	{r7, lr}
90002a7a:	b082      	sub	sp, #8
90002a7c:	af00      	add	r7, sp, #0
90002a7e:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
90002a80:	205a      	movs	r0, #90	; 0x5a
90002a82:	f7ff ff59 	bl	90002938 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
90002a86:	2058      	movs	r0, #88	; 0x58
90002a88:	f7ff ff56 	bl	90002938 <__NVIC_EnableIRQ>
}
90002a8c:	bf00      	nop
90002a8e:	3708      	adds	r7, #8
90002a90:	46bd      	mov	sp, r7
90002a92:	bd80      	pop	{r7, pc}

90002a94 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
90002a94:	b580      	push	{r7, lr}
90002a96:	b082      	sub	sp, #8
90002a98:	af00      	add	r7, sp, #0
90002a9a:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
90002a9c:	205a      	movs	r0, #90	; 0x5a
90002a9e:	f7ff ff69 	bl	90002974 <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
90002aa2:	2058      	movs	r0, #88	; 0x58
90002aa4:	f7ff ff66 	bl	90002974 <__NVIC_DisableIRQ>
}
90002aa8:	bf00      	nop
90002aaa:	3708      	adds	r7, #8
90002aac:	46bd      	mov	sp, r7
90002aae:	bd80      	pop	{r7, pc}

90002ab0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
90002ab0:	b480      	push	{r7}
90002ab2:	b083      	sub	sp, #12
90002ab4:	af00      	add	r7, sp, #0
90002ab6:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002ab8:	4b11      	ldr	r3, [pc, #68]	; (90002b00 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
90002aba:	68db      	ldr	r3, [r3, #12]
90002abc:	b29b      	uxth	r3, r3
90002abe:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002ac2:	b29b      	uxth	r3, r3
90002ac4:	3b01      	subs	r3, #1
90002ac6:	b29a      	uxth	r2, r3
90002ac8:	4b0e      	ldr	r3, [pc, #56]	; (90002b04 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
90002aca:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002acc:	4b0c      	ldr	r3, [pc, #48]	; (90002b00 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
90002ace:	691b      	ldr	r3, [r3, #16]
90002ad0:	b29b      	uxth	r3, r3
90002ad2:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002ad6:	b29b      	uxth	r3, r3
90002ad8:	3b01      	subs	r3, #1
90002ada:	b29a      	uxth	r2, r3
90002adc:	4b0a      	ldr	r3, [pc, #40]	; (90002b08 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
90002ade:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002ae0:	4b08      	ldr	r3, [pc, #32]	; (90002b04 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
90002ae2:	881a      	ldrh	r2, [r3, #0]
90002ae4:	4b06      	ldr	r3, [pc, #24]	; (90002b00 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
90002ae6:	641a      	str	r2, [r3, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002ae8:	4b05      	ldr	r3, [pc, #20]	; (90002b00 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
90002aea:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90002aec:	4a04      	ldr	r2, [pc, #16]	; (90002b00 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
90002aee:	f043 0301 	orr.w	r3, r3, #1
90002af2:	6353      	str	r3, [r2, #52]	; 0x34
}
90002af4:	bf00      	nop
90002af6:	370c      	adds	r7, #12
90002af8:	46bd      	mov	sp, r7
90002afa:	f85d 7b04 	ldr.w	r7, [sp], #4
90002afe:	4770      	bx	lr
90002b00:	50001000 	.word	0x50001000
90002b04:	240011e8 	.word	0x240011e8
90002b08:	240011ea 	.word	0x240011ea

90002b0c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
90002b0c:	b480      	push	{r7}
90002b0e:	b083      	sub	sp, #12
90002b10:	af00      	add	r7, sp, #0
90002b12:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002b14:	4b03      	ldr	r3, [pc, #12]	; (90002b24 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
90002b16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
90002b18:	4618      	mov	r0, r3
90002b1a:	370c      	adds	r7, #12
90002b1c:	46bd      	mov	sp, r7
90002b1e:	f85d 7b04 	ldr.w	r7, [sp], #4
90002b22:	4770      	bx	lr
90002b24:	50001084 	.word	0x50001084

90002b28 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
90002b28:	b480      	push	{r7}
90002b2a:	b083      	sub	sp, #12
90002b2c:	af00      	add	r7, sp, #0
90002b2e:	6078      	str	r0, [r7, #4]
90002b30:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002b32:	4a06      	ldr	r2, [pc, #24]	; (90002b4c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
90002b34:	683b      	ldr	r3, [r7, #0]
90002b36:	6293      	str	r3, [r2, #40]	; 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002b38:	4b05      	ldr	r3, [pc, #20]	; (90002b50 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
90002b3a:	2201      	movs	r2, #1
90002b3c:	625a      	str	r2, [r3, #36]	; 0x24
}
90002b3e:	bf00      	nop
90002b40:	370c      	adds	r7, #12
90002b42:	46bd      	mov	sp, r7
90002b44:	f85d 7b04 	ldr.w	r7, [sp], #4
90002b48:	4770      	bx	lr
90002b4a:	bf00      	nop
90002b4c:	50001084 	.word	0x50001084
90002b50:	50001000 	.word	0x50001000

90002b54 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90002b54:	b580      	push	{r7, lr}
90002b56:	b086      	sub	sp, #24
90002b58:	af00      	add	r7, sp, #0
90002b5a:	6078      	str	r0, [r7, #4]
90002b5c:	6039      	str	r1, [r7, #0]
  HAL::flushFrameBuffer(rect);
90002b5e:	687b      	ldr	r3, [r7, #4]
90002b60:	6839      	ldr	r1, [r7, #0]
90002b62:	4618      	mov	r0, r3
90002b64:	f00a fd8e 	bl	9000d684 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002b68:	4b20      	ldr	r3, [pc, #128]	; (90002bec <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x98>)
90002b6a:	2200      	movs	r2, #0
90002b6c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002b70:	f3bf 8f4f 	dsb	sy
}
90002b74:	bf00      	nop
    ccsidr = SCB->CCSIDR;
90002b76:	4b1d      	ldr	r3, [pc, #116]	; (90002bec <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x98>)
90002b78:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90002b7c:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002b7e:	697b      	ldr	r3, [r7, #20]
90002b80:	0b5b      	lsrs	r3, r3, #13
90002b82:	f3c3 030e 	ubfx	r3, r3, #0, #15
90002b86:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b88:	697b      	ldr	r3, [r7, #20]
90002b8a:	08db      	lsrs	r3, r3, #3
90002b8c:	f3c3 0309 	ubfx	r3, r3, #0, #10
90002b90:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002b92:	693b      	ldr	r3, [r7, #16]
90002b94:	015a      	lsls	r2, r3, #5
90002b96:	f643 73e0 	movw	r3, #16352	; 0x3fe0
90002b9a:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
90002b9c:	68fa      	ldr	r2, [r7, #12]
90002b9e:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002ba0:	4912      	ldr	r1, [pc, #72]	; (90002bec <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x98>)
90002ba2:	4313      	orrs	r3, r2
90002ba4:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
90002ba8:	68fb      	ldr	r3, [r7, #12]
90002baa:	1e5a      	subs	r2, r3, #1
90002bac:	60fa      	str	r2, [r7, #12]
90002bae:	2b00      	cmp	r3, #0
90002bb0:	bf14      	ite	ne
90002bb2:	2301      	movne	r3, #1
90002bb4:	2300      	moveq	r3, #0
90002bb6:	b2db      	uxtb	r3, r3
90002bb8:	2b00      	cmp	r3, #0
90002bba:	d000      	beq.n	90002bbe <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x6a>
      do {
90002bbc:	e7e9      	b.n	90002b92 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x3e>
    } while(sets-- != 0U);
90002bbe:	693b      	ldr	r3, [r7, #16]
90002bc0:	1e5a      	subs	r2, r3, #1
90002bc2:	613a      	str	r2, [r7, #16]
90002bc4:	2b00      	cmp	r3, #0
90002bc6:	bf14      	ite	ne
90002bc8:	2301      	movne	r3, #1
90002bca:	2300      	moveq	r3, #0
90002bcc:	b2db      	uxtb	r3, r3
90002bce:	2b00      	cmp	r3, #0
90002bd0:	d000      	beq.n	90002bd4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x80>
    do {
90002bd2:	e7d9      	b.n	90002b88 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x34>
  __ASM volatile ("dsb 0xF":::"memory");
90002bd4:	f3bf 8f4f 	dsb	sy
}
90002bd8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
90002bda:	f3bf 8f6f 	isb	sy
}
90002bde:	bf00      	nop
}
90002be0:	bf00      	nop
// If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
// to flush the Dcache prior to letting DMA2D accessing it. That's done
// using SCB_CleanInvalidateDCache().
SCB_CleanInvalidateDCache();
}
90002be2:	bf00      	nop
90002be4:	3718      	adds	r7, #24
90002be6:	46bd      	mov	sp, r7
90002be8:	bd80      	pop	{r7, pc}
90002bea:	bf00      	nop
90002bec:	e000ed00 	.word	0xe000ed00

90002bf0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
90002bf0:	b580      	push	{r7, lr}
90002bf2:	b084      	sub	sp, #16
90002bf4:	af00      	add	r7, sp, #0
90002bf6:	60f8      	str	r0, [r7, #12]
90002bf8:	60b9      	str	r1, [r7, #8]
90002bfa:	607a      	str	r2, [r7, #4]
90002bfc:	603b      	str	r3, [r7, #0]
  return HAL::blockCopy(dest, src, numBytes);
90002bfe:	68f8      	ldr	r0, [r7, #12]
90002c00:	683b      	ldr	r3, [r7, #0]
90002c02:	687a      	ldr	r2, [r7, #4]
90002c04:	68b9      	ldr	r1, [r7, #8]
90002c06:	f00a fe72 	bl	9000d8ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
90002c0a:	4603      	mov	r3, r0
}
90002c0c:	4618      	mov	r0, r3
90002c0e:	3710      	adds	r7, #16
90002c10:	46bd      	mov	sp, r7
90002c12:	bd80      	pop	{r7, pc}

90002c14 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv>:

void TouchGFXGeneratedHAL::InvalidateCache()
{
90002c14:	b480      	push	{r7}
90002c16:	b087      	sub	sp, #28
90002c18:	af00      	add	r7, sp, #0
90002c1a:	6078      	str	r0, [r7, #4]
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002c1c:	4b21      	ldr	r3, [pc, #132]	; (90002ca4 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x90>)
90002c1e:	2200      	movs	r2, #0
90002c20:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002c24:	f3bf 8f4f 	dsb	sy
}
90002c28:	bf00      	nop
    ccsidr = SCB->CCSIDR;
90002c2a:	4b1e      	ldr	r3, [pc, #120]	; (90002ca4 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x90>)
90002c2c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90002c30:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002c32:	697b      	ldr	r3, [r7, #20]
90002c34:	0b5b      	lsrs	r3, r3, #13
90002c36:	f3c3 030e 	ubfx	r3, r3, #0, #15
90002c3a:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002c3c:	697b      	ldr	r3, [r7, #20]
90002c3e:	08db      	lsrs	r3, r3, #3
90002c40:	f3c3 0309 	ubfx	r3, r3, #0, #10
90002c44:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002c46:	693b      	ldr	r3, [r7, #16]
90002c48:	015a      	lsls	r2, r3, #5
90002c4a:	f643 73e0 	movw	r3, #16352	; 0x3fe0
90002c4e:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
90002c50:	68fa      	ldr	r2, [r7, #12]
90002c52:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002c54:	4913      	ldr	r1, [pc, #76]	; (90002ca4 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x90>)
90002c56:	4313      	orrs	r3, r2
90002c58:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
90002c5c:	68fb      	ldr	r3, [r7, #12]
90002c5e:	1e5a      	subs	r2, r3, #1
90002c60:	60fa      	str	r2, [r7, #12]
90002c62:	2b00      	cmp	r3, #0
90002c64:	bf14      	ite	ne
90002c66:	2301      	movne	r3, #1
90002c68:	2300      	moveq	r3, #0
90002c6a:	b2db      	uxtb	r3, r3
90002c6c:	2b00      	cmp	r3, #0
90002c6e:	d000      	beq.n	90002c72 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x5e>
      do {
90002c70:	e7e9      	b.n	90002c46 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x32>
    } while(sets-- != 0U);
90002c72:	693b      	ldr	r3, [r7, #16]
90002c74:	1e5a      	subs	r2, r3, #1
90002c76:	613a      	str	r2, [r7, #16]
90002c78:	2b00      	cmp	r3, #0
90002c7a:	bf14      	ite	ne
90002c7c:	2301      	movne	r3, #1
90002c7e:	2300      	moveq	r3, #0
90002c80:	b2db      	uxtb	r3, r3
90002c82:	2b00      	cmp	r3, #0
90002c84:	d000      	beq.n	90002c88 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x74>
    do {
90002c86:	e7d9      	b.n	90002c3c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x28>
  __ASM volatile ("dsb 0xF":::"memory");
90002c88:	f3bf 8f4f 	dsb	sy
}
90002c8c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
90002c8e:	f3bf 8f6f 	isb	sy
}
90002c92:	bf00      	nop
}
90002c94:	bf00      	nop
// If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
// to flush the Dcache prior to letting DMA2D accessing it. That's done
// using SCB_CleanInvalidateDCache().
SCB_CleanInvalidateDCache();
}
90002c96:	bf00      	nop
90002c98:	371c      	adds	r7, #28
90002c9a:	46bd      	mov	sp, r7
90002c9c:	f85d 7b04 	ldr.w	r7, [sp], #4
90002ca0:	4770      	bx	lr
90002ca2:	bf00      	nop
90002ca4:	e000ed00 	.word	0xe000ed00

90002ca8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:

void TouchGFXGeneratedHAL::FlushCache()
{
90002ca8:	b480      	push	{r7}
90002caa:	b087      	sub	sp, #28
90002cac:	af00      	add	r7, sp, #0
90002cae:	6078      	str	r0, [r7, #4]
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002cb0:	4b21      	ldr	r3, [pc, #132]	; (90002d38 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x90>)
90002cb2:	2200      	movs	r2, #0
90002cb4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002cb8:	f3bf 8f4f 	dsb	sy
}
90002cbc:	bf00      	nop
    ccsidr = SCB->CCSIDR;
90002cbe:	4b1e      	ldr	r3, [pc, #120]	; (90002d38 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x90>)
90002cc0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90002cc4:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002cc6:	697b      	ldr	r3, [r7, #20]
90002cc8:	0b5b      	lsrs	r3, r3, #13
90002cca:	f3c3 030e 	ubfx	r3, r3, #0, #15
90002cce:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002cd0:	697b      	ldr	r3, [r7, #20]
90002cd2:	08db      	lsrs	r3, r3, #3
90002cd4:	f3c3 0309 	ubfx	r3, r3, #0, #10
90002cd8:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002cda:	693b      	ldr	r3, [r7, #16]
90002cdc:	015a      	lsls	r2, r3, #5
90002cde:	f643 73e0 	movw	r3, #16352	; 0x3fe0
90002ce2:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
90002ce4:	68fa      	ldr	r2, [r7, #12]
90002ce6:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002ce8:	4913      	ldr	r1, [pc, #76]	; (90002d38 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x90>)
90002cea:	4313      	orrs	r3, r2
90002cec:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
90002cf0:	68fb      	ldr	r3, [r7, #12]
90002cf2:	1e5a      	subs	r2, r3, #1
90002cf4:	60fa      	str	r2, [r7, #12]
90002cf6:	2b00      	cmp	r3, #0
90002cf8:	bf14      	ite	ne
90002cfa:	2301      	movne	r3, #1
90002cfc:	2300      	moveq	r3, #0
90002cfe:	b2db      	uxtb	r3, r3
90002d00:	2b00      	cmp	r3, #0
90002d02:	d000      	beq.n	90002d06 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x5e>
      do {
90002d04:	e7e9      	b.n	90002cda <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x32>
    } while(sets-- != 0U);
90002d06:	693b      	ldr	r3, [r7, #16]
90002d08:	1e5a      	subs	r2, r3, #1
90002d0a:	613a      	str	r2, [r7, #16]
90002d0c:	2b00      	cmp	r3, #0
90002d0e:	bf14      	ite	ne
90002d10:	2301      	movne	r3, #1
90002d12:	2300      	moveq	r3, #0
90002d14:	b2db      	uxtb	r3, r3
90002d16:	2b00      	cmp	r3, #0
90002d18:	d000      	beq.n	90002d1c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x74>
    do {
90002d1a:	e7d9      	b.n	90002cd0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
  __ASM volatile ("dsb 0xF":::"memory");
90002d1c:	f3bf 8f4f 	dsb	sy
}
90002d20:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
90002d22:	f3bf 8f6f 	isb	sy
}
90002d26:	bf00      	nop
}
90002d28:	bf00      	nop
// If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
// to flush the Dcache prior to letting DMA2D accessing it. That's done
// using SCB_CleanInvalidateDCache().
SCB_CleanInvalidateDCache();
}
90002d2a:	bf00      	nop
90002d2c:	371c      	adds	r7, #28
90002d2e:	46bd      	mov	sp, r7
90002d30:	f85d 7b04 	ldr.w	r7, [sp], #4
90002d34:	4770      	bx	lr
90002d36:	bf00      	nop
90002d38:	e000ed00 	.word	0xe000ed00

90002d3c <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc)
    {
90002d3c:	b580      	push	{r7, lr}
90002d3e:	b082      	sub	sp, #8
90002d40:	af00      	add	r7, sp, #0
90002d42:	6078      	str	r0, [r7, #4]
        if (LTDC->LIPCR == lcd_int_active_line)
90002d44:	4b1a      	ldr	r3, [pc, #104]	; (90002db0 <HAL_LTDC_LineEventCallback+0x74>)
90002d46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90002d48:	4a1a      	ldr	r2, [pc, #104]	; (90002db4 <HAL_LTDC_LineEventCallback+0x78>)
90002d4a:	8812      	ldrh	r2, [r2, #0]
90002d4c:	4293      	cmp	r3, r2
90002d4e:	bf0c      	ite	eq
90002d50:	2301      	moveq	r3, #1
90002d52:	2300      	movne	r3, #0
90002d54:	b2db      	uxtb	r3, r3
90002d56:	2b00      	cmp	r3, #0
90002d58:	d017      	beq.n	90002d8a <HAL_LTDC_LineEventCallback+0x4e>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
90002d5a:	4b17      	ldr	r3, [pc, #92]	; (90002db8 <HAL_LTDC_LineEventCallback+0x7c>)
90002d5c:	881b      	ldrh	r3, [r3, #0]
90002d5e:	4619      	mov	r1, r3
90002d60:	6878      	ldr	r0, [r7, #4]
90002d62:	f005 fa43 	bl	900081ec <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
90002d66:	f7fd feeb 	bl	90000b40 <_ZN8touchgfx3HAL11getInstanceEv>
90002d6a:	4603      	mov	r3, r0
90002d6c:	4618      	mov	r0, r3
90002d6e:	f7ff fdd0 	bl	90002912 <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
90002d72:	f7fe f9ed 	bl	90001150 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
90002d76:	f7fd fee3 	bl	90000b40 <_ZN8touchgfx3HAL11getInstanceEv>
90002d7a:	4603      	mov	r3, r0
90002d7c:	4618      	mov	r0, r3
90002d7e:	f00b f9f5 	bl	9000e16c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90002d82:	2000      	movs	r0, #0
90002d84:	f7fd fe18 	bl	900009b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
90002d88:	e00e      	b.n	90002da8 <HAL_LTDC_LineEventCallback+0x6c>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90002d8a:	4b0a      	ldr	r3, [pc, #40]	; (90002db4 <HAL_LTDC_LineEventCallback+0x78>)
90002d8c:	881b      	ldrh	r3, [r3, #0]
90002d8e:	4619      	mov	r1, r3
90002d90:	6878      	ldr	r0, [r7, #4]
90002d92:	f005 fa2b 	bl	900081ec <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
90002d96:	2000      	movs	r0, #0
90002d98:	f7fd fe4c 	bl	90000a34 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL::getInstance()->frontPorchEntered();
90002d9c:	f7fd fed0 	bl	90000b40 <_ZN8touchgfx3HAL11getInstanceEv>
90002da0:	4603      	mov	r3, r0
90002da2:	4618      	mov	r0, r3
90002da4:	f7ff fda7 	bl	900028f6 <_ZN8touchgfx3HAL17frontPorchEnteredEv>
    }
90002da8:	bf00      	nop
90002daa:	3708      	adds	r7, #8
90002dac:	46bd      	mov	sp, r7
90002dae:	bd80      	pop	{r7, pc}
90002db0:	50001000 	.word	0x50001000
90002db4:	240011e8 	.word	0x240011e8
90002db8:	240011ea 	.word	0x240011ea

90002dbc <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90002dbc:	4901      	ldr	r1, [pc, #4]	; (90002dc4 <vApplicationIdleHook+0x8>)
90002dbe:	2000      	movs	r0, #0
90002dc0:	f009 bd9e 	b.w	9000c900 <vTaskSetApplicationTaskTag>
90002dc4:	90000ffd 	.word	0x90000ffd

90002dc8 <StartTask02>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask02 */
void StartTask02(void *argument)
{
90002dc8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN StartTask02 */
  /* Infinite loop */
  for(;;)
  {

    osDelay(1);
90002dca:	2001      	movs	r0, #1
90002dcc:	f008 f949 	bl	9000b062 <osDelay>
  for(;;)
90002dd0:	e7fb      	b.n	90002dca <StartTask02+0x2>
	...

90002dd4 <SystemClock_Config>:
{
90002dd4:	b530      	push	{r4, r5, lr}
90002dd6:	b09d      	sub	sp, #116	; 0x74
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90002dd8:	224c      	movs	r2, #76	; 0x4c
90002dda:	2100      	movs	r1, #0
90002ddc:	a809      	add	r0, sp, #36	; 0x24
90002dde:	f01c faed 	bl	9001f3bc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90002de2:	2220      	movs	r2, #32
90002de4:	2100      	movs	r1, #0
90002de6:	a801      	add	r0, sp, #4
90002de8:	f01c fae8 	bl	9001f3bc <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90002dec:	2002      	movs	r0, #2
90002dee:	f005 faa9 	bl	90008344 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
90002df2:	2300      	movs	r3, #0
90002df4:	9300      	str	r3, [sp, #0]
90002df6:	4b26      	ldr	r3, [pc, #152]	; (90002e90 <SystemClock_Config+0xbc>)
90002df8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90002dfa:	f022 0201 	bic.w	r2, r2, #1
90002dfe:	62da      	str	r2, [r3, #44]	; 0x2c
90002e00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90002e02:	f003 0301 	and.w	r3, r3, #1
90002e06:	9300      	str	r3, [sp, #0]
90002e08:	4b22      	ldr	r3, [pc, #136]	; (90002e94 <SystemClock_Config+0xc0>)
90002e0a:	699a      	ldr	r2, [r3, #24]
90002e0c:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
90002e10:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90002e14:	619a      	str	r2, [r3, #24]
90002e16:	699a      	ldr	r2, [r3, #24]
90002e18:	f402 4240 	and.w	r2, r2, #49152	; 0xc000
90002e1c:	9200      	str	r2, [sp, #0]
90002e1e:	9a00      	ldr	r2, [sp, #0]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90002e20:	699a      	ldr	r2, [r3, #24]
90002e22:	0494      	lsls	r4, r2, #18
90002e24:	d5fc      	bpl.n	90002e20 <SystemClock_Config+0x4c>
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
90002e26:	4a1c      	ldr	r2, [pc, #112]	; (90002e98 <SystemClock_Config+0xc4>)
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
90002e28:	2401      	movs	r4, #1
  RCC_OscInitStruct.PLL.PLLN = 160;
90002e2a:	2105      	movs	r1, #5
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002e2c:	2508      	movs	r5, #8
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
90002e2e:	6a93      	ldr	r3, [r2, #40]	; 0x28
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002e30:	a809      	add	r0, sp, #36	; 0x24
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
90002e32:	f023 0303 	bic.w	r3, r3, #3
90002e36:	f043 0302 	orr.w	r3, r3, #2
90002e3a:	6293      	str	r3, [r2, #40]	; 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
90002e3c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLN = 160;
90002e40:	22a0      	movs	r2, #160	; 0xa0
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
90002e42:	e9cd 4309 	strd	r4, r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90002e46:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLN = 160;
90002e48:	e9cd 1214 	strd	r1, r2, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002e4c:	e9cd 3312 	strd	r3, r3, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLP = 4;
90002e50:	2204      	movs	r2, #4
  RCC_OscInitStruct.PLL.PLLR = 2;
90002e52:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002e54:	2300      	movs	r3, #0
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002e56:	e9cd 2216 	strd	r2, r2, [sp, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002e5a:	e9cd 5319 	strd	r5, r3, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90002e5e:	931b      	str	r3, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002e60:	f005 fa94 	bl	9000838c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002e64:	203f      	movs	r0, #63	; 0x3f
90002e66:	2303      	movs	r3, #3
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90002e68:	f44f 6280 	mov.w	r2, #1024	; 0x400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
90002e6c:	4621      	mov	r1, r4
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002e6e:	e9cd 0301 	strd	r0, r3, [sp, #4]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV2;
90002e72:	f44f 6300 	mov.w	r3, #2048	; 0x800
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
90002e76:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
90002e78:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002e7c:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90002e7e:	e9cd 3305 	strd	r3, r3, [sp, #20]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90002e82:	e9cd 2307 	strd	r2, r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
90002e86:	f005 fdb9 	bl	900089fc <HAL_RCC_ClockConfig>
}
90002e8a:	b01d      	add	sp, #116	; 0x74
90002e8c:	bd30      	pop	{r4, r5, pc}
90002e8e:	bf00      	nop
90002e90:	58000400 	.word	0x58000400
90002e94:	58024800 	.word	0x58024800
90002e98:	58024400 	.word	0x58024400

90002e9c <USART_ReceiveData>:
	HAL_UART_Receive_IT(&huart3,receive_byte,6);
90002e9c:	2206      	movs	r2, #6
90002e9e:	4902      	ldr	r1, [pc, #8]	; (90002ea8 <USART_ReceiveData+0xc>)
90002ea0:	4802      	ldr	r0, [pc, #8]	; (90002eac <USART_ReceiveData+0x10>)
90002ea2:	f007 bf0f 	b.w	9000acc4 <HAL_UART_Receive_IT>
90002ea6:	bf00      	nop
90002ea8:	240011ec 	.word	0x240011ec
90002eac:	24012d7c 	.word	0x24012d7c

90002eb0 <main>:
{
90002eb0:	b580      	push	{r7, lr}
90002eb2:	b0a4      	sub	sp, #144	; 0x90

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002eb4:	2210      	movs	r2, #16
90002eb6:	2100      	movs	r1, #0
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  MPU_InitStruct.BaseAddress = 0x24000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002eb8:	f04f 5910 	mov.w	r9, #603979776	; 0x24000000
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002ebc:	a817      	add	r0, sp, #92	; 0x5c
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002ebe:	2501      	movs	r5, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002ec0:	f01c fa7c 	bl	9001f3bc <memset>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ec4:	2400      	movs	r4, #0
  HAL_MPU_Disable();
90002ec6:	f003 fedd 	bl	90006c84 <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002eca:	4bd7      	ldr	r3, [pc, #860]	; (90003228 <main+0x378>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ecc:	a817      	add	r0, sp, #92	; 0x5c
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002ece:	271b      	movs	r7, #27
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002ed0:	f8ad 505c 	strh.w	r5, [sp, #92]	; 0x5c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002ed4:	2603      	movs	r6, #3
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002ed6:	e9cd 9318 	strd	r9, r3, [sp, #96]	; 0x60
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
90002eda:	4bd4      	ldr	r3, [pc, #848]	; (9000322c <main+0x37c>)
90002edc:	931a      	str	r3, [sp, #104]	; 0x68
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ede:	f003 fef3 	bl	90006cc8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90002ee2:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ee6:	a817      	add	r0, sp, #92	; 0x5c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ee8:	f88d 4067 	strb.w	r4, [sp, #103]	; 0x67
  MPU_InitStruct.BaseAddress = 0x90000000;
90002eec:	9318      	str	r3, [sp, #96]	; 0x60
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002eee:	f8ad 406a 	strh.w	r4, [sp, #106]	; 0x6a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90002ef2:	f88d 505d 	strb.w	r5, [sp, #93]	; 0x5d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002ef6:	f88d 7064 	strb.w	r7, [sp, #100]	; 0x64
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002efa:	f003 fee5 	bl	90006cc8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002efe:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002f00:	a817      	add	r0, sp, #92	; 0x5c
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
90002f02:	f88d 4068 	strb.w	r4, [sp, #104]	; 0x68
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002f06:	f88d 305d 	strb.w	r3, [sp, #93]	; 0x5d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002f0a:	231a      	movs	r3, #26
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002f0c:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002f10:	f88d 3064 	strb.w	r3, [sp, #100]	; 0x64
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002f14:	f240 1301 	movw	r3, #257	; 0x101
90002f18:	f8ad 306a 	strh.w	r3, [sp, #106]	; 0x6a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002f1c:	f003 fed4 	bl	90006cc8 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002f20:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002f24:	a817      	add	r0, sp, #92	; 0x5c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002f26:	f88d 4067 	strb.w	r4, [sp, #103]	; 0x67
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002f2a:	9318      	str	r3, [sp, #96]	; 0x60
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002f2c:	f8ad 406a 	strh.w	r4, [sp, #106]	; 0x6a
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002f30:	2404      	movs	r4, #4
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90002f32:	f88d 605d 	strb.w	r6, [sp, #93]	; 0x5d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002f36:	f88d 7064 	strb.w	r7, [sp, #100]	; 0x64
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
90002f3a:	f88d 5068 	strb.w	r5, [sp, #104]	; 0x68
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002f3e:	f003 fec3 	bl	90006cc8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002f42:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002f44:	a817      	add	r0, sp, #92	; 0x5c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002f46:	f88d 405d 	strb.w	r4, [sp, #93]	; 0x5d
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002f4a:	f88d 3064 	strb.w	r3, [sp, #100]	; 0x64
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002f4e:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002f52:	f88d 506a 	strb.w	r5, [sp, #106]	; 0x6a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002f56:	f003 feb7 	bl	90006cc8 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90002f5a:	4620      	mov	r0, r4
90002f5c:	f003 fea2 	bl	90006ca4 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90002f60:	4bb3      	ldr	r3, [pc, #716]	; (90003230 <main+0x380>)
90002f62:	695a      	ldr	r2, [r3, #20]
90002f64:	f412 3200 	ands.w	r2, r2, #131072	; 0x20000
90002f68:	d111      	bne.n	90002f8e <main+0xde>
  __ASM volatile ("dsb 0xF":::"memory");
90002f6a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002f6e:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90002f72:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002f76:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002f7a:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002f7e:	695a      	ldr	r2, [r3, #20]
90002f80:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90002f84:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002f86:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002f8a:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90002f8e:	4aa8      	ldr	r2, [pc, #672]	; (90003230 <main+0x380>)
90002f90:	6953      	ldr	r3, [r2, #20]
90002f92:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90002f96:	d123      	bne.n	90002fe0 <main+0x130>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002f98:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002f9c:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002fa0:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002fa4:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002fa8:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002fac:	f3c3 334e 	ubfx	r3, r3, #13, #15
90002fb0:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002fb2:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002fb6:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002fb8:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
90002fbc:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002fbe:	f8c2 5260 	str.w	r5, [r2, #608]	; 0x260
      } while (ways-- != 0U);
90002fc2:	d2f9      	bcs.n	90002fb8 <main+0x108>
    } while(sets-- != 0U);
90002fc4:	3b20      	subs	r3, #32
90002fc6:	f113 0f20 	cmn.w	r3, #32
90002fca:	d1f2      	bne.n	90002fb2 <main+0x102>
90002fcc:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90002fd0:	6953      	ldr	r3, [r2, #20]
90002fd2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90002fd6:	6153      	str	r3, [r2, #20]
90002fd8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002fdc:	f3bf 8f6f 	isb	sy
  HAL_Init();
90002fe0:	f003 fd92 	bl	90006b08 <HAL_Init>
  SystemClock_Config();
90002fe4:	f7ff fef6 	bl	90002dd4 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90002fe8:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002fea:	2214      	movs	r2, #20
90002fec:	2100      	movs	r1, #0
90002fee:	a817      	add	r0, sp, #92	; 0x5c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002ff0:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002ff2:	f01c f9e3 	bl	9001f3bc <memset>
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002ff6:	4b8f      	ldr	r3, [pc, #572]	; (90003234 <main+0x384>)
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90002ff8:	2180      	movs	r1, #128	; 0x80
90002ffa:	488f      	ldr	r0, [pc, #572]	; (90003238 <main+0x388>)
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002ffc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003000:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003002:	2503      	movs	r5, #3
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90003004:	f04f 0804 	mov.w	r8, #4
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003008:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
  hltdc.Init.TotalHeigh = 285;
9000300c:	f44f 7704 	mov.w	r7, #528	; 0x210
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003010:	f04f 0905 	mov.w	r9, #5
90003014:	f44f 6a80 	mov.w	sl, #1024	; 0x400
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003018:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000301c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003020:	f402 6280 	and.w	r2, r2, #1024	; 0x400
90003024:	9200      	str	r2, [sp, #0]
90003026:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90003028:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000302c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90003030:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003034:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003038:	f002 0240 	and.w	r2, r2, #64	; 0x40
9000303c:	9201      	str	r2, [sp, #4]
9000303e:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90003040:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003044:	f442 7280 	orr.w	r2, r2, #256	; 0x100
90003048:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000304c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003050:	f402 7280 	and.w	r2, r2, #256	; 0x100
90003054:	9202      	str	r2, [sp, #8]
90003056:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90003058:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000305c:	f042 0210 	orr.w	r2, r2, #16
90003060:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003064:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003068:	f002 0210 	and.w	r2, r2, #16
9000306c:	9203      	str	r2, [sp, #12]
9000306e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90003070:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003074:	f442 7200 	orr.w	r2, r2, #512	; 0x200
90003078:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000307c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003080:	f402 7200 	and.w	r2, r2, #512	; 0x200
90003084:	9204      	str	r2, [sp, #16]
90003086:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003088:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000308c:	f042 0208 	orr.w	r2, r2, #8
90003090:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003094:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003098:	f002 0208 	and.w	r2, r2, #8
9000309c:	9205      	str	r2, [sp, #20]
9000309e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOF_CLK_ENABLE();
900030a0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900030a4:	f042 0220 	orr.w	r2, r2, #32
900030a8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900030ac:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900030b0:	f002 0220 	and.w	r2, r2, #32
900030b4:	9206      	str	r2, [sp, #24]
900030b6:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900030b8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900030bc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900030c0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900030c4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900030c8:	f002 0280 	and.w	r2, r2, #128	; 0x80
900030cc:	9207      	str	r2, [sp, #28]
900030ce:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOA_CLK_ENABLE();
900030d0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900030d4:	f042 0201 	orr.w	r2, r2, #1
900030d8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900030dc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900030e0:	f002 0201 	and.w	r2, r2, #1
900030e4:	9208      	str	r2, [sp, #32]
900030e6:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOB_CLK_ENABLE();
900030e8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900030ec:	f042 0202 	orr.w	r2, r2, #2
900030f0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
900030f4:	2200      	movs	r2, #0
  __HAL_RCC_GPIOB_CLK_ENABLE();
900030f6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
900030fa:	f003 0302 	and.w	r3, r3, #2
900030fe:	9309      	str	r3, [sp, #36]	; 0x24
90003100:	9b09      	ldr	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003102:	f004 fb77 	bl	900077f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_SET);
90003106:	2201      	movs	r2, #1
90003108:	f44f 5100 	mov.w	r1, #8192	; 0x2000
9000310c:	484b      	ldr	r0, [pc, #300]	; (9000323c <main+0x38c>)
9000310e:	f004 fb71 	bl	900077f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003112:	2201      	movs	r2, #1
90003114:	484a      	ldr	r0, [pc, #296]	; (90003240 <main+0x390>)
90003116:	4611      	mov	r1, r2
90003118:	f004 fb6c 	bl	900077f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_RESET);
9000311c:	2200      	movs	r2, #0
9000311e:	2104      	movs	r1, #4
90003120:	4848      	ldr	r0, [pc, #288]	; (90003244 <main+0x394>)
90003122:	f004 fb67 	bl	900077f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
90003126:	2201      	movs	r2, #1
90003128:	2104      	movs	r1, #4
9000312a:	4847      	ldr	r0, [pc, #284]	; (90003248 <main+0x398>)
9000312c:	f004 fb62 	bl	900077f4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003130:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003132:	a917      	add	r1, sp, #92	; 0x5c
90003134:	4840      	ldr	r0, [pc, #256]	; (90003238 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003136:	e9cd 3617 	strd	r3, r6, [sp, #92]	; 0x5c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
9000313a:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
9000313e:	f004 f9cd 	bl	900074dc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = RENDER_TIME_Pin;
90003142:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
90003146:	a917      	add	r1, sp, #92	; 0x5c
90003148:	483c      	ldr	r0, [pc, #240]	; (9000323c <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000314a:	951a      	str	r5, [sp, #104]	; 0x68
  GPIO_InitStruct.Pull = GPIO_PULLUP;
9000314c:	9619      	str	r6, [sp, #100]	; 0x64
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
9000314e:	e9cd 3617 	strd	r3, r6, [sp, #92]	; 0x5c
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
90003152:	f004 f9c3 	bl	900074dc <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003156:	a917      	add	r1, sp, #92	; 0x5c
90003158:	4839      	ldr	r0, [pc, #228]	; (90003240 <main+0x390>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
9000315a:	e9cd 6617 	strd	r6, r6, [sp, #92]	; 0x5c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
9000315e:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003162:	f004 f9bb 	bl	900074dc <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90003166:	a917      	add	r1, sp, #92	; 0x5c
90003168:	4836      	ldr	r0, [pc, #216]	; (90003244 <main+0x394>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
9000316a:	e9cd 8617 	strd	r8, r6, [sp, #92]	; 0x5c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
9000316e:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90003172:	f004 f9b3 	bl	900074dc <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003176:	a917      	add	r1, sp, #92	; 0x5c
90003178:	4833      	ldr	r0, [pc, #204]	; (90003248 <main+0x398>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
9000317a:	e9cd 8617 	strd	r8, r6, [sp, #92]	; 0x5c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000317e:	e9cd 6519 	strd	r6, r5, [sp, #100]	; 0x64
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003182:	f004 f9ab 	bl	900074dc <HAL_GPIO_Init>
  hcrc.Instance = CRC;
90003186:	4831      	ldr	r0, [pc, #196]	; (9000324c <main+0x39c>)
90003188:	4b31      	ldr	r3, [pc, #196]	; (90003250 <main+0x3a0>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
9000318a:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
9000318c:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
9000318e:	6206      	str	r6, [r0, #32]
  hltdc.Instance = LTDC;
90003190:	4d30      	ldr	r5, [pc, #192]	; (90003254 <main+0x3a4>)
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003192:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003196:	f003 fdbf 	bl	90006d18 <HAL_CRC_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
9000319a:	2234      	movs	r2, #52	; 0x34
9000319c:	4621      	mov	r1, r4
9000319e:	a80a      	add	r0, sp, #40	; 0x28
900031a0:	f01c f90c 	bl	9001f3bc <memset>
  LTDC_LayerCfgTypeDef pLayerCfg1 = {0};
900031a4:	2234      	movs	r2, #52	; 0x34
900031a6:	4621      	mov	r1, r4
900031a8:	a817      	add	r0, sp, #92	; 0x5c
900031aa:	f01c f907 	bl	9001f3bc <memset>
  hltdc.Instance = LTDC;
900031ae:	4b2a      	ldr	r3, [pc, #168]	; (90003258 <main+0x3a8>)
  hltdc.Init.VerticalSync = 8;
900031b0:	2227      	movs	r2, #39	; 0x27
  hltdc.Init.AccumulatedVBP = 11;
900031b2:	212a      	movs	r1, #42	; 0x2a
  hltdc.Init.AccumulatedActiveH = 283;
900031b4:	f240 200a 	movw	r0, #522	; 0x20a
  hltdc.Init.Backcolor.Blue = 0;
900031b8:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
900031ba:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
900031bc:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
900031c0:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.VerticalSync = 8;
900031c4:	2308      	movs	r3, #8
900031c6:	e9c5 2305 	strd	r2, r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
900031ca:	230b      	movs	r3, #11
900031cc:	e9c5 1307 	strd	r1, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
900031d0:	f240 131b 	movw	r3, #283	; 0x11b
900031d4:	e9c5 0309 	strd	r0, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
900031d8:	f240 131d 	movw	r3, #285	; 0x11d
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
900031dc:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 285;
900031de:	e9c5 730b 	strd	r7, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
900031e2:	e9c5 4402 	strd	r4, r4, [r5, #8]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
900031e6:	f004 ff09 	bl	90007ffc <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
900031ea:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha = 255;
900031ee:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
900031f0:	f44f 7388 	mov.w	r3, #272	; 0x110
900031f4:	2702      	movs	r7, #2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
900031f6:	4628      	mov	r0, r5
  pLayerCfg.ImageHeight = 272;
900031f8:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowX0 = 0;
900031fa:	940a      	str	r4, [sp, #40]	; 0x28
  pLayerCfg.Backcolor.Blue = 0;
900031fc:	f8ad 4058 	strh.w	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Red = 0;
90003200:	f88d 405a 	strb.w	r4, [sp, #90]	; 0x5a
  pLayerCfg.WindowY0 = 0;
90003204:	e9cd 240b 	strd	r2, r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha0 = 0;
90003208:	e9cd 140f 	strd	r1, r4, [sp, #60]	; 0x3c
  pLayerCfg.ImageWidth = 480;
9000320c:	e9cd 4213 	strd	r4, r2, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003210:	a90a      	add	r1, sp, #40	; 0x28
90003212:	4622      	mov	r2, r4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003214:	e9cd 370d 	strd	r3, r7, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003218:	e9cd a911 	strd	sl, r9, [sp, #68]	; 0x44
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
9000321c:	f004 ffb9 	bl	90008192 <HAL_LTDC_ConfigLayer>
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
90003220:	4632      	mov	r2, r6
90003222:	a917      	add	r1, sp, #92	; 0x5c
90003224:	4628      	mov	r0, r5
90003226:	e019      	b.n	9000325c <main+0x3ac>
90003228:	03000012 	.word	0x03000012
9000322c:	01010001 	.word	0x01010001
90003230:	e000ed00 	.word	0xe000ed00
90003234:	58024400 	.word	0x58024400
90003238:	58020c00 	.word	0x58020c00
9000323c:	58022000 	.word	0x58022000
90003240:	58022800 	.word	0x58022800
90003244:	58020000 	.word	0x58020000
90003248:	58022400 	.word	0x58022400
9000324c:	24012e0c 	.word	0x24012e0c
90003250:	58024c00 	.word	0x58024c00
90003254:	24012e38 	.word	0x24012e38
90003258:	50001000 	.word	0x50001000
  hdma2d.Instance = DMA2D;
9000325c:	4d4d      	ldr	r5, [pc, #308]	; (90003394 <main+0x4e4>)
  pLayerCfg1.Backcolor.Blue = 0;
9000325e:	f8ad 408c 	strh.w	r4, [sp, #140]	; 0x8c
  pLayerCfg1.Backcolor.Red = 0;
90003262:	f88d 408e 	strb.w	r4, [sp, #142]	; 0x8e
  pLayerCfg1.WindowX1 = 0;
90003266:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  pLayerCfg1.WindowY1 = 0;
9000326a:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  pLayerCfg1.Alpha = 0;
9000326e:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  pLayerCfg1.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003272:	e9cd 4a1d 	strd	r4, sl, [sp, #116]	; 0x74
  pLayerCfg1.FBStartAdress = 0;
90003276:	e9cd 941f 	strd	r9, r4, [sp, #124]	; 0x7c
  pLayerCfg1.ImageHeight = 0;
9000327a:	e9cd 4421 	strd	r4, r4, [sp, #132]	; 0x84
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
9000327e:	f004 ff88 	bl	90008192 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003282:	4b45      	ldr	r3, [pc, #276]	; (90003398 <main+0x4e8>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003284:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003286:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003288:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
9000328c:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003290:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.Mode = DMA2D_M2M;
90003294:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
90003298:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
9000329c:	f003 fff4 	bl	90007288 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
900032a0:	4631      	mov	r1, r6
900032a2:	4628      	mov	r0, r5
  huart3.Instance = USART3;
900032a4:	4d3d      	ldr	r5, [pc, #244]	; (9000339c <main+0x4ec>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
900032a6:	f004 f8b9 	bl	9000741c <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
900032aa:	483d      	ldr	r0, [pc, #244]	; (900033a0 <main+0x4f0>)
900032ac:	4b3d      	ldr	r3, [pc, #244]	; (900033a4 <main+0x4f4>)
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900032ae:	f04f 0c10 	mov.w	ip, #16
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
900032b2:	f44f 6e00 	mov.w	lr, #2048	; 0x800
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
900032b6:	a917      	add	r1, sp, #92	; 0x5c
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
900032b8:	6284      	str	r4, [r0, #40]	; 0x28
  SdramTiming.LoadToActiveDelay = 2;
900032ba:	9717      	str	r7, [sp, #92]	; 0x5c
  hsdram2.Init.SDBank = FMC_SDRAM_BANK2;
900032bc:	e9c0 3600 	strd	r3, r6, [r0]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900032c0:	2340      	movs	r3, #64	; 0x40
900032c2:	e9c0 c304 	strd	ip, r3, [r0, #16]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
900032c6:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram2.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900032ca:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
900032ce:	f44f 5380 	mov.w	r3, #4096	; 0x1000
900032d2:	e9c0 e308 	strd	lr, r3, [r0, #32]
  SdramTiming.ExitSelfRefreshDelay = 7;
900032d6:	2307      	movs	r3, #7
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
900032d8:	e9c0 4802 	strd	r4, r8, [r0, #8]
  SdramTiming.SelfRefreshTime = 4;
900032dc:	e9cd 3818 	strd	r3, r8, [sp, #96]	; 0x60
  SdramTiming.WriteRecoveryTime = 5;
900032e0:	e9cd 391a 	strd	r3, r9, [sp, #104]	; 0x68
  SdramTiming.RCDDelay = 2;
900032e4:	e9cd 771c 	strd	r7, r7, [sp, #112]	; 0x70
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
900032e8:	f006 fc26 	bl	90009b38 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
900032ec:	4620      	mov	r0, r4
900032ee:	f003 f9b1 	bl	90006654 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
900032f2:	4620      	mov	r0, r4
900032f4:	f003 f9f8 	bl	900066e8 <BSP_SDRAM_Init>
  huart3.Init.BaudRate = 115200;
900032f8:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 900033c4 <main+0x514>
900032fc:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  if (HAL_UART_Init(&huart3) != HAL_OK)
90003300:	4628      	mov	r0, r5
  huart3.Init.Parity = UART_PARITY_NONE;
90003302:	612c      	str	r4, [r5, #16]
  huart3.Init.BaudRate = 115200;
90003304:	e9c5 8300 	strd	r8, r3, [r5]
  huart3.Init.Mode = UART_MODE_TX_RX;
90003308:	230c      	movs	r3, #12
  huart3.Init.StopBits = UART_STOPBITS_1;
9000330a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
9000330e:	e9c5 3405 	strd	r3, r4, [r5, #20]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
90003312:	e9c5 4407 	strd	r4, r4, [r5, #28]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
90003316:	e9c5 6409 	strd	r6, r4, [r5, #36]	; 0x24
  if (HAL_UART_Init(&huart3) != HAL_OK)
9000331a:	f007 fc38 	bl	9000ab8e <HAL_UART_Init>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
9000331e:	4621      	mov	r1, r4
90003320:	4628      	mov	r0, r5
90003322:	f007 fd37 	bl	9000ad94 <HAL_UARTEx_SetTxFifoThreshold>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
90003326:	4621      	mov	r1, r4
90003328:	4628      	mov	r0, r5
9000332a:	f007 fd57 	bl	9000addc <HAL_UARTEx_SetRxFifoThreshold>
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
9000332e:	4628      	mov	r0, r5
90003330:	f007 fd15 	bl	9000ad5e <HAL_UARTEx_DisableFifoMode>
  MX_TouchGFX_Init();
90003334:	f7fd f9c9 	bl	900006ca <MX_TouchGFX_Init>
  USART_ReceiveData();
90003338:	f7ff fdb0 	bl	90002e9c <USART_ReceiveData>
  uint8_t data[] = "HELLO WORLD \r\n";
9000333c:	4b1a      	ldr	r3, [pc, #104]	; (900033a8 <main+0x4f8>)
9000333e:	aa17      	add	r2, sp, #92	; 0x5c
90003340:	f103 0508 	add.w	r5, r3, #8
90003344:	6818      	ldr	r0, [r3, #0]
90003346:	3308      	adds	r3, #8
90003348:	f853 1c04 	ldr.w	r1, [r3, #-4]
9000334c:	4614      	mov	r4, r2
9000334e:	42ab      	cmp	r3, r5
90003350:	c403      	stmia	r4!, {r0, r1}
90003352:	4622      	mov	r2, r4
90003354:	d1f6      	bne.n	90003344 <main+0x494>
90003356:	6818      	ldr	r0, [r3, #0]
  HAL_UART_Transmit (&huart3, data, sizeof (data), 10);
90003358:	220f      	movs	r2, #15
  uint8_t data[] = "HELLO WORLD \r\n";
9000335a:	8899      	ldrh	r1, [r3, #4]
9000335c:	799b      	ldrb	r3, [r3, #6]
9000335e:	6020      	str	r0, [r4, #0]
90003360:	80a1      	strh	r1, [r4, #4]
  HAL_UART_Transmit (&huart3, data, sizeof (data), 10);
90003362:	a917      	add	r1, sp, #92	; 0x5c
  uint8_t data[] = "HELLO WORLD \r\n";
90003364:	71a3      	strb	r3, [r4, #6]
  HAL_UART_Transmit (&huart3, data, sizeof (data), 10);
90003366:	230a      	movs	r3, #10
90003368:	480c      	ldr	r0, [pc, #48]	; (9000339c <main+0x4ec>)
9000336a:	f007 fb7e 	bl	9000aa6a <HAL_UART_Transmit>
  osKernelInitialize();
9000336e:	f007 fe03 	bl	9000af78 <osKernelInitialize>
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003372:	4a0e      	ldr	r2, [pc, #56]	; (900033ac <main+0x4fc>)
90003374:	2100      	movs	r1, #0
90003376:	480e      	ldr	r0, [pc, #56]	; (900033b0 <main+0x500>)
90003378:	f007 fe2a 	bl	9000afd0 <osThreadNew>
9000337c:	4b0d      	ldr	r3, [pc, #52]	; (900033b4 <main+0x504>)
  myTask02Handle = osThreadNew(StartTask02, NULL, &myTask02_attributes);
9000337e:	4a0e      	ldr	r2, [pc, #56]	; (900033b8 <main+0x508>)
90003380:	2100      	movs	r1, #0
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003382:	6018      	str	r0, [r3, #0]
  myTask02Handle = osThreadNew(StartTask02, NULL, &myTask02_attributes);
90003384:	480d      	ldr	r0, [pc, #52]	; (900033bc <main+0x50c>)
90003386:	f007 fe23 	bl	9000afd0 <osThreadNew>
9000338a:	4b0d      	ldr	r3, [pc, #52]	; (900033c0 <main+0x510>)
9000338c:	6018      	str	r0, [r3, #0]
  osKernelStart();
9000338e:	f007 fe05 	bl	9000af9c <osKernelStart>
  while (1)
90003392:	e7fe      	b.n	90003392 <main+0x4e2>
90003394:	24012f18 	.word	0x24012f18
90003398:	52001000 	.word	0x52001000
9000339c:	24012d7c 	.word	0x24012d7c
900033a0:	24012ee0 	.word	0x24012ee0
900033a4:	52004140 	.word	0x52004140
900033a8:	9002156c 	.word	0x9002156c
900033ac:	9002158c 	.word	0x9002158c
900033b0:	900006cf 	.word	0x900006cf
900033b4:	24012e30 	.word	0x24012e30
900033b8:	900215b0 	.word	0x900215b0
900033bc:	90002dc9 	.word	0x90002dc9
900033c0:	24012f14 	.word	0x24012f14
900033c4:	40004800 	.word	0x40004800

900033c8 <HAL_UART_RxCpltCallback>:
{
900033c8:	b570      	push	{r4, r5, r6, lr}
900033ca:	4c11      	ldr	r4, [pc, #68]	; (90003410 <HAL_UART_RxCpltCallback+0x48>)
				token=strtok(NULL," ");
900033cc:	4e11      	ldr	r6, [pc, #68]	; (90003414 <HAL_UART_RxCpltCallback+0x4c>)
900033ce:	4625      	mov	r5, r4
		token = strtok(receive_byte," ");
900033d0:	4910      	ldr	r1, [pc, #64]	; (90003414 <HAL_UART_RxCpltCallback+0x4c>)
900033d2:	480f      	ldr	r0, [pc, #60]	; (90003410 <HAL_UART_RxCpltCallback+0x48>)
900033d4:	f01c fbe6 	bl	9001fba4 <strtok>
				while(token !=NULL)
900033d8:	b970      	cbnz	r0, 900033f8 <HAL_UART_RxCpltCallback+0x30>
		mycount[0]=receive_byte[0];
900033da:	4b0f      	ldr	r3, [pc, #60]	; (90003418 <HAL_UART_RxCpltCallback+0x50>)
900033dc:	782a      	ldrb	r2, [r5, #0]
	HAL_UART_Receive_IT(&huart3,receive_byte,6);
900033de:	490c      	ldr	r1, [pc, #48]	; (90003410 <HAL_UART_RxCpltCallback+0x48>)
		mycount[0]=receive_byte[0];
900033e0:	701a      	strb	r2, [r3, #0]
		mycount[1]=receive_byte[1];
900033e2:	786a      	ldrb	r2, [r5, #1]
	HAL_UART_Receive_IT(&huart3,receive_byte,6);
900033e4:	480d      	ldr	r0, [pc, #52]	; (9000341c <HAL_UART_RxCpltCallback+0x54>)
		mycount[1]=receive_byte[1];
900033e6:	705a      	strb	r2, [r3, #1]
		flag=1;
900033e8:	2201      	movs	r2, #1
900033ea:	4b0d      	ldr	r3, [pc, #52]	; (90003420 <HAL_UART_RxCpltCallback+0x58>)
}
900033ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		flag=1;
900033f0:	601a      	str	r2, [r3, #0]
	HAL_UART_Receive_IT(&huart3,receive_byte,6);
900033f2:	2206      	movs	r2, #6
900033f4:	f007 bc66 	b.w	9000acc4 <HAL_UART_Receive_IT>
				receive_byte[i++] = (int)strtol(token,NULL,16);
900033f8:	2210      	movs	r2, #16
900033fa:	2100      	movs	r1, #0
900033fc:	f01c fcb2 	bl	9001fd64 <strtol>
				token=strtok(NULL," ");
90003400:	4631      	mov	r1, r6
				receive_byte[i++] = (int)strtol(token,NULL,16);
90003402:	f804 0b01 	strb.w	r0, [r4], #1
				token=strtok(NULL," ");
90003406:	2000      	movs	r0, #0
90003408:	f01c fbcc 	bl	9001fba4 <strtok>
9000340c:	e7e4      	b.n	900033d8 <HAL_UART_RxCpltCallback+0x10>
9000340e:	bf00      	nop
90003410:	240011ec 	.word	0x240011ec
90003414:	90023f88 	.word	0x90023f88
90003418:	2400123c 	.word	0x2400123c
9000341c:	24012d7c 	.word	0x24012d7c
90003420:	24012e34 	.word	0x24012e34

90003424 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90003424:	6802      	ldr	r2, [r0, #0]
90003426:	4b03      	ldr	r3, [pc, #12]	; (90003434 <HAL_TIM_PeriodElapsedCallback+0x10>)
90003428:	429a      	cmp	r2, r3
9000342a:	d101      	bne.n	90003430 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
9000342c:	f003 bb9a 	b.w	90006b64 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90003430:	4770      	bx	lr
90003432:	bf00      	nop
90003434:	40001000 	.word	0x40001000

90003438 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90003438:	4770      	bx	lr
	...

9000343c <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000343c:	4b0a      	ldr	r3, [pc, #40]	; (90003468 <HAL_MspInit+0x2c>)
{
9000343e:	b082      	sub	sp, #8

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003440:	210f      	movs	r1, #15
90003442:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003446:	f8d3 20f4 	ldr.w	r2, [r3, #244]	; 0xf4
9000344a:	f042 0202 	orr.w	r2, r2, #2
9000344e:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003452:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003454:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
90003458:	f003 0302 	and.w	r3, r3, #2
9000345c:	9301      	str	r3, [sp, #4]
9000345e:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90003460:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003462:	f003 bbbb 	b.w	90006bdc <HAL_NVIC_SetPriority>
90003466:	bf00      	nop
90003468:	58024400 	.word	0x58024400

9000346c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
9000346c:	6802      	ldr	r2, [r0, #0]
{
9000346e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
90003470:	4b09      	ldr	r3, [pc, #36]	; (90003498 <HAL_CRC_MspInit+0x2c>)
90003472:	429a      	cmp	r2, r3
90003474:	d10d      	bne.n	90003492 <HAL_CRC_MspInit+0x26>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90003476:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
9000347a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000347e:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
90003482:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003486:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
9000348a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
9000348e:	9301      	str	r3, [sp, #4]
90003490:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
90003492:	b002      	add	sp, #8
90003494:	4770      	bx	lr
90003496:	bf00      	nop
90003498:	58024c00 	.word	0x58024c00

9000349c <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
9000349c:	4b0f      	ldr	r3, [pc, #60]	; (900034dc <HAL_DMA2D_MspInit+0x40>)
{
9000349e:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
900034a0:	6802      	ldr	r2, [r0, #0]
900034a2:	429a      	cmp	r2, r3
900034a4:	d117      	bne.n	900034d6 <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900034a6:	4b0e      	ldr	r3, [pc, #56]	; (900034e0 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900034a8:	2105      	movs	r1, #5
900034aa:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
900034ac:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900034b0:	f042 0210 	orr.w	r2, r2, #16
900034b4:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900034b8:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
900034ba:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
900034be:	f003 0310 	and.w	r3, r3, #16
900034c2:	9301      	str	r3, [sp, #4]
900034c4:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900034c6:	f003 fb89 	bl	90006bdc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900034ca:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
900034cc:	b003      	add	sp, #12
900034ce:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900034d2:	f003 bbb5 	b.w	90006c40 <HAL_NVIC_EnableIRQ>
}
900034d6:	b003      	add	sp, #12
900034d8:	f85d fb04 	ldr.w	pc, [sp], #4
900034dc:	52001000 	.word	0x52001000
900034e0:	58024400 	.word	0x58024400

900034e4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
900034e4:	b570      	push	{r4, r5, r6, lr}
900034e6:	b0ba      	sub	sp, #232	; 0xe8
900034e8:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900034ea:	2214      	movs	r2, #20
900034ec:	2100      	movs	r1, #0
900034ee:	a806      	add	r0, sp, #24
900034f0:	f01b ff64 	bl	9001f3bc <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900034f4:	22bc      	movs	r2, #188	; 0xbc
900034f6:	2100      	movs	r1, #0
900034f8:	a80b      	add	r0, sp, #44	; 0x2c
900034fa:	f01b ff5f 	bl	9001f3bc <memset>
  if(hltdc->Instance==LTDC)
900034fe:	6822      	ldr	r2, [r4, #0]
90003500:	4b48      	ldr	r3, [pc, #288]	; (90003624 <HAL_LTDC_MspInit+0x140>)
90003502:	429a      	cmp	r2, r3
90003504:	f040 808b 	bne.w	9000361e <HAL_LTDC_MspInit+0x13a>
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003508:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
    PeriphClkInitStruct.PLL3.PLL3M = 5;
    PeriphClkInitStruct.PLL3.PLL3N = 160;
9000350c:	2105      	movs	r1, #5
    PeriphClkInitStruct.PLL3.PLL3P = 2;
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
    PeriphClkInitStruct.PLL3.PLL3R = 83;
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_2;
9000350e:	2053      	movs	r0, #83	; 0x53
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003510:	930b      	str	r3, [sp, #44]	; 0x2c
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003512:	23a0      	movs	r3, #160	; 0xa0
90003514:	e9cd 1314 	strd	r1, r3, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003518:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
9000351a:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_2;
9000351e:	f44f 6300 	mov.w	r3, #2048	; 0x800
90003522:	e9cd 0318 	strd	r0, r3, [sp, #96]	; 0x60
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOWIDE;
90003526:	2300      	movs	r3, #0
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003528:	a80b      	add	r0, sp, #44	; 0x2c
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
9000352a:	e9cd 331a 	strd	r3, r3, [sp, #104]	; 0x68
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000352e:	f005 fceb 	bl	90008f08 <HAL_RCCEx_PeriphCLKConfig>
90003532:	b108      	cbz	r0, 90003538 <HAL_LTDC_MspInit+0x54>
    {
      Error_Handler();
90003534:	f7ff ff80 	bl	90003438 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
90003538:	4b3b      	ldr	r3, [pc, #236]	; (90003628 <HAL_LTDC_MspInit+0x144>)
    PJ3     ------> LTDC_R4
    PJ4     ------> LTDC_R5
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
                          |GPIO_PIN_7|GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000353a:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000353c:	2500      	movs	r5, #0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000353e:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
90003540:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003544:	a906      	add	r1, sp, #24
90003546:	4839      	ldr	r0, [pc, #228]	; (9000362c <HAL_LTDC_MspInit+0x148>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90003548:	f042 0208 	orr.w	r2, r2, #8
9000354c:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
90003550:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
90003554:	f002 0208 	and.w	r2, r2, #8
90003558:	9201      	str	r2, [sp, #4]
9000355a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOK_CLK_ENABLE();
9000355c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003560:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
90003564:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003568:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000356c:	f402 6280 	and.w	r2, r2, #1024	; 0x400
90003570:	9202      	str	r2, [sp, #8]
90003572:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOI_CLK_ENABLE();
90003574:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003578:	f442 7280 	orr.w	r2, r2, #256	; 0x100
9000357c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003580:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003584:	f402 7280 	and.w	r2, r2, #256	; 0x100
90003588:	9203      	str	r2, [sp, #12]
9000358a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
9000358c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003590:	f442 7200 	orr.w	r2, r2, #512	; 0x200
90003594:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003598:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000359c:	f402 7200 	and.w	r2, r2, #512	; 0x200
900035a0:	9204      	str	r2, [sp, #16]
900035a2:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900035a4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900035a8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900035ac:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900035b0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900035b4:	960a      	str	r6, [sp, #40]	; 0x28
    __HAL_RCC_GPIOH_CLK_ENABLE();
900035b6:	f003 0380 	and.w	r3, r3, #128	; 0x80
900035ba:	9305      	str	r3, [sp, #20]
900035bc:	9b05      	ldr	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900035be:	23fc      	movs	r3, #252	; 0xfc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900035c0:	e9cd 5408 	strd	r5, r4, [sp, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900035c4:	e9cd 3406 	strd	r3, r4, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900035c8:	f003 ff88 	bl	900074dc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900035cc:	f24d 2303 	movw	r3, #53763	; 0xd203
                          |GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900035d0:	a906      	add	r1, sp, #24
900035d2:	4817      	ldr	r0, [pc, #92]	; (90003630 <HAL_LTDC_MspInit+0x14c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900035d4:	960a      	str	r6, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900035d6:	e9cd 3406 	strd	r3, r4, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900035da:	e9cd 5408 	strd	r5, r4, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900035de:	f003 ff7d 	bl	900074dc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900035e2:	f64f 73fb 	movw	r3, #65531	; 0xfffb
                          |GPIO_PIN_5|GPIO_PIN_3|GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900035e6:	a906      	add	r1, sp, #24
900035e8:	4812      	ldr	r0, [pc, #72]	; (90003634 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900035ea:	960a      	str	r6, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900035ec:	e9cd 3406 	strd	r3, r4, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900035f0:	e9cd 5408 	strd	r5, r4, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900035f4:	f003 ff72 	bl	900074dc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
900035f8:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900035fc:	a906      	add	r1, sp, #24
900035fe:	480e      	ldr	r0, [pc, #56]	; (90003638 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003600:	960a      	str	r6, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003602:	e9cd 3406 	strd	r3, r4, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90003606:	e9cd 5408 	strd	r5, r4, [sp, #32]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000360a:	f003 ff67 	bl	900074dc <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
9000360e:	2058      	movs	r0, #88	; 0x58
90003610:	462a      	mov	r2, r5
90003612:	2105      	movs	r1, #5
90003614:	f003 fae2 	bl	90006bdc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90003618:	2058      	movs	r0, #88	; 0x58
9000361a:	f003 fb11 	bl	90006c40 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
9000361e:	b03a      	add	sp, #232	; 0xe8
90003620:	bd70      	pop	{r4, r5, r6, pc}
90003622:	bf00      	nop
90003624:	50001000 	.word	0x50001000
90003628:	58024400 	.word	0x58024400
9000362c:	58022800 	.word	0x58022800
90003630:	58022000 	.word	0x58022000
90003634:	58022400 	.word	0x58022400
90003638:	58021c00 	.word	0x58021c00

9000363c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
9000363c:	b510      	push	{r4, lr}
9000363e:	b0b6      	sub	sp, #216	; 0xd8
90003640:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003642:	2214      	movs	r2, #20
90003644:	2100      	movs	r1, #0
90003646:	a802      	add	r0, sp, #8
90003648:	f01b feb8 	bl	9001f3bc <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000364c:	22bc      	movs	r2, #188	; 0xbc
9000364e:	2100      	movs	r1, #0
90003650:	a807      	add	r0, sp, #28
90003652:	f01b feb3 	bl	9001f3bc <memset>
  if(huart->Instance==USART3)
90003656:	6822      	ldr	r2, [r4, #0]
90003658:	4b1e      	ldr	r3, [pc, #120]	; (900036d4 <HAL_UART_MspInit+0x98>)
9000365a:	429a      	cmp	r2, r3
9000365c:	d138      	bne.n	900036d0 <HAL_UART_MspInit+0x94>
  /* USER CODE BEGIN USART3_MspInit 0 */

  /* USER CODE END USART3_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
9000365e:	2302      	movs	r3, #2
    PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003660:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
90003662:	9307      	str	r3, [sp, #28]
    PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
90003664:	2300      	movs	r3, #0
90003666:	9324      	str	r3, [sp, #144]	; 0x90
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003668:	f005 fc4e 	bl	90008f08 <HAL_RCCEx_PeriphCLKConfig>
9000366c:	b108      	cbz	r0, 90003672 <HAL_UART_MspInit+0x36>
    {
      Error_Handler();
9000366e:	f7ff fee3 	bl	90003438 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART3_CLK_ENABLE();
90003672:	4b19      	ldr	r3, [pc, #100]	; (900036d8 <HAL_UART_MspInit+0x9c>)
    PB10     ------> USART3_TX
    PB11     ------> USART3_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003674:	2400      	movs	r4, #0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003676:	a902      	add	r1, sp, #8
90003678:	4818      	ldr	r0, [pc, #96]	; (900036dc <HAL_UART_MspInit+0xa0>)
    __HAL_RCC_USART3_CLK_ENABLE();
9000367a:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
9000367e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
90003682:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90003686:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
9000368a:	f402 2280 	and.w	r2, r2, #262144	; 0x40000
9000368e:	9200      	str	r2, [sp, #0]
90003690:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
90003692:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003696:	f042 0202 	orr.w	r2, r2, #2
9000369a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000369e:	f44f 6240 	mov.w	r2, #3072	; 0xc00
    __HAL_RCC_GPIOB_CLK_ENABLE();
900036a2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
900036a6:	f003 0302 	and.w	r3, r3, #2
900036aa:	9301      	str	r3, [sp, #4]
900036ac:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900036ae:	2302      	movs	r3, #2
900036b0:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
900036b4:	2307      	movs	r3, #7
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
900036b6:	e9cd 4404 	strd	r4, r4, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
900036ba:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
900036bc:	f003 ff0e 	bl	900074dc <HAL_GPIO_Init>

    /* USART3 interrupt Init */
    HAL_NVIC_SetPriority(USART3_IRQn, 5, 0);
900036c0:	2027      	movs	r0, #39	; 0x27
900036c2:	4622      	mov	r2, r4
900036c4:	2105      	movs	r1, #5
900036c6:	f003 fa89 	bl	90006bdc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
900036ca:	2027      	movs	r0, #39	; 0x27
900036cc:	f003 fab8 	bl	90006c40 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
900036d0:	b036      	add	sp, #216	; 0xd8
900036d2:	bd10      	pop	{r4, pc}
900036d4:	40004800 	.word	0x40004800
900036d8:	58024400 	.word	0x58024400
900036dc:	58020400 	.word	0x58020400

900036e0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900036e0:	b5f0      	push	{r4, r5, r6, r7, lr}
900036e2:	b0b7      	sub	sp, #220	; 0xdc
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900036e4:	2214      	movs	r2, #20
900036e6:	2100      	movs	r1, #0
900036e8:	a802      	add	r0, sp, #8
900036ea:	f01b fe67 	bl	9001f3bc <memset>
  if (FMC_Initialized) {
900036ee:	4b2f      	ldr	r3, [pc, #188]	; (900037ac <HAL_SDRAM_MspInit+0xcc>)
900036f0:	681c      	ldr	r4, [r3, #0]
900036f2:	2c00      	cmp	r4, #0
900036f4:	d157      	bne.n	900037a6 <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
900036f6:	2201      	movs	r2, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900036f8:	4621      	mov	r1, r4
900036fa:	a808      	add	r0, sp, #32
  FMC_Initialized = 1;
900036fc:	601a      	str	r2, [r3, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900036fe:	22b8      	movs	r2, #184	; 0xb8
90003700:	f01b fe5c 	bl	9001f3bc <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90003704:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003708:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.FmcClockSelection = RCC_FMCCLKSOURCE_D1HCLK;
9000370a:	9418      	str	r4, [sp, #96]	; 0x60
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000370c:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000370e:	f005 fbfb 	bl	90008f08 <HAL_RCCEx_PeriphCLKConfig>
90003712:	b108      	cbz	r0, 90003718 <HAL_SDRAM_MspInit+0x38>
      Error_Handler();
90003714:	f7ff fe90 	bl	90003438 <Error_Handler>
  __HAL_RCC_FMC_CLK_ENABLE();
90003718:	4b25      	ldr	r3, [pc, #148]	; (900037b0 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000371a:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000371c:	2600      	movs	r6, #0
9000371e:	2503      	movs	r5, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90003720:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003724:	240c      	movs	r4, #12
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90003726:	a902      	add	r1, sp, #8
90003728:	4822      	ldr	r0, [pc, #136]	; (900037b4 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000372a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000372e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90003732:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003736:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
90003738:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
9000373c:	9301      	str	r3, [sp, #4]
9000373e:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003740:	f64f 7383 	movw	r3, #65411	; 0xff83
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003744:	e9cd 6504 	strd	r6, r5, [sp, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003748:	e9cd 3702 	strd	r3, r7, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
9000374c:	f003 fec6 	bl	900074dc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90003750:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90003754:	a902      	add	r1, sp, #8
90003756:	4818      	ldr	r0, [pc, #96]	; (900037b8 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003758:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000375a:	e9cd 3702 	strd	r3, r7, [sp, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000375e:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90003762:	f003 febb 	bl	900074dc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003766:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
9000376a:	a902      	add	r1, sp, #8
9000376c:	4813      	ldr	r0, [pc, #76]	; (900037bc <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000376e:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003770:	e9cd 3702 	strd	r3, r7, [sp, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003774:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003778:	f003 feb0 	bl	900074dc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000377c:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003780:	a902      	add	r1, sp, #8
90003782:	480f      	ldr	r0, [pc, #60]	; (900037c0 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003784:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003786:	e9cd 3702 	strd	r3, r7, [sp, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000378a:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000378e:	f003 fea5 	bl	900074dc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90003792:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003794:	a902      	add	r1, sp, #8
90003796:	480b      	ldr	r0, [pc, #44]	; (900037c4 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003798:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000379a:	e9cd 3702 	strd	r3, r7, [sp, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000379e:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900037a2:	f003 fe9b 	bl	900074dc <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
900037a6:	b037      	add	sp, #220	; 0xdc
900037a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900037aa:	bf00      	nop
900037ac:	240011f8 	.word	0x240011f8
900037b0:	58024400 	.word	0x58024400
900037b4:	58021000 	.word	0x58021000
900037b8:	58021800 	.word	0x58021800
900037bc:	58020c00 	.word	0x58020c00
900037c0:	58021400 	.word	0x58021400
900037c4:	58021c00 	.word	0x58021c00

900037c8 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
900037c8:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
900037ca:	4b13      	ldr	r3, [pc, #76]	; (90003818 <HAL_SDRAM_MspDeInit+0x50>)
900037cc:	681a      	ldr	r2, [r3, #0]
900037ce:	bb12      	cbnz	r2, 90003816 <HAL_SDRAM_MspDeInit+0x4e>
  FMC_DeInitialized = 1;
900037d0:	2201      	movs	r2, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900037d2:	f64f 7183 	movw	r1, #65411	; 0xff83
900037d6:	4811      	ldr	r0, [pc, #68]	; (9000381c <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
900037d8:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
900037da:	4a11      	ldr	r2, [pc, #68]	; (90003820 <HAL_SDRAM_MspDeInit+0x58>)
900037dc:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
900037e0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
900037e4:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900037e8:	f003 ff5e 	bl	900076a8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900037ec:	f248 1133 	movw	r1, #33075	; 0x8133
900037f0:	480c      	ldr	r0, [pc, #48]	; (90003824 <HAL_SDRAM_MspDeInit+0x5c>)
900037f2:	f003 ff59 	bl	900076a8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900037f6:	f24c 7103 	movw	r1, #50947	; 0xc703
900037fa:	480b      	ldr	r0, [pc, #44]	; (90003828 <HAL_SDRAM_MspDeInit+0x60>)
900037fc:	f003 ff54 	bl	900076a8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90003800:	f64f 013f 	movw	r1, #63551	; 0xf83f
90003804:	4809      	ldr	r0, [pc, #36]	; (9000382c <HAL_SDRAM_MspDeInit+0x64>)
90003806:	f003 ff4f 	bl	900076a8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
9000380a:	21e0      	movs	r1, #224	; 0xe0
9000380c:	4808      	ldr	r0, [pc, #32]	; (90003830 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
9000380e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90003812:	f003 bf49 	b.w	900076a8 <HAL_GPIO_DeInit>
}
90003816:	bd08      	pop	{r3, pc}
90003818:	240011f4 	.word	0x240011f4
9000381c:	58021000 	.word	0x58021000
90003820:	58024400 	.word	0x58024400
90003824:	58021800 	.word	0x58021800
90003828:	58020c00 	.word	0x58020c00
9000382c:	58021400 	.word	0x58021400
90003830:	58021c00 	.word	0x58021c00

90003834 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
90003834:	280f      	cmp	r0, #15
{
90003836:	b510      	push	{r4, lr}
90003838:	4604      	mov	r4, r0
9000383a:	b08a      	sub	sp, #40	; 0x28
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
9000383c:	d902      	bls.n	90003844 <HAL_InitTick+0x10>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
9000383e:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
90003840:	b00a      	add	sp, #40	; 0x28
90003842:	bd10      	pop	{r4, pc}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
90003844:	4601      	mov	r1, r0
90003846:	2200      	movs	r2, #0
90003848:	2036      	movs	r0, #54	; 0x36
9000384a:	f003 f9c7 	bl	90006bdc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
9000384e:	2036      	movs	r0, #54	; 0x36
90003850:	f003 f9f6 	bl	90006c40 <HAL_NVIC_EnableIRQ>
    uwTickPrio = TickPriority;
90003854:	4b18      	ldr	r3, [pc, #96]	; (900038b8 <HAL_InitTick+0x84>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90003856:	4669      	mov	r1, sp
90003858:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
9000385a:	601c      	str	r4, [r3, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
9000385c:	4b17      	ldr	r3, [pc, #92]	; (900038bc <HAL_InitTick+0x88>)
9000385e:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90003862:	f042 0210 	orr.w	r2, r2, #16
90003866:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
9000386a:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
9000386e:	f003 0310 	and.w	r3, r3, #16
90003872:	9301      	str	r3, [sp, #4]
90003874:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90003876:	f005 fa2d 	bl	90008cd4 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
9000387a:	9b07      	ldr	r3, [sp, #28]
9000387c:	b9c3      	cbnz	r3, 900038b0 <HAL_InitTick+0x7c>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
9000387e:	f005 fa05 	bl	90008c8c <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
90003882:	4c0f      	ldr	r4, [pc, #60]	; (900038c0 <HAL_InitTick+0x8c>)
90003884:	4b0f      	ldr	r3, [pc, #60]	; (900038c4 <HAL_InitTick+0x90>)
90003886:	6023      	str	r3, [r4, #0]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90003888:	f240 33e7 	movw	r3, #999	; 0x3e7
9000388c:	60e3      	str	r3, [r4, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000388e:	4b0e      	ldr	r3, [pc, #56]	; (900038c8 <HAL_InitTick+0x94>)
90003890:	fbb0 f0f3 	udiv	r0, r0, r3
90003894:	3801      	subs	r0, #1
  htim6.Init.ClockDivision = 0;
90003896:	2300      	movs	r3, #0
  htim6.Init.Prescaler = uwPrescalerValue;
90003898:	6060      	str	r0, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
9000389a:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
9000389c:	6123      	str	r3, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000389e:	60a3      	str	r3, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900038a0:	f006 fb0c 	bl	90009ebc <HAL_TIM_Base_Init>
900038a4:	2800      	cmp	r0, #0
900038a6:	d1ca      	bne.n	9000383e <HAL_InitTick+0xa>
    return HAL_TIM_Base_Start_IT(&htim6);
900038a8:	4620      	mov	r0, r4
900038aa:	f006 f9b3 	bl	90009c14 <HAL_TIM_Base_Start_IT>
900038ae:	e7c7      	b.n	90003840 <HAL_InitTick+0xc>
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
900038b0:	f005 f9ec 	bl	90008c8c <HAL_RCC_GetPCLK1Freq>
900038b4:	0040      	lsls	r0, r0, #1
900038b6:	e7e4      	b.n	90003882 <HAL_InitTick+0x4e>
900038b8:	24000048 	.word	0x24000048
900038bc:	58024400 	.word	0x58024400
900038c0:	24012fcc 	.word	0x24012fcc
900038c4:	40001000 	.word	0x40001000
900038c8:	000f4240 	.word	0x000f4240

900038cc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
900038cc:	4770      	bx	lr

900038ce <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
900038ce:	e7fe      	b.n	900038ce <HardFault_Handler>

900038d0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
900038d0:	e7fe      	b.n	900038d0 <MemManage_Handler>

900038d2 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
900038d2:	e7fe      	b.n	900038d2 <BusFault_Handler>

900038d4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
900038d4:	e7fe      	b.n	900038d4 <UsageFault_Handler>

900038d6 <DebugMon_Handler>:
900038d6:	4770      	bx	lr

900038d8 <USART3_IRQHandler>:
void USART3_IRQHandler(void)
{
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
900038d8:	4801      	ldr	r0, [pc, #4]	; (900038e0 <USART3_IRQHandler+0x8>)
900038da:	f006 bb49 	b.w	90009f70 <HAL_UART_IRQHandler>
900038de:	bf00      	nop
900038e0:	24012d7c 	.word	0x24012d7c

900038e4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
900038e4:	4801      	ldr	r0, [pc, #4]	; (900038ec <TIM6_DAC_IRQHandler+0x8>)
900038e6:	f006 b9d3 	b.w	90009c90 <HAL_TIM_IRQHandler>
900038ea:	bf00      	nop
900038ec:	24012fcc 	.word	0x24012fcc

900038f0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
900038f0:	4801      	ldr	r0, [pc, #4]	; (900038f8 <LTDC_IRQHandler+0x8>)
900038f2:	f004 bbf1 	b.w	900080d8 <HAL_LTDC_IRQHandler>
900038f6:	bf00      	nop
900038f8:	24012e38 	.word	0x24012e38

900038fc <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900038fc:	4801      	ldr	r0, [pc, #4]	; (90003904 <DMA2D_IRQHandler+0x8>)
900038fe:	f003 bd02 	b.w	90007306 <HAL_DMA2D_IRQHandler>
90003902:	bf00      	nop
90003904:	24012f18 	.word	0x24012f18

90003908 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
90003908:	2001      	movs	r0, #1
9000390a:	4770      	bx	lr

9000390c <_kill>:

int _kill(int pid, int sig)
{
9000390c:	b508      	push	{r3, lr}
	errno = EINVAL;
9000390e:	f01b fcfb 	bl	9001f308 <__errno>
90003912:	2316      	movs	r3, #22
90003914:	6003      	str	r3, [r0, #0]
	return -1;
}
90003916:	f04f 30ff 	mov.w	r0, #4294967295
9000391a:	bd08      	pop	{r3, pc}

9000391c <_exit>:

void _exit (int status)
{
9000391c:	b508      	push	{r3, lr}
	errno = EINVAL;
9000391e:	f01b fcf3 	bl	9001f308 <__errno>
90003922:	2316      	movs	r3, #22
90003924:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
90003926:	e7fe      	b.n	90003926 <_exit+0xa>

90003928 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90003928:	b570      	push	{r4, r5, r6, lr}
9000392a:	460e      	mov	r6, r1
9000392c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000392e:	2500      	movs	r5, #0
90003930:	42a5      	cmp	r5, r4
90003932:	db01      	blt.n	90003938 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
90003934:	4620      	mov	r0, r4
90003936:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
90003938:	f3af 8000 	nop.w
9000393c:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000393e:	3501      	adds	r5, #1
90003940:	e7f6      	b.n	90003930 <_read+0x8>

90003942 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90003942:	b570      	push	{r4, r5, r6, lr}
90003944:	460e      	mov	r6, r1
90003946:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003948:	2500      	movs	r5, #0
9000394a:	42a5      	cmp	r5, r4
9000394c:	db01      	blt.n	90003952 <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
9000394e:	4620      	mov	r0, r4
90003950:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
90003952:	5d70      	ldrb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003954:	3501      	adds	r5, #1
		__io_putchar(*ptr++);
90003956:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000395a:	e7f6      	b.n	9000394a <_write+0x8>

9000395c <_close>:

int _close(int file)
{
	return -1;
}
9000395c:	f04f 30ff 	mov.w	r0, #4294967295
90003960:	4770      	bx	lr

90003962 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90003962:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
90003966:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90003968:	604b      	str	r3, [r1, #4]
}
9000396a:	4770      	bx	lr

9000396c <_isatty>:

int _isatty(int file)
{
	return 1;
}
9000396c:	2001      	movs	r0, #1
9000396e:	4770      	bx	lr

90003970 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90003970:	2000      	movs	r0, #0
90003972:	4770      	bx	lr

90003974 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
90003974:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90003976:	4b0a      	ldr	r3, [pc, #40]	; (900039a0 <_sbrk+0x2c>)
{
90003978:	4602      	mov	r2, r0
	if (heap_end == 0)
9000397a:	6819      	ldr	r1, [r3, #0]
9000397c:	b909      	cbnz	r1, 90003982 <_sbrk+0xe>
		heap_end = &end;
9000397e:	4909      	ldr	r1, [pc, #36]	; (900039a4 <_sbrk+0x30>)
90003980:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
90003982:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
90003984:	4669      	mov	r1, sp
90003986:	4402      	add	r2, r0
90003988:	428a      	cmp	r2, r1
9000398a:	d906      	bls.n	9000399a <_sbrk+0x26>
	{
		errno = ENOMEM;
9000398c:	f01b fcbc 	bl	9001f308 <__errno>
90003990:	230c      	movs	r3, #12
90003992:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
90003994:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
90003998:	bd08      	pop	{r3, pc}
	heap_end += incr;
9000399a:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
9000399c:	e7fc      	b.n	90003998 <_sbrk+0x24>
9000399e:	bf00      	nop
900039a0:	240011fc 	.word	0x240011fc
900039a4:	240130f0 	.word	0x240130f0

900039a8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
900039a8:	b580      	push	{r7, lr}
900039aa:	b082      	sub	sp, #8
900039ac:	af00      	add	r7, sp, #0
900039ae:	6078      	str	r0, [r7, #4]
900039b0:	460b      	mov	r3, r1
900039b2:	807b      	strh	r3, [r7, #2]
    switch (typography)
900039b4:	887b      	ldrh	r3, [r7, #2]
900039b6:	2b00      	cmp	r3, #0
900039b8:	d104      	bne.n	900039c4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
    {
    case Typography::DEFAULT:
        // Asap_Regular_80_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
900039ba:	f001 ff4f 	bl	9000585c <_ZN17TypedTextDatabase8getFontsEv>
900039be:	4603      	mov	r3, r0
900039c0:	681b      	ldr	r3, [r3, #0]
900039c2:	e000      	b.n	900039c6 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
    default:
        return 0;
900039c4:	2300      	movs	r3, #0
    }
}
900039c6:	4618      	mov	r0, r3
900039c8:	3708      	adds	r7, #8
900039ca:	46bd      	mov	sp, r7
900039cc:	bd80      	pop	{r7, pc}
	...

900039d0 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
900039d0:	b480      	push	{r7}
900039d2:	af00      	add	r7, sp, #0
    return bitmap_database;
900039d4:	4b02      	ldr	r3, [pc, #8]	; (900039e0 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
900039d6:	4618      	mov	r0, r3
900039d8:	46bd      	mov	sp, r7
900039da:	f85d 7b04 	ldr.w	r7, [sp], #4
900039de:	4770      	bx	lr
900039e0:	900215e8 	.word	0x900215e8

900039e4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
900039e4:	b480      	push	{r7}
900039e6:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
900039e8:	2308      	movs	r3, #8
}
900039ea:	4618      	mov	r0, r3
900039ec:	46bd      	mov	sp, r7
900039ee:	f85d 7b04 	ldr.w	r7, [sp], #4
900039f2:	4770      	bx	lr

900039f4 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
900039f4:	b480      	push	{r7}
900039f6:	b083      	sub	sp, #12
900039f8:	af00      	add	r7, sp, #0
900039fa:	6078      	str	r0, [r7, #4]
    {
900039fc:	4a04      	ldr	r2, [pc, #16]	; (90003a10 <_ZN8touchgfx4FontD1Ev+0x1c>)
900039fe:	687b      	ldr	r3, [r7, #4]
90003a00:	601a      	str	r2, [r3, #0]
    }
90003a02:	687b      	ldr	r3, [r7, #4]
90003a04:	4618      	mov	r0, r3
90003a06:	370c      	adds	r7, #12
90003a08:	46bd      	mov	sp, r7
90003a0a:	f85d 7b04 	ldr.w	r7, [sp], #4
90003a0e:	4770      	bx	lr
90003a10:	90021844 	.word	0x90021844

90003a14 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
90003a14:	b580      	push	{r7, lr}
90003a16:	b082      	sub	sp, #8
90003a18:	af00      	add	r7, sp, #0
90003a1a:	6078      	str	r0, [r7, #4]
    }
90003a1c:	6878      	ldr	r0, [r7, #4]
90003a1e:	f7ff ffe9 	bl	900039f4 <_ZN8touchgfx4FontD1Ev>
90003a22:	2110      	movs	r1, #16
90003a24:	6878      	ldr	r0, [r7, #4]
90003a26:	f01b fc0e 	bl	9001f246 <_ZdlPvj>
90003a2a:	687b      	ldr	r3, [r7, #4]
90003a2c:	4618      	mov	r0, r3
90003a2e:	3708      	adds	r7, #8
90003a30:	46bd      	mov	sp, r7
90003a32:	bd80      	pop	{r7, pc}

90003a34 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90003a34:	b590      	push	{r4, r7, lr}
90003a36:	b087      	sub	sp, #28
90003a38:	af00      	add	r7, sp, #0
90003a3a:	6078      	str	r0, [r7, #4]
90003a3c:	460b      	mov	r3, r1
90003a3e:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
90003a40:	887b      	ldrh	r3, [r7, #2]
90003a42:	2b00      	cmp	r3, #0
90003a44:	d101      	bne.n	90003a4a <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
90003a46:	2300      	movs	r3, #0
90003a48:	e010      	b.n	90003a6c <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
90003a4a:	2300      	movs	r3, #0
90003a4c:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
90003a4e:	2300      	movs	r3, #0
90003a50:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90003a52:	687b      	ldr	r3, [r7, #4]
90003a54:	681b      	ldr	r3, [r3, #0]
90003a56:	3308      	adds	r3, #8
90003a58:	681c      	ldr	r4, [r3, #0]
90003a5a:	f107 030f 	add.w	r3, r7, #15
90003a5e:	f107 0210 	add.w	r2, r7, #16
90003a62:	8879      	ldrh	r1, [r7, #2]
90003a64:	6878      	ldr	r0, [r7, #4]
90003a66:	47a0      	blx	r4
90003a68:	6178      	str	r0, [r7, #20]
        return glyph;
90003a6a:	697b      	ldr	r3, [r7, #20]
    }
90003a6c:	4618      	mov	r0, r3
90003a6e:	371c      	adds	r7, #28
90003a70:	46bd      	mov	sp, r7
90003a72:	bd90      	pop	{r4, r7, pc}

90003a74 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
90003a74:	b480      	push	{r7}
90003a76:	b083      	sub	sp, #12
90003a78:	af00      	add	r7, sp, #0
90003a7a:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
90003a7c:	687b      	ldr	r3, [r7, #4]
90003a7e:	895b      	ldrh	r3, [r3, #10]
    }
90003a80:	4618      	mov	r0, r3
90003a82:	370c      	adds	r7, #12
90003a84:	46bd      	mov	sp, r7
90003a86:	f85d 7b04 	ldr.w	r7, [sp], #4
90003a8a:	4770      	bx	lr

90003a8c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
90003a8c:	b480      	push	{r7}
90003a8e:	b083      	sub	sp, #12
90003a90:	af00      	add	r7, sp, #0
90003a92:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
90003a94:	687b      	ldr	r3, [r7, #4]
90003a96:	899b      	ldrh	r3, [r3, #12]
    }
90003a98:	4618      	mov	r0, r3
90003a9a:	370c      	adds	r7, #12
90003a9c:	46bd      	mov	sp, r7
90003a9e:	f85d 7b04 	ldr.w	r7, [sp], #4
90003aa2:	4770      	bx	lr

90003aa4 <_ZNK8touchgfx4Font13getFontHeightEv>:
     * @return The height in pixels of this font.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
90003aa4:	b480      	push	{r7}
90003aa6:	b083      	sub	sp, #12
90003aa8:	af00      	add	r7, sp, #0
90003aaa:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
90003aac:	687b      	ldr	r3, [r7, #4]
90003aae:	889b      	ldrh	r3, [r3, #4]
    }
90003ab0:	4618      	mov	r0, r3
90003ab2:	370c      	adds	r7, #12
90003ab4:	46bd      	mov	sp, r7
90003ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
90003aba:	4770      	bx	lr

90003abc <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     * account that certain characters (eg 'g') have pixels below the baseline, thus making
     * the text height larger than the font height.
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
90003abc:	b480      	push	{r7}
90003abe:	b083      	sub	sp, #12
90003ac0:	af00      	add	r7, sp, #0
90003ac2:	6078      	str	r0, [r7, #4]
    {
        return fontHeight + pixelsBelowBaseline;
90003ac4:	687b      	ldr	r3, [r7, #4]
90003ac6:	889a      	ldrh	r2, [r3, #4]
90003ac8:	687b      	ldr	r3, [r7, #4]
90003aca:	799b      	ldrb	r3, [r3, #6]
90003acc:	b29b      	uxth	r3, r3
90003ace:	4413      	add	r3, r2
90003ad0:	b29b      	uxth	r3, r3
    }
90003ad2:	4618      	mov	r0, r3
90003ad4:	370c      	adds	r7, #12
90003ad6:	46bd      	mov	sp, r7
90003ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
90003adc:	4770      	bx	lr

90003ade <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
90003ade:	b480      	push	{r7}
90003ae0:	b083      	sub	sp, #12
90003ae2:	af00      	add	r7, sp, #0
90003ae4:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
90003ae6:	687b      	ldr	r3, [r7, #4]
90003ae8:	79db      	ldrb	r3, [r3, #7]
90003aea:	f3c3 0306 	ubfx	r3, r3, #0, #7
90003aee:	b2db      	uxtb	r3, r3
    }
90003af0:	4618      	mov	r0, r3
90003af2:	370c      	adds	r7, #12
90003af4:	46bd      	mov	sp, r7
90003af6:	f85d 7b04 	ldr.w	r7, [sp], #4
90003afa:	4770      	bx	lr

90003afc <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
90003afc:	b480      	push	{r7}
90003afe:	b083      	sub	sp, #12
90003b00:	af00      	add	r7, sp, #0
90003b02:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
90003b04:	687b      	ldr	r3, [r7, #4]
90003b06:	79db      	ldrb	r3, [r3, #7]
90003b08:	f3c3 13c0 	ubfx	r3, r3, #7, #1
90003b0c:	b2db      	uxtb	r3, r3
    }
90003b0e:	4618      	mov	r0, r3
90003b10:	370c      	adds	r7, #12
90003b12:	46bd      	mov	sp, r7
90003b14:	f85d 7b04 	ldr.w	r7, [sp], #4
90003b18:	4770      	bx	lr
	...

90003b1c <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
90003b1c:	b580      	push	{r7, lr}
90003b1e:	b082      	sub	sp, #8
90003b20:	af00      	add	r7, sp, #0
90003b22:	6078      	str	r0, [r7, #4]
90003b24:	4a05      	ldr	r2, [pc, #20]	; (90003b3c <_ZN8touchgfx9ConstFontD1Ev+0x20>)
90003b26:	687b      	ldr	r3, [r7, #4]
90003b28:	601a      	str	r2, [r3, #0]
90003b2a:	687b      	ldr	r3, [r7, #4]
90003b2c:	4618      	mov	r0, r3
90003b2e:	f7ff ff61 	bl	900039f4 <_ZN8touchgfx4FontD1Ev>
90003b32:	687b      	ldr	r3, [r7, #4]
90003b34:	4618      	mov	r0, r3
90003b36:	3708      	adds	r7, #8
90003b38:	46bd      	mov	sp, r7
90003b3a:	bd80      	pop	{r7, pc}
90003b3c:	90022afc 	.word	0x90022afc

90003b40 <_ZN8touchgfx9ConstFontD0Ev>:
90003b40:	b580      	push	{r7, lr}
90003b42:	b082      	sub	sp, #8
90003b44:	af00      	add	r7, sp, #0
90003b46:	6078      	str	r0, [r7, #4]
90003b48:	6878      	ldr	r0, [r7, #4]
90003b4a:	f7ff ffe7 	bl	90003b1c <_ZN8touchgfx9ConstFontD1Ev>
90003b4e:	2118      	movs	r1, #24
90003b50:	6878      	ldr	r0, [r7, #4]
90003b52:	f01b fb78 	bl	9001f246 <_ZdlPvj>
90003b56:	687b      	ldr	r3, [r7, #4]
90003b58:	4618      	mov	r0, r3
90003b5a:	3708      	adds	r7, #8
90003b5c:	46bd      	mov	sp, r7
90003b5e:	bd80      	pop	{r7, pc}

90003b60 <_ZN8touchgfx13GeneratedFontD1Ev>:
 * An GeneratedFont has both glyph table and glyph data placed in a flash which
 * supports random access read (i.e. not a NAND flash)
 *
 * @see ConstFont
 */
class GeneratedFont : public ConstFont
90003b60:	b580      	push	{r7, lr}
90003b62:	b082      	sub	sp, #8
90003b64:	af00      	add	r7, sp, #0
90003b66:	6078      	str	r0, [r7, #4]
90003b68:	4a05      	ldr	r2, [pc, #20]	; (90003b80 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
90003b6a:	687b      	ldr	r3, [r7, #4]
90003b6c:	601a      	str	r2, [r3, #0]
90003b6e:	687b      	ldr	r3, [r7, #4]
90003b70:	4618      	mov	r0, r3
90003b72:	f7ff ffd3 	bl	90003b1c <_ZN8touchgfx9ConstFontD1Ev>
90003b76:	687b      	ldr	r3, [r7, #4]
90003b78:	4618      	mov	r0, r3
90003b7a:	3708      	adds	r7, #8
90003b7c:	46bd      	mov	sp, r7
90003b7e:	bd80      	pop	{r7, pc}
90003b80:	900216e8 	.word	0x900216e8

90003b84 <_ZN8touchgfx13GeneratedFontD0Ev>:
90003b84:	b580      	push	{r7, lr}
90003b86:	b082      	sub	sp, #8
90003b88:	af00      	add	r7, sp, #0
90003b8a:	6078      	str	r0, [r7, #4]
90003b8c:	6878      	ldr	r0, [r7, #4]
90003b8e:	f7ff ffe7 	bl	90003b60 <_ZN8touchgfx13GeneratedFontD1Ev>
90003b92:	2124      	movs	r1, #36	; 0x24
90003b94:	6878      	ldr	r0, [r7, #4]
90003b96:	f01b fb56 	bl	9001f246 <_ZdlPvj>
90003b9a:	687b      	ldr	r3, [r7, #4]
90003b9c:	4618      	mov	r0, r3
90003b9e:	3708      	adds	r7, #8
90003ba0:	46bd      	mov	sp, r7
90003ba2:	bd80      	pop	{r7, pc}

90003ba4 <_ZN8touchgfx9TypedTextD1Ev>:
    virtual ~TypedText()
90003ba4:	b480      	push	{r7}
90003ba6:	b083      	sub	sp, #12
90003ba8:	af00      	add	r7, sp, #0
90003baa:	6078      	str	r0, [r7, #4]
    {
90003bac:	4a04      	ldr	r2, [pc, #16]	; (90003bc0 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
90003bae:	687b      	ldr	r3, [r7, #4]
90003bb0:	601a      	str	r2, [r3, #0]
    }
90003bb2:	687b      	ldr	r3, [r7, #4]
90003bb4:	4618      	mov	r0, r3
90003bb6:	370c      	adds	r7, #12
90003bb8:	46bd      	mov	sp, r7
90003bba:	f85d 7b04 	ldr.w	r7, [sp], #4
90003bbe:	4770      	bx	lr
90003bc0:	90021690 	.word	0x90021690

90003bc4 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90003bc4:	b580      	push	{r7, lr}
90003bc6:	b082      	sub	sp, #8
90003bc8:	af00      	add	r7, sp, #0
90003bca:	6078      	str	r0, [r7, #4]
    }
90003bcc:	6878      	ldr	r0, [r7, #4]
90003bce:	f7ff ffe9 	bl	90003ba4 <_ZN8touchgfx9TypedTextD1Ev>
90003bd2:	2108      	movs	r1, #8
90003bd4:	6878      	ldr	r0, [r7, #4]
90003bd6:	f01b fb36 	bl	9001f246 <_ZdlPvj>
90003bda:	687b      	ldr	r3, [r7, #4]
90003bdc:	4618      	mov	r0, r3
90003bde:	3708      	adds	r7, #8
90003be0:	46bd      	mov	sp, r7
90003be2:	bd80      	pop	{r7, pc}

90003be4 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
90003be4:	b480      	push	{r7}
90003be6:	b083      	sub	sp, #12
90003be8:	af00      	add	r7, sp, #0
90003bea:	6078      	str	r0, [r7, #4]
90003bec:	6039      	str	r1, [r7, #0]
90003bee:	683b      	ldr	r3, [r7, #0]
90003bf0:	4618      	mov	r0, r3
90003bf2:	370c      	adds	r7, #12
90003bf4:	46bd      	mov	sp, r7
90003bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
90003bfa:	4770      	bx	lr

90003bfc <_ZN8touchgfx3HAL3lcdEv>:
    static LCD& lcd()
90003bfc:	b480      	push	{r7}
90003bfe:	af00      	add	r7, sp, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90003c00:	4b0b      	ldr	r3, [pc, #44]	; (90003c30 <_ZN8touchgfx3HAL3lcdEv+0x34>)
90003c02:	681b      	ldr	r3, [r3, #0]
90003c04:	f893 3076 	ldrb.w	r3, [r3, #118]	; 0x76
90003c08:	2b00      	cmp	r3, #0
90003c0a:	d008      	beq.n	90003c1e <_ZN8touchgfx3HAL3lcdEv+0x22>
90003c0c:	4b08      	ldr	r3, [pc, #32]	; (90003c30 <_ZN8touchgfx3HAL3lcdEv+0x34>)
90003c0e:	681b      	ldr	r3, [r3, #0]
90003c10:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90003c12:	2b00      	cmp	r3, #0
90003c14:	d003      	beq.n	90003c1e <_ZN8touchgfx3HAL3lcdEv+0x22>
            return *instance->auxiliaryLCD;
90003c16:	4b06      	ldr	r3, [pc, #24]	; (90003c30 <_ZN8touchgfx3HAL3lcdEv+0x34>)
90003c18:	681b      	ldr	r3, [r3, #0]
90003c1a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90003c1c:	e002      	b.n	90003c24 <_ZN8touchgfx3HAL3lcdEv+0x28>
            return instance->lcdRef;
90003c1e:	4b04      	ldr	r3, [pc, #16]	; (90003c30 <_ZN8touchgfx3HAL3lcdEv+0x34>)
90003c20:	681b      	ldr	r3, [r3, #0]
90003c22:	689b      	ldr	r3, [r3, #8]
    }
90003c24:	4618      	mov	r0, r3
90003c26:	46bd      	mov	sp, r7
90003c28:	f85d 7b04 	ldr.w	r7, [sp], #4
90003c2c:	4770      	bx	lr
90003c2e:	bf00      	nop
90003c30:	24012ae0 	.word	0x24012ae0

90003c34 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
90003c34:	b480      	push	{r7}
90003c36:	b083      	sub	sp, #12
90003c38:	af00      	add	r7, sp, #0
90003c3a:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
90003c3c:	4a07      	ldr	r2, [pc, #28]	; (90003c5c <_ZN8touchgfx10TransitionC1Ev+0x28>)
90003c3e:	687b      	ldr	r3, [r7, #4]
90003c40:	601a      	str	r2, [r3, #0]
90003c42:	687b      	ldr	r3, [r7, #4]
90003c44:	2200      	movs	r2, #0
90003c46:	605a      	str	r2, [r3, #4]
90003c48:	687b      	ldr	r3, [r7, #4]
90003c4a:	2200      	movs	r2, #0
90003c4c:	721a      	strb	r2, [r3, #8]
    {
    }
90003c4e:	687b      	ldr	r3, [r7, #4]
90003c50:	4618      	mov	r0, r3
90003c52:	370c      	adds	r7, #12
90003c54:	46bd      	mov	sp, r7
90003c56:	f85d 7b04 	ldr.w	r7, [sp], #4
90003c5a:	4770      	bx	lr
90003c5c:	900216c4 	.word	0x900216c4

90003c60 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
90003c60:	b480      	push	{r7}
90003c62:	b083      	sub	sp, #12
90003c64:	af00      	add	r7, sp, #0
90003c66:	6078      	str	r0, [r7, #4]
    {
90003c68:	4a04      	ldr	r2, [pc, #16]	; (90003c7c <_ZN8touchgfx10TransitionD1Ev+0x1c>)
90003c6a:	687b      	ldr	r3, [r7, #4]
90003c6c:	601a      	str	r2, [r3, #0]
    }
90003c6e:	687b      	ldr	r3, [r7, #4]
90003c70:	4618      	mov	r0, r3
90003c72:	370c      	adds	r7, #12
90003c74:	46bd      	mov	sp, r7
90003c76:	f85d 7b04 	ldr.w	r7, [sp], #4
90003c7a:	4770      	bx	lr
90003c7c:	900216c4 	.word	0x900216c4

90003c80 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
90003c80:	b580      	push	{r7, lr}
90003c82:	b082      	sub	sp, #8
90003c84:	af00      	add	r7, sp, #0
90003c86:	6078      	str	r0, [r7, #4]
    }
90003c88:	6878      	ldr	r0, [r7, #4]
90003c8a:	f7ff ffe9 	bl	90003c60 <_ZN8touchgfx10TransitionD1Ev>
90003c8e:	210c      	movs	r1, #12
90003c90:	6878      	ldr	r0, [r7, #4]
90003c92:	f01b fad8 	bl	9001f246 <_ZdlPvj>
90003c96:	687b      	ldr	r3, [r7, #4]
90003c98:	4618      	mov	r0, r3
90003c9a:	3708      	adds	r7, #8
90003c9c:	46bd      	mov	sp, r7
90003c9e:	bd80      	pop	{r7, pc}

90003ca0 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
90003ca0:	b480      	push	{r7}
90003ca2:	b083      	sub	sp, #12
90003ca4:	af00      	add	r7, sp, #0
90003ca6:	6078      	str	r0, [r7, #4]
    {
    }
90003ca8:	bf00      	nop
90003caa:	370c      	adds	r7, #12
90003cac:	46bd      	mov	sp, r7
90003cae:	f85d 7b04 	ldr.w	r7, [sp], #4
90003cb2:	4770      	bx	lr

90003cb4 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
90003cb4:	b480      	push	{r7}
90003cb6:	b083      	sub	sp, #12
90003cb8:	af00      	add	r7, sp, #0
90003cba:	6078      	str	r0, [r7, #4]
    {
    }
90003cbc:	bf00      	nop
90003cbe:	370c      	adds	r7, #12
90003cc0:	46bd      	mov	sp, r7
90003cc2:	f85d 7b04 	ldr.w	r7, [sp], #4
90003cc6:	4770      	bx	lr

90003cc8 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
90003cc8:	b480      	push	{r7}
90003cca:	b083      	sub	sp, #12
90003ccc:	af00      	add	r7, sp, #0
90003cce:	6078      	str	r0, [r7, #4]
    {
    }
90003cd0:	bf00      	nop
90003cd2:	370c      	adds	r7, #12
90003cd4:	46bd      	mov	sp, r7
90003cd6:	f85d 7b04 	ldr.w	r7, [sp], #4
90003cda:	4770      	bx	lr

90003cdc <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
90003cdc:	b580      	push	{r7, lr}
90003cde:	b082      	sub	sp, #8
90003ce0:	af00      	add	r7, sp, #0
90003ce2:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->draw();
90003ce4:	f00c fca8 	bl	90010638 <_ZN8touchgfx11Application11getInstanceEv>
90003ce8:	4603      	mov	r3, r0
90003cea:	681a      	ldr	r2, [r3, #0]
90003cec:	3230      	adds	r2, #48	; 0x30
90003cee:	6812      	ldr	r2, [r2, #0]
90003cf0:	4618      	mov	r0, r3
90003cf2:	4790      	blx	r2
    }
90003cf4:	bf00      	nop
90003cf6:	3708      	adds	r7, #8
90003cf8:	46bd      	mov	sp, r7
90003cfa:	bd80      	pop	{r7, pc}

90003cfc <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
90003cfc:	b480      	push	{r7}
90003cfe:	b083      	sub	sp, #12
90003d00:	af00      	add	r7, sp, #0
90003d02:	6078      	str	r0, [r7, #4]
90003d04:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
90003d06:	687b      	ldr	r3, [r7, #4]
90003d08:	683a      	ldr	r2, [r7, #0]
90003d0a:	605a      	str	r2, [r3, #4]
    }
90003d0c:	bf00      	nop
90003d0e:	370c      	adds	r7, #12
90003d10:	46bd      	mov	sp, r7
90003d12:	f85d 7b04 	ldr.w	r7, [sp], #4
90003d16:	4770      	bx	lr

90003d18 <_ZN8touchgfx14MVPApplicationC1Ev>:
    MVPApplication()
90003d18:	b580      	push	{r7, lr}
90003d1a:	b082      	sub	sp, #8
90003d1c:	af00      	add	r7, sp, #0
90003d1e:	6078      	str	r0, [r7, #4]
          pendingScreenTransitionCallback(0)
90003d20:	687b      	ldr	r3, [r7, #4]
90003d22:	4618      	mov	r0, r3
90003d24:	f00c fcaa 	bl	9001067c <_ZN8touchgfx11ApplicationC1Ev>
90003d28:	4a09      	ldr	r2, [pc, #36]	; (90003d50 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
90003d2a:	687b      	ldr	r3, [r7, #4]
90003d2c:	601a      	str	r2, [r3, #0]
90003d2e:	687b      	ldr	r3, [r7, #4]
90003d30:	2200      	movs	r2, #0
90003d32:	f8c3 2138 	str.w	r2, [r3, #312]	; 0x138
90003d36:	687b      	ldr	r3, [r7, #4]
90003d38:	2200      	movs	r2, #0
90003d3a:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
        instance = this;
90003d3e:	687b      	ldr	r3, [r7, #4]
90003d40:	4a04      	ldr	r2, [pc, #16]	; (90003d54 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
90003d42:	6013      	str	r3, [r2, #0]
    }
90003d44:	687b      	ldr	r3, [r7, #4]
90003d46:	4618      	mov	r0, r3
90003d48:	3708      	adds	r7, #8
90003d4a:	46bd      	mov	sp, r7
90003d4c:	bd80      	pop	{r7, pc}
90003d4e:	bf00      	nop
90003d50:	90021410 	.word	0x90021410
90003d54:	24012b2c 	.word	0x24012b2c

90003d58 <_ZN5Model4bindEP13ModelListener>:

    /**
     * Sets the modelListener to point to the currently active presenter. Called automatically
     * when switching screen.
     */
    void bind(ModelListener* listener)
90003d58:	b480      	push	{r7}
90003d5a:	b083      	sub	sp, #12
90003d5c:	af00      	add	r7, sp, #0
90003d5e:	6078      	str	r0, [r7, #4]
90003d60:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
90003d62:	687b      	ldr	r3, [r7, #4]
90003d64:	683a      	ldr	r2, [r7, #0]
90003d66:	601a      	str	r2, [r3, #0]
    }
90003d68:	bf00      	nop
90003d6a:	370c      	adds	r7, #12
90003d6c:	46bd      	mov	sp, r7
90003d6e:	f85d 7b04 	ldr.w	r7, [sp], #4
90003d72:	4770      	bx	lr

90003d74 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
90003d74:	b480      	push	{r7}
90003d76:	b083      	sub	sp, #12
90003d78:	af00      	add	r7, sp, #0
90003d7a:	6078      	str	r0, [r7, #4]
    {
        done = true;
90003d7c:	687b      	ldr	r3, [r7, #4]
90003d7e:	2201      	movs	r2, #1
90003d80:	721a      	strb	r2, [r3, #8]
    }
90003d82:	bf00      	nop
90003d84:	370c      	adds	r7, #12
90003d86:	46bd      	mov	sp, r7
90003d88:	f85d 7b04 	ldr.w	r7, [sp], #4
90003d8c:	4770      	bx	lr

90003d8e <_ZN13ModelListener4bindEP5Model>:

    /**
     * Sets the model pointer to point to the Model object. Called automatically
     * when switching screen.
     */
    void bind(Model* m)
90003d8e:	b480      	push	{r7}
90003d90:	b083      	sub	sp, #12
90003d92:	af00      	add	r7, sp, #0
90003d94:	6078      	str	r0, [r7, #4]
90003d96:	6039      	str	r1, [r7, #0]
    {
        model = m;
90003d98:	687b      	ldr	r3, [r7, #4]
90003d9a:	683a      	ldr	r2, [r7, #0]
90003d9c:	605a      	str	r2, [r3, #4]
    }
90003d9e:	bf00      	nop
90003da0:	370c      	adds	r7, #12
90003da2:	46bd      	mov	sp, r7
90003da4:	f85d 7b04 	ldr.w	r7, [sp], #4
90003da8:	4770      	bx	lr
	...

90003dac <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90003dac:	b580      	push	{r7, lr}
90003dae:	b084      	sub	sp, #16
90003db0:	af00      	add	r7, sp, #0
90003db2:	60f8      	str	r0, [r7, #12]
90003db4:	60b9      	str	r1, [r7, #8]
90003db6:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
90003db8:	68fb      	ldr	r3, [r7, #12]
90003dba:	4618      	mov	r0, r3
90003dbc:	f7ff ffac 	bl	90003d18 <_ZN8touchgfx14MVPApplicationC1Ev>
90003dc0:	4a13      	ldr	r2, [pc, #76]	; (90003e10 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
90003dc2:	68fb      	ldr	r3, [r7, #12]
90003dc4:	601a      	str	r2, [r3, #0]
90003dc6:	68fb      	ldr	r3, [r7, #12]
90003dc8:	f503 73a0 	add.w	r3, r3, #320	; 0x140
90003dcc:	4618      	mov	r0, r3
90003dce:	f000 f89f 	bl	90003f10 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
90003dd2:	68fb      	ldr	r3, [r7, #12]
90003dd4:	687a      	ldr	r2, [r7, #4]
90003dd6:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
90003dda:	68fb      	ldr	r3, [r7, #12]
90003ddc:	68ba      	ldr	r2, [r7, #8]
90003dde:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90003de2:	f7fc fead 	bl	90000b40 <_ZN8touchgfx3HAL11getInstanceEv>
90003de6:	4603      	mov	r3, r0
90003de8:	681a      	ldr	r2, [r3, #0]
90003dea:	3208      	adds	r2, #8
90003dec:	6812      	ldr	r2, [r2, #0]
90003dee:	2100      	movs	r1, #0
90003df0:	4618      	mov	r0, r3
90003df2:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
90003df4:	2000      	movs	r0, #0
90003df6:	f001 fcb9 	bl	9000576c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90003dfa:	f7ff feff 	bl	90003bfc <_ZN8touchgfx3HAL3lcdEv>
90003dfe:	4603      	mov	r3, r0
90003e00:	4618      	mov	r0, r3
90003e02:	f014 f8f8 	bl	90017ff6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
90003e06:	68fb      	ldr	r3, [r7, #12]
90003e08:	4618      	mov	r0, r3
90003e0a:	3710      	adds	r7, #16
90003e0c:	46bd      	mov	sp, r7
90003e0e:	bd80      	pop	{r7, pc}
90003e10:	900213b4 	.word	0x900213b4

90003e14 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
90003e14:	b480      	push	{r7}
90003e16:	b083      	sub	sp, #12
90003e18:	af00      	add	r7, sp, #0
90003e1a:	6078      	str	r0, [r7, #4]
90003e1c:	6039      	str	r1, [r7, #0]
90003e1e:	687b      	ldr	r3, [r7, #4]
90003e20:	4618      	mov	r0, r3
90003e22:	370c      	adds	r7, #12
90003e24:	46bd      	mov	sp, r7
90003e26:	f85d 7b04 	ldr.w	r7, [sp], #4
90003e2a:	4770      	bx	lr

90003e2c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003e2c:	b580      	push	{r7, lr}
90003e2e:	b082      	sub	sp, #8
90003e30:	af00      	add	r7, sp, #0
90003e32:	6078      	str	r0, [r7, #4]
90003e34:	6039      	str	r1, [r7, #0]
90003e36:	687b      	ldr	r3, [r7, #4]
90003e38:	683a      	ldr	r2, [r7, #0]
90003e3a:	4611      	mov	r1, r2
90003e3c:	4618      	mov	r0, r3
90003e3e:	f7ff ffe9 	bl	90003e14 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
90003e42:	683b      	ldr	r3, [r7, #0]
90003e44:	685a      	ldr	r2, [r3, #4]
90003e46:	687b      	ldr	r3, [r7, #4]
90003e48:	605a      	str	r2, [r3, #4]
90003e4a:	687b      	ldr	r3, [r7, #4]
90003e4c:	683a      	ldr	r2, [r7, #0]
90003e4e:	3308      	adds	r3, #8
90003e50:	3208      	adds	r2, #8
90003e52:	e892 0003 	ldmia.w	r2, {r0, r1}
90003e56:	e883 0003 	stmia.w	r3, {r0, r1}
90003e5a:	687b      	ldr	r3, [r7, #4]
90003e5c:	4618      	mov	r0, r3
90003e5e:	3708      	adds	r7, #8
90003e60:	46bd      	mov	sp, r7
90003e62:	bd80      	pop	{r7, pc}

90003e64 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
 */

// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
90003e64:	b590      	push	{r4, r7, lr}
90003e66:	b089      	sub	sp, #36	; 0x24
90003e68:	af00      	add	r7, sp, #0
90003e6a:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMainScreenNoTransitionImpl);
90003e6c:	687b      	ldr	r3, [r7, #4]
90003e6e:	f503 74a0 	add.w	r4, r3, #320	; 0x140
90003e72:	4b10      	ldr	r3, [pc, #64]	; (90003eb4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x50>)
90003e74:	61bb      	str	r3, [r7, #24]
90003e76:	2300      	movs	r3, #0
90003e78:	61fb      	str	r3, [r7, #28]
90003e7a:	f107 0008 	add.w	r0, r7, #8
90003e7e:	f107 0318 	add.w	r3, r7, #24
90003e82:	cb0c      	ldmia	r3, {r2, r3}
90003e84:	6879      	ldr	r1, [r7, #4]
90003e86:	f000 f85f 	bl	90003f48 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
90003e8a:	f107 0308 	add.w	r3, r7, #8
90003e8e:	4619      	mov	r1, r3
90003e90:	4620      	mov	r0, r4
90003e92:	f7ff ffcb 	bl	90003e2c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
90003e96:	f107 0308 	add.w	r3, r7, #8
90003e9a:	4618      	mov	r0, r3
90003e9c:	f7fe fbde 	bl	9000265c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
90003ea0:	687b      	ldr	r3, [r7, #4]
90003ea2:	f503 72a0 	add.w	r2, r3, #320	; 0x140
90003ea6:	687b      	ldr	r3, [r7, #4]
90003ea8:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
}
90003eac:	bf00      	nop
90003eae:	3724      	adds	r7, #36	; 0x24
90003eb0:	46bd      	mov	sp, r7
90003eb2:	bd90      	pop	{r4, r7, pc}
90003eb4:	90003eb9 	.word	0x90003eb9

90003eb8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
90003eb8:	b580      	push	{r7, lr}
90003eba:	b084      	sub	sp, #16
90003ebc:	af02      	add	r7, sp, #8
90003ebe:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003ec0:	687b      	ldr	r3, [r7, #4]
90003ec2:	f503 719c 	add.w	r1, r3, #312	; 0x138
90003ec6:	687b      	ldr	r3, [r7, #4]
90003ec8:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
90003ecc:	461a      	mov	r2, r3
90003ece:	687b      	ldr	r3, [r7, #4]
90003ed0:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
90003ed4:	9300      	str	r3, [sp, #0]
90003ed6:	4b04      	ldr	r3, [pc, #16]	; (90003ee8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x30>)
90003ed8:	4804      	ldr	r0, [pc, #16]	; (90003eec <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x34>)
90003eda:	f000 f867 	bl	90003fac <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
90003ede:	bf00      	nop
90003ee0:	3708      	adds	r7, #8
90003ee2:	46bd      	mov	sp, r7
90003ee4:	bd80      	pop	{r7, pc}
90003ee6:	bf00      	nop
90003ee8:	24012b20 	.word	0x24012b20
90003eec:	24012b1c 	.word	0x24012b1c

90003ef0 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
90003ef0:	b480      	push	{r7}
90003ef2:	b083      	sub	sp, #12
90003ef4:	af00      	add	r7, sp, #0
90003ef6:	6078      	str	r0, [r7, #4]
90003ef8:	4a04      	ldr	r2, [pc, #16]	; (90003f0c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
90003efa:	687b      	ldr	r3, [r7, #4]
90003efc:	601a      	str	r2, [r3, #0]
90003efe:	687b      	ldr	r3, [r7, #4]
90003f00:	4618      	mov	r0, r3
90003f02:	370c      	adds	r7, #12
90003f04:	46bd      	mov	sp, r7
90003f06:	f85d 7b04 	ldr.w	r7, [sp], #4
90003f0a:	4770      	bx	lr
90003f0c:	90021454 	.word	0x90021454

90003f10 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
    Callback()
90003f10:	b580      	push	{r7, lr}
90003f12:	b082      	sub	sp, #8
90003f14:	af00      	add	r7, sp, #0
90003f16:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun_0(0)
90003f18:	687b      	ldr	r3, [r7, #4]
90003f1a:	4618      	mov	r0, r3
90003f1c:	f7ff ffe8 	bl	90003ef0 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
90003f20:	4a08      	ldr	r2, [pc, #32]	; (90003f44 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
90003f22:	687b      	ldr	r3, [r7, #4]
90003f24:	601a      	str	r2, [r3, #0]
90003f26:	687b      	ldr	r3, [r7, #4]
90003f28:	2200      	movs	r2, #0
90003f2a:	605a      	str	r2, [r3, #4]
90003f2c:	687b      	ldr	r3, [r7, #4]
90003f2e:	2200      	movs	r2, #0
90003f30:	609a      	str	r2, [r3, #8]
90003f32:	687b      	ldr	r3, [r7, #4]
90003f34:	2200      	movs	r2, #0
90003f36:	60da      	str	r2, [r3, #12]
    }
90003f38:	687b      	ldr	r3, [r7, #4]
90003f3a:	4618      	mov	r0, r3
90003f3c:	3708      	adds	r7, #8
90003f3e:	46bd      	mov	sp, r7
90003f40:	bd80      	pop	{r7, pc}
90003f42:	bf00      	nop
90003f44:	900213f8 	.word	0x900213f8

90003f48 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
    Callback(dest_type* pobject, void (dest_type::*pmemfun_0)())
90003f48:	b580      	push	{r7, lr}
90003f4a:	b084      	sub	sp, #16
90003f4c:	af00      	add	r7, sp, #0
90003f4e:	60f8      	str	r0, [r7, #12]
90003f50:	60b9      	str	r1, [r7, #8]
90003f52:	4639      	mov	r1, r7
90003f54:	e881 000c 	stmia.w	r1, {r2, r3}
    {
90003f58:	68fb      	ldr	r3, [r7, #12]
90003f5a:	4618      	mov	r0, r3
90003f5c:	f7ff ffc8 	bl	90003ef0 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
90003f60:	4a08      	ldr	r2, [pc, #32]	; (90003f84 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
90003f62:	68fb      	ldr	r3, [r7, #12]
90003f64:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
90003f66:	68fb      	ldr	r3, [r7, #12]
90003f68:	68ba      	ldr	r2, [r7, #8]
90003f6a:	605a      	str	r2, [r3, #4]
        this->pmemfun_0 = pmemfun_0;
90003f6c:	68fb      	ldr	r3, [r7, #12]
90003f6e:	3308      	adds	r3, #8
90003f70:	463a      	mov	r2, r7
90003f72:	e892 0003 	ldmia.w	r2, {r0, r1}
90003f76:	e883 0003 	stmia.w	r3, {r0, r1}
    }
90003f7a:	68fb      	ldr	r3, [r7, #12]
90003f7c:	4618      	mov	r0, r3
90003f7e:	3710      	adds	r7, #16
90003f80:	46bd      	mov	sp, r7
90003f82:	bd80      	pop	{r7, pc}
90003f84:	900213f8 	.word	0x900213f8

90003f88 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
90003f88:	b580      	push	{r7, lr}
90003f8a:	b082      	sub	sp, #8
90003f8c:	af00      	add	r7, sp, #0
90003f8e:	6078      	str	r0, [r7, #4]
90003f90:	687b      	ldr	r3, [r7, #4]
90003f92:	4618      	mov	r0, r3
90003f94:	f7ff fe4e 	bl	90003c34 <_ZN8touchgfx10TransitionC1Ev>
90003f98:	4a03      	ldr	r2, [pc, #12]	; (90003fa8 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
90003f9a:	687b      	ldr	r3, [r7, #4]
90003f9c:	601a      	str	r2, [r3, #0]
90003f9e:	687b      	ldr	r3, [r7, #4]
90003fa0:	4618      	mov	r0, r3
90003fa2:	3708      	adds	r7, #8
90003fa4:	46bd      	mov	sp, r7
90003fa6:	bd80      	pop	{r7, pc}
90003fa8:	900216a0 	.word	0x900216a0

90003fac <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
90003fac:	b590      	push	{r4, r7, lr}
90003fae:	b08f      	sub	sp, #60	; 0x3c
90003fb0:	af00      	add	r7, sp, #0
90003fb2:	60f8      	str	r0, [r7, #12]
90003fb4:	60b9      	str	r1, [r7, #8]
90003fb6:	607a      	str	r2, [r7, #4]
90003fb8:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003fba:	687b      	ldr	r3, [r7, #4]
90003fbc:	689a      	ldr	r2, [r3, #8]
90003fbe:	687b      	ldr	r3, [r7, #4]
90003fc0:	689b      	ldr	r3, [r3, #8]
90003fc2:	681b      	ldr	r3, [r3, #0]
90003fc4:	3320      	adds	r3, #32
90003fc6:	681b      	ldr	r3, [r3, #0]
90003fc8:	4610      	mov	r0, r2
90003fca:	4798      	blx	r3
90003fcc:	4603      	mov	r3, r0
90003fce:	f5b3 7fda 	cmp.w	r3, #436	; 0x1b4
90003fd2:	d205      	bcs.n	90003fe0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
90003fd4:	4b7e      	ldr	r3, [pc, #504]	; (900041d0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
90003fd6:	4a7f      	ldr	r2, [pc, #508]	; (900041d4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
90003fd8:	21a7      	movs	r1, #167	; 0xa7
90003fda:	487f      	ldr	r0, [pc, #508]	; (900041d8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
90003fdc:	f01b f962 	bl	9001f2a4 <__assert_func>
90003fe0:	bf00      	nop
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003fe2:	687b      	ldr	r3, [r7, #4]
90003fe4:	685a      	ldr	r2, [r3, #4]
90003fe6:	687b      	ldr	r3, [r7, #4]
90003fe8:	685b      	ldr	r3, [r3, #4]
90003fea:	681b      	ldr	r3, [r3, #0]
90003fec:	3320      	adds	r3, #32
90003fee:	681b      	ldr	r3, [r3, #0]
90003ff0:	4610      	mov	r0, r2
90003ff2:	4798      	blx	r3
90003ff4:	4603      	mov	r3, r0
90003ff6:	2b0f      	cmp	r3, #15
90003ff8:	d805      	bhi.n	90004006 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
90003ffa:	4b78      	ldr	r3, [pc, #480]	; (900041dc <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
90003ffc:	4a75      	ldr	r2, [pc, #468]	; (900041d4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
90003ffe:	21a8      	movs	r1, #168	; 0xa8
90004000:	4875      	ldr	r0, [pc, #468]	; (900041d8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
90004002:	f01b f94f 	bl	9001f2a4 <__assert_func>
90004006:	bf00      	nop
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004008:	687b      	ldr	r3, [r7, #4]
9000400a:	68da      	ldr	r2, [r3, #12]
9000400c:	687b      	ldr	r3, [r7, #4]
9000400e:	68db      	ldr	r3, [r3, #12]
90004010:	681b      	ldr	r3, [r3, #0]
90004012:	3320      	adds	r3, #32
90004014:	681b      	ldr	r3, [r3, #0]
90004016:	4610      	mov	r0, r2
90004018:	4798      	blx	r3
9000401a:	4603      	mov	r3, r0
9000401c:	2b0b      	cmp	r3, #11
9000401e:	d805      	bhi.n	9000402c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x80>
90004020:	4b6f      	ldr	r3, [pc, #444]	; (900041e0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x234>)
90004022:	4a6c      	ldr	r2, [pc, #432]	; (900041d4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
90004024:	21a9      	movs	r1, #169	; 0xa9
90004026:	486c      	ldr	r0, [pc, #432]	; (900041d8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
90004028:	f01b f93c 	bl	9001f2a4 <__assert_func>
9000402c:	bf00      	nop
9000402e:	68fb      	ldr	r3, [r7, #12]
90004030:	62bb      	str	r3, [r7, #40]	; 0x28
90004032:	68bb      	ldr	r3, [r7, #8]
90004034:	627b      	str	r3, [r7, #36]	; 0x24
90004036:	683b      	ldr	r3, [r7, #0]
90004038:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
9000403a:	f00c fafd 	bl	90010638 <_ZN8touchgfx11Application11getInstanceEv>
9000403e:	4603      	mov	r3, r0
90004040:	4618      	mov	r0, r3
90004042:	f00c faff 	bl	90010644 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
90004046:	6a3b      	ldr	r3, [r7, #32]
90004048:	681b      	ldr	r3, [r3, #0]
9000404a:	2b00      	cmp	r3, #0
9000404c:	d008      	beq.n	90004060 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb4>
        (*currentTrans)->tearDown();
9000404e:	6a3b      	ldr	r3, [r7, #32]
90004050:	681a      	ldr	r2, [r3, #0]
90004052:	6a3b      	ldr	r3, [r7, #32]
90004054:	681b      	ldr	r3, [r3, #0]
90004056:	681b      	ldr	r3, [r3, #0]
90004058:	330c      	adds	r3, #12
9000405a:	681b      	ldr	r3, [r3, #0]
9000405c:	4610      	mov	r0, r2
9000405e:	4798      	blx	r3
    if (*currentTrans)
90004060:	6a3b      	ldr	r3, [r7, #32]
90004062:	681b      	ldr	r3, [r3, #0]
90004064:	2b00      	cmp	r3, #0
90004066:	d007      	beq.n	90004078 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xcc>
        (*currentTrans)->~Transition();
90004068:	6a3b      	ldr	r3, [r7, #32]
9000406a:	681a      	ldr	r2, [r3, #0]
9000406c:	6a3b      	ldr	r3, [r7, #32]
9000406e:	681b      	ldr	r3, [r3, #0]
90004070:	681b      	ldr	r3, [r3, #0]
90004072:	681b      	ldr	r3, [r3, #0]
90004074:	4610      	mov	r0, r2
90004076:	4798      	blx	r3
    if (*currentScreen)
90004078:	6abb      	ldr	r3, [r7, #40]	; 0x28
9000407a:	681b      	ldr	r3, [r3, #0]
9000407c:	2b00      	cmp	r3, #0
9000407e:	d008      	beq.n	90004092 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe6>
        (*currentScreen)->tearDownScreen();
90004080:	6abb      	ldr	r3, [r7, #40]	; 0x28
90004082:	681a      	ldr	r2, [r3, #0]
90004084:	6abb      	ldr	r3, [r7, #40]	; 0x28
90004086:	681b      	ldr	r3, [r3, #0]
90004088:	681b      	ldr	r3, [r3, #0]
9000408a:	3314      	adds	r3, #20
9000408c:	681b      	ldr	r3, [r3, #0]
9000408e:	4610      	mov	r0, r2
90004090:	4798      	blx	r3
    if (*currentPresenter)
90004092:	6a7b      	ldr	r3, [r7, #36]	; 0x24
90004094:	681b      	ldr	r3, [r3, #0]
90004096:	2b00      	cmp	r3, #0
90004098:	d008      	beq.n	900040ac <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x100>
        (*currentPresenter)->deactivate();
9000409a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
9000409c:	681a      	ldr	r2, [r3, #0]
9000409e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
900040a0:	681b      	ldr	r3, [r3, #0]
900040a2:	681b      	ldr	r3, [r3, #0]
900040a4:	3304      	adds	r3, #4
900040a6:	681b      	ldr	r3, [r3, #0]
900040a8:	4610      	mov	r0, r2
900040aa:	4798      	blx	r3
    if (*currentScreen)
900040ac:	6abb      	ldr	r3, [r7, #40]	; 0x28
900040ae:	681b      	ldr	r3, [r3, #0]
900040b0:	2b00      	cmp	r3, #0
900040b2:	d007      	beq.n	900040c4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x118>
        (*currentScreen)->~Screen();
900040b4:	6abb      	ldr	r3, [r7, #40]	; 0x28
900040b6:	681a      	ldr	r2, [r3, #0]
900040b8:	6abb      	ldr	r3, [r7, #40]	; 0x28
900040ba:	681b      	ldr	r3, [r3, #0]
900040bc:	681b      	ldr	r3, [r3, #0]
900040be:	681b      	ldr	r3, [r3, #0]
900040c0:	4610      	mov	r0, r2
900040c2:	4798      	blx	r3
    if (*currentPresenter)
900040c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
900040c6:	681b      	ldr	r3, [r3, #0]
900040c8:	2b00      	cmp	r3, #0
900040ca:	d008      	beq.n	900040de <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x132>
        (*currentPresenter)->~Presenter();
900040cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
900040ce:	681a      	ldr	r2, [r3, #0]
900040d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
900040d2:	681b      	ldr	r3, [r3, #0]
900040d4:	681b      	ldr	r3, [r3, #0]
900040d6:	3308      	adds	r3, #8
900040d8:	681b      	ldr	r3, [r3, #0]
900040da:	4610      	mov	r0, r2
900040dc:	4798      	blx	r3
}
900040de:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
900040e0:	687b      	ldr	r3, [r7, #4]
900040e2:	68db      	ldr	r3, [r3, #12]
900040e4:	2100      	movs	r1, #0
900040e6:	4618      	mov	r0, r3
900040e8:	f000 f87c 	bl	900041e4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
900040ec:	4603      	mov	r3, r0
900040ee:	4619      	mov	r1, r3
900040f0:	200c      	movs	r0, #12
900040f2:	f7ff fd77 	bl	90003be4 <_ZnwjPv>
900040f6:	4604      	mov	r4, r0
900040f8:	4620      	mov	r0, r4
900040fa:	f7ff ff45 	bl	90003f88 <_ZN8touchgfx12NoTransitionC1Ev>
900040fe:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004100:	687b      	ldr	r3, [r7, #4]
90004102:	689b      	ldr	r3, [r3, #8]
90004104:	2100      	movs	r1, #0
90004106:	4618      	mov	r0, r3
90004108:	f000 f87f 	bl	9000420a <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>
9000410c:	4603      	mov	r3, r0
9000410e:	4619      	mov	r1, r3
90004110:	f44f 70da 	mov.w	r0, #436	; 0x1b4
90004114:	f7ff fd66 	bl	90003be4 <_ZnwjPv>
90004118:	4604      	mov	r4, r0
9000411a:	4620      	mov	r0, r4
9000411c:	f001 fd1c 	bl	90005b58 <_ZN8MainViewC1Ev>
90004120:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004122:	687b      	ldr	r3, [r7, #4]
90004124:	685b      	ldr	r3, [r3, #4]
90004126:	2100      	movs	r1, #0
90004128:	4618      	mov	r0, r3
9000412a:	f000 f881 	bl	90004230 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>
9000412e:	4603      	mov	r3, r0
90004130:	4619      	mov	r1, r3
90004132:	2010      	movs	r0, #16
90004134:	f7ff fd56 	bl	90003be4 <_ZnwjPv>
90004138:	4604      	mov	r4, r0
9000413a:	6b39      	ldr	r1, [r7, #48]	; 0x30
9000413c:	4620      	mov	r0, r4
9000413e:	f001 fc83 	bl	90005a48 <_ZN13MainPresenterC1ER8MainView>
90004142:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
90004144:	683b      	ldr	r3, [r7, #0]
90004146:	6b7a      	ldr	r2, [r7, #52]	; 0x34
90004148:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
9000414a:	68bb      	ldr	r3, [r7, #8]
9000414c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
9000414e:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
90004150:	68fb      	ldr	r3, [r7, #12]
90004152:	6b3a      	ldr	r2, [r7, #48]	; 0x30
90004154:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
90004156:	6afb      	ldr	r3, [r7, #44]	; 0x2c
90004158:	2b00      	cmp	r3, #0
9000415a:	d002      	beq.n	90004162 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b6>
9000415c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
9000415e:	3304      	adds	r3, #4
90004160:	e000      	b.n	90004164 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b8>
90004162:	2300      	movs	r3, #0
90004164:	4619      	mov	r1, r3
90004166:	6cb8      	ldr	r0, [r7, #72]	; 0x48
90004168:	f7ff fdf6 	bl	90003d58 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
9000416c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
9000416e:	3304      	adds	r3, #4
90004170:	6cb9      	ldr	r1, [r7, #72]	; 0x48
90004172:	4618      	mov	r0, r3
90004174:	f7ff fe0b 	bl	90003d8e <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
90004178:	6b3b      	ldr	r3, [r7, #48]	; 0x30
9000417a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
9000417c:	4618      	mov	r0, r3
9000417e:	f000 f86a 	bl	90004256 <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>
90004182:	6b3b      	ldr	r3, [r7, #48]	; 0x30
90004184:	61fb      	str	r3, [r7, #28]
90004186:	6afb      	ldr	r3, [r7, #44]	; 0x2c
90004188:	61bb      	str	r3, [r7, #24]
9000418a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
9000418c:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
9000418e:	69fb      	ldr	r3, [r7, #28]
90004190:	681b      	ldr	r3, [r3, #0]
90004192:	330c      	adds	r3, #12
90004194:	681b      	ldr	r3, [r3, #0]
90004196:	69f8      	ldr	r0, [r7, #28]
90004198:	4798      	blx	r3
    newPresenter->activate();
9000419a:	69bb      	ldr	r3, [r7, #24]
9000419c:	681b      	ldr	r3, [r3, #0]
9000419e:	681b      	ldr	r3, [r3, #0]
900041a0:	69b8      	ldr	r0, [r7, #24]
900041a2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
900041a4:	6979      	ldr	r1, [r7, #20]
900041a6:	69f8      	ldr	r0, [r7, #28]
900041a8:	f00d fe61 	bl	90011e6e <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
900041ac:	697b      	ldr	r3, [r7, #20]
900041ae:	681b      	ldr	r3, [r3, #0]
900041b0:	3310      	adds	r3, #16
900041b2:	681b      	ldr	r3, [r3, #0]
900041b4:	6978      	ldr	r0, [r7, #20]
900041b6:	4798      	blx	r3
    newTransition->invalidate();
900041b8:	697b      	ldr	r3, [r7, #20]
900041ba:	681b      	ldr	r3, [r3, #0]
900041bc:	3314      	adds	r3, #20
900041be:	681b      	ldr	r3, [r3, #0]
900041c0:	6978      	ldr	r0, [r7, #20]
900041c2:	4798      	blx	r3
}
900041c4:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
900041c6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
900041c8:	4618      	mov	r0, r3
900041ca:	373c      	adds	r7, #60	; 0x3c
900041cc:	46bd      	mov	sp, r7
900041ce:	bd90      	pop	{r4, r7, pc}
900041d0:	900208e8 	.word	0x900208e8
900041d4:	90020978 	.word	0x90020978
900041d8:	90020a78 	.word	0x90020a78
900041dc:	90020ac0 	.word	0x90020ac0
900041e0:	90020b64 	.word	0x90020b64

900041e4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
900041e4:	b580      	push	{r7, lr}
900041e6:	b082      	sub	sp, #8
900041e8:	af00      	add	r7, sp, #0
900041ea:	6078      	str	r0, [r7, #4]
900041ec:	460b      	mov	r3, r1
900041ee:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
900041f0:	687b      	ldr	r3, [r7, #4]
900041f2:	681b      	ldr	r3, [r3, #0]
900041f4:	3324      	adds	r3, #36	; 0x24
900041f6:	681b      	ldr	r3, [r3, #0]
900041f8:	887a      	ldrh	r2, [r7, #2]
900041fa:	4611      	mov	r1, r2
900041fc:	6878      	ldr	r0, [r7, #4]
900041fe:	4798      	blx	r3
90004200:	4603      	mov	r3, r0
    }
90004202:	4618      	mov	r0, r3
90004204:	3708      	adds	r7, #8
90004206:	46bd      	mov	sp, r7
90004208:	bd80      	pop	{r7, pc}

9000420a <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>:
    T& at(const uint16_t index)
9000420a:	b580      	push	{r7, lr}
9000420c:	b082      	sub	sp, #8
9000420e:	af00      	add	r7, sp, #0
90004210:	6078      	str	r0, [r7, #4]
90004212:	460b      	mov	r3, r1
90004214:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
90004216:	687b      	ldr	r3, [r7, #4]
90004218:	681b      	ldr	r3, [r3, #0]
9000421a:	3324      	adds	r3, #36	; 0x24
9000421c:	681b      	ldr	r3, [r3, #0]
9000421e:	887a      	ldrh	r2, [r7, #2]
90004220:	4611      	mov	r1, r2
90004222:	6878      	ldr	r0, [r7, #4]
90004224:	4798      	blx	r3
90004226:	4603      	mov	r3, r0
    }
90004228:	4618      	mov	r0, r3
9000422a:	3708      	adds	r7, #8
9000422c:	46bd      	mov	sp, r7
9000422e:	bd80      	pop	{r7, pc}

90004230 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>:
    T& at(const uint16_t index)
90004230:	b580      	push	{r7, lr}
90004232:	b082      	sub	sp, #8
90004234:	af00      	add	r7, sp, #0
90004236:	6078      	str	r0, [r7, #4]
90004238:	460b      	mov	r3, r1
9000423a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
9000423c:	687b      	ldr	r3, [r7, #4]
9000423e:	681b      	ldr	r3, [r3, #0]
90004240:	3324      	adds	r3, #36	; 0x24
90004242:	681b      	ldr	r3, [r3, #0]
90004244:	887a      	ldrh	r2, [r7, #2]
90004246:	4611      	mov	r1, r2
90004248:	6878      	ldr	r0, [r7, #4]
9000424a:	4798      	blx	r3
9000424c:	4603      	mov	r3, r0
    }
9000424e:	4618      	mov	r0, r3
90004250:	3708      	adds	r7, #8
90004252:	46bd      	mov	sp, r7
90004254:	bd80      	pop	{r7, pc}

90004256 <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This
     * function is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
90004256:	b480      	push	{r7}
90004258:	b083      	sub	sp, #12
9000425a:	af00      	add	r7, sp, #0
9000425c:	6078      	str	r0, [r7, #4]
9000425e:	6039      	str	r1, [r7, #0]
    {
        this->presenter = &presenter;
90004260:	687b      	ldr	r3, [r7, #4]
90004262:	683a      	ldr	r2, [r7, #0]
90004264:	63da      	str	r2, [r3, #60]	; 0x3c
    }
90004266:	bf00      	nop
90004268:	370c      	adds	r7, #12
9000426a:	46bd      	mov	sp, r7
9000426c:	f85d 7b04 	ldr.w	r7, [sp], #4
90004270:	4770      	bx	lr
	...

90004274 <_ZN8touchgfx12NoTransitionD1Ev>:
90004274:	b580      	push	{r7, lr}
90004276:	b082      	sub	sp, #8
90004278:	af00      	add	r7, sp, #0
9000427a:	6078      	str	r0, [r7, #4]
9000427c:	4a05      	ldr	r2, [pc, #20]	; (90004294 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
9000427e:	687b      	ldr	r3, [r7, #4]
90004280:	601a      	str	r2, [r3, #0]
90004282:	687b      	ldr	r3, [r7, #4]
90004284:	4618      	mov	r0, r3
90004286:	f7ff fceb 	bl	90003c60 <_ZN8touchgfx10TransitionD1Ev>
9000428a:	687b      	ldr	r3, [r7, #4]
9000428c:	4618      	mov	r0, r3
9000428e:	3708      	adds	r7, #8
90004290:	46bd      	mov	sp, r7
90004292:	bd80      	pop	{r7, pc}
90004294:	900216a0 	.word	0x900216a0

90004298 <_ZN8touchgfx12NoTransitionD0Ev>:
90004298:	b580      	push	{r7, lr}
9000429a:	b082      	sub	sp, #8
9000429c:	af00      	add	r7, sp, #0
9000429e:	6078      	str	r0, [r7, #4]
900042a0:	6878      	ldr	r0, [r7, #4]
900042a2:	f7ff ffe7 	bl	90004274 <_ZN8touchgfx12NoTransitionD1Ev>
900042a6:	210c      	movs	r1, #12
900042a8:	6878      	ldr	r0, [r7, #4]
900042aa:	f01a ffcc 	bl	9001f246 <_ZdlPvj>
900042ae:	687b      	ldr	r3, [r7, #4]
900042b0:	4618      	mov	r0, r3
900042b2:	3708      	adds	r7, #8
900042b4:	46bd      	mov	sp, r7
900042b6:	bd80      	pop	{r7, pc}

900042b8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    /**
     * Gets GSUB table.
     *
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
900042b8:	b480      	push	{r7}
900042ba:	b083      	sub	sp, #12
900042bc:	af00      	add	r7, sp, #0
900042be:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
900042c0:	687b      	ldr	r3, [r7, #4]
900042c2:	6a1b      	ldr	r3, [r3, #32]
    }
900042c4:	4618      	mov	r0, r3
900042c6:	370c      	adds	r7, #12
900042c8:	46bd      	mov	sp, r7
900042ca:	f85d 7b04 	ldr.w	r7, [sp], #4
900042ce:	4770      	bx	lr

900042d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
900042d0:	b580      	push	{r7, lr}
900042d2:	b08c      	sub	sp, #48	; 0x30
900042d4:	af08      	add	r7, sp, #32
900042d6:	60f8      	str	r0, [r7, #12]
900042d8:	60b9      	str	r1, [r7, #8]
900042da:	4611      	mov	r1, r2
900042dc:	461a      	mov	r2, r3
900042de:	460b      	mov	r3, r1
900042e0:	80fb      	strh	r3, [r7, #6]
900042e2:	4613      	mov	r3, r2
900042e4:	80bb      	strh	r3, [r7, #4]
    ConstFont(list, size, height, pixBelowBase, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
    glyphData(glyphDataInternalFlash),
    kerningData(kerningList),
    gsubTable(gsubData)
900042e6:	68f8      	ldr	r0, [r7, #12]
900042e8:	88b9      	ldrh	r1, [r7, #4]
900042ea:	88fa      	ldrh	r2, [r7, #6]
900042ec:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
900042ee:	9306      	str	r3, [sp, #24]
900042f0:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
900042f2:	9305      	str	r3, [sp, #20]
900042f4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900042f8:	9304      	str	r3, [sp, #16]
900042fa:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
900042fe:	9303      	str	r3, [sp, #12]
90004300:	f897 3020 	ldrb.w	r3, [r7, #32]
90004304:	9302      	str	r3, [sp, #8]
90004306:	7f3b      	ldrb	r3, [r7, #28]
90004308:	9301      	str	r3, [sp, #4]
9000430a:	7e3b      	ldrb	r3, [r7, #24]
9000430c:	9300      	str	r3, [sp, #0]
9000430e:	460b      	mov	r3, r1
90004310:	68b9      	ldr	r1, [r7, #8]
90004312:	f00d f9af 	bl	90011674 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
90004316:	4a08      	ldr	r2, [pc, #32]	; (90004338 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x68>)
90004318:	68fb      	ldr	r3, [r7, #12]
9000431a:	601a      	str	r2, [r3, #0]
9000431c:	68fb      	ldr	r3, [r7, #12]
9000431e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
90004320:	619a      	str	r2, [r3, #24]
90004322:	68fb      	ldr	r3, [r7, #12]
90004324:	6b3a      	ldr	r2, [r7, #48]	; 0x30
90004326:	61da      	str	r2, [r3, #28]
90004328:	68fb      	ldr	r3, [r7, #12]
9000432a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
9000432c:	621a      	str	r2, [r3, #32]
{
}
9000432e:	68fb      	ldr	r3, [r7, #12]
90004330:	4618      	mov	r0, r3
90004332:	3710      	adds	r7, #16
90004334:	46bd      	mov	sp, r7
90004336:	bd80      	pop	{r7, pc}
90004338:	900216e8 	.word	0x900216e8

9000433c <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
9000433c:	b480      	push	{r7}
9000433e:	b085      	sub	sp, #20
90004340:	af00      	add	r7, sp, #0
90004342:	6078      	str	r0, [r7, #4]
90004344:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
90004346:	687b      	ldr	r3, [r7, #4]
90004348:	699b      	ldr	r3, [r3, #24]
9000434a:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
9000434c:	683b      	ldr	r3, [r7, #0]
9000434e:	889b      	ldrh	r3, [r3, #4]
90004350:	0adb      	lsrs	r3, r3, #11
90004352:	b29b      	uxth	r3, r3
90004354:	009b      	lsls	r3, r3, #2
90004356:	68fa      	ldr	r2, [r7, #12]
90004358:	4413      	add	r3, r2
9000435a:	681a      	ldr	r2, [r3, #0]
9000435c:	683b      	ldr	r3, [r7, #0]
9000435e:	681b      	ldr	r3, [r3, #0]
90004360:	4413      	add	r3, r2
}
90004362:	4618      	mov	r0, r3
90004364:	3714      	adds	r7, #20
90004366:	46bd      	mov	sp, r7
90004368:	f85d 7b04 	ldr.w	r7, [sp], #4
9000436c:	4770      	bx	lr

9000436e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
9000436e:	b480      	push	{r7}
90004370:	b089      	sub	sp, #36	; 0x24
90004372:	af00      	add	r7, sp, #0
90004374:	60f8      	str	r0, [r7, #12]
90004376:	460b      	mov	r3, r1
90004378:	607a      	str	r2, [r7, #4]
9000437a:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
9000437c:	687b      	ldr	r3, [r7, #4]
9000437e:	2b00      	cmp	r3, #0
90004380:	d003      	beq.n	9000438a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
90004382:	687b      	ldr	r3, [r7, #4]
90004384:	7b1b      	ldrb	r3, [r3, #12]
90004386:	2b00      	cmp	r3, #0
90004388:	d101      	bne.n	9000438e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
9000438a:	2300      	movs	r3, #0
9000438c:	e030      	b.n	900043f0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
9000438e:	68fb      	ldr	r3, [r7, #12]
90004390:	69da      	ldr	r2, [r3, #28]
90004392:	687b      	ldr	r3, [r7, #4]
90004394:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90004396:	697b      	ldr	r3, [r7, #20]
90004398:	7b5b      	ldrb	r3, [r3, #13]
9000439a:	021b      	lsls	r3, r3, #8
9000439c:	b21b      	sxth	r3, r3
9000439e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
900043a2:	b219      	sxth	r1, r3
900043a4:	697b      	ldr	r3, [r7, #20]
900043a6:	7adb      	ldrb	r3, [r3, #11]
900043a8:	b21b      	sxth	r3, r3
900043aa:	430b      	orrs	r3, r1
900043ac:	b21b      	sxth	r3, r3
900043ae:	b29b      	uxth	r3, r3
900043b0:	009b      	lsls	r3, r3, #2
900043b2:	4413      	add	r3, r2
900043b4:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900043b6:	687b      	ldr	r3, [r7, #4]
900043b8:	7b1b      	ldrb	r3, [r3, #12]
900043ba:	837b      	strh	r3, [r7, #26]
900043bc:	8b7b      	ldrh	r3, [r7, #26]
900043be:	2b00      	cmp	r3, #0
900043c0:	d015      	beq.n	900043ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    {
        if (prevChar == kerndata->unicodePrevChar)
900043c2:	69fb      	ldr	r3, [r7, #28]
900043c4:	881b      	ldrh	r3, [r3, #0]
900043c6:	897a      	ldrh	r2, [r7, #10]
900043c8:	429a      	cmp	r2, r3
900043ca:	d103      	bne.n	900043d4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x66>
        {
            return kerndata->distance;
900043cc:	69fb      	ldr	r3, [r7, #28]
900043ce:	f993 3002 	ldrsb.w	r3, [r3, #2]
900043d2:	e00d      	b.n	900043f0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        }
        if (prevChar < kerndata->unicodePrevChar)
900043d4:	69fb      	ldr	r3, [r7, #28]
900043d6:	881b      	ldrh	r3, [r3, #0]
900043d8:	897a      	ldrh	r2, [r7, #10]
900043da:	429a      	cmp	r2, r3
900043dc:	d306      	bcc.n	900043ec <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x7e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900043de:	8b7b      	ldrh	r3, [r7, #26]
900043e0:	3b01      	subs	r3, #1
900043e2:	837b      	strh	r3, [r7, #26]
900043e4:	69fb      	ldr	r3, [r7, #28]
900043e6:	3304      	adds	r3, #4
900043e8:	61fb      	str	r3, [r7, #28]
900043ea:	e7e7      	b.n	900043bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x4e>
        {
            break;
900043ec:	bf00      	nop
        }
    }
    return 0;
900043ee:	2300      	movs	r3, #0
}
900043f0:	4618      	mov	r0, r3
900043f2:	3724      	adds	r7, #36	; 0x24
900043f4:	46bd      	mov	sp, r7
900043f6:	f85d 7b04 	ldr.w	r7, [sp], #4
900043fa:	4770      	bx	lr

900043fc <_ZN8touchgfx9colortypeC1Em>:
    colortype(uint32_t col)
900043fc:	b480      	push	{r7}
900043fe:	b083      	sub	sp, #12
90004400:	af00      	add	r7, sp, #0
90004402:	6078      	str	r0, [r7, #4]
90004404:	6039      	str	r1, [r7, #0]
        color = col;
90004406:	687b      	ldr	r3, [r7, #4]
90004408:	683a      	ldr	r2, [r7, #0]
9000440a:	601a      	str	r2, [r3, #0]
    }
9000440c:	687b      	ldr	r3, [r7, #4]
9000440e:	4618      	mov	r0, r3
90004410:	370c      	adds	r7, #12
90004412:	46bd      	mov	sp, r7
90004414:	f85d 7b04 	ldr.w	r7, [sp], #4
90004418:	4770      	bx	lr

9000441a <_ZN8touchgfx4RectC1Essss>:
     * @param  x      The x coordinate.
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
9000441a:	b480      	push	{r7}
9000441c:	b085      	sub	sp, #20
9000441e:	af00      	add	r7, sp, #0
90004420:	60f8      	str	r0, [r7, #12]
90004422:	4608      	mov	r0, r1
90004424:	4611      	mov	r1, r2
90004426:	461a      	mov	r2, r3
90004428:	4603      	mov	r3, r0
9000442a:	817b      	strh	r3, [r7, #10]
9000442c:	460b      	mov	r3, r1
9000442e:	813b      	strh	r3, [r7, #8]
90004430:	4613      	mov	r3, r2
90004432:	80fb      	strh	r3, [r7, #6]
    {
        this->x = x;
90004434:	68fb      	ldr	r3, [r7, #12]
90004436:	897a      	ldrh	r2, [r7, #10]
90004438:	801a      	strh	r2, [r3, #0]
        this->y = y;
9000443a:	68fb      	ldr	r3, [r7, #12]
9000443c:	893a      	ldrh	r2, [r7, #8]
9000443e:	805a      	strh	r2, [r3, #2]
        this->width = width;
90004440:	68fb      	ldr	r3, [r7, #12]
90004442:	88fa      	ldrh	r2, [r7, #6]
90004444:	809a      	strh	r2, [r3, #4]
        this->height = height;
90004446:	68fb      	ldr	r3, [r7, #12]
90004448:	8b3a      	ldrh	r2, [r7, #24]
9000444a:	80da      	strh	r2, [r3, #6]
    }
9000444c:	68fb      	ldr	r3, [r7, #12]
9000444e:	4618      	mov	r0, r3
90004450:	3714      	adds	r7, #20
90004452:	46bd      	mov	sp, r7
90004454:	f85d 7b04 	ldr.w	r7, [sp], #4
90004458:	4770      	bx	lr

9000445a <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
9000445a:	b480      	push	{r7}
9000445c:	b083      	sub	sp, #12
9000445e:	af00      	add	r7, sp, #0
90004460:	6078      	str	r0, [r7, #4]
90004462:	460b      	mov	r3, r1
90004464:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
90004466:	687b      	ldr	r3, [r7, #4]
90004468:	887a      	ldrh	r2, [r7, #2]
9000446a:	801a      	strh	r2, [r3, #0]
    {
    }
9000446c:	687b      	ldr	r3, [r7, #4]
9000446e:	4618      	mov	r0, r3
90004470:	370c      	adds	r7, #12
90004472:	46bd      	mov	sp, r7
90004474:	f85d 7b04 	ldr.w	r7, [sp], #4
90004478:	4770      	bx	lr
	...

9000447c <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
9000447c:	b580      	push	{r7, lr}
9000447e:	b084      	sub	sp, #16
90004480:	af02      	add	r7, sp, #8
90004482:	6078      	str	r0, [r7, #4]
        : rect(0, 0, 0, 0),
          parent(0),
          nextSibling(0),
          nextDrawChainElement(0),
          touchable(false),
          visible(true)
90004484:	4a13      	ldr	r2, [pc, #76]	; (900044d4 <_ZN8touchgfx8DrawableC1Ev+0x58>)
90004486:	687b      	ldr	r3, [r7, #4]
90004488:	601a      	str	r2, [r3, #0]
9000448a:	687b      	ldr	r3, [r7, #4]
9000448c:	1d18      	adds	r0, r3, #4
9000448e:	2300      	movs	r3, #0
90004490:	9300      	str	r3, [sp, #0]
90004492:	2300      	movs	r3, #0
90004494:	2200      	movs	r2, #0
90004496:	2100      	movs	r1, #0
90004498:	f7ff ffbf 	bl	9000441a <_ZN8touchgfx4RectC1Essss>
9000449c:	687b      	ldr	r3, [r7, #4]
9000449e:	330c      	adds	r3, #12
900044a0:	4618      	mov	r0, r3
900044a2:	f7fd fb0f 	bl	90001ac4 <_ZN8touchgfx4RectC1Ev>
900044a6:	687b      	ldr	r3, [r7, #4]
900044a8:	2200      	movs	r2, #0
900044aa:	615a      	str	r2, [r3, #20]
900044ac:	687b      	ldr	r3, [r7, #4]
900044ae:	2200      	movs	r2, #0
900044b0:	619a      	str	r2, [r3, #24]
900044b2:	687b      	ldr	r3, [r7, #4]
900044b4:	2200      	movs	r2, #0
900044b6:	61da      	str	r2, [r3, #28]
900044b8:	687b      	ldr	r3, [r7, #4]
900044ba:	2200      	movs	r2, #0
900044bc:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
900044c0:	687b      	ldr	r3, [r7, #4]
900044c2:	2201      	movs	r2, #1
900044c4:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
900044c8:	687b      	ldr	r3, [r7, #4]
900044ca:	4618      	mov	r0, r3
900044cc:	3708      	adds	r7, #8
900044ce:	46bd      	mov	sp, r7
900044d0:	bd80      	pop	{r7, pc}
900044d2:	bf00      	nop
900044d4:	90022a98 	.word	0x90022a98

900044d8 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
900044d8:	b480      	push	{r7}
900044da:	b083      	sub	sp, #12
900044dc:	af00      	add	r7, sp, #0
900044de:	6078      	str	r0, [r7, #4]
    {
900044e0:	4a04      	ldr	r2, [pc, #16]	; (900044f4 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
900044e2:	687b      	ldr	r3, [r7, #4]
900044e4:	601a      	str	r2, [r3, #0]
    }
900044e6:	687b      	ldr	r3, [r7, #4]
900044e8:	4618      	mov	r0, r3
900044ea:	370c      	adds	r7, #12
900044ec:	46bd      	mov	sp, r7
900044ee:	f85d 7b04 	ldr.w	r7, [sp], #4
900044f2:	4770      	bx	lr
900044f4:	90022a98 	.word	0x90022a98

900044f8 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
900044f8:	b580      	push	{r7, lr}
900044fa:	b082      	sub	sp, #8
900044fc:	af00      	add	r7, sp, #0
900044fe:	6078      	str	r0, [r7, #4]
    }
90004500:	6878      	ldr	r0, [r7, #4]
90004502:	f7ff ffe9 	bl	900044d8 <_ZN8touchgfx8DrawableD1Ev>
90004506:	2128      	movs	r1, #40	; 0x28
90004508:	6878      	ldr	r0, [r7, #4]
9000450a:	f01a fe9c 	bl	9001f246 <_ZdlPvj>
9000450e:	687b      	ldr	r3, [r7, #4]
90004510:	4618      	mov	r0, r3
90004512:	3708      	adds	r7, #8
90004514:	46bd      	mov	sp, r7
90004516:	bd80      	pop	{r7, pc}

90004518 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
90004518:	b480      	push	{r7}
9000451a:	b083      	sub	sp, #12
9000451c:	af00      	add	r7, sp, #0
9000451e:	6078      	str	r0, [r7, #4]
    {
        return 0;
90004520:	2300      	movs	r3, #0
    }
90004522:	4618      	mov	r0, r3
90004524:	370c      	adds	r7, #12
90004526:	46bd      	mov	sp, r7
90004528:	f85d 7b04 	ldr.w	r7, [sp], #4
9000452c:	4770      	bx	lr

9000452e <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param  width  The width of this Drawable.
     * @param  height The height of this Drawable.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
9000452e:	b580      	push	{r7, lr}
90004530:	b084      	sub	sp, #16
90004532:	af00      	add	r7, sp, #0
90004534:	60f8      	str	r0, [r7, #12]
90004536:	4608      	mov	r0, r1
90004538:	4611      	mov	r1, r2
9000453a:	461a      	mov	r2, r3
9000453c:	4603      	mov	r3, r0
9000453e:	817b      	strh	r3, [r7, #10]
90004540:	460b      	mov	r3, r1
90004542:	813b      	strh	r3, [r7, #8]
90004544:	4613      	mov	r3, r2
90004546:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
90004548:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
9000454c:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
90004550:	4619      	mov	r1, r3
90004552:	68f8      	ldr	r0, [r7, #12]
90004554:	f000 f82a 	bl	900045ac <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
90004558:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
9000455c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
90004560:	4619      	mov	r1, r3
90004562:	68f8      	ldr	r0, [r7, #12]
90004564:	f000 f87e 	bl	90004664 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
90004568:	bf00      	nop
9000456a:	3710      	adds	r7, #16
9000456c:	46bd      	mov	sp, r7
9000456e:	bd80      	pop	{r7, pc}

90004570 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
90004570:	b480      	push	{r7}
90004572:	b083      	sub	sp, #12
90004574:	af00      	add	r7, sp, #0
90004576:	6078      	str	r0, [r7, #4]
90004578:	460b      	mov	r3, r1
9000457a:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
9000457c:	687b      	ldr	r3, [r7, #4]
9000457e:	887a      	ldrh	r2, [r7, #2]
90004580:	809a      	strh	r2, [r3, #4]
    }
90004582:	bf00      	nop
90004584:	370c      	adds	r7, #12
90004586:	46bd      	mov	sp, r7
90004588:	f85d 7b04 	ldr.w	r7, [sp], #4
9000458c:	4770      	bx	lr

9000458e <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
9000458e:	b480      	push	{r7}
90004590:	b083      	sub	sp, #12
90004592:	af00      	add	r7, sp, #0
90004594:	6078      	str	r0, [r7, #4]
90004596:	460b      	mov	r3, r1
90004598:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
9000459a:	687b      	ldr	r3, [r7, #4]
9000459c:	887a      	ldrh	r2, [r7, #2]
9000459e:	80da      	strh	r2, [r3, #6]
    }
900045a0:	bf00      	nop
900045a2:	370c      	adds	r7, #12
900045a4:	46bd      	mov	sp, r7
900045a6:	f85d 7b04 	ldr.w	r7, [sp], #4
900045aa:	4770      	bx	lr

900045ac <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
900045ac:	b580      	push	{r7, lr}
900045ae:	b082      	sub	sp, #8
900045b0:	af00      	add	r7, sp, #0
900045b2:	6078      	str	r0, [r7, #4]
900045b4:	460b      	mov	r3, r1
900045b6:	807b      	strh	r3, [r7, #2]
900045b8:	4613      	mov	r3, r2
900045ba:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
900045bc:	687b      	ldr	r3, [r7, #4]
900045be:	681b      	ldr	r3, [r3, #0]
900045c0:	332c      	adds	r3, #44	; 0x2c
900045c2:	681b      	ldr	r3, [r3, #0]
900045c4:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
900045c8:	4611      	mov	r1, r2
900045ca:	6878      	ldr	r0, [r7, #4]
900045cc:	4798      	blx	r3
        setY(y);
900045ce:	687b      	ldr	r3, [r7, #4]
900045d0:	681b      	ldr	r3, [r3, #0]
900045d2:	3330      	adds	r3, #48	; 0x30
900045d4:	681b      	ldr	r3, [r3, #0]
900045d6:	f9b7 2000 	ldrsh.w	r2, [r7]
900045da:	4611      	mov	r1, r2
900045dc:	6878      	ldr	r0, [r7, #4]
900045de:	4798      	blx	r3
    }
900045e0:	bf00      	nop
900045e2:	3708      	adds	r7, #8
900045e4:	46bd      	mov	sp, r7
900045e6:	bd80      	pop	{r7, pc}

900045e8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
900045e8:	b480      	push	{r7}
900045ea:	b083      	sub	sp, #12
900045ec:	af00      	add	r7, sp, #0
900045ee:	6078      	str	r0, [r7, #4]
900045f0:	460b      	mov	r3, r1
900045f2:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
900045f4:	687b      	ldr	r3, [r7, #4]
900045f6:	887a      	ldrh	r2, [r7, #2]
900045f8:	811a      	strh	r2, [r3, #8]
    }
900045fa:	bf00      	nop
900045fc:	370c      	adds	r7, #12
900045fe:	46bd      	mov	sp, r7
90004600:	f85d 7b04 	ldr.w	r7, [sp], #4
90004604:	4770      	bx	lr

90004606 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
90004606:	b480      	push	{r7}
90004608:	b083      	sub	sp, #12
9000460a:	af00      	add	r7, sp, #0
9000460c:	6078      	str	r0, [r7, #4]
9000460e:	460b      	mov	r3, r1
90004610:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
90004612:	687b      	ldr	r3, [r7, #4]
90004614:	887a      	ldrh	r2, [r7, #2]
90004616:	815a      	strh	r2, [r3, #10]
    }
90004618:	bf00      	nop
9000461a:	370c      	adds	r7, #12
9000461c:	46bd      	mov	sp, r7
9000461e:	f85d 7b04 	ldr.w	r7, [sp], #4
90004622:	4770      	bx	lr

90004624 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
90004624:	b480      	push	{r7}
90004626:	b083      	sub	sp, #12
90004628:	af00      	add	r7, sp, #0
9000462a:	6078      	str	r0, [r7, #4]
    {
    }
9000462c:	bf00      	nop
9000462e:	370c      	adds	r7, #12
90004630:	46bd      	mov	sp, r7
90004632:	f85d 7b04 	ldr.w	r7, [sp], #4
90004636:	4770      	bx	lr

90004638 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
90004638:	b480      	push	{r7}
9000463a:	b083      	sub	sp, #12
9000463c:	af00      	add	r7, sp, #0
9000463e:	6078      	str	r0, [r7, #4]
90004640:	6039      	str	r1, [r7, #0]
    {
    }
90004642:	bf00      	nop
90004644:	370c      	adds	r7, #12
90004646:	46bd      	mov	sp, r7
90004648:	f85d 7b04 	ldr.w	r7, [sp], #4
9000464c:	4770      	bx	lr

9000464e <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
9000464e:	b480      	push	{r7}
90004650:	b083      	sub	sp, #12
90004652:	af00      	add	r7, sp, #0
90004654:	6078      	str	r0, [r7, #4]
90004656:	6039      	str	r1, [r7, #0]
    {
    }
90004658:	bf00      	nop
9000465a:	370c      	adds	r7, #12
9000465c:	46bd      	mov	sp, r7
9000465e:	f85d 7b04 	ldr.w	r7, [sp], #4
90004662:	4770      	bx	lr

90004664 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
90004664:	b580      	push	{r7, lr}
90004666:	b082      	sub	sp, #8
90004668:	af00      	add	r7, sp, #0
9000466a:	6078      	str	r0, [r7, #4]
9000466c:	460b      	mov	r3, r1
9000466e:	807b      	strh	r3, [r7, #2]
90004670:	4613      	mov	r3, r2
90004672:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
90004674:	687b      	ldr	r3, [r7, #4]
90004676:	681b      	ldr	r3, [r3, #0]
90004678:	3334      	adds	r3, #52	; 0x34
9000467a:	681b      	ldr	r3, [r3, #0]
9000467c:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90004680:	4611      	mov	r1, r2
90004682:	6878      	ldr	r0, [r7, #4]
90004684:	4798      	blx	r3
        setHeight(height);
90004686:	687b      	ldr	r3, [r7, #4]
90004688:	681b      	ldr	r3, [r3, #0]
9000468a:	3338      	adds	r3, #56	; 0x38
9000468c:	681b      	ldr	r3, [r3, #0]
9000468e:	f9b7 2000 	ldrsh.w	r2, [r7]
90004692:	4611      	mov	r1, r2
90004694:	6878      	ldr	r0, [r7, #4]
90004696:	4798      	blx	r3
    }
90004698:	bf00      	nop
9000469a:	3708      	adds	r7, #8
9000469c:	46bd      	mov	sp, r7
9000469e:	bd80      	pop	{r7, pc}

900046a0 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
900046a0:	b480      	push	{r7}
900046a2:	b083      	sub	sp, #12
900046a4:	af00      	add	r7, sp, #0
900046a6:	6078      	str	r0, [r7, #4]
900046a8:	6039      	str	r1, [r7, #0]
    {
    }
900046aa:	bf00      	nop
900046ac:	370c      	adds	r7, #12
900046ae:	46bd      	mov	sp, r7
900046b0:	f85d 7b04 	ldr.w	r7, [sp], #4
900046b4:	4770      	bx	lr

900046b6 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
900046b6:	b480      	push	{r7}
900046b8:	b083      	sub	sp, #12
900046ba:	af00      	add	r7, sp, #0
900046bc:	6078      	str	r0, [r7, #4]
    {
    }
900046be:	bf00      	nop
900046c0:	370c      	adds	r7, #12
900046c2:	46bd      	mov	sp, r7
900046c4:	f85d 7b04 	ldr.w	r7, [sp], #4
900046c8:	4770      	bx	lr

900046ca <_ZN8touchgfx8Drawable10setVisibleEb>:
     * @param  vis true if this Drawable should be visible. By default, drawables are visible
     *             unless this function has been called with false as argument.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setVisible(bool vis)
900046ca:	b480      	push	{r7}
900046cc:	b083      	sub	sp, #12
900046ce:	af00      	add	r7, sp, #0
900046d0:	6078      	str	r0, [r7, #4]
900046d2:	460b      	mov	r3, r1
900046d4:	70fb      	strb	r3, [r7, #3]
    {
        visible = vis;
900046d6:	687b      	ldr	r3, [r7, #4]
900046d8:	78fa      	ldrb	r2, [r7, #3]
900046da:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    }
900046de:	bf00      	nop
900046e0:	370c      	adds	r7, #12
900046e2:	46bd      	mov	sp, r7
900046e4:	f85d 7b04 	ldr.w	r7, [sp], #4
900046e8:	4770      	bx	lr

900046ea <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
900046ea:	b480      	push	{r7}
900046ec:	b083      	sub	sp, #12
900046ee:	af00      	add	r7, sp, #0
900046f0:	6078      	str	r0, [r7, #4]
900046f2:	460b      	mov	r3, r1
900046f4:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
900046f6:	687b      	ldr	r3, [r7, #4]
900046f8:	78fa      	ldrb	r2, [r7, #3]
900046fa:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    }
900046fe:	bf00      	nop
90004700:	370c      	adds	r7, #12
90004702:	46bd      	mov	sp, r7
90004704:	f85d 7b04 	ldr.w	r7, [sp], #4
90004708:	4770      	bx	lr

9000470a <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
9000470a:	b480      	push	{r7}
9000470c:	b083      	sub	sp, #12
9000470e:	af00      	add	r7, sp, #0
90004710:	6078      	str	r0, [r7, #4]
    {
        return visible;
90004712:	687b      	ldr	r3, [r7, #4]
90004714:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
90004718:	4618      	mov	r0, r3
9000471a:	370c      	adds	r7, #12
9000471c:	46bd      	mov	sp, r7
9000471e:	f85d 7b04 	ldr.w	r7, [sp], #4
90004722:	4770      	bx	lr

90004724 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
90004724:	b480      	push	{r7}
90004726:	b083      	sub	sp, #12
90004728:	af00      	add	r7, sp, #0
9000472a:	6078      	str	r0, [r7, #4]
    {
        return touchable;
9000472c:	687b      	ldr	r3, [r7, #4]
9000472e:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
90004732:	4618      	mov	r0, r3
90004734:	370c      	adds	r7, #12
90004736:	46bd      	mov	sp, r7
90004738:	f85d 7b04 	ldr.w	r7, [sp], #4
9000473c:	4770      	bx	lr

9000473e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
9000473e:	b580      	push	{r7, lr}
90004740:	b082      	sub	sp, #8
90004742:	af00      	add	r7, sp, #0
90004744:	6078      	str	r0, [r7, #4]
90004746:	460b      	mov	r3, r1
90004748:	807b      	strh	r3, [r7, #2]
9000474a:	4613      	mov	r3, r2
9000474c:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
9000474e:	687b      	ldr	r3, [r7, #4]
90004750:	681b      	ldr	r3, [r3, #0]
90004752:	3350      	adds	r3, #80	; 0x50
90004754:	681b      	ldr	r3, [r3, #0]
90004756:	8879      	ldrh	r1, [r7, #2]
90004758:	687a      	ldr	r2, [r7, #4]
9000475a:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
9000475e:	b292      	uxth	r2, r2
90004760:	1a8a      	subs	r2, r1, r2
90004762:	b292      	uxth	r2, r2
90004764:	b210      	sxth	r0, r2
90004766:	8839      	ldrh	r1, [r7, #0]
90004768:	687a      	ldr	r2, [r7, #4]
9000476a:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
9000476e:	b292      	uxth	r2, r2
90004770:	1a8a      	subs	r2, r1, r2
90004772:	b292      	uxth	r2, r2
90004774:	b212      	sxth	r2, r2
90004776:	4601      	mov	r1, r0
90004778:	6878      	ldr	r0, [r7, #4]
9000477a:	4798      	blx	r3
    }
9000477c:	bf00      	nop
9000477e:	3708      	adds	r7, #8
90004780:	46bd      	mov	sp, r7
90004782:	bd80      	pop	{r7, pc}

90004784 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
90004784:	b480      	push	{r7}
90004786:	b083      	sub	sp, #12
90004788:	af00      	add	r7, sp, #0
9000478a:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
9000478c:	687b      	ldr	r3, [r7, #4]
9000478e:	f64f 72ff 	movw	r2, #65535	; 0xffff
90004792:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
90004794:	687b      	ldr	r3, [r7, #4]
90004796:	f64f 72ff 	movw	r2, #65535	; 0xffff
9000479a:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
9000479c:	687b      	ldr	r3, [r7, #4]
9000479e:	f64f 72ff 	movw	r2, #65535	; 0xffff
900047a2:	845a      	strh	r2, [r3, #34]	; 0x22
    }
900047a4:	bf00      	nop
900047a6:	370c      	adds	r7, #12
900047a8:	46bd      	mov	sp, r7
900047aa:	f85d 7b04 	ldr.w	r7, [sp], #4
900047ae:	4770      	bx	lr

900047b0 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
900047b0:	b580      	push	{r7, lr}
900047b2:	b084      	sub	sp, #16
900047b4:	af00      	add	r7, sp, #0
900047b6:	60f8      	str	r0, [r7, #12]
900047b8:	60b9      	str	r1, [r7, #8]
900047ba:	607a      	str	r2, [r7, #4]
    {
        resetDrawChainCache();
900047bc:	68f8      	ldr	r0, [r7, #12]
900047be:	f7ff ffe1 	bl	90004784 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
900047c2:	687b      	ldr	r3, [r7, #4]
900047c4:	681a      	ldr	r2, [r3, #0]
900047c6:	68fb      	ldr	r3, [r7, #12]
900047c8:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
900047ca:	687b      	ldr	r3, [r7, #4]
900047cc:	68fa      	ldr	r2, [r7, #12]
900047ce:	601a      	str	r2, [r3, #0]
    }
900047d0:	bf00      	nop
900047d2:	3710      	adds	r7, #16
900047d4:	46bd      	mov	sp, r7
900047d6:	bd80      	pop	{r7, pc}

900047d8 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
900047d8:	b580      	push	{r7, lr}
900047da:	b082      	sub	sp, #8
900047dc:	af00      	add	r7, sp, #0
900047de:	6078      	str	r0, [r7, #4]
    {
900047e0:	4a06      	ldr	r2, [pc, #24]	; (900047fc <_ZN8touchgfx6ScreenD1Ev+0x24>)
900047e2:	687b      	ldr	r3, [r7, #4]
900047e4:	601a      	str	r2, [r3, #0]
900047e6:	687b      	ldr	r3, [r7, #4]
900047e8:	3304      	adds	r3, #4
900047ea:	4618      	mov	r0, r3
900047ec:	f000 fd48 	bl	90005280 <_ZN8touchgfx9ContainerD1Ev>
    }
900047f0:	687b      	ldr	r3, [r7, #4]
900047f2:	4618      	mov	r0, r3
900047f4:	3708      	adds	r7, #8
900047f6:	46bd      	mov	sp, r7
900047f8:	bd80      	pop	{r7, pc}
900047fa:	bf00      	nop
900047fc:	90022b8c 	.word	0x90022b8c

90004800 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
90004800:	b580      	push	{r7, lr}
90004802:	b082      	sub	sp, #8
90004804:	af00      	add	r7, sp, #0
90004806:	6078      	str	r0, [r7, #4]
    }
90004808:	6878      	ldr	r0, [r7, #4]
9000480a:	f7ff ffe5 	bl	900047d8 <_ZN8touchgfx6ScreenD1Ev>
9000480e:	213c      	movs	r1, #60	; 0x3c
90004810:	6878      	ldr	r0, [r7, #4]
90004812:	f01a fd18 	bl	9001f246 <_ZdlPvj>
90004816:	687b      	ldr	r3, [r7, #4]
90004818:	4618      	mov	r0, r3
9000481a:	3708      	adds	r7, #8
9000481c:	46bd      	mov	sp, r7
9000481e:	bd80      	pop	{r7, pc}

90004820 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
90004820:	b480      	push	{r7}
90004822:	b083      	sub	sp, #12
90004824:	af00      	add	r7, sp, #0
90004826:	6078      	str	r0, [r7, #4]
    {
    }
90004828:	bf00      	nop
9000482a:	370c      	adds	r7, #12
9000482c:	46bd      	mov	sp, r7
9000482e:	f85d 7b04 	ldr.w	r7, [sp], #4
90004832:	4770      	bx	lr

90004834 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
90004834:	b480      	push	{r7}
90004836:	b083      	sub	sp, #12
90004838:	af00      	add	r7, sp, #0
9000483a:	6078      	str	r0, [r7, #4]
    {
    }
9000483c:	bf00      	nop
9000483e:	370c      	adds	r7, #12
90004840:	46bd      	mov	sp, r7
90004842:	f85d 7b04 	ldr.w	r7, [sp], #4
90004846:	4770      	bx	lr

90004848 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
90004848:	b480      	push	{r7}
9000484a:	b083      	sub	sp, #12
9000484c:	af00      	add	r7, sp, #0
9000484e:	6078      	str	r0, [r7, #4]
    {
    }
90004850:	bf00      	nop
90004852:	370c      	adds	r7, #12
90004854:	46bd      	mov	sp, r7
90004856:	f85d 7b04 	ldr.w	r7, [sp], #4
9000485a:	4770      	bx	lr

9000485c <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
9000485c:	b480      	push	{r7}
9000485e:	b083      	sub	sp, #12
90004860:	af00      	add	r7, sp, #0
90004862:	6078      	str	r0, [r7, #4]
    {
    }
90004864:	bf00      	nop
90004866:	370c      	adds	r7, #12
90004868:	46bd      	mov	sp, r7
9000486a:	f85d 7b04 	ldr.w	r7, [sp], #4
9000486e:	4770      	bx	lr

90004870 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
90004870:	b480      	push	{r7}
90004872:	b083      	sub	sp, #12
90004874:	af00      	add	r7, sp, #0
90004876:	6078      	str	r0, [r7, #4]
90004878:	460b      	mov	r3, r1
9000487a:	70fb      	strb	r3, [r7, #3]
    {
    }
9000487c:	bf00      	nop
9000487e:	370c      	adds	r7, #12
90004880:	46bd      	mov	sp, r7
90004882:	f85d 7b04 	ldr.w	r7, [sp], #4
90004886:	4770      	bx	lr

90004888 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
90004888:	b580      	push	{r7, lr}
9000488a:	b082      	sub	sp, #8
9000488c:	af00      	add	r7, sp, #0
9000488e:	6078      	str	r0, [r7, #4]
90004890:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
90004892:	687b      	ldr	r3, [r7, #4]
90004894:	3304      	adds	r3, #4
90004896:	6839      	ldr	r1, [r7, #0]
90004898:	4618      	mov	r0, r3
9000489a:	f008 fdab 	bl	9000d3f4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
9000489e:	bf00      	nop
900048a0:	3708      	adds	r7, #8
900048a2:	46bd      	mov	sp, r7
900048a4:	bd80      	pop	{r7, pc}

900048a6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param       x    Not used since this Widget is the only "child".
     * @param       y    Not used since this Widget is the only "child".
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
900048a6:	b580      	push	{r7, lr}
900048a8:	b084      	sub	sp, #16
900048aa:	af00      	add	r7, sp, #0
900048ac:	60f8      	str	r0, [r7, #12]
900048ae:	607b      	str	r3, [r7, #4]
900048b0:	460b      	mov	r3, r1
900048b2:	817b      	strh	r3, [r7, #10]
900048b4:	4613      	mov	r3, r2
900048b6:	813b      	strh	r3, [r7, #8]
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
900048b8:	68fb      	ldr	r3, [r7, #12]
900048ba:	4618      	mov	r0, r3
900048bc:	f7ff ff25 	bl	9000470a <_ZNK8touchgfx8Drawable9isVisibleEv>
900048c0:	4603      	mov	r3, r0
900048c2:	2b00      	cmp	r3, #0
900048c4:	d008      	beq.n	900048d8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
900048c6:	68fb      	ldr	r3, [r7, #12]
900048c8:	4618      	mov	r0, r3
900048ca:	f7ff ff2b 	bl	90004724 <_ZNK8touchgfx8Drawable11isTouchableEv>
900048ce:	4603      	mov	r3, r0
900048d0:	2b00      	cmp	r3, #0
900048d2:	d001      	beq.n	900048d8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
900048d4:	2301      	movs	r3, #1
900048d6:	e000      	b.n	900048da <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
900048d8:	2300      	movs	r3, #0
900048da:	2b00      	cmp	r3, #0
900048dc:	d002      	beq.n	900048e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
900048de:	68fa      	ldr	r2, [r7, #12]
900048e0:	687b      	ldr	r3, [r7, #4]
900048e2:	601a      	str	r2, [r3, #0]
        }
    }
900048e4:	bf00      	nop
900048e6:	3710      	adds	r7, #16
900048e8:	46bd      	mov	sp, r7
900048ea:	bd80      	pop	{r7, pc}

900048ec <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
900048ec:	b580      	push	{r7, lr}
900048ee:	b082      	sub	sp, #8
900048f0:	af00      	add	r7, sp, #0
900048f2:	6078      	str	r0, [r7, #4]
900048f4:	687b      	ldr	r3, [r7, #4]
900048f6:	4618      	mov	r0, r3
900048f8:	f7ff fdc0 	bl	9000447c <_ZN8touchgfx8DrawableC1Ev>
900048fc:	4a03      	ldr	r2, [pc, #12]	; (9000490c <_ZN8touchgfx6WidgetC1Ev+0x20>)
900048fe:	687b      	ldr	r3, [r7, #4]
90004900:	601a      	str	r2, [r3, #0]
90004902:	687b      	ldr	r3, [r7, #4]
90004904:	4618      	mov	r0, r3
90004906:	3708      	adds	r7, #8
90004908:	46bd      	mov	sp, r7
9000490a:	bd80      	pop	{r7, pc}
9000490c:	900217dc 	.word	0x900217dc

90004910 <_ZN8touchgfx6WidgetD1Ev>:
90004910:	b580      	push	{r7, lr}
90004912:	b082      	sub	sp, #8
90004914:	af00      	add	r7, sp, #0
90004916:	6078      	str	r0, [r7, #4]
90004918:	4a05      	ldr	r2, [pc, #20]	; (90004930 <_ZN8touchgfx6WidgetD1Ev+0x20>)
9000491a:	687b      	ldr	r3, [r7, #4]
9000491c:	601a      	str	r2, [r3, #0]
9000491e:	687b      	ldr	r3, [r7, #4]
90004920:	4618      	mov	r0, r3
90004922:	f7ff fdd9 	bl	900044d8 <_ZN8touchgfx8DrawableD1Ev>
90004926:	687b      	ldr	r3, [r7, #4]
90004928:	4618      	mov	r0, r3
9000492a:	3708      	adds	r7, #8
9000492c:	46bd      	mov	sp, r7
9000492e:	bd80      	pop	{r7, pc}
90004930:	900217dc 	.word	0x900217dc

90004934 <_ZN8touchgfx6WidgetD0Ev>:
90004934:	b580      	push	{r7, lr}
90004936:	b082      	sub	sp, #8
90004938:	af00      	add	r7, sp, #0
9000493a:	6078      	str	r0, [r7, #4]
9000493c:	6878      	ldr	r0, [r7, #4]
9000493e:	f7ff ffe7 	bl	90004910 <_ZN8touchgfx6WidgetD1Ev>
90004942:	2128      	movs	r1, #40	; 0x28
90004944:	6878      	ldr	r0, [r7, #4]
90004946:	f01a fc7e 	bl	9001f246 <_ZdlPvj>
9000494a:	687b      	ldr	r3, [r7, #4]
9000494c:	4618      	mov	r0, r3
9000494e:	3708      	adds	r7, #8
90004950:	46bd      	mov	sp, r7
90004952:	bd80      	pop	{r7, pc}

90004954 <_ZN8touchgfx14AbstractButtonC1Ev>:
 */
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
90004954:	b580      	push	{r7, lr}
90004956:	b082      	sub	sp, #8
90004958:	af00      	add	r7, sp, #0
9000495a:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
9000495c:	687b      	ldr	r3, [r7, #4]
9000495e:	4618      	mov	r0, r3
90004960:	2326      	movs	r3, #38	; 0x26
90004962:	461a      	mov	r2, r3
90004964:	2100      	movs	r1, #0
90004966:	f01a fd29 	bl	9001f3bc <memset>
9000496a:	687b      	ldr	r3, [r7, #4]
9000496c:	4618      	mov	r0, r3
9000496e:	f7ff ffbd 	bl	900048ec <_ZN8touchgfx6WidgetC1Ev>
90004972:	4a0a      	ldr	r2, [pc, #40]	; (9000499c <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
90004974:	687b      	ldr	r3, [r7, #4]
90004976:	601a      	str	r2, [r3, #0]
90004978:	687b      	ldr	r3, [r7, #4]
9000497a:	2200      	movs	r2, #0
9000497c:	629a      	str	r2, [r3, #40]	; 0x28
9000497e:	687b      	ldr	r3, [r7, #4]
90004980:	2200      	movs	r2, #0
90004982:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    {
        setTouchable(true);
90004986:	687b      	ldr	r3, [r7, #4]
90004988:	2101      	movs	r1, #1
9000498a:	4618      	mov	r0, r3
9000498c:	f7ff fead 	bl	900046ea <_ZN8touchgfx8Drawable12setTouchableEb>
    }
90004990:	687b      	ldr	r3, [r7, #4]
90004992:	4618      	mov	r0, r3
90004994:	3708      	adds	r7, #8
90004996:	46bd      	mov	sp, r7
90004998:	bd80      	pop	{r7, pc}
9000499a:	bf00      	nop
9000499c:	90022478 	.word	0x90022478

900049a0 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
900049a0:	b480      	push	{r7}
900049a2:	b083      	sub	sp, #12
900049a4:	af00      	add	r7, sp, #0
900049a6:	6078      	str	r0, [r7, #4]
900049a8:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
900049aa:	687b      	ldr	r3, [r7, #4]
900049ac:	683a      	ldr	r2, [r7, #0]
900049ae:	629a      	str	r2, [r3, #40]	; 0x28
    }
900049b0:	bf00      	nop
900049b2:	370c      	adds	r7, #12
900049b4:	46bd      	mov	sp, r7
900049b6:	f85d 7b04 	ldr.w	r7, [sp], #4
900049ba:	4770      	bx	lr

900049bc <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
900049bc:	b580      	push	{r7, lr}
900049be:	b082      	sub	sp, #8
900049c0:	af00      	add	r7, sp, #0
900049c2:	6078      	str	r0, [r7, #4]
900049c4:	4a05      	ldr	r2, [pc, #20]	; (900049dc <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
900049c6:	687b      	ldr	r3, [r7, #4]
900049c8:	601a      	str	r2, [r3, #0]
900049ca:	687b      	ldr	r3, [r7, #4]
900049cc:	4618      	mov	r0, r3
900049ce:	f7ff ff9f 	bl	90004910 <_ZN8touchgfx6WidgetD1Ev>
900049d2:	687b      	ldr	r3, [r7, #4]
900049d4:	4618      	mov	r0, r3
900049d6:	3708      	adds	r7, #8
900049d8:	46bd      	mov	sp, r7
900049da:	bd80      	pop	{r7, pc}
900049dc:	90022478 	.word	0x90022478

900049e0 <_ZN8touchgfx14AbstractButtonD0Ev>:
900049e0:	b580      	push	{r7, lr}
900049e2:	b082      	sub	sp, #8
900049e4:	af00      	add	r7, sp, #0
900049e6:	6078      	str	r0, [r7, #4]
900049e8:	6878      	ldr	r0, [r7, #4]
900049ea:	f7ff ffe7 	bl	900049bc <_ZN8touchgfx14AbstractButtonD1Ev>
900049ee:	2130      	movs	r1, #48	; 0x30
900049f0:	6878      	ldr	r0, [r7, #4]
900049f2:	f01a fc28 	bl	9001f246 <_ZdlPvj>
900049f6:	687b      	ldr	r3, [r7, #4]
900049f8:	4618      	mov	r0, r3
900049fa:	3708      	adds	r7, #8
900049fc:	46bd      	mov	sp, r7
900049fe:	bd80      	pop	{r7, pc}

90004a00 <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
90004a00:	b580      	push	{r7, lr}
90004a02:	b082      	sub	sp, #8
90004a04:	af00      	add	r7, sp, #0
90004a06:	6078      	str	r0, [r7, #4]
        : AbstractButton(), up(), down(), alpha(255)
90004a08:	687b      	ldr	r3, [r7, #4]
90004a0a:	4618      	mov	r0, r3
90004a0c:	f7ff ffa2 	bl	90004954 <_ZN8touchgfx14AbstractButtonC1Ev>
90004a10:	4a0c      	ldr	r2, [pc, #48]	; (90004a44 <_ZN8touchgfx6ButtonC1Ev+0x44>)
90004a12:	687b      	ldr	r3, [r7, #4]
90004a14:	601a      	str	r2, [r3, #0]
90004a16:	687b      	ldr	r3, [r7, #4]
90004a18:	332e      	adds	r3, #46	; 0x2e
90004a1a:	f64f 71ff 	movw	r1, #65535	; 0xffff
90004a1e:	4618      	mov	r0, r3
90004a20:	f7ff fd1b 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90004a24:	687b      	ldr	r3, [r7, #4]
90004a26:	3330      	adds	r3, #48	; 0x30
90004a28:	f64f 71ff 	movw	r1, #65535	; 0xffff
90004a2c:	4618      	mov	r0, r3
90004a2e:	f7ff fd14 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90004a32:	687b      	ldr	r3, [r7, #4]
90004a34:	22ff      	movs	r2, #255	; 0xff
90004a36:	f883 2032 	strb.w	r2, [r3, #50]	; 0x32
    {
    }
90004a3a:	687b      	ldr	r3, [r7, #4]
90004a3c:	4618      	mov	r0, r3
90004a3e:	3708      	adds	r7, #8
90004a40:	46bd      	mov	sp, r7
90004a42:	bd80      	pop	{r7, pc}
90004a44:	90022714 	.word	0x90022714

90004a48 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
90004a48:	b580      	push	{r7, lr}
90004a4a:	b082      	sub	sp, #8
90004a4c:	af00      	add	r7, sp, #0
90004a4e:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
90004a50:	687b      	ldr	r3, [r7, #4]
90004a52:	4618      	mov	r0, r3
90004a54:	2326      	movs	r3, #38	; 0x26
90004a56:	461a      	mov	r2, r3
90004a58:	2100      	movs	r1, #0
90004a5a:	f01a fcaf 	bl	9001f3bc <memset>
90004a5e:	687b      	ldr	r3, [r7, #4]
90004a60:	4618      	mov	r0, r3
90004a62:	f7ff ff43 	bl	900048ec <_ZN8touchgfx6WidgetC1Ev>
90004a66:	4a09      	ldr	r2, [pc, #36]	; (90004a8c <_ZN8touchgfx3BoxC1Ev+0x44>)
90004a68:	687b      	ldr	r3, [r7, #4]
90004a6a:	601a      	str	r2, [r3, #0]
90004a6c:	687b      	ldr	r3, [r7, #4]
90004a6e:	22ff      	movs	r2, #255	; 0xff
90004a70:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
90004a74:	687b      	ldr	r3, [r7, #4]
90004a76:	3328      	adds	r3, #40	; 0x28
90004a78:	2100      	movs	r1, #0
90004a7a:	4618      	mov	r0, r3
90004a7c:	f7ff fcbe 	bl	900043fc <_ZN8touchgfx9colortypeC1Em>
    {
    }
90004a80:	687b      	ldr	r3, [r7, #4]
90004a82:	4618      	mov	r0, r3
90004a84:	3708      	adds	r7, #8
90004a86:	46bd      	mov	sp, r7
90004a88:	bd80      	pop	{r7, pc}
90004a8a:	bf00      	nop
90004a8c:	9002264c 	.word	0x9002264c

90004a90 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  color The color of the box.
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
90004a90:	b480      	push	{r7}
90004a92:	b083      	sub	sp, #12
90004a94:	af00      	add	r7, sp, #0
90004a96:	6078      	str	r0, [r7, #4]
90004a98:	6039      	str	r1, [r7, #0]
    {
        this->color = color;
90004a9a:	687b      	ldr	r3, [r7, #4]
90004a9c:	683a      	ldr	r2, [r7, #0]
90004a9e:	629a      	str	r2, [r3, #40]	; 0x28
    }
90004aa0:	bf00      	nop
90004aa2:	370c      	adds	r7, #12
90004aa4:	46bd      	mov	sp, r7
90004aa6:	f85d 7b04 	ldr.w	r7, [sp], #4
90004aaa:	4770      	bx	lr

90004aac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param  bitmap (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bitmap = Bitmap())
90004aac:	b580      	push	{r7, lr}
90004aae:	b082      	sub	sp, #8
90004ab0:	af00      	add	r7, sp, #0
90004ab2:	6078      	str	r0, [r7, #4]
90004ab4:	6039      	str	r1, [r7, #0]
        : Widget(), alpha(255)
90004ab6:	687b      	ldr	r3, [r7, #4]
90004ab8:	4618      	mov	r0, r3
90004aba:	2326      	movs	r3, #38	; 0x26
90004abc:	461a      	mov	r2, r3
90004abe:	2100      	movs	r1, #0
90004ac0:	f01a fc7c 	bl	9001f3bc <memset>
90004ac4:	687b      	ldr	r3, [r7, #4]
90004ac6:	4618      	mov	r0, r3
90004ac8:	f7ff ff10 	bl	900048ec <_ZN8touchgfx6WidgetC1Ev>
90004acc:	4a0b      	ldr	r2, [pc, #44]	; (90004afc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x50>)
90004ace:	687b      	ldr	r3, [r7, #4]
90004ad0:	601a      	str	r2, [r3, #0]
90004ad2:	687b      	ldr	r3, [r7, #4]
90004ad4:	3326      	adds	r3, #38	; 0x26
90004ad6:	f64f 71ff 	movw	r1, #65535	; 0xffff
90004ada:	4618      	mov	r0, r3
90004adc:	f7ff fcbd 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90004ae0:	687b      	ldr	r3, [r7, #4]
90004ae2:	22ff      	movs	r2, #255	; 0xff
90004ae4:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
    {
        setBitmap(bitmap);
90004ae8:	6839      	ldr	r1, [r7, #0]
90004aea:	6878      	ldr	r0, [r7, #4]
90004aec:	f00a f8c0 	bl	9000ec70 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
90004af0:	687b      	ldr	r3, [r7, #4]
90004af2:	4618      	mov	r0, r3
90004af4:	3708      	adds	r7, #8
90004af6:	46bd      	mov	sp, r7
90004af8:	bd80      	pop	{r7, pc}
90004afa:	bf00      	nop
90004afc:	90022860 	.word	0x90022860

90004b00 <_ZN8touchgfx9TypedTextC1Et>:
    explicit TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
90004b00:	b480      	push	{r7}
90004b02:	b083      	sub	sp, #12
90004b04:	af00      	add	r7, sp, #0
90004b06:	6078      	str	r0, [r7, #4]
90004b08:	460b      	mov	r3, r1
90004b0a:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
90004b0c:	4a06      	ldr	r2, [pc, #24]	; (90004b28 <_ZN8touchgfx9TypedTextC1Et+0x28>)
90004b0e:	687b      	ldr	r3, [r7, #4]
90004b10:	601a      	str	r2, [r3, #0]
90004b12:	687b      	ldr	r3, [r7, #4]
90004b14:	887a      	ldrh	r2, [r7, #2]
90004b16:	809a      	strh	r2, [r3, #4]
    }
90004b18:	687b      	ldr	r3, [r7, #4]
90004b1a:	4618      	mov	r0, r3
90004b1c:	370c      	adds	r7, #12
90004b1e:	46bd      	mov	sp, r7
90004b20:	f85d 7b04 	ldr.w	r7, [sp], #4
90004b24:	4770      	bx	lr
90004b26:	bf00      	nop
90004b28:	90021690 	.word	0x90021690

90004b2c <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
90004b2c:	b580      	push	{r7, lr}
90004b2e:	b082      	sub	sp, #8
90004b30:	af00      	add	r7, sp, #0
90004b32:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
90004b34:	687b      	ldr	r3, [r7, #4]
90004b36:	4618      	mov	r0, r3
90004b38:	2326      	movs	r3, #38	; 0x26
90004b3a:	461a      	mov	r2, r3
90004b3c:	2100      	movs	r1, #0
90004b3e:	f01a fc3d 	bl	9001f3bc <memset>
90004b42:	687b      	ldr	r3, [r7, #4]
90004b44:	4618      	mov	r0, r3
90004b46:	f7ff fed1 	bl	900048ec <_ZN8touchgfx6WidgetC1Ev>
90004b4a:	4a14      	ldr	r2, [pc, #80]	; (90004b9c <_ZN8touchgfx8TextAreaC1Ev+0x70>)
90004b4c:	687b      	ldr	r3, [r7, #4]
90004b4e:	601a      	str	r2, [r3, #0]
90004b50:	687b      	ldr	r3, [r7, #4]
90004b52:	3328      	adds	r3, #40	; 0x28
90004b54:	f64f 71ff 	movw	r1, #65535	; 0xffff
90004b58:	4618      	mov	r0, r3
90004b5a:	f7ff ffd1 	bl	90004b00 <_ZN8touchgfx9TypedTextC1Et>
90004b5e:	687b      	ldr	r3, [r7, #4]
90004b60:	3330      	adds	r3, #48	; 0x30
90004b62:	2100      	movs	r1, #0
90004b64:	4618      	mov	r0, r3
90004b66:	f7ff fc49 	bl	900043fc <_ZN8touchgfx9colortypeC1Em>
90004b6a:	687b      	ldr	r3, [r7, #4]
90004b6c:	2200      	movs	r2, #0
90004b6e:	869a      	strh	r2, [r3, #52]	; 0x34
90004b70:	687b      	ldr	r3, [r7, #4]
90004b72:	22ff      	movs	r2, #255	; 0xff
90004b74:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
90004b78:	687b      	ldr	r3, [r7, #4]
90004b7a:	2200      	movs	r2, #0
90004b7c:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
90004b80:	687b      	ldr	r3, [r7, #4]
90004b82:	2200      	movs	r2, #0
90004b84:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
90004b88:	687b      	ldr	r3, [r7, #4]
90004b8a:	2200      	movs	r2, #0
90004b8c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
    {
    }
90004b90:	687b      	ldr	r3, [r7, #4]
90004b92:	4618      	mov	r0, r3
90004b94:	3708      	adds	r7, #8
90004b96:	46bd      	mov	sp, r7
90004b98:	bd80      	pop	{r7, pc}
90004b9a:	bf00      	nop
90004b9c:	900225a4 	.word	0x900225a4

90004ba0 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
90004ba0:	b580      	push	{r7, lr}
90004ba2:	b082      	sub	sp, #8
90004ba4:	af00      	add	r7, sp, #0
90004ba6:	6078      	str	r0, [r7, #4]
90004ba8:	4a08      	ldr	r2, [pc, #32]	; (90004bcc <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
90004baa:	687b      	ldr	r3, [r7, #4]
90004bac:	601a      	str	r2, [r3, #0]
90004bae:	687b      	ldr	r3, [r7, #4]
90004bb0:	3328      	adds	r3, #40	; 0x28
90004bb2:	4618      	mov	r0, r3
90004bb4:	f7fe fff6 	bl	90003ba4 <_ZN8touchgfx9TypedTextD1Ev>
90004bb8:	687b      	ldr	r3, [r7, #4]
90004bba:	4618      	mov	r0, r3
90004bbc:	f7ff fea8 	bl	90004910 <_ZN8touchgfx6WidgetD1Ev>
90004bc0:	687b      	ldr	r3, [r7, #4]
90004bc2:	4618      	mov	r0, r3
90004bc4:	3708      	adds	r7, #8
90004bc6:	46bd      	mov	sp, r7
90004bc8:	bd80      	pop	{r7, pc}
90004bca:	bf00      	nop
90004bcc:	900225a4 	.word	0x900225a4

90004bd0 <_ZN8touchgfx8TextAreaD0Ev>:
90004bd0:	b580      	push	{r7, lr}
90004bd2:	b082      	sub	sp, #8
90004bd4:	af00      	add	r7, sp, #0
90004bd6:	6078      	str	r0, [r7, #4]
90004bd8:	6878      	ldr	r0, [r7, #4]
90004bda:	f7ff ffe1 	bl	90004ba0 <_ZN8touchgfx8TextAreaD1Ev>
90004bde:	213c      	movs	r1, #60	; 0x3c
90004be0:	6878      	ldr	r0, [r7, #4]
90004be2:	f01a fb30 	bl	9001f246 <_ZdlPvj>
90004be6:	687b      	ldr	r3, [r7, #4]
90004be8:	4618      	mov	r0, r3
90004bea:	3708      	adds	r7, #8
90004bec:	46bd      	mov	sp, r7
90004bee:	bd80      	pop	{r7, pc}

90004bf0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
90004bf0:	b580      	push	{r7, lr}
90004bf2:	b082      	sub	sp, #8
90004bf4:	af00      	add	r7, sp, #0
90004bf6:	6078      	str	r0, [r7, #4]
        : TextArea(), wildcard(0)
90004bf8:	687b      	ldr	r3, [r7, #4]
90004bfa:	4618      	mov	r0, r3
90004bfc:	f7ff ff96 	bl	90004b2c <_ZN8touchgfx8TextAreaC1Ev>
90004c00:	4a05      	ldr	r2, [pc, #20]	; (90004c18 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
90004c02:	687b      	ldr	r3, [r7, #4]
90004c04:	601a      	str	r2, [r3, #0]
90004c06:	687b      	ldr	r3, [r7, #4]
90004c08:	2200      	movs	r2, #0
90004c0a:	63da      	str	r2, [r3, #60]	; 0x3c
    {
    }
90004c0c:	687b      	ldr	r3, [r7, #4]
90004c0e:	4618      	mov	r0, r3
90004c10:	3708      	adds	r7, #8
90004c12:	46bd      	mov	sp, r7
90004c14:	bd80      	pop	{r7, pc}
90004c16:	bf00      	nop
90004c18:	900227b8 	.word	0x900227b8

90004c1c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
90004c1c:	b480      	push	{r7}
90004c1e:	b083      	sub	sp, #12
90004c20:	af00      	add	r7, sp, #0
90004c22:	6078      	str	r0, [r7, #4]
90004c24:	6039      	str	r1, [r7, #0]
    {
        wildcard = value;
90004c26:	687b      	ldr	r3, [r7, #4]
90004c28:	683a      	ldr	r2, [r7, #0]
90004c2a:	63da      	str	r2, [r3, #60]	; 0x3c
    }
90004c2c:	bf00      	nop
90004c2e:	370c      	adds	r7, #12
90004c30:	46bd      	mov	sp, r7
90004c32:	f85d 7b04 	ldr.w	r7, [sp], #4
90004c36:	4770      	bx	lr

90004c38 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>:
class View : public Screen
90004c38:	b580      	push	{r7, lr}
90004c3a:	b082      	sub	sp, #8
90004c3c:	af00      	add	r7, sp, #0
90004c3e:	6078      	str	r0, [r7, #4]
90004c40:	4a05      	ldr	r2, [pc, #20]	; (90004c58 <_ZN8touchgfx4ViewI13MainPresenterED1Ev+0x20>)
90004c42:	687b      	ldr	r3, [r7, #4]
90004c44:	601a      	str	r2, [r3, #0]
90004c46:	687b      	ldr	r3, [r7, #4]
90004c48:	4618      	mov	r0, r3
90004c4a:	f7ff fdc5 	bl	900047d8 <_ZN8touchgfx6ScreenD1Ev>
90004c4e:	687b      	ldr	r3, [r7, #4]
90004c50:	4618      	mov	r0, r3
90004c52:	3708      	adds	r7, #8
90004c54:	46bd      	mov	sp, r7
90004c56:	bd80      	pop	{r7, pc}
90004c58:	90021790 	.word	0x90021790

90004c5c <_ZN8touchgfx4ViewI13MainPresenterED0Ev>:
90004c5c:	b580      	push	{r7, lr}
90004c5e:	b082      	sub	sp, #8
90004c60:	af00      	add	r7, sp, #0
90004c62:	6078      	str	r0, [r7, #4]
90004c64:	6878      	ldr	r0, [r7, #4]
90004c66:	f7ff ffe7 	bl	90004c38 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
90004c6a:	2140      	movs	r1, #64	; 0x40
90004c6c:	6878      	ldr	r0, [r7, #4]
90004c6e:	f01a faea 	bl	9001f246 <_ZdlPvj>
90004c72:	687b      	ldr	r3, [r7, #4]
90004c74:	4618      	mov	r0, r3
90004c76:	3708      	adds	r7, #8
90004c78:	46bd      	mov	sp, r7
90004c7a:	bd80      	pop	{r7, pc}

90004c7c <_ZN12MainViewBaseD1Ev>:

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}
90004c7c:	b580      	push	{r7, lr}
90004c7e:	b082      	sub	sp, #8
90004c80:	af00      	add	r7, sp, #0
90004c82:	6078      	str	r0, [r7, #4]
90004c84:	4a1b      	ldr	r2, [pc, #108]	; (90004cf4 <_ZN12MainViewBaseD1Ev+0x78>)
90004c86:	687b      	ldr	r3, [r7, #4]
90004c88:	601a      	str	r2, [r3, #0]
90004c8a:	687b      	ldr	r3, [r7, #4]
90004c8c:	f503 73d0 	add.w	r3, r3, #416	; 0x1a0
90004c90:	4618      	mov	r0, r3
90004c92:	f000 fad3 	bl	9000523c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
90004c96:	687b      	ldr	r3, [r7, #4]
90004c98:	f503 73b2 	add.w	r3, r3, #356	; 0x164
90004c9c:	4618      	mov	r0, r3
90004c9e:	f000 fb77 	bl	90005390 <_ZN8touchgfx6ButtonD1Ev>
90004ca2:	687b      	ldr	r3, [r7, #4]
90004ca4:	f503 7398 	add.w	r3, r3, #304	; 0x130
90004ca8:	4618      	mov	r0, r3
90004caa:	f000 fb71 	bl	90005390 <_ZN8touchgfx6ButtonD1Ev>
90004cae:	687b      	ldr	r3, [r7, #4]
90004cb0:	33f0      	adds	r3, #240	; 0xf0
90004cb2:	4618      	mov	r0, r3
90004cb4:	f000 fb4a 	bl	9000534c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
90004cb8:	687b      	ldr	r3, [r7, #4]
90004cba:	33c4      	adds	r3, #196	; 0xc4
90004cbc:	4618      	mov	r0, r3
90004cbe:	f000 fb23 	bl	90005308 <_ZN8touchgfx5ImageD1Ev>
90004cc2:	687b      	ldr	r3, [r7, #4]
90004cc4:	3398      	adds	r3, #152	; 0x98
90004cc6:	4618      	mov	r0, r3
90004cc8:	f000 fb1e 	bl	90005308 <_ZN8touchgfx5ImageD1Ev>
90004ccc:	687b      	ldr	r3, [r7, #4]
90004cce:	336c      	adds	r3, #108	; 0x6c
90004cd0:	4618      	mov	r0, r3
90004cd2:	f000 faf7 	bl	900052c4 <_ZN8touchgfx3BoxD1Ev>
90004cd6:	687b      	ldr	r3, [r7, #4]
90004cd8:	3340      	adds	r3, #64	; 0x40
90004cda:	4618      	mov	r0, r3
90004cdc:	f000 faf2 	bl	900052c4 <_ZN8touchgfx3BoxD1Ev>
90004ce0:	687b      	ldr	r3, [r7, #4]
90004ce2:	4618      	mov	r0, r3
90004ce4:	f7ff ffa8 	bl	90004c38 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
90004ce8:	687b      	ldr	r3, [r7, #4]
90004cea:	4618      	mov	r0, r3
90004cec:	3708      	adds	r7, #8
90004cee:	46bd      	mov	sp, r7
90004cf0:	bd80      	pop	{r7, pc}
90004cf2:	bf00      	nop
90004cf4:	9002173c 	.word	0x9002173c

90004cf8 <_ZN12MainViewBaseD0Ev>:
90004cf8:	b580      	push	{r7, lr}
90004cfa:	b082      	sub	sp, #8
90004cfc:	af00      	add	r7, sp, #0
90004cfe:	6078      	str	r0, [r7, #4]
90004d00:	6878      	ldr	r0, [r7, #4]
90004d02:	f7ff ffbb 	bl	90004c7c <_ZN12MainViewBaseD1Ev>
90004d06:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
90004d0a:	6878      	ldr	r0, [r7, #4]
90004d0c:	f01a fa9b 	bl	9001f246 <_ZdlPvj>
90004d10:	687b      	ldr	r3, [r7, #4]
90004d12:	4618      	mov	r0, r3
90004d14:	3708      	adds	r7, #8
90004d16:	46bd      	mov	sp, r7
90004d18:	bd80      	pop	{r7, pc}

90004d1a <_ZN12MainViewBase13increaseValueEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void increaseValue()
90004d1a:	b480      	push	{r7}
90004d1c:	b083      	sub	sp, #12
90004d1e:	af00      	add	r7, sp, #0
90004d20:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Main
    }
90004d22:	bf00      	nop
90004d24:	370c      	adds	r7, #12
90004d26:	46bd      	mov	sp, r7
90004d28:	f85d 7b04 	ldr.w	r7, [sp], #4
90004d2c:	4770      	bx	lr

90004d2e <_ZN12MainViewBase13decreaseValueEv>:

    virtual void decreaseValue()
90004d2e:	b480      	push	{r7}
90004d30:	b083      	sub	sp, #12
90004d32:	af00      	add	r7, sp, #0
90004d34:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Main
    }
90004d36:	bf00      	nop
90004d38:	370c      	adds	r7, #12
90004d3a:	46bd      	mov	sp, r7
90004d3c:	f85d 7b04 	ldr.w	r7, [sp], #4
90004d40:	4770      	bx	lr
	...

90004d44 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
90004d44:	b590      	push	{r4, r7, lr}
90004d46:	b083      	sub	sp, #12
90004d48:	af00      	add	r7, sp, #0
90004d4a:	4603      	mov	r3, r0
90004d4c:	71fb      	strb	r3, [r7, #7]
90004d4e:	460b      	mov	r3, r1
90004d50:	71bb      	strb	r3, [r7, #6]
90004d52:	4613      	mov	r3, r2
90004d54:	717b      	strb	r3, [r7, #5]
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
90004d56:	f7fb fef3 	bl	90000b40 <_ZN8touchgfx3HAL11getInstanceEv>
90004d5a:	4603      	mov	r3, r0
90004d5c:	2b00      	cmp	r3, #0
90004d5e:	d105      	bne.n	90004d6c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x28>
90004d60:	4b0a      	ldr	r3, [pc, #40]	; (90004d8c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x48>)
90004d62:	4a0b      	ldr	r2, [pc, #44]	; (90004d90 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x4c>)
90004d64:	2135      	movs	r1, #53	; 0x35
90004d66:	480b      	ldr	r0, [pc, #44]	; (90004d94 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x50>)
90004d68:	f01a fa9c 	bl	9001f2a4 <__assert_func>
90004d6c:	bf00      	nop
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
90004d6e:	f7fe ff45 	bl	90003bfc <_ZN8touchgfx3HAL3lcdEv>
90004d72:	6803      	ldr	r3, [r0, #0]
90004d74:	3328      	adds	r3, #40	; 0x28
90004d76:	681c      	ldr	r4, [r3, #0]
90004d78:	797b      	ldrb	r3, [r7, #5]
90004d7a:	79ba      	ldrb	r2, [r7, #6]
90004d7c:	79f9      	ldrb	r1, [r7, #7]
90004d7e:	47a0      	blx	r4
90004d80:	4603      	mov	r3, r0
    }
90004d82:	4618      	mov	r0, r3
90004d84:	370c      	adds	r7, #12
90004d86:	46bd      	mov	sp, r7
90004d88:	bd90      	pop	{r4, r7, pc}
90004d8a:	bf00      	nop
90004d8c:	90020c08 	.word	0x90020c08
90004d90:	90020c4c 	.word	0x90020c4c
90004d94:	90020ca8 	.word	0x90020ca8

90004d98 <_ZN12MainViewBaseC1Ev>:
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
90004d98:	b590      	push	{r4, r7, lr}
90004d9a:	b099      	sub	sp, #100	; 0x64
90004d9c:	af02      	add	r7, sp, #8
90004d9e:	6078      	str	r0, [r7, #4]
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
90004da0:	687b      	ldr	r3, [r7, #4]
90004da2:	4618      	mov	r0, r3
90004da4:	f000 f9e4 	bl	90005170 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>
90004da8:	4ad1      	ldr	r2, [pc, #836]	; (900050f0 <_ZN12MainViewBaseC1Ev+0x358>)
90004daa:	687b      	ldr	r3, [r7, #4]
90004dac:	601a      	str	r2, [r3, #0]
90004dae:	687b      	ldr	r3, [r7, #4]
90004db0:	3340      	adds	r3, #64	; 0x40
90004db2:	4618      	mov	r0, r3
90004db4:	f7ff fe48 	bl	90004a48 <_ZN8touchgfx3BoxC1Ev>
90004db8:	687b      	ldr	r3, [r7, #4]
90004dba:	336c      	adds	r3, #108	; 0x6c
90004dbc:	4618      	mov	r0, r3
90004dbe:	f7ff fe43 	bl	90004a48 <_ZN8touchgfx3BoxC1Ev>
90004dc2:	687b      	ldr	r3, [r7, #4]
90004dc4:	f103 0498 	add.w	r4, r3, #152	; 0x98
90004dc8:	f107 0310 	add.w	r3, r7, #16
90004dcc:	f64f 71ff 	movw	r1, #65535	; 0xffff
90004dd0:	4618      	mov	r0, r3
90004dd2:	f7ff fb42 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90004dd6:	f107 0310 	add.w	r3, r7, #16
90004dda:	4619      	mov	r1, r3
90004ddc:	4620      	mov	r0, r4
90004dde:	f7ff fe65 	bl	90004aac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
90004de2:	687b      	ldr	r3, [r7, #4]
90004de4:	f103 04c4 	add.w	r4, r3, #196	; 0xc4
90004de8:	f107 0314 	add.w	r3, r7, #20
90004dec:	f64f 71ff 	movw	r1, #65535	; 0xffff
90004df0:	4618      	mov	r0, r3
90004df2:	f7ff fb32 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90004df6:	f107 0314 	add.w	r3, r7, #20
90004dfa:	4619      	mov	r1, r3
90004dfc:	4620      	mov	r0, r4
90004dfe:	f7ff fe55 	bl	90004aac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
90004e02:	687b      	ldr	r3, [r7, #4]
90004e04:	33f0      	adds	r3, #240	; 0xf0
90004e06:	4618      	mov	r0, r3
90004e08:	f7ff fef2 	bl	90004bf0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
90004e0c:	687b      	ldr	r3, [r7, #4]
90004e0e:	f503 7398 	add.w	r3, r3, #304	; 0x130
90004e12:	4618      	mov	r0, r3
90004e14:	f7ff fdf4 	bl	90004a00 <_ZN8touchgfx6ButtonC1Ev>
90004e18:	687b      	ldr	r3, [r7, #4]
90004e1a:	f503 73b2 	add.w	r3, r3, #356	; 0x164
90004e1e:	4618      	mov	r0, r3
90004e20:	f7ff fdee 	bl	90004a00 <_ZN8touchgfx6ButtonC1Ev>
90004e24:	687b      	ldr	r3, [r7, #4]
90004e26:	f503 70d0 	add.w	r0, r3, #416	; 0x1a0
90004e2a:	4bb2      	ldr	r3, [pc, #712]	; (900050f4 <_ZN12MainViewBaseC1Ev+0x35c>)
90004e2c:	61bb      	str	r3, [r7, #24]
90004e2e:	2300      	movs	r3, #0
90004e30:	61fb      	str	r3, [r7, #28]
90004e32:	f107 0318 	add.w	r3, r7, #24
90004e36:	cb0c      	ldmia	r3, {r2, r3}
90004e38:	6879      	ldr	r1, [r7, #4]
90004e3a:	f000 f9bf 	bl	900051bc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{

    __background.setPosition(0, 0, 480, 272);
90004e3e:	687b      	ldr	r3, [r7, #4]
90004e40:	f103 0040 	add.w	r0, r3, #64	; 0x40
90004e44:	f44f 7388 	mov.w	r3, #272	; 0x110
90004e48:	9300      	str	r3, [sp, #0]
90004e4a:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
90004e4e:	2200      	movs	r2, #0
90004e50:	2100      	movs	r1, #0
90004e52:	f7ff fb6c 	bl	9000452e <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
90004e56:	687b      	ldr	r3, [r7, #4]
90004e58:	f103 0440 	add.w	r4, r3, #64	; 0x40
90004e5c:	2200      	movs	r2, #0
90004e5e:	2100      	movs	r1, #0
90004e60:	2000      	movs	r0, #0
90004e62:	f7ff ff6f 	bl	90004d44 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
90004e66:	4603      	mov	r3, r0
90004e68:	4619      	mov	r1, r3
90004e6a:	4620      	mov	r0, r4
90004e6c:	f7ff fe10 	bl	90004a90 <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    backgroundBox.setPosition(0, 0, 800, 480);
90004e70:	687b      	ldr	r3, [r7, #4]
90004e72:	f103 006c 	add.w	r0, r3, #108	; 0x6c
90004e76:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
90004e7a:	9300      	str	r3, [sp, #0]
90004e7c:	f44f 7348 	mov.w	r3, #800	; 0x320
90004e80:	2200      	movs	r2, #0
90004e82:	2100      	movs	r1, #0
90004e84:	f7ff fb53 	bl	9000452e <_ZN8touchgfx8Drawable11setPositionEssss>
    backgroundBox.setVisible(false);
90004e88:	687b      	ldr	r3, [r7, #4]
90004e8a:	336c      	adds	r3, #108	; 0x6c
90004e8c:	2100      	movs	r1, #0
90004e8e:	4618      	mov	r0, r3
90004e90:	f7ff fc1b 	bl	900046ca <_ZN8touchgfx8Drawable10setVisibleEb>
    backgroundBox.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
90004e94:	687b      	ldr	r3, [r7, #4]
90004e96:	f103 046c 	add.w	r4, r3, #108	; 0x6c
90004e9a:	2200      	movs	r2, #0
90004e9c:	2100      	movs	r1, #0
90004e9e:	2000      	movs	r0, #0
90004ea0:	f7ff ff50 	bl	90004d44 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
90004ea4:	4603      	mov	r3, r0
90004ea6:	4619      	mov	r1, r3
90004ea8:	4620      	mov	r0, r4
90004eaa:	f7ff fdf1 	bl	90004a90 <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    backgroundImage.setXY(0, 0);
90004eae:	687b      	ldr	r3, [r7, #4]
90004eb0:	3398      	adds	r3, #152	; 0x98
90004eb2:	2200      	movs	r2, #0
90004eb4:	2100      	movs	r1, #0
90004eb6:	4618      	mov	r0, r3
90004eb8:	f7ff fb78 	bl	900045ac <_ZN8touchgfx8Drawable5setXYEss>
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
90004ebc:	687b      	ldr	r3, [r7, #4]
90004ebe:	f103 0498 	add.w	r4, r3, #152	; 0x98
90004ec2:	f107 0320 	add.w	r3, r7, #32
90004ec6:	2100      	movs	r1, #0
90004ec8:	4618      	mov	r0, r3
90004eca:	f7ff fac6 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90004ece:	f107 0320 	add.w	r3, r7, #32
90004ed2:	4619      	mov	r1, r3
90004ed4:	4620      	mov	r0, r4
90004ed6:	f009 fecb 	bl	9000ec70 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

    counterBackgroundImage.setXY(293, 59);
90004eda:	687b      	ldr	r3, [r7, #4]
90004edc:	33c4      	adds	r3, #196	; 0xc4
90004ede:	223b      	movs	r2, #59	; 0x3b
90004ee0:	f240 1125 	movw	r1, #293	; 0x125
90004ee4:	4618      	mov	r0, r3
90004ee6:	f7ff fb61 	bl	900045ac <_ZN8touchgfx8Drawable5setXYEss>
    counterBackgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
90004eea:	687b      	ldr	r3, [r7, #4]
90004eec:	f103 04c4 	add.w	r4, r3, #196	; 0xc4
90004ef0:	f107 0324 	add.w	r3, r7, #36	; 0x24
90004ef4:	2101      	movs	r1, #1
90004ef6:	4618      	mov	r0, r3
90004ef8:	f7ff faaf 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90004efc:	f107 0324 	add.w	r3, r7, #36	; 0x24
90004f00:	4619      	mov	r1, r3
90004f02:	4620      	mov	r0, r4
90004f04:	f009 feb4 	bl	9000ec70 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

    countTxt.setPosition(293, 87, 152, 89);
90004f08:	687b      	ldr	r3, [r7, #4]
90004f0a:	f103 00f0 	add.w	r0, r3, #240	; 0xf0
90004f0e:	2359      	movs	r3, #89	; 0x59
90004f10:	9300      	str	r3, [sp, #0]
90004f12:	2398      	movs	r3, #152	; 0x98
90004f14:	2257      	movs	r2, #87	; 0x57
90004f16:	f240 1125 	movw	r1, #293	; 0x125
90004f1a:	f7ff fb08 	bl	9000452e <_ZN8touchgfx8Drawable11setPositionEssss>
    countTxt.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
90004f1e:	687b      	ldr	r3, [r7, #4]
90004f20:	f103 04f0 	add.w	r4, r3, #240	; 0xf0
90004f24:	22ff      	movs	r2, #255	; 0xff
90004f26:	21ff      	movs	r1, #255	; 0xff
90004f28:	20ff      	movs	r0, #255	; 0xff
90004f2a:	f7ff ff0b 	bl	90004d44 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
90004f2e:	4603      	mov	r3, r0
90004f30:	64bc      	str	r4, [r7, #72]	; 0x48
90004f32:	60fb      	str	r3, [r7, #12]
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
90004f34:	6cbb      	ldr	r3, [r7, #72]	; 0x48
90004f36:	68fa      	ldr	r2, [r7, #12]
90004f38:	631a      	str	r2, [r3, #48]	; 0x30
    }
90004f3a:	bf00      	nop
    countTxt.setLinespacing(0);
90004f3c:	687b      	ldr	r3, [r7, #4]
90004f3e:	33f0      	adds	r3, #240	; 0xf0
90004f40:	653b      	str	r3, [r7, #80]	; 0x50
90004f42:	2300      	movs	r3, #0
90004f44:	f8a7 304e 	strh.w	r3, [r7, #78]	; 0x4e
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
90004f48:	6d3b      	ldr	r3, [r7, #80]	; 0x50
90004f4a:	f8b7 204e 	ldrh.w	r2, [r7, #78]	; 0x4e
90004f4e:	869a      	strh	r2, [r3, #52]	; 0x34
    }
90004f50:	bf00      	nop
    Unicode::snprintf(countTxtBuffer, COUNTTXT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID1).getText());
90004f52:	687b      	ldr	r3, [r7, #4]
90004f54:	f503 74cc 	add.w	r4, r3, #408	; 0x198
90004f58:	f107 0328 	add.w	r3, r7, #40	; 0x28
90004f5c:	2101      	movs	r1, #1
90004f5e:	4618      	mov	r0, r3
90004f60:	f7ff fdce 	bl	90004b00 <_ZN8touchgfx9TypedTextC1Et>
90004f64:	f107 0328 	add.w	r3, r7, #40	; 0x28
90004f68:	657b      	str	r3, [r7, #84]	; 0x54

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004f6a:	4b63      	ldr	r3, [pc, #396]	; (900050f8 <_ZN12MainViewBaseC1Ev+0x360>)
90004f6c:	681b      	ldr	r3, [r3, #0]
90004f6e:	2b00      	cmp	r3, #0
90004f70:	d105      	bne.n	90004f7e <_ZN12MainViewBaseC1Ev+0x1e6>
90004f72:	4b62      	ldr	r3, [pc, #392]	; (900050fc <_ZN12MainViewBaseC1Ev+0x364>)
90004f74:	4a62      	ldr	r2, [pc, #392]	; (90005100 <_ZN12MainViewBaseC1Ev+0x368>)
90004f76:	21b1      	movs	r1, #177	; 0xb1
90004f78:	4862      	ldr	r0, [pc, #392]	; (90005104 <_ZN12MainViewBaseC1Ev+0x36c>)
90004f7a:	f01a f993 	bl	9001f2a4 <__assert_func>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
90004f7e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
90004f80:	889a      	ldrh	r2, [r3, #4]
90004f82:	4b61      	ldr	r3, [pc, #388]	; (90005108 <_ZN12MainViewBaseC1Ev+0x370>)
90004f84:	881b      	ldrh	r3, [r3, #0]
90004f86:	429a      	cmp	r2, r3
90004f88:	d305      	bcc.n	90004f96 <_ZN12MainViewBaseC1Ev+0x1fe>
90004f8a:	4b60      	ldr	r3, [pc, #384]	; (9000510c <_ZN12MainViewBaseC1Ev+0x374>)
90004f8c:	4a5c      	ldr	r2, [pc, #368]	; (90005100 <_ZN12MainViewBaseC1Ev+0x368>)
90004f8e:	21b2      	movs	r1, #178	; 0xb2
90004f90:	485c      	ldr	r0, [pc, #368]	; (90005104 <_ZN12MainViewBaseC1Ev+0x36c>)
90004f92:	f01a f987 	bl	9001f2a4 <__assert_func>
    }
90004f96:	bf00      	nop
        return texts->getText(typedTextId);
90004f98:	4b5d      	ldr	r3, [pc, #372]	; (90005110 <_ZN12MainViewBaseC1Ev+0x378>)
90004f9a:	681b      	ldr	r3, [r3, #0]
90004f9c:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
90004f9e:	4611      	mov	r1, r2
90004fa0:	4618      	mov	r0, r3
90004fa2:	f000 fc39 	bl	90005818 <_ZNK8touchgfx5Texts7getTextEt>
90004fa6:	4603      	mov	r3, r0
90004fa8:	bf00      	nop
90004faa:	4a5a      	ldr	r2, [pc, #360]	; (90005114 <_ZN12MainViewBaseC1Ev+0x37c>)
90004fac:	2103      	movs	r1, #3
90004fae:	4620      	mov	r0, r4
90004fb0:	f00e fa6e 	bl	90013490 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
90004fb4:	f107 0328 	add.w	r3, r7, #40	; 0x28
90004fb8:	4618      	mov	r0, r3
90004fba:	f7fe fdf3 	bl	90003ba4 <_ZN8touchgfx9TypedTextD1Ev>
    countTxt.setWildcard(countTxtBuffer);
90004fbe:	687b      	ldr	r3, [r7, #4]
90004fc0:	f103 02f0 	add.w	r2, r3, #240	; 0xf0
90004fc4:	687b      	ldr	r3, [r7, #4]
90004fc6:	f503 73cc 	add.w	r3, r3, #408	; 0x198
90004fca:	4619      	mov	r1, r3
90004fcc:	4610      	mov	r0, r2
90004fce:	f7ff fe25 	bl	90004c1c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    countTxt.setTypedText(touchgfx::TypedText(T_TEXTID1));
90004fd2:	687b      	ldr	r3, [r7, #4]
90004fd4:	f103 04f0 	add.w	r4, r3, #240	; 0xf0
90004fd8:	f107 0330 	add.w	r3, r7, #48	; 0x30
90004fdc:	2100      	movs	r1, #0
90004fde:	4618      	mov	r0, r3
90004fe0:	f7ff fd8e 	bl	90004b00 <_ZN8touchgfx9TypedTextC1Et>
90004fe4:	f107 0330 	add.w	r3, r7, #48	; 0x30
90004fe8:	4619      	mov	r1, r3
90004fea:	4620      	mov	r0, r4
90004fec:	f009 fc53 	bl	9000e896 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
90004ff0:	f107 0330 	add.w	r3, r7, #48	; 0x30
90004ff4:	4618      	mov	r0, r3
90004ff6:	f7fe fdd5 	bl	90003ba4 <_ZN8touchgfx9TypedTextD1Ev>

    buttonUp.setXY(52, 59);
90004ffa:	687b      	ldr	r3, [r7, #4]
90004ffc:	f503 7398 	add.w	r3, r3, #304	; 0x130
90005000:	223b      	movs	r2, #59	; 0x3b
90005002:	2134      	movs	r1, #52	; 0x34
90005004:	4618      	mov	r0, r3
90005006:	f7ff fad1 	bl	900045ac <_ZN8touchgfx8Drawable5setXYEss>
    buttonUp.setBitmaps(touchgfx::Bitmap(BITMAP_UP_BTN_ID), touchgfx::Bitmap(BITMAP_UP_BTN_PRESSED_ID));
9000500a:	687b      	ldr	r3, [r7, #4]
9000500c:	f503 7498 	add.w	r4, r3, #304	; 0x130
90005010:	f107 0338 	add.w	r3, r7, #56	; 0x38
90005014:	2105      	movs	r1, #5
90005016:	4618      	mov	r0, r3
90005018:	f7ff fa1f 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
9000501c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
90005020:	2107      	movs	r1, #7
90005022:	4618      	mov	r0, r3
90005024:	f7ff fa19 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90005028:	f107 023c 	add.w	r2, r7, #60	; 0x3c
9000502c:	f107 0338 	add.w	r3, r7, #56	; 0x38
90005030:	4619      	mov	r1, r3
90005032:	4620      	mov	r0, r4
90005034:	f009 fc66 	bl	9000e904 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    buttonUp.setAction(buttonCallback);
90005038:	687b      	ldr	r3, [r7, #4]
9000503a:	f503 7298 	add.w	r2, r3, #304	; 0x130
9000503e:	687b      	ldr	r3, [r7, #4]
90005040:	f503 73d0 	add.w	r3, r3, #416	; 0x1a0
90005044:	4619      	mov	r1, r3
90005046:	4610      	mov	r0, r2
90005048:	f7ff fcaa 	bl	900049a0 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>

    buttonDown.setXY(52, 157);
9000504c:	687b      	ldr	r3, [r7, #4]
9000504e:	f503 73b2 	add.w	r3, r3, #356	; 0x164
90005052:	229d      	movs	r2, #157	; 0x9d
90005054:	2134      	movs	r1, #52	; 0x34
90005056:	4618      	mov	r0, r3
90005058:	f7ff faa8 	bl	900045ac <_ZN8touchgfx8Drawable5setXYEss>
    buttonDown.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_BTN_ID), touchgfx::Bitmap(BITMAP_DOWN_BTN_PRESSED_ID));
9000505c:	687b      	ldr	r3, [r7, #4]
9000505e:	f503 74b2 	add.w	r4, r3, #356	; 0x164
90005062:	f107 0340 	add.w	r3, r7, #64	; 0x40
90005066:	2102      	movs	r1, #2
90005068:	4618      	mov	r0, r3
9000506a:	f7ff f9f6 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
9000506e:	f107 0344 	add.w	r3, r7, #68	; 0x44
90005072:	2104      	movs	r1, #4
90005074:	4618      	mov	r0, r3
90005076:	f7ff f9f0 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
9000507a:	f107 0244 	add.w	r2, r7, #68	; 0x44
9000507e:	f107 0340 	add.w	r3, r7, #64	; 0x40
90005082:	4619      	mov	r1, r3
90005084:	4620      	mov	r0, r4
90005086:	f009 fc3d 	bl	9000e904 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    buttonDown.setAction(buttonCallback);
9000508a:	687b      	ldr	r3, [r7, #4]
9000508c:	f503 72b2 	add.w	r2, r3, #356	; 0x164
90005090:	687b      	ldr	r3, [r7, #4]
90005092:	f503 73d0 	add.w	r3, r3, #416	; 0x1a0
90005096:	4619      	mov	r1, r3
90005098:	4610      	mov	r0, r2
9000509a:	f7ff fc81 	bl	900049a0 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>

    add(__background);
9000509e:	687a      	ldr	r2, [r7, #4]
900050a0:	687b      	ldr	r3, [r7, #4]
900050a2:	3340      	adds	r3, #64	; 0x40
900050a4:	4619      	mov	r1, r3
900050a6:	4610      	mov	r0, r2
900050a8:	f7ff fbee 	bl	90004888 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(backgroundBox);
900050ac:	687a      	ldr	r2, [r7, #4]
900050ae:	687b      	ldr	r3, [r7, #4]
900050b0:	336c      	adds	r3, #108	; 0x6c
900050b2:	4619      	mov	r1, r3
900050b4:	4610      	mov	r0, r2
900050b6:	f7ff fbe7 	bl	90004888 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(backgroundImage);
900050ba:	687a      	ldr	r2, [r7, #4]
900050bc:	687b      	ldr	r3, [r7, #4]
900050be:	3398      	adds	r3, #152	; 0x98
900050c0:	4619      	mov	r1, r3
900050c2:	4610      	mov	r0, r2
900050c4:	f7ff fbe0 	bl	90004888 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(counterBackgroundImage);
900050c8:	687a      	ldr	r2, [r7, #4]
900050ca:	687b      	ldr	r3, [r7, #4]
900050cc:	33c4      	adds	r3, #196	; 0xc4
900050ce:	4619      	mov	r1, r3
900050d0:	4610      	mov	r0, r2
900050d2:	f7ff fbd9 	bl	90004888 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(countTxt);
900050d6:	687a      	ldr	r2, [r7, #4]
900050d8:	687b      	ldr	r3, [r7, #4]
900050da:	33f0      	adds	r3, #240	; 0xf0
900050dc:	4619      	mov	r1, r3
900050de:	4610      	mov	r0, r2
900050e0:	f7ff fbd2 	bl	90004888 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    //add(buttonUp);
    //add(buttonDown);
}
900050e4:	687b      	ldr	r3, [r7, #4]
900050e6:	4618      	mov	r0, r3
900050e8:	375c      	adds	r7, #92	; 0x5c
900050ea:	46bd      	mov	sp, r7
900050ec:	bd90      	pop	{r4, r7, pc}
900050ee:	bf00      	nop
900050f0:	9002173c 	.word	0x9002173c
900050f4:	9000512d 	.word	0x9000512d
900050f8:	24012b30 	.word	0x24012b30
900050fc:	90020cec 	.word	0x90020cec
90005100:	90020d30 	.word	0x90020d30
90005104:	90020d60 	.word	0x90020d60
90005108:	24012b34 	.word	0x24012b34
9000510c:	90020da8 	.word	0x90020da8
90005110:	24012b3c 	.word	0x24012b3c
90005114:	90020dfc 	.word	0x90020dfc

90005118 <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{
90005118:	b480      	push	{r7}
9000511a:	b083      	sub	sp, #12
9000511c:	af00      	add	r7, sp, #0
9000511e:	6078      	str	r0, [r7, #4]

}
90005120:	bf00      	nop
90005122:	370c      	adds	r7, #12
90005124:	46bd      	mov	sp, r7
90005126:	f85d 7b04 	ldr.w	r7, [sp], #4
9000512a:	4770      	bx	lr

9000512c <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
9000512c:	b580      	push	{r7, lr}
9000512e:	b082      	sub	sp, #8
90005130:	af00      	add	r7, sp, #0
90005132:	6078      	str	r0, [r7, #4]
90005134:	6039      	str	r1, [r7, #0]
    if (&src == &buttonUp)
90005136:	687b      	ldr	r3, [r7, #4]
90005138:	f503 7398 	add.w	r3, r3, #304	; 0x130
9000513c:	683a      	ldr	r2, [r7, #0]
9000513e:	429a      	cmp	r2, r3
90005140:	d106      	bne.n	90005150 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
    {
        //IncreaseValue
        //When buttonUp clicked call virtual function
        //Call increaseValue
        increaseValue();
90005142:	687b      	ldr	r3, [r7, #4]
90005144:	681b      	ldr	r3, [r3, #0]
90005146:	332c      	adds	r3, #44	; 0x2c
90005148:	681b      	ldr	r3, [r3, #0]
9000514a:	6878      	ldr	r0, [r7, #4]
9000514c:	4798      	blx	r3
        //DecreaseValue
        //When buttonDown clicked call virtual function
        //Call decreaseValue
        decreaseValue();
    }
}
9000514e:	e00b      	b.n	90005168 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c>
    else if (&src == &buttonDown)
90005150:	687b      	ldr	r3, [r7, #4]
90005152:	f503 73b2 	add.w	r3, r3, #356	; 0x164
90005156:	683a      	ldr	r2, [r7, #0]
90005158:	429a      	cmp	r2, r3
9000515a:	d105      	bne.n	90005168 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c>
        decreaseValue();
9000515c:	687b      	ldr	r3, [r7, #4]
9000515e:	681b      	ldr	r3, [r3, #0]
90005160:	3330      	adds	r3, #48	; 0x30
90005162:	681b      	ldr	r3, [r3, #0]
90005164:	6878      	ldr	r0, [r7, #4]
90005166:	4798      	blx	r3
}
90005168:	bf00      	nop
9000516a:	3708      	adds	r7, #8
9000516c:	46bd      	mov	sp, r7
9000516e:	bd80      	pop	{r7, pc}

90005170 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>:
    View()
90005170:	b580      	push	{r7, lr}
90005172:	b082      	sub	sp, #8
90005174:	af00      	add	r7, sp, #0
90005176:	6078      	str	r0, [r7, #4]
        : presenter(0)
90005178:	687b      	ldr	r3, [r7, #4]
9000517a:	4618      	mov	r0, r3
9000517c:	f00c fcfc 	bl	90011b78 <_ZN8touchgfx6ScreenC1Ev>
90005180:	4a05      	ldr	r2, [pc, #20]	; (90005198 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev+0x28>)
90005182:	687b      	ldr	r3, [r7, #4]
90005184:	601a      	str	r2, [r3, #0]
90005186:	687b      	ldr	r3, [r7, #4]
90005188:	2200      	movs	r2, #0
9000518a:	63da      	str	r2, [r3, #60]	; 0x3c
    }
9000518c:	687b      	ldr	r3, [r7, #4]
9000518e:	4618      	mov	r0, r3
90005190:	3708      	adds	r7, #8
90005192:	46bd      	mov	sp, r7
90005194:	bd80      	pop	{r7, pc}
90005196:	bf00      	nop
90005198:	90021790 	.word	0x90021790

9000519c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
9000519c:	b480      	push	{r7}
9000519e:	b083      	sub	sp, #12
900051a0:	af00      	add	r7, sp, #0
900051a2:	6078      	str	r0, [r7, #4]
900051a4:	4a04      	ldr	r2, [pc, #16]	; (900051b8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
900051a6:	687b      	ldr	r3, [r7, #4]
900051a8:	601a      	str	r2, [r3, #0]
900051aa:	687b      	ldr	r3, [r7, #4]
900051ac:	4618      	mov	r0, r3
900051ae:	370c      	adds	r7, #12
900051b0:	46bd      	mov	sp, r7
900051b2:	f85d 7b04 	ldr.w	r7, [sp], #4
900051b6:	4770      	bx	lr
900051b8:	900217c4 	.word	0x900217c4

900051bc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pobject, void (dest_type::*pmemfun_1)(T1))
900051bc:	b580      	push	{r7, lr}
900051be:	b084      	sub	sp, #16
900051c0:	af00      	add	r7, sp, #0
900051c2:	60f8      	str	r0, [r7, #12]
900051c4:	60b9      	str	r1, [r7, #8]
900051c6:	4639      	mov	r1, r7
900051c8:	e881 000c 	stmia.w	r1, {r2, r3}
    {
900051cc:	68fb      	ldr	r3, [r7, #12]
900051ce:	4618      	mov	r0, r3
900051d0:	f7ff ffe4 	bl	9000519c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
900051d4:	4a08      	ldr	r2, [pc, #32]	; (900051f8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
900051d6:	68fb      	ldr	r3, [r7, #12]
900051d8:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
900051da:	68fb      	ldr	r3, [r7, #12]
900051dc:	68ba      	ldr	r2, [r7, #8]
900051de:	605a      	str	r2, [r3, #4]
        this->pmemfun_1 = pmemfun_1;
900051e0:	68fb      	ldr	r3, [r7, #12]
900051e2:	3308      	adds	r3, #8
900051e4:	463a      	mov	r2, r7
900051e6:	e892 0003 	ldmia.w	r2, {r0, r1}
900051ea:	e883 0003 	stmia.w	r3, {r0, r1}
    }
900051ee:	68fb      	ldr	r3, [r7, #12]
900051f0:	4618      	mov	r0, r3
900051f2:	3710      	adds	r7, #16
900051f4:	46bd      	mov	sp, r7
900051f6:	bd80      	pop	{r7, pc}
900051f8:	90021778 	.word	0x90021778

900051fc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
900051fc:	b480      	push	{r7}
900051fe:	b083      	sub	sp, #12
90005200:	af00      	add	r7, sp, #0
90005202:	6078      	str	r0, [r7, #4]
    }
90005204:	4a04      	ldr	r2, [pc, #16]	; (90005218 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
90005206:	687b      	ldr	r3, [r7, #4]
90005208:	601a      	str	r2, [r3, #0]
9000520a:	687b      	ldr	r3, [r7, #4]
9000520c:	4618      	mov	r0, r3
9000520e:	370c      	adds	r7, #12
90005210:	46bd      	mov	sp, r7
90005212:	f85d 7b04 	ldr.w	r7, [sp], #4
90005216:	4770      	bx	lr
90005218:	900217c4 	.word	0x900217c4

9000521c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
9000521c:	b580      	push	{r7, lr}
9000521e:	b082      	sub	sp, #8
90005220:	af00      	add	r7, sp, #0
90005222:	6078      	str	r0, [r7, #4]
    }
90005224:	6878      	ldr	r0, [r7, #4]
90005226:	f7ff ffe9 	bl	900051fc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
9000522a:	2104      	movs	r1, #4
9000522c:	6878      	ldr	r0, [r7, #4]
9000522e:	f01a f80a 	bl	9001f246 <_ZdlPvj>
90005232:	687b      	ldr	r3, [r7, #4]
90005234:	4618      	mov	r0, r3
90005236:	3708      	adds	r7, #8
90005238:	46bd      	mov	sp, r7
9000523a:	bd80      	pop	{r7, pc}

9000523c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
9000523c:	b580      	push	{r7, lr}
9000523e:	b082      	sub	sp, #8
90005240:	af00      	add	r7, sp, #0
90005242:	6078      	str	r0, [r7, #4]
90005244:	4a05      	ldr	r2, [pc, #20]	; (9000525c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
90005246:	687b      	ldr	r3, [r7, #4]
90005248:	601a      	str	r2, [r3, #0]
9000524a:	687b      	ldr	r3, [r7, #4]
9000524c:	4618      	mov	r0, r3
9000524e:	f7ff ffd5 	bl	900051fc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
90005252:	687b      	ldr	r3, [r7, #4]
90005254:	4618      	mov	r0, r3
90005256:	3708      	adds	r7, #8
90005258:	46bd      	mov	sp, r7
9000525a:	bd80      	pop	{r7, pc}
9000525c:	90021778 	.word	0x90021778

90005260 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
90005260:	b580      	push	{r7, lr}
90005262:	b082      	sub	sp, #8
90005264:	af00      	add	r7, sp, #0
90005266:	6078      	str	r0, [r7, #4]
90005268:	6878      	ldr	r0, [r7, #4]
9000526a:	f7ff ffe7 	bl	9000523c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
9000526e:	2110      	movs	r1, #16
90005270:	6878      	ldr	r0, [r7, #4]
90005272:	f019 ffe8 	bl	9001f246 <_ZdlPvj>
90005276:	687b      	ldr	r3, [r7, #4]
90005278:	4618      	mov	r0, r3
9000527a:	3708      	adds	r7, #8
9000527c:	46bd      	mov	sp, r7
9000527e:	bd80      	pop	{r7, pc}

90005280 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
90005280:	b580      	push	{r7, lr}
90005282:	b082      	sub	sp, #8
90005284:	af00      	add	r7, sp, #0
90005286:	6078      	str	r0, [r7, #4]
90005288:	4a05      	ldr	r2, [pc, #20]	; (900052a0 <_ZN8touchgfx9ContainerD1Ev+0x20>)
9000528a:	687b      	ldr	r3, [r7, #4]
9000528c:	601a      	str	r2, [r3, #0]
9000528e:	687b      	ldr	r3, [r7, #4]
90005290:	4618      	mov	r0, r3
90005292:	f7ff f921 	bl	900044d8 <_ZN8touchgfx8DrawableD1Ev>
90005296:	687b      	ldr	r3, [r7, #4]
90005298:	4618      	mov	r0, r3
9000529a:	3708      	adds	r7, #8
9000529c:	46bd      	mov	sp, r7
9000529e:	bd80      	pop	{r7, pc}
900052a0:	90021c64 	.word	0x90021c64

900052a4 <_ZN8touchgfx9ContainerD0Ev>:
900052a4:	b580      	push	{r7, lr}
900052a6:	b082      	sub	sp, #8
900052a8:	af00      	add	r7, sp, #0
900052aa:	6078      	str	r0, [r7, #4]
900052ac:	6878      	ldr	r0, [r7, #4]
900052ae:	f7ff ffe7 	bl	90005280 <_ZN8touchgfx9ContainerD1Ev>
900052b2:	212c      	movs	r1, #44	; 0x2c
900052b4:	6878      	ldr	r0, [r7, #4]
900052b6:	f019 ffc6 	bl	9001f246 <_ZdlPvj>
900052ba:	687b      	ldr	r3, [r7, #4]
900052bc:	4618      	mov	r0, r3
900052be:	3708      	adds	r7, #8
900052c0:	46bd      	mov	sp, r7
900052c2:	bd80      	pop	{r7, pc}

900052c4 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
900052c4:	b580      	push	{r7, lr}
900052c6:	b082      	sub	sp, #8
900052c8:	af00      	add	r7, sp, #0
900052ca:	6078      	str	r0, [r7, #4]
900052cc:	4a05      	ldr	r2, [pc, #20]	; (900052e4 <_ZN8touchgfx3BoxD1Ev+0x20>)
900052ce:	687b      	ldr	r3, [r7, #4]
900052d0:	601a      	str	r2, [r3, #0]
900052d2:	687b      	ldr	r3, [r7, #4]
900052d4:	4618      	mov	r0, r3
900052d6:	f7ff fb1b 	bl	90004910 <_ZN8touchgfx6WidgetD1Ev>
900052da:	687b      	ldr	r3, [r7, #4]
900052dc:	4618      	mov	r0, r3
900052de:	3708      	adds	r7, #8
900052e0:	46bd      	mov	sp, r7
900052e2:	bd80      	pop	{r7, pc}
900052e4:	9002264c 	.word	0x9002264c

900052e8 <_ZN8touchgfx3BoxD0Ev>:
900052e8:	b580      	push	{r7, lr}
900052ea:	b082      	sub	sp, #8
900052ec:	af00      	add	r7, sp, #0
900052ee:	6078      	str	r0, [r7, #4]
900052f0:	6878      	ldr	r0, [r7, #4]
900052f2:	f7ff ffe7 	bl	900052c4 <_ZN8touchgfx3BoxD1Ev>
900052f6:	212c      	movs	r1, #44	; 0x2c
900052f8:	6878      	ldr	r0, [r7, #4]
900052fa:	f019 ffa4 	bl	9001f246 <_ZdlPvj>
900052fe:	687b      	ldr	r3, [r7, #4]
90005300:	4618      	mov	r0, r3
90005302:	3708      	adds	r7, #8
90005304:	46bd      	mov	sp, r7
90005306:	bd80      	pop	{r7, pc}

90005308 <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
90005308:	b580      	push	{r7, lr}
9000530a:	b082      	sub	sp, #8
9000530c:	af00      	add	r7, sp, #0
9000530e:	6078      	str	r0, [r7, #4]
90005310:	4a05      	ldr	r2, [pc, #20]	; (90005328 <_ZN8touchgfx5ImageD1Ev+0x20>)
90005312:	687b      	ldr	r3, [r7, #4]
90005314:	601a      	str	r2, [r3, #0]
90005316:	687b      	ldr	r3, [r7, #4]
90005318:	4618      	mov	r0, r3
9000531a:	f7ff faf9 	bl	90004910 <_ZN8touchgfx6WidgetD1Ev>
9000531e:	687b      	ldr	r3, [r7, #4]
90005320:	4618      	mov	r0, r3
90005322:	3708      	adds	r7, #8
90005324:	46bd      	mov	sp, r7
90005326:	bd80      	pop	{r7, pc}
90005328:	90022860 	.word	0x90022860

9000532c <_ZN8touchgfx5ImageD0Ev>:
9000532c:	b580      	push	{r7, lr}
9000532e:	b082      	sub	sp, #8
90005330:	af00      	add	r7, sp, #0
90005332:	6078      	str	r0, [r7, #4]
90005334:	6878      	ldr	r0, [r7, #4]
90005336:	f7ff ffe7 	bl	90005308 <_ZN8touchgfx5ImageD1Ev>
9000533a:	212c      	movs	r1, #44	; 0x2c
9000533c:	6878      	ldr	r0, [r7, #4]
9000533e:	f019 ff82 	bl	9001f246 <_ZdlPvj>
90005342:	687b      	ldr	r3, [r7, #4]
90005344:	4618      	mov	r0, r3
90005346:	3708      	adds	r7, #8
90005348:	46bd      	mov	sp, r7
9000534a:	bd80      	pop	{r7, pc}

9000534c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextArea
9000534c:	b580      	push	{r7, lr}
9000534e:	b082      	sub	sp, #8
90005350:	af00      	add	r7, sp, #0
90005352:	6078      	str	r0, [r7, #4]
90005354:	4a05      	ldr	r2, [pc, #20]	; (9000536c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
90005356:	687b      	ldr	r3, [r7, #4]
90005358:	601a      	str	r2, [r3, #0]
9000535a:	687b      	ldr	r3, [r7, #4]
9000535c:	4618      	mov	r0, r3
9000535e:	f7ff fc1f 	bl	90004ba0 <_ZN8touchgfx8TextAreaD1Ev>
90005362:	687b      	ldr	r3, [r7, #4]
90005364:	4618      	mov	r0, r3
90005366:	3708      	adds	r7, #8
90005368:	46bd      	mov	sp, r7
9000536a:	bd80      	pop	{r7, pc}
9000536c:	900227b8 	.word	0x900227b8

90005370 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90005370:	b580      	push	{r7, lr}
90005372:	b082      	sub	sp, #8
90005374:	af00      	add	r7, sp, #0
90005376:	6078      	str	r0, [r7, #4]
90005378:	6878      	ldr	r0, [r7, #4]
9000537a:	f7ff ffe7 	bl	9000534c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
9000537e:	2140      	movs	r1, #64	; 0x40
90005380:	6878      	ldr	r0, [r7, #4]
90005382:	f019 ff60 	bl	9001f246 <_ZdlPvj>
90005386:	687b      	ldr	r3, [r7, #4]
90005388:	4618      	mov	r0, r3
9000538a:	3708      	adds	r7, #8
9000538c:	46bd      	mov	sp, r7
9000538e:	bd80      	pop	{r7, pc}

90005390 <_ZN8touchgfx6ButtonD1Ev>:
class Button : public AbstractButton
90005390:	b580      	push	{r7, lr}
90005392:	b082      	sub	sp, #8
90005394:	af00      	add	r7, sp, #0
90005396:	6078      	str	r0, [r7, #4]
90005398:	4a05      	ldr	r2, [pc, #20]	; (900053b0 <_ZN8touchgfx6ButtonD1Ev+0x20>)
9000539a:	687b      	ldr	r3, [r7, #4]
9000539c:	601a      	str	r2, [r3, #0]
9000539e:	687b      	ldr	r3, [r7, #4]
900053a0:	4618      	mov	r0, r3
900053a2:	f7ff fb0b 	bl	900049bc <_ZN8touchgfx14AbstractButtonD1Ev>
900053a6:	687b      	ldr	r3, [r7, #4]
900053a8:	4618      	mov	r0, r3
900053aa:	3708      	adds	r7, #8
900053ac:	46bd      	mov	sp, r7
900053ae:	bd80      	pop	{r7, pc}
900053b0:	90022714 	.word	0x90022714

900053b4 <_ZN8touchgfx6ButtonD0Ev>:
900053b4:	b580      	push	{r7, lr}
900053b6:	b082      	sub	sp, #8
900053b8:	af00      	add	r7, sp, #0
900053ba:	6078      	str	r0, [r7, #4]
900053bc:	6878      	ldr	r0, [r7, #4]
900053be:	f7ff ffe7 	bl	90005390 <_ZN8touchgfx6ButtonD1Ev>
900053c2:	2134      	movs	r1, #52	; 0x34
900053c4:	6878      	ldr	r0, [r7, #4]
900053c6:	f019 ff3e 	bl	9001f246 <_ZdlPvj>
900053ca:	687b      	ldr	r3, [r7, #4]
900053cc:	4618      	mov	r0, r3
900053ce:	3708      	adds	r7, #8
900053d0:	46bd      	mov	sp, r7
900053d2:	bd80      	pop	{r7, pc}

900053d4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900053d4:	b580      	push	{r7, lr}
900053d6:	b082      	sub	sp, #8
900053d8:	af00      	add	r7, sp, #0
900053da:	6078      	str	r0, [r7, #4]
900053dc:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun_1)(t1);
900053de:	687b      	ldr	r3, [r7, #4]
900053e0:	685b      	ldr	r3, [r3, #4]
900053e2:	687a      	ldr	r2, [r7, #4]
900053e4:	68d2      	ldr	r2, [r2, #12]
900053e6:	1052      	asrs	r2, r2, #1
900053e8:	1898      	adds	r0, r3, r2
900053ea:	687b      	ldr	r3, [r7, #4]
900053ec:	68db      	ldr	r3, [r3, #12]
900053ee:	f003 0301 	and.w	r3, r3, #1
900053f2:	2b00      	cmp	r3, #0
900053f4:	d102      	bne.n	900053fc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
900053f6:	687b      	ldr	r3, [r7, #4]
900053f8:	689b      	ldr	r3, [r3, #8]
900053fa:	e00a      	b.n	90005412 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
900053fc:	687b      	ldr	r3, [r7, #4]
900053fe:	685b      	ldr	r3, [r3, #4]
90005400:	687a      	ldr	r2, [r7, #4]
90005402:	68d2      	ldr	r2, [r2, #12]
90005404:	1052      	asrs	r2, r2, #1
90005406:	4413      	add	r3, r2
90005408:	681b      	ldr	r3, [r3, #0]
9000540a:	687a      	ldr	r2, [r7, #4]
9000540c:	6892      	ldr	r2, [r2, #8]
9000540e:	4413      	add	r3, r2
90005410:	681b      	ldr	r3, [r3, #0]
90005412:	6839      	ldr	r1, [r7, #0]
90005414:	4798      	blx	r3
    }
90005416:	bf00      	nop
90005418:	3708      	adds	r7, #8
9000541a:	46bd      	mov	sp, r7
9000541c:	bd80      	pop	{r7, pc}

9000541e <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
9000541e:	b480      	push	{r7}
90005420:	b083      	sub	sp, #12
90005422:	af00      	add	r7, sp, #0
90005424:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun_1 != 0);
90005426:	687b      	ldr	r3, [r7, #4]
90005428:	685b      	ldr	r3, [r3, #4]
9000542a:	2b00      	cmp	r3, #0
9000542c:	d010      	beq.n	90005450 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
9000542e:	687b      	ldr	r3, [r7, #4]
90005430:	689b      	ldr	r3, [r3, #8]
90005432:	2b00      	cmp	r3, #0
90005434:	d107      	bne.n	90005446 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
90005436:	687b      	ldr	r3, [r7, #4]
90005438:	68db      	ldr	r3, [r3, #12]
9000543a:	f003 0301 	and.w	r3, r3, #1
9000543e:	2b00      	cmp	r3, #0
90005440:	d101      	bne.n	90005446 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
90005442:	2301      	movs	r3, #1
90005444:	e000      	b.n	90005448 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
90005446:	2300      	movs	r3, #0
90005448:	2b01      	cmp	r3, #1
9000544a:	d001      	beq.n	90005450 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
9000544c:	2301      	movs	r3, #1
9000544e:	e000      	b.n	90005452 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
90005450:	2300      	movs	r3, #0
    }
90005452:	4618      	mov	r0, r3
90005454:	370c      	adds	r7, #12
90005456:	46bd      	mov	sp, r7
90005458:	f85d 7b04 	ldr.w	r7, [sp], #4
9000545c:	4770      	bx	lr
	...

90005460 <__tcf_0>:

touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp();

touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp()
{
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0);
90005460:	b580      	push	{r7, lr}
90005462:	af00      	add	r7, sp, #0
90005464:	4801      	ldr	r0, [pc, #4]	; (9000546c <__tcf_0+0xc>)
90005466:	f7fe fb7b 	bl	90003b60 <_ZN8touchgfx13GeneratedFontD1Ev>
9000546a:	bd80      	pop	{r7, pc}
9000546c:	24001200 	.word	0x24001200

90005470 <_Z28getFont_Asap_Regular_80_4bppv>:
{
90005470:	b580      	push	{r7, lr}
90005472:	b08a      	sub	sp, #40	; 0x28
90005474:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0);
90005476:	4b1e      	ldr	r3, [pc, #120]	; (900054f0 <_Z28getFont_Asap_Regular_80_4bppv+0x80>)
90005478:	781b      	ldrb	r3, [r3, #0]
9000547a:	f3bf 8f5b 	dmb	ish
9000547e:	b2db      	uxtb	r3, r3
90005480:	f003 0301 	and.w	r3, r3, #1
90005484:	2b00      	cmp	r3, #0
90005486:	bf0c      	ite	eq
90005488:	2301      	moveq	r3, #1
9000548a:	2300      	movne	r3, #0
9000548c:	b2db      	uxtb	r3, r3
9000548e:	2b00      	cmp	r3, #0
90005490:	d02a      	beq.n	900054e8 <_Z28getFont_Asap_Regular_80_4bppv+0x78>
90005492:	4817      	ldr	r0, [pc, #92]	; (900054f0 <_Z28getFont_Asap_Regular_80_4bppv+0x80>)
90005494:	f019 fed9 	bl	9001f24a <__cxa_guard_acquire>
90005498:	4603      	mov	r3, r0
9000549a:	2b00      	cmp	r3, #0
9000549c:	bf14      	ite	ne
9000549e:	2301      	movne	r3, #1
900054a0:	2300      	moveq	r3, #0
900054a2:	b2db      	uxtb	r3, r3
900054a4:	2b00      	cmp	r3, #0
900054a6:	d01f      	beq.n	900054e8 <_Z28getFont_Asap_Regular_80_4bppv+0x78>
900054a8:	2300      	movs	r3, #0
900054aa:	9309      	str	r3, [sp, #36]	; 0x24
900054ac:	2300      	movs	r3, #0
900054ae:	9308      	str	r3, [sp, #32]
900054b0:	2300      	movs	r3, #0
900054b2:	9307      	str	r3, [sp, #28]
900054b4:	4b0f      	ldr	r3, [pc, #60]	; (900054f4 <_Z28getFont_Asap_Regular_80_4bppv+0x84>)
900054b6:	9306      	str	r3, [sp, #24]
900054b8:	4b0f      	ldr	r3, [pc, #60]	; (900054f8 <_Z28getFont_Asap_Regular_80_4bppv+0x88>)
900054ba:	9305      	str	r3, [sp, #20]
900054bc:	2300      	movs	r3, #0
900054be:	9304      	str	r3, [sp, #16]
900054c0:	2300      	movs	r3, #0
900054c2:	9303      	str	r3, [sp, #12]
900054c4:	2301      	movs	r3, #1
900054c6:	9302      	str	r3, [sp, #8]
900054c8:	2304      	movs	r3, #4
900054ca:	9301      	str	r3, [sp, #4]
900054cc:	2300      	movs	r3, #0
900054ce:	9300      	str	r3, [sp, #0]
900054d0:	2350      	movs	r3, #80	; 0x50
900054d2:	220a      	movs	r2, #10
900054d4:	4909      	ldr	r1, [pc, #36]	; (900054fc <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
900054d6:	480a      	ldr	r0, [pc, #40]	; (90005500 <_Z28getFont_Asap_Regular_80_4bppv+0x90>)
900054d8:	f7fe fefa 	bl	900042d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
900054dc:	4804      	ldr	r0, [pc, #16]	; (900054f0 <_Z28getFont_Asap_Regular_80_4bppv+0x80>)
900054de:	f019 fec0 	bl	9001f262 <__cxa_guard_release>
900054e2:	4808      	ldr	r0, [pc, #32]	; (90005504 <_Z28getFont_Asap_Regular_80_4bppv+0x94>)
900054e4:	f019 fefc 	bl	9001f2e0 <atexit>
    return Asap_Regular_80_4bpp;
900054e8:	4b05      	ldr	r3, [pc, #20]	; (90005500 <_Z28getFont_Asap_Regular_80_4bppv+0x90>)
}
900054ea:	4618      	mov	r0, r3
900054ec:	46bd      	mov	sp, r7
900054ee:	bd80      	pop	{r7, pc}
900054f0:	24001224 	.word	0x24001224
900054f4:	90024198 	.word	0x90024198
900054f8:	90021838 	.word	0x90021838
900054fc:	90202840 	.word	0x90202840
90005500:	24001200 	.word	0x24001200
90005504:	90005461 	.word	0x90005461

90005508 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
90005508:	b480      	push	{r7}
9000550a:	b085      	sub	sp, #20
9000550c:	af00      	add	r7, sp, #0
9000550e:	60f8      	str	r0, [r7, #12]
90005510:	460b      	mov	r3, r1
90005512:	607a      	str	r2, [r7, #4]
90005514:	817b      	strh	r3, [r7, #10]
    {
        return 0;
90005516:	2300      	movs	r3, #0
    }
90005518:	4618      	mov	r0, r3
9000551a:	3714      	adds	r7, #20
9000551c:	46bd      	mov	sp, r7
9000551e:	f85d 7b04 	ldr.w	r7, [sp], #4
90005522:	4770      	bx	lr

90005524 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
90005524:	b480      	push	{r7}
90005526:	b083      	sub	sp, #12
90005528:	af00      	add	r7, sp, #0
9000552a:	6078      	str	r0, [r7, #4]
    {
        return 0;
9000552c:	2300      	movs	r3, #0
    }
9000552e:	4618      	mov	r0, r3
90005530:	370c      	adds	r7, #12
90005532:	46bd      	mov	sp, r7
90005534:	f85d 7b04 	ldr.w	r7, [sp], #4
90005538:	4770      	bx	lr
	...

9000553c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
9000553c:	b480      	push	{r7}
9000553e:	b085      	sub	sp, #20
90005540:	af00      	add	r7, sp, #0
90005542:	60f8      	str	r0, [r7, #12]
90005544:	60b9      	str	r1, [r7, #8]
90005546:	4613      	mov	r3, r2
90005548:	80fb      	strh	r3, [r7, #6]
        typedTexts = data;
9000554a:	4a07      	ldr	r2, [pc, #28]	; (90005568 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
9000554c:	68fb      	ldr	r3, [r7, #12]
9000554e:	6013      	str	r3, [r2, #0]
        fonts = f;
90005550:	4a06      	ldr	r2, [pc, #24]	; (9000556c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
90005552:	68bb      	ldr	r3, [r7, #8]
90005554:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
90005556:	4a06      	ldr	r2, [pc, #24]	; (90005570 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
90005558:	88fb      	ldrh	r3, [r7, #6]
9000555a:	8013      	strh	r3, [r2, #0]
    }
9000555c:	bf00      	nop
9000555e:	3714      	adds	r7, #20
90005560:	46bd      	mov	sp, r7
90005562:	f85d 7b04 	ldr.w	r7, [sp], #4
90005566:	4770      	bx	lr
90005568:	24012b30 	.word	0x24012b30
9000556c:	24012b38 	.word	0x24012b38
90005570:	24012b34 	.word	0x24012b34

90005574 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005574:	b40e      	push	{r1, r2, r3}
90005576:	b580      	push	{r7, lr}
90005578:	b085      	sub	sp, #20
9000557a:	af00      	add	r7, sp, #0
9000557c:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
9000557e:	f107 0320 	add.w	r3, r7, #32
90005582:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90005584:	68bb      	ldr	r3, [r7, #8]
90005586:	69fa      	ldr	r2, [r7, #28]
90005588:	2100      	movs	r1, #0
9000558a:	6878      	ldr	r0, [r7, #4]
9000558c:	f00b fea8 	bl	900112e0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
90005590:	4603      	mov	r3, r0
90005592:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
90005594:	89fb      	ldrh	r3, [r7, #14]
}
90005596:	4618      	mov	r0, r3
90005598:	3714      	adds	r7, #20
9000559a:	46bd      	mov	sp, r7
9000559c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
900055a0:	b003      	add	sp, #12
900055a2:	4770      	bx	lr

900055a4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900055a4:	b40c      	push	{r2, r3}
900055a6:	b580      	push	{r7, lr}
900055a8:	b084      	sub	sp, #16
900055aa:	af00      	add	r7, sp, #0
900055ac:	6078      	str	r0, [r7, #4]
900055ae:	460b      	mov	r3, r1
900055b0:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
900055b2:	f107 031c 	add.w	r3, r7, #28
900055b6:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900055b8:	78f9      	ldrb	r1, [r7, #3]
900055ba:	68bb      	ldr	r3, [r7, #8]
900055bc:	69ba      	ldr	r2, [r7, #24]
900055be:	6878      	ldr	r0, [r7, #4]
900055c0:	f00b fe8e 	bl	900112e0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
900055c4:	4603      	mov	r3, r0
900055c6:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
900055c8:	89fb      	ldrh	r3, [r7, #14]
}
900055ca:	4618      	mov	r0, r3
900055cc:	3710      	adds	r7, #16
900055ce:	46bd      	mov	sp, r7
900055d0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
900055d4:	b002      	add	sp, #8
900055d6:	4770      	bx	lr

900055d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
900055d8:	b580      	push	{r7, lr}
900055da:	b08a      	sub	sp, #40	; 0x28
900055dc:	af00      	add	r7, sp, #0
900055de:	6078      	str	r0, [r7, #4]
900055e0:	460b      	mov	r3, r1
900055e2:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
900055e4:	687b      	ldr	r3, [r7, #4]
900055e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900055e8:	2b00      	cmp	r3, #0
900055ea:	d016      	beq.n	9000561a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
900055ec:	687b      	ldr	r3, [r7, #4]
900055ee:	331a      	adds	r3, #26
900055f0:	627b      	str	r3, [r7, #36]	; 0x24
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
900055f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
900055f4:	8adb      	ldrh	r3, [r3, #22]
900055f6:	2b00      	cmp	r3, #0
900055f8:	d105      	bne.n	90005606 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
900055fa:	4b43      	ldr	r3, [pc, #268]	; (90005708 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
900055fc:	4a43      	ldr	r2, [pc, #268]	; (9000570c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
900055fe:	21c0      	movs	r1, #192	; 0xc0
90005600:	4843      	ldr	r0, [pc, #268]	; (90005710 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
90005602:	f019 fe4f 	bl	9001f2a4 <__assert_func>
            return buffer[pos];
90005606:	6a7b      	ldr	r3, [r7, #36]	; 0x24
90005608:	8a9b      	ldrh	r3, [r3, #20]
9000560a:	461a      	mov	r2, r3
9000560c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
9000560e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90005612:	2b00      	cmp	r3, #0
90005614:	d001      	beq.n	9000561a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
90005616:	2301      	movs	r3, #1
90005618:	e000      	b.n	9000561c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
9000561a:	2300      	movs	r3, #0
9000561c:	2b00      	cmp	r3, #0
9000561e:	d06a      	beq.n	900056f6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
90005620:	6878      	ldr	r0, [r7, #4]
90005622:	f00d f97d 	bl	90012920 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
90005626:	687b      	ldr	r3, [r7, #4]
90005628:	331a      	adds	r3, #26
9000562a:	623b      	str	r3, [r7, #32]
9000562c:	2301      	movs	r3, #1
9000562e:	83fb      	strh	r3, [r7, #30]
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90005630:	6a3b      	ldr	r3, [r7, #32]
90005632:	8adb      	ldrh	r3, [r3, #22]
90005634:	8bfa      	ldrh	r2, [r7, #30]
90005636:	429a      	cmp	r2, r3
90005638:	d305      	bcc.n	90005646 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
9000563a:	4b36      	ldr	r3, [pc, #216]	; (90005714 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
9000563c:	4a36      	ldr	r2, [pc, #216]	; (90005718 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
9000563e:	21c5      	movs	r1, #197	; 0xc5
90005640:	4833      	ldr	r0, [pc, #204]	; (90005710 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
90005642:	f019 fe2f 	bl	9001f2a4 <__assert_func>
            const uint16_t index = pos + offset;
90005646:	6a3b      	ldr	r3, [r7, #32]
90005648:	8a9a      	ldrh	r2, [r3, #20]
9000564a:	8bfb      	ldrh	r3, [r7, #30]
9000564c:	4413      	add	r3, r2
9000564e:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
90005650:	8bbb      	ldrh	r3, [r7, #28]
90005652:	2b09      	cmp	r3, #9
90005654:	d801      	bhi.n	9000565a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
90005656:	8bbb      	ldrh	r3, [r7, #28]
90005658:	e001      	b.n	9000565e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
9000565a:	8bbb      	ldrh	r3, [r7, #28]
9000565c:	3b0a      	subs	r3, #10
9000565e:	6a3a      	ldr	r2, [r7, #32]
90005660:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
90005664:	f640 123f 	movw	r2, #2367	; 0x93f
90005668:	4293      	cmp	r3, r2
9000566a:	bf0c      	ite	eq
9000566c:	2301      	moveq	r3, #1
9000566e:	2300      	movne	r3, #0
90005670:	b2db      	uxtb	r3, r3
90005672:	2b00      	cmp	r3, #0
90005674:	d03f      	beq.n	900056f6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
90005676:	687b      	ldr	r3, [r7, #4]
90005678:	331a      	adds	r3, #26
9000567a:	687a      	ldr	r2, [r7, #4]
9000567c:	321a      	adds	r2, #26
9000567e:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
90005680:	68ba      	ldr	r2, [r7, #8]
90005682:	8ad2      	ldrh	r2, [r2, #22]
90005684:	2a00      	cmp	r2, #0
90005686:	d105      	bne.n	90005694 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
90005688:	4b1f      	ldr	r3, [pc, #124]	; (90005708 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
9000568a:	4a20      	ldr	r2, [pc, #128]	; (9000570c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
9000568c:	21c0      	movs	r1, #192	; 0xc0
9000568e:	4820      	ldr	r0, [pc, #128]	; (90005710 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
90005690:	f019 fe08 	bl	9001f2a4 <__assert_func>
            return buffer[pos];
90005694:	68ba      	ldr	r2, [r7, #8]
90005696:	8a92      	ldrh	r2, [r2, #20]
90005698:	4611      	mov	r1, r2
9000569a:	68ba      	ldr	r2, [r7, #8]
9000569c:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
900056a0:	613b      	str	r3, [r7, #16]
900056a2:	4613      	mov	r3, r2
900056a4:	81fb      	strh	r3, [r7, #14]
        {
            buffer[pos] = newChar;
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
900056a6:	693b      	ldr	r3, [r7, #16]
900056a8:	8adb      	ldrh	r3, [r3, #22]
900056aa:	2b01      	cmp	r3, #1
900056ac:	d806      	bhi.n	900056bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
900056ae:	4b1b      	ldr	r3, [pc, #108]	; (9000571c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
900056b0:	4a1b      	ldr	r2, [pc, #108]	; (90005720 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
900056b2:	f240 110d 	movw	r1, #269	; 0x10d
900056b6:	4816      	ldr	r0, [pc, #88]	; (90005710 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
900056b8:	f019 fdf4 	bl	9001f2a4 <__assert_func>
            const uint16_t index = pos + 1;
900056bc:	693b      	ldr	r3, [r7, #16]
900056be:	8a9b      	ldrh	r3, [r3, #20]
900056c0:	3301      	adds	r3, #1
900056c2:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
900056c4:	89bb      	ldrh	r3, [r7, #12]
900056c6:	2b09      	cmp	r3, #9
900056c8:	d801      	bhi.n	900056ce <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
900056ca:	89bb      	ldrh	r3, [r7, #12]
900056cc:	e000      	b.n	900056d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
900056ce:	2300      	movs	r3, #0
900056d0:	693a      	ldr	r2, [r7, #16]
900056d2:	89f9      	ldrh	r1, [r7, #14]
900056d4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
900056d8:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
900056da:	687b      	ldr	r3, [r7, #4]
900056dc:	331a      	adds	r3, #26
900056de:	61bb      	str	r3, [r7, #24]
900056e0:	f640 133f 	movw	r3, #2367	; 0x93f
900056e4:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
900056e6:	69bb      	ldr	r3, [r7, #24]
900056e8:	8a9b      	ldrh	r3, [r3, #20]
900056ea:	4619      	mov	r1, r3
900056ec:	69bb      	ldr	r3, [r7, #24]
900056ee:	8afa      	ldrh	r2, [r7, #22]
900056f0:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
900056f4:	bf00      	nop
        }
    }
    return getNextChar();
900056f6:	6878      	ldr	r0, [r7, #4]
900056f8:	f00c fff6 	bl	900126e8 <_ZN8touchgfx12TextProvider11getNextCharEv>
900056fc:	4603      	mov	r3, r0
}
900056fe:	4618      	mov	r0, r3
90005700:	3728      	adds	r7, #40	; 0x28
90005702:	46bd      	mov	sp, r7
90005704:	bd80      	pop	{r7, pc}
90005706:	bf00      	nop
90005708:	90020e00 	.word	0x90020e00
9000570c:	90020e0c 	.word	0x90020e0c
90005710:	90020eb8 	.word	0x90020eb8
90005714:	90020f04 	.word	0x90020f04
90005718:	90020f14 	.word	0x90020f14
9000571c:	90020fe8 	.word	0x90020fe8
90005720:	90020ff4 	.word	0x90020ff4

90005724 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
90005724:	b580      	push	{r7, lr}
90005726:	b082      	sub	sp, #8
90005728:	af00      	add	r7, sp, #0
9000572a:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
9000572c:	6878      	ldr	r0, [r7, #4]
9000572e:	f00c ff95 	bl	9001265c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
90005732:	bf00      	nop
90005734:	3708      	adds	r7, #8
90005736:	46bd      	mov	sp, r7
90005738:	bd80      	pop	{r7, pc}

9000573a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
9000573a:	b580      	push	{r7, lr}
9000573c:	b088      	sub	sp, #32
9000573e:	af02      	add	r7, sp, #8
90005740:	60f8      	str	r0, [r7, #12]
90005742:	1d38      	adds	r0, r7, #4
90005744:	e880 0006 	stmia.w	r0, {r1, r2}
90005748:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
9000574a:	f107 0328 	add.w	r3, r7, #40	; 0x28
9000574e:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005750:	1d39      	adds	r1, r7, #4
90005752:	697b      	ldr	r3, [r7, #20]
90005754:	9301      	str	r3, [sp, #4]
90005756:	6a7b      	ldr	r3, [r7, #36]	; 0x24
90005758:	9300      	str	r3, [sp, #0]
9000575a:	6a3b      	ldr	r3, [r7, #32]
9000575c:	683a      	ldr	r2, [r7, #0]
9000575e:	68f8      	ldr	r0, [r7, #12]
90005760:	f00a fb04 	bl	9000fd6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90005764:	bf00      	nop
90005766:	3718      	adds	r7, #24
90005768:	46bd      	mov	sp, r7
9000576a:	bd80      	pop	{r7, pc}

9000576c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
9000576c:	b590      	push	{r4, r7, lr}
9000576e:	b085      	sub	sp, #20
90005770:	af00      	add	r7, sp, #0
90005772:	4603      	mov	r3, r0
90005774:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
90005776:	2300      	movs	r3, #0
90005778:	60fb      	str	r3, [r7, #12]
    if (id < 1)
9000577a:	88fb      	ldrh	r3, [r7, #6]
9000577c:	2b00      	cmp	r3, #0
9000577e:	d127      	bne.n	900057d0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
90005780:	88fb      	ldrh	r3, [r7, #6]
90005782:	4a1e      	ldr	r2, [pc, #120]	; (900057fc <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
90005784:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
90005788:	2b00      	cmp	r3, #0
9000578a:	d016      	beq.n	900057ba <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
9000578c:	88fb      	ldrh	r3, [r7, #6]
9000578e:	4a1b      	ldr	r2, [pc, #108]	; (900057fc <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
90005790:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
90005794:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005796:	68bb      	ldr	r3, [r7, #8]
90005798:	681b      	ldr	r3, [r3, #0]
9000579a:	68ba      	ldr	r2, [r7, #8]
9000579c:	4413      	add	r3, r2
9000579e:	4a18      	ldr	r2, [pc, #96]	; (90005800 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
900057a0:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900057a2:	68bb      	ldr	r3, [r7, #8]
900057a4:	685b      	ldr	r3, [r3, #4]
900057a6:	68ba      	ldr	r2, [r7, #8]
900057a8:	4413      	add	r3, r2
900057aa:	4a16      	ldr	r2, [pc, #88]	; (90005804 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
900057ac:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900057ae:	68bb      	ldr	r3, [r7, #8]
900057b0:	689b      	ldr	r3, [r3, #8]
900057b2:	68ba      	ldr	r2, [r7, #8]
900057b4:	4413      	add	r3, r2
900057b6:	60fb      	str	r3, [r7, #12]
900057b8:	e00a      	b.n	900057d0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            //compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
900057ba:	4b11      	ldr	r3, [pc, #68]	; (90005800 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
900057bc:	4a12      	ldr	r2, [pc, #72]	; (90005808 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
900057be:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
900057c0:	4a12      	ldr	r2, [pc, #72]	; (9000580c <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
900057c2:	4b10      	ldr	r3, [pc, #64]	; (90005804 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
900057c4:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
900057c6:	88fb      	ldrh	r3, [r7, #6]
900057c8:	4a11      	ldr	r2, [pc, #68]	; (90005810 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
900057ca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
900057ce:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
900057d0:	68fb      	ldr	r3, [r7, #12]
900057d2:	2b00      	cmp	r3, #0
900057d4:	d00d      	beq.n	900057f2 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
900057d6:	4a0f      	ldr	r2, [pc, #60]	; (90005814 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
900057d8:	88fb      	ldrh	r3, [r7, #6]
900057da:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
900057dc:	f000 f83e 	bl	9000585c <_ZN17TypedTextDatabase8getFontsEv>
900057e0:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
900057e2:	f000 f833 	bl	9000584c <_ZN17TypedTextDatabase15getInstanceSizeEv>
900057e6:	4603      	mov	r3, r0
900057e8:	461a      	mov	r2, r3
900057ea:	4621      	mov	r1, r4
900057ec:	68f8      	ldr	r0, [r7, #12]
900057ee:	f7ff fea5 	bl	9000553c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
900057f2:	bf00      	nop
900057f4:	3714      	adds	r7, #20
900057f6:	46bd      	mov	sp, r7
900057f8:	bd90      	pop	{r4, r7, pc}
900057fa:	bf00      	nop
900057fc:	24001228 	.word	0x24001228
90005800:	24001230 	.word	0x24001230
90005804:	24001234 	.word	0x24001234
90005808:	902028d4 	.word	0x902028d4
9000580c:	902028cc 	.word	0x902028cc
90005810:	902028e0 	.word	0x902028e0
90005814:	2400122c 	.word	0x2400122c

90005818 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
90005818:	b480      	push	{r7}
9000581a:	b083      	sub	sp, #12
9000581c:	af00      	add	r7, sp, #0
9000581e:	6078      	str	r0, [r7, #4]
90005820:	460b      	mov	r3, r1
90005822:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
90005824:	4b07      	ldr	r3, [pc, #28]	; (90005844 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
90005826:	681a      	ldr	r2, [r3, #0]
90005828:	4b07      	ldr	r3, [pc, #28]	; (90005848 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
9000582a:	6819      	ldr	r1, [r3, #0]
9000582c:	887b      	ldrh	r3, [r7, #2]
9000582e:	009b      	lsls	r3, r3, #2
90005830:	440b      	add	r3, r1
90005832:	681b      	ldr	r3, [r3, #0]
90005834:	005b      	lsls	r3, r3, #1
90005836:	4413      	add	r3, r2
}
90005838:	4618      	mov	r0, r3
9000583a:	370c      	adds	r7, #12
9000583c:	46bd      	mov	sp, r7
9000583e:	f85d 7b04 	ldr.w	r7, [sp], #4
90005842:	4770      	bx	lr
90005844:	24001230 	.word	0x24001230
90005848:	24001234 	.word	0x24001234

9000584c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
9000584c:	b480      	push	{r7}
9000584e:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
90005850:	2302      	movs	r3, #2
}
90005852:	4618      	mov	r0, r3
90005854:	46bd      	mov	sp, r7
90005856:	f85d 7b04 	ldr.w	r7, [sp], #4
9000585a:	4770      	bx	lr

9000585c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
9000585c:	b480      	push	{r7}
9000585e:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
90005860:	4b02      	ldr	r3, [pc, #8]	; (9000586c <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
90005862:	4618      	mov	r0, r3
90005864:	46bd      	mov	sp, r7
90005866:	f85d 7b04 	ldr.w	r7, [sp], #4
9000586a:	4770      	bx	lr
9000586c:	24001238 	.word	0x24001238

90005870 <_Z41__static_initialization_and_destruction_0ii>:
    case 0:
        touchgfx_fonts[0] = &(getFont_Asap_Regular_80_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
90005870:	b580      	push	{r7, lr}
90005872:	b082      	sub	sp, #8
90005874:	af00      	add	r7, sp, #0
90005876:	6078      	str	r0, [r7, #4]
90005878:	6039      	str	r1, [r7, #0]
9000587a:	687b      	ldr	r3, [r7, #4]
9000587c:	2b01      	cmp	r3, #1
9000587e:	d109      	bne.n	90005894 <_Z41__static_initialization_and_destruction_0ii+0x24>
90005880:	683b      	ldr	r3, [r7, #0]
90005882:	f64f 72ff 	movw	r2, #65535	; 0xffff
90005886:	4293      	cmp	r3, r2
90005888:	d104      	bne.n	90005894 <_Z41__static_initialization_and_destruction_0ii+0x24>
    &(getFont_Asap_Regular_80_4bpp())
9000588a:	f7ff fdf1 	bl	90005470 <_Z28getFont_Asap_Regular_80_4bppv>
9000588e:	4603      	mov	r3, r0
};
90005890:	4a02      	ldr	r2, [pc, #8]	; (9000589c <_Z41__static_initialization_and_destruction_0ii+0x2c>)
90005892:	6013      	str	r3, [r2, #0]
}  // namespace TypedTextDatabase
90005894:	bf00      	nop
90005896:	3708      	adds	r7, #8
90005898:	46bd      	mov	sp, r7
9000589a:	bd80      	pop	{r7, pc}
9000589c:	24001238 	.word	0x24001238

900058a0 <_GLOBAL__sub_I_touchgfx_fonts>:
900058a0:	b580      	push	{r7, lr}
900058a2:	af00      	add	r7, sp, #0
900058a4:	f64f 71ff 	movw	r1, #65535	; 0xffff
900058a8:	2001      	movs	r0, #1
900058aa:	f7ff ffe1 	bl	90005870 <_Z41__static_initialization_and_destruction_0ii>
900058ae:	bd80      	pop	{r7, pc}

900058b0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
900058b0:	b580      	push	{r7, lr}
900058b2:	b084      	sub	sp, #16
900058b4:	af00      	add	r7, sp, #0
900058b6:	60f8      	str	r0, [r7, #12]
900058b8:	60b9      	str	r1, [r7, #8]
900058ba:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
900058bc:	68fb      	ldr	r3, [r7, #12]
900058be:	687a      	ldr	r2, [r7, #4]
900058c0:	68b9      	ldr	r1, [r7, #8]
900058c2:	4618      	mov	r0, r3
900058c4:	f7fe fa72 	bl	90003dac <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
900058c8:	4a03      	ldr	r2, [pc, #12]	; (900058d8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
900058ca:	68fb      	ldr	r3, [r7, #12]
900058cc:	601a      	str	r2, [r3, #0]
{
}
900058ce:	68fb      	ldr	r3, [r7, #12]
900058d0:	4618      	mov	r0, r3
900058d2:	3710      	adds	r7, #16
900058d4:	46bd      	mov	sp, r7
900058d6:	bd80      	pop	{r7, pc}
900058d8:	90021370 	.word	0x90021370

900058dc <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
900058dc:	b480      	push	{r7}
900058de:	b083      	sub	sp, #12
900058e0:	af00      	add	r7, sp, #0
900058e2:	6078      	str	r0, [r7, #4]
    {
    }
900058e4:	bf00      	nop
900058e6:	370c      	adds	r7, #12
900058e8:	46bd      	mov	sp, r7
900058ea:	f85d 7b04 	ldr.w	r7, [sp], #4
900058ee:	4770      	bx	lr

900058f0 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
900058f0:	b480      	push	{r7}
900058f2:	b083      	sub	sp, #12
900058f4:	af00      	add	r7, sp, #0
900058f6:	6078      	str	r0, [r7, #4]
    {
    }
900058f8:	bf00      	nop
900058fa:	370c      	adds	r7, #12
900058fc:	46bd      	mov	sp, r7
900058fe:	f85d 7b04 	ldr.w	r7, [sp], #4
90005902:	4770      	bx	lr

90005904 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
90005904:	b480      	push	{r7}
90005906:	b083      	sub	sp, #12
90005908:	af00      	add	r7, sp, #0
9000590a:	6078      	str	r0, [r7, #4]
    {
9000590c:	4a04      	ldr	r2, [pc, #16]	; (90005920 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
9000590e:	687b      	ldr	r3, [r7, #4]
90005910:	601a      	str	r2, [r3, #0]
    }
90005912:	687b      	ldr	r3, [r7, #4]
90005914:	4618      	mov	r0, r3
90005916:	370c      	adds	r7, #12
90005918:	46bd      	mov	sp, r7
9000591a:	f85d 7b04 	ldr.w	r7, [sp], #4
9000591e:	4770      	bx	lr
90005920:	900218d8 	.word	0x900218d8

90005924 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
90005924:	b580      	push	{r7, lr}
90005926:	b082      	sub	sp, #8
90005928:	af00      	add	r7, sp, #0
9000592a:	6078      	str	r0, [r7, #4]
    }
9000592c:	6878      	ldr	r0, [r7, #4]
9000592e:	f7ff ffe9 	bl	90005904 <_ZN8touchgfx9PresenterD1Ev>
90005932:	2104      	movs	r1, #4
90005934:	6878      	ldr	r0, [r7, #4]
90005936:	f019 fc86 	bl	9001f246 <_ZdlPvj>
9000593a:	687b      	ldr	r3, [r7, #4]
9000593c:	4618      	mov	r0, r3
9000593e:	3708      	adds	r7, #8
90005940:	46bd      	mov	sp, r7
90005942:	bd80      	pop	{r7, pc}

90005944 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
90005944:	b480      	push	{r7}
90005946:	b083      	sub	sp, #12
90005948:	af00      	add	r7, sp, #0
9000594a:	6078      	str	r0, [r7, #4]
    {
9000594c:	4a04      	ldr	r2, [pc, #16]	; (90005960 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
9000594e:	687b      	ldr	r3, [r7, #4]
90005950:	601a      	str	r2, [r3, #0]
    }
90005952:	687b      	ldr	r3, [r7, #4]
90005954:	4618      	mov	r0, r3
90005956:	370c      	adds	r7, #12
90005958:	46bd      	mov	sp, r7
9000595a:	f85d 7b04 	ldr.w	r7, [sp], #4
9000595e:	4770      	bx	lr
90005960:	900218d8 	.word	0x900218d8

90005964 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
90005964:	b480      	push	{r7}
90005966:	b083      	sub	sp, #12
90005968:	af00      	add	r7, sp, #0
9000596a:	6078      	str	r0, [r7, #4]
9000596c:	4a06      	ldr	r2, [pc, #24]	; (90005988 <_ZN13ModelListenerC1Ev+0x24>)
9000596e:	687b      	ldr	r3, [r7, #4]
90005970:	601a      	str	r2, [r3, #0]
90005972:	687b      	ldr	r3, [r7, #4]
90005974:	2200      	movs	r2, #0
90005976:	605a      	str	r2, [r3, #4]
90005978:	687b      	ldr	r3, [r7, #4]
9000597a:	4618      	mov	r0, r3
9000597c:	370c      	adds	r7, #12
9000597e:	46bd      	mov	sp, r7
90005980:	f85d 7b04 	ldr.w	r7, [sp], #4
90005984:	4770      	bx	lr
90005986:	bf00      	nop
90005988:	900218c4 	.word	0x900218c4

9000598c <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
9000598c:	b480      	push	{r7}
9000598e:	b083      	sub	sp, #12
90005990:	af00      	add	r7, sp, #0
90005992:	6078      	str	r0, [r7, #4]
90005994:	4a04      	ldr	r2, [pc, #16]	; (900059a8 <_ZN13ModelListenerD1Ev+0x1c>)
90005996:	687b      	ldr	r3, [r7, #4]
90005998:	601a      	str	r2, [r3, #0]
9000599a:	687b      	ldr	r3, [r7, #4]
9000599c:	4618      	mov	r0, r3
9000599e:	370c      	adds	r7, #12
900059a0:	46bd      	mov	sp, r7
900059a2:	f85d 7b04 	ldr.w	r7, [sp], #4
900059a6:	4770      	bx	lr
900059a8:	900218c4 	.word	0x900218c4

900059ac <_ZN13ModelListenerD0Ev>:
900059ac:	b580      	push	{r7, lr}
900059ae:	b082      	sub	sp, #8
900059b0:	af00      	add	r7, sp, #0
900059b2:	6078      	str	r0, [r7, #4]
900059b4:	6878      	ldr	r0, [r7, #4]
900059b6:	f7ff ffe9 	bl	9000598c <_ZN13ModelListenerD1Ev>
900059ba:	2108      	movs	r1, #8
900059bc:	6878      	ldr	r0, [r7, #4]
900059be:	f019 fc42 	bl	9001f246 <_ZdlPvj>
900059c2:	687b      	ldr	r3, [r7, #4]
900059c4:	4618      	mov	r0, r3
900059c6:	3708      	adds	r7, #8
900059c8:	46bd      	mov	sp, r7
900059ca:	bd80      	pop	{r7, pc}

900059cc <_ZN13ModelListener9setnewvalEv>:

    virtual void setnewval() {}
900059cc:	b480      	push	{r7}
900059ce:	b083      	sub	sp, #12
900059d0:	af00      	add	r7, sp, #0
900059d2:	6078      	str	r0, [r7, #4]
900059d4:	bf00      	nop
900059d6:	370c      	adds	r7, #12
900059d8:	46bd      	mov	sp, r7
900059da:	f85d 7b04 	ldr.w	r7, [sp], #4
900059de:	4770      	bx	lr

900059e0 <_ZN13MainPresenterD1Ev>:
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();
    void setnewval();

    virtual ~MainPresenter() {};
900059e0:	b580      	push	{r7, lr}
900059e2:	b082      	sub	sp, #8
900059e4:	af00      	add	r7, sp, #0
900059e6:	6078      	str	r0, [r7, #4]
900059e8:	4a09      	ldr	r2, [pc, #36]	; (90005a10 <_ZN13MainPresenterD1Ev+0x30>)
900059ea:	687b      	ldr	r3, [r7, #4]
900059ec:	601a      	str	r2, [r3, #0]
900059ee:	4a09      	ldr	r2, [pc, #36]	; (90005a14 <_ZN13MainPresenterD1Ev+0x34>)
900059f0:	687b      	ldr	r3, [r7, #4]
900059f2:	605a      	str	r2, [r3, #4]
900059f4:	687b      	ldr	r3, [r7, #4]
900059f6:	3304      	adds	r3, #4
900059f8:	4618      	mov	r0, r3
900059fa:	f7ff ffc7 	bl	9000598c <_ZN13ModelListenerD1Ev>
900059fe:	687b      	ldr	r3, [r7, #4]
90005a00:	4618      	mov	r0, r3
90005a02:	f7ff ff7f 	bl	90005904 <_ZN8touchgfx9PresenterD1Ev>
90005a06:	687b      	ldr	r3, [r7, #4]
90005a08:	4618      	mov	r0, r3
90005a0a:	3708      	adds	r7, #8
90005a0c:	46bd      	mov	sp, r7
90005a0e:	bd80      	pop	{r7, pc}
90005a10:	90021894 	.word	0x90021894
90005a14:	900218b0 	.word	0x900218b0

90005a18 <_ZThn4_N13MainPresenterD1Ev>:
90005a18:	f1a0 0004 	sub.w	r0, r0, #4
90005a1c:	e7e0      	b.n	900059e0 <_ZN13MainPresenterD1Ev>
90005a1e:	bf00      	nop

90005a20 <_ZN13MainPresenterD0Ev>:
90005a20:	b580      	push	{r7, lr}
90005a22:	b082      	sub	sp, #8
90005a24:	af00      	add	r7, sp, #0
90005a26:	6078      	str	r0, [r7, #4]
90005a28:	6878      	ldr	r0, [r7, #4]
90005a2a:	f7ff ffd9 	bl	900059e0 <_ZN13MainPresenterD1Ev>
90005a2e:	2110      	movs	r1, #16
90005a30:	6878      	ldr	r0, [r7, #4]
90005a32:	f019 fc08 	bl	9001f246 <_ZdlPvj>
90005a36:	687b      	ldr	r3, [r7, #4]
90005a38:	4618      	mov	r0, r3
90005a3a:	3708      	adds	r7, #8
90005a3c:	46bd      	mov	sp, r7
90005a3e:	bd80      	pop	{r7, pc}

90005a40 <_ZThn4_N13MainPresenterD0Ev>:
90005a40:	f1a0 0004 	sub.w	r0, r0, #4
90005a44:	e7ec      	b.n	90005a20 <_ZN13MainPresenterD0Ev>
	...

90005a48 <_ZN13MainPresenterC1ER8MainView>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

MainPresenter::MainPresenter(MainView& v)
90005a48:	b580      	push	{r7, lr}
90005a4a:	b082      	sub	sp, #8
90005a4c:	af00      	add	r7, sp, #0
90005a4e:	6078      	str	r0, [r7, #4]
90005a50:	6039      	str	r1, [r7, #0]
	: view(v)
90005a52:	687b      	ldr	r3, [r7, #4]
90005a54:	4618      	mov	r0, r3
90005a56:	f7ff ff75 	bl	90005944 <_ZN8touchgfx9PresenterC1Ev>
90005a5a:	687b      	ldr	r3, [r7, #4]
90005a5c:	3304      	adds	r3, #4
90005a5e:	4618      	mov	r0, r3
90005a60:	f7ff ff80 	bl	90005964 <_ZN13ModelListenerC1Ev>
90005a64:	4a06      	ldr	r2, [pc, #24]	; (90005a80 <_ZN13MainPresenterC1ER8MainView+0x38>)
90005a66:	687b      	ldr	r3, [r7, #4]
90005a68:	601a      	str	r2, [r3, #0]
90005a6a:	4a06      	ldr	r2, [pc, #24]	; (90005a84 <_ZN13MainPresenterC1ER8MainView+0x3c>)
90005a6c:	687b      	ldr	r3, [r7, #4]
90005a6e:	605a      	str	r2, [r3, #4]
90005a70:	687b      	ldr	r3, [r7, #4]
90005a72:	683a      	ldr	r2, [r7, #0]
90005a74:	60da      	str	r2, [r3, #12]
{
}
90005a76:	687b      	ldr	r3, [r7, #4]
90005a78:	4618      	mov	r0, r3
90005a7a:	3708      	adds	r7, #8
90005a7c:	46bd      	mov	sp, r7
90005a7e:	bd80      	pop	{r7, pc}
90005a80:	90021894 	.word	0x90021894
90005a84:	900218b0 	.word	0x900218b0

90005a88 <_ZN13MainPresenter8activateEv>:

void MainPresenter::activate()
{
90005a88:	b480      	push	{r7}
90005a8a:	b083      	sub	sp, #12
90005a8c:	af00      	add	r7, sp, #0
90005a8e:	6078      	str	r0, [r7, #4]
}
90005a90:	bf00      	nop
90005a92:	370c      	adds	r7, #12
90005a94:	46bd      	mov	sp, r7
90005a96:	f85d 7b04 	ldr.w	r7, [sp], #4
90005a9a:	4770      	bx	lr

90005a9c <_ZN13MainPresenter10deactivateEv>:

void MainPresenter::deactivate()
{
90005a9c:	b480      	push	{r7}
90005a9e:	b083      	sub	sp, #12
90005aa0:	af00      	add	r7, sp, #0
90005aa2:	6078      	str	r0, [r7, #4]
}
90005aa4:	bf00      	nop
90005aa6:	370c      	adds	r7, #12
90005aa8:	46bd      	mov	sp, r7
90005aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
90005aae:	4770      	bx	lr

90005ab0 <_ZN13MainPresenter9setnewvalEv>:
void MainPresenter::setnewval()
{
90005ab0:	b580      	push	{r7, lr}
90005ab2:	b082      	sub	sp, #8
90005ab4:	af00      	add	r7, sp, #0
90005ab6:	6078      	str	r0, [r7, #4]
	view.increaseValue();
90005ab8:	687b      	ldr	r3, [r7, #4]
90005aba:	68da      	ldr	r2, [r3, #12]
90005abc:	687b      	ldr	r3, [r7, #4]
90005abe:	68db      	ldr	r3, [r3, #12]
90005ac0:	681b      	ldr	r3, [r3, #0]
90005ac2:	332c      	adds	r3, #44	; 0x2c
90005ac4:	681b      	ldr	r3, [r3, #0]
90005ac6:	4610      	mov	r0, r2
90005ac8:	4798      	blx	r3
}
90005aca:	bf00      	nop
90005acc:	3708      	adds	r7, #8
90005ace:	46bd      	mov	sp, r7
90005ad0:	bd80      	pop	{r7, pc}

90005ad2 <_ZThn4_N13MainPresenter9setnewvalEv>:
    void setnewval();
90005ad2:	f1a0 0004 	sub.w	r0, r0, #4
90005ad6:	f7ff bfeb 	b.w	90005ab0 <_ZN13MainPresenter9setnewvalEv>

90005ada <_ZNK8touchgfx8Drawable8getWidthEv>:
    int16_t getWidth() const
90005ada:	b480      	push	{r7}
90005adc:	b083      	sub	sp, #12
90005ade:	af00      	add	r7, sp, #0
90005ae0:	6078      	str	r0, [r7, #4]
        return rect.width;
90005ae2:	687b      	ldr	r3, [r7, #4]
90005ae4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
    }
90005ae8:	4618      	mov	r0, r3
90005aea:	370c      	adds	r7, #12
90005aec:	46bd      	mov	sp, r7
90005aee:	f85d 7b04 	ldr.w	r7, [sp], #4
90005af2:	4770      	bx	lr

90005af4 <_ZNK8touchgfx8Drawable9getHeightEv>:
    int16_t getHeight() const
90005af4:	b480      	push	{r7}
90005af6:	b083      	sub	sp, #12
90005af8:	af00      	add	r7, sp, #0
90005afa:	6078      	str	r0, [r7, #4]
        return rect.height;
90005afc:	687b      	ldr	r3, [r7, #4]
90005afe:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
    }
90005b02:	4618      	mov	r0, r3
90005b04:	370c      	adds	r7, #12
90005b06:	46bd      	mov	sp, r7
90005b08:	f85d 7b04 	ldr.w	r7, [sp], #4
90005b0c:	4770      	bx	lr
	...

90005b10 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
90005b10:	b580      	push	{r7, lr}
90005b12:	b082      	sub	sp, #8
90005b14:	af00      	add	r7, sp, #0
90005b16:	6078      	str	r0, [r7, #4]
90005b18:	4a05      	ldr	r2, [pc, #20]	; (90005b30 <_ZN8MainViewD1Ev+0x20>)
90005b1a:	687b      	ldr	r3, [r7, #4]
90005b1c:	601a      	str	r2, [r3, #0]
90005b1e:	687b      	ldr	r3, [r7, #4]
90005b20:	4618      	mov	r0, r3
90005b22:	f7ff f8ab 	bl	90004c7c <_ZN12MainViewBaseD1Ev>
90005b26:	687b      	ldr	r3, [r7, #4]
90005b28:	4618      	mov	r0, r3
90005b2a:	3708      	adds	r7, #8
90005b2c:	46bd      	mov	sp, r7
90005b2e:	bd80      	pop	{r7, pc}
90005b30:	900218f0 	.word	0x900218f0

90005b34 <_ZN8MainViewD0Ev>:
90005b34:	b580      	push	{r7, lr}
90005b36:	b082      	sub	sp, #8
90005b38:	af00      	add	r7, sp, #0
90005b3a:	6078      	str	r0, [r7, #4]
90005b3c:	6878      	ldr	r0, [r7, #4]
90005b3e:	f7ff ffe7 	bl	90005b10 <_ZN8MainViewD1Ev>
90005b42:	f44f 71da 	mov.w	r1, #436	; 0x1b4
90005b46:	6878      	ldr	r0, [r7, #4]
90005b48:	f019 fb7d 	bl	9001f246 <_ZdlPvj>
90005b4c:	687b      	ldr	r3, [r7, #4]
90005b4e:	4618      	mov	r0, r3
90005b50:	3708      	adds	r7, #8
90005b52:	46bd      	mov	sp, r7
90005b54:	bd80      	pop	{r7, pc}
	...

90005b58 <_ZN8MainViewC1Ev>:
#ifdef SIMULATOR
#include "windows.h"
#endif
uint8_t mycount[2] = { 0 };

MainView::MainView()
90005b58:	b590      	push	{r4, r7, lr}
90005b5a:	b083      	sub	sp, #12
90005b5c:	af00      	add	r7, sp, #0
90005b5e:	6078      	str	r0, [r7, #4]
90005b60:	687b      	ldr	r3, [r7, #4]
90005b62:	4618      	mov	r0, r3
90005b64:	f7ff f918 	bl	90004d98 <_ZN12MainViewBaseC1Ev>
90005b68:	4a16      	ldr	r2, [pc, #88]	; (90005bc4 <_ZN8MainViewC1Ev+0x6c>)
90005b6a:	687b      	ldr	r3, [r7, #4]
90005b6c:	601a      	str	r2, [r3, #0]
90005b6e:	687b      	ldr	r3, [r7, #4]
90005b70:	2200      	movs	r2, #0
90005b72:	f883 21b0 	strb.w	r2, [r3, #432]	; 0x1b0
{
    // Support of larger displays for this example
    // is handled by showing a black box in the
    // unused part of the display.
    if (HAL::DISPLAY_WIDTH > backgroundImage.getWidth() ||
90005b76:	4b14      	ldr	r3, [pc, #80]	; (90005bc8 <_ZN8MainViewC1Ev+0x70>)
90005b78:	881b      	ldrh	r3, [r3, #0]
90005b7a:	461c      	mov	r4, r3
90005b7c:	687b      	ldr	r3, [r7, #4]
90005b7e:	3398      	adds	r3, #152	; 0x98
90005b80:	4618      	mov	r0, r3
90005b82:	f7ff ffaa 	bl	90005ada <_ZNK8touchgfx8Drawable8getWidthEv>
90005b86:	4603      	mov	r3, r0
90005b88:	429c      	cmp	r4, r3
90005b8a:	dc0a      	bgt.n	90005ba2 <_ZN8MainViewC1Ev+0x4a>
        HAL::DISPLAY_HEIGHT > backgroundImage.getHeight())
90005b8c:	4b0f      	ldr	r3, [pc, #60]	; (90005bcc <_ZN8MainViewC1Ev+0x74>)
90005b8e:	881b      	ldrh	r3, [r3, #0]
90005b90:	461c      	mov	r4, r3
90005b92:	687b      	ldr	r3, [r7, #4]
90005b94:	3398      	adds	r3, #152	; 0x98
90005b96:	4618      	mov	r0, r3
90005b98:	f7ff ffac 	bl	90005af4 <_ZNK8touchgfx8Drawable9getHeightEv>
90005b9c:	4603      	mov	r3, r0
    if (HAL::DISPLAY_WIDTH > backgroundImage.getWidth() ||
90005b9e:	429c      	cmp	r4, r3
90005ba0:	dd01      	ble.n	90005ba6 <_ZN8MainViewC1Ev+0x4e>
90005ba2:	2301      	movs	r3, #1
90005ba4:	e000      	b.n	90005ba8 <_ZN8MainViewC1Ev+0x50>
90005ba6:	2300      	movs	r3, #0
90005ba8:	2b00      	cmp	r3, #0
90005baa:	d005      	beq.n	90005bb8 <_ZN8MainViewC1Ev+0x60>
    {
        backgroundBox.setVisible(true);
90005bac:	687b      	ldr	r3, [r7, #4]
90005bae:	336c      	adds	r3, #108	; 0x6c
90005bb0:	2101      	movs	r1, #1
90005bb2:	4618      	mov	r0, r3
90005bb4:	f7fe fd89 	bl	900046ca <_ZN8touchgfx8Drawable10setVisibleEb>
    }
}
90005bb8:	687b      	ldr	r3, [r7, #4]
90005bba:	4618      	mov	r0, r3
90005bbc:	370c      	adds	r7, #12
90005bbe:	46bd      	mov	sp, r7
90005bc0:	bd90      	pop	{r4, r7, pc}
90005bc2:	bf00      	nop
90005bc4:	900218f0 	.word	0x900218f0
90005bc8:	24012ad4 	.word	0x24012ad4
90005bcc:	24012ad6 	.word	0x24012ad6

90005bd0 <_ZN8MainView11setupScreenEv>:

void MainView::setupScreen()
{
90005bd0:	b580      	push	{r7, lr}
90005bd2:	b082      	sub	sp, #8
90005bd4:	af00      	add	r7, sp, #0
90005bd6:	6078      	str	r0, [r7, #4]
    setCount(0);
90005bd8:	2100      	movs	r1, #0
90005bda:	6878      	ldr	r0, [r7, #4]
90005bdc:	f000 f878 	bl	90005cd0 <_ZN8MainView8setCountEh>
}
90005be0:	bf00      	nop
90005be2:	3708      	adds	r7, #8
90005be4:	46bd      	mov	sp, r7
90005be6:	bd80      	pop	{r7, pc}

90005be8 <_ZN8MainView14tearDownScreenEv>:

void MainView::tearDownScreen()
{
90005be8:	b480      	push	{r7}
90005bea:	b083      	sub	sp, #12
90005bec:	af00      	add	r7, sp, #0
90005bee:	6078      	str	r0, [r7, #4]
}
90005bf0:	bf00      	nop
90005bf2:	370c      	adds	r7, #12
90005bf4:	46bd      	mov	sp, r7
90005bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
90005bfa:	4770      	bx	lr

90005bfc <_ZN8MainView13increaseValueEv>:

void MainView::increaseValue()
{
90005bfc:	b580      	push	{r7, lr}
90005bfe:	b082      	sub	sp, #8
90005c00:	af00      	add	r7, sp, #0
90005c02:	6078      	str	r0, [r7, #4]


    if (mycount[0] <= mycount[1])
90005c04:	4b18      	ldr	r3, [pc, #96]	; (90005c68 <_ZN8MainView13increaseValueEv+0x6c>)
90005c06:	781a      	ldrb	r2, [r3, #0]
90005c08:	4b17      	ldr	r3, [pc, #92]	; (90005c68 <_ZN8MainView13increaseValueEv+0x6c>)
90005c0a:	785b      	ldrb	r3, [r3, #1]
90005c0c:	429a      	cmp	r2, r3
90005c0e:	d826      	bhi.n	90005c5e <_ZN8MainView13increaseValueEv+0x62>
    {

        setCount(mycount[0]);
90005c10:	4b15      	ldr	r3, [pc, #84]	; (90005c68 <_ZN8MainView13increaseValueEv+0x6c>)
90005c12:	781b      	ldrb	r3, [r3, #0]
90005c14:	4619      	mov	r1, r3
90005c16:	6878      	ldr	r0, [r7, #4]
90005c18:	f000 f85a 	bl	90005cd0 <_ZN8MainView8setCountEh>

        if (mycount[0] == mycount[1])
90005c1c:	4b12      	ldr	r3, [pc, #72]	; (90005c68 <_ZN8MainView13increaseValueEv+0x6c>)
90005c1e:	781a      	ldrb	r2, [r3, #0]
90005c20:	4b11      	ldr	r3, [pc, #68]	; (90005c68 <_ZN8MainView13increaseValueEv+0x6c>)
90005c22:	785b      	ldrb	r3, [r3, #1]
90005c24:	429a      	cmp	r2, r3
90005c26:	d10b      	bne.n	90005c40 <_ZN8MainView13increaseValueEv+0x44>
        {
            setCount(mycount[1]);
90005c28:	4b0f      	ldr	r3, [pc, #60]	; (90005c68 <_ZN8MainView13increaseValueEv+0x6c>)
90005c2a:	785b      	ldrb	r3, [r3, #1]
90005c2c:	4619      	mov	r1, r3
90005c2e:	6878      	ldr	r0, [r7, #4]
90005c30:	f000 f84e 	bl	90005cd0 <_ZN8MainView8setCountEh>
            setLimitEffects(false, true);
90005c34:	2201      	movs	r2, #1
90005c36:	2100      	movs	r1, #0
90005c38:	6878      	ldr	r0, [r7, #4]
90005c3a:	f000 f863 	bl	90005d04 <_ZN8MainView15setLimitEffectsEbb>
90005c3e:	e008      	b.n	90005c52 <_ZN8MainView13increaseValueEv+0x56>
        }
        else if (mycount[0] == 0)
90005c40:	4b09      	ldr	r3, [pc, #36]	; (90005c68 <_ZN8MainView13increaseValueEv+0x6c>)
90005c42:	781b      	ldrb	r3, [r3, #0]
90005c44:	2b00      	cmp	r3, #0
90005c46:	d104      	bne.n	90005c52 <_ZN8MainView13increaseValueEv+0x56>
        {
            setLimitEffects(true, true);
90005c48:	2201      	movs	r2, #1
90005c4a:	2101      	movs	r1, #1
90005c4c:	6878      	ldr	r0, [r7, #4]
90005c4e:	f000 f859 	bl	90005d04 <_ZN8MainView15setLimitEffectsEbb>
        }
        mycount[0]++;
90005c52:	4b05      	ldr	r3, [pc, #20]	; (90005c68 <_ZN8MainView13increaseValueEv+0x6c>)
90005c54:	781b      	ldrb	r3, [r3, #0]
90005c56:	3301      	adds	r3, #1
90005c58:	b2da      	uxtb	r2, r3
90005c5a:	4b03      	ldr	r3, [pc, #12]	; (90005c68 <_ZN8MainView13increaseValueEv+0x6c>)
90005c5c:	701a      	strb	r2, [r3, #0]
    }



}
90005c5e:	bf00      	nop
90005c60:	3708      	adds	r7, #8
90005c62:	46bd      	mov	sp, r7
90005c64:	bd80      	pop	{r7, pc}
90005c66:	bf00      	nop
90005c68:	2400123c 	.word	0x2400123c

90005c6c <_ZN8MainView13decreaseValueEv>:

void MainView::decreaseValue()
{
90005c6c:	b580      	push	{r7, lr}
90005c6e:	b082      	sub	sp, #8
90005c70:	af00      	add	r7, sp, #0
90005c72:	6078      	str	r0, [r7, #4]
    if (count > 0)
90005c74:	687b      	ldr	r3, [r7, #4]
90005c76:	f893 31b0 	ldrb.w	r3, [r3, #432]	; 0x1b0
90005c7a:	2b00      	cmp	r3, #0
90005c7c:	d023      	beq.n	90005cc6 <_ZN8MainView13decreaseValueEv+0x5a>
    {
        count--;
90005c7e:	687b      	ldr	r3, [r7, #4]
90005c80:	f893 31b0 	ldrb.w	r3, [r3, #432]	; 0x1b0
90005c84:	3b01      	subs	r3, #1
90005c86:	b2da      	uxtb	r2, r3
90005c88:	687b      	ldr	r3, [r7, #4]
90005c8a:	f883 21b0 	strb.w	r2, [r3, #432]	; 0x1b0
        setCount(count);
90005c8e:	687b      	ldr	r3, [r7, #4]
90005c90:	f893 31b0 	ldrb.w	r3, [r3, #432]	; 0x1b0
90005c94:	4619      	mov	r1, r3
90005c96:	6878      	ldr	r0, [r7, #4]
90005c98:	f000 f81a 	bl	90005cd0 <_ZN8MainView8setCountEh>

        if (0 == count)
90005c9c:	687b      	ldr	r3, [r7, #4]
90005c9e:	f893 31b0 	ldrb.w	r3, [r3, #432]	; 0x1b0
90005ca2:	2b00      	cmp	r3, #0
90005ca4:	d105      	bne.n	90005cb2 <_ZN8MainView13decreaseValueEv+0x46>
        {
            setLimitEffects(true, false);
90005ca6:	2200      	movs	r2, #0
90005ca8:	2101      	movs	r1, #1
90005caa:	6878      	ldr	r0, [r7, #4]
90005cac:	f000 f82a 	bl	90005d04 <_ZN8MainView15setLimitEffectsEbb>
        else if (41 == count)
        {
            setLimitEffects(true, true);
        }
    }
}
90005cb0:	e009      	b.n	90005cc6 <_ZN8MainView13decreaseValueEv+0x5a>
        else if (41 == count)
90005cb2:	687b      	ldr	r3, [r7, #4]
90005cb4:	f893 31b0 	ldrb.w	r3, [r3, #432]	; 0x1b0
90005cb8:	2b29      	cmp	r3, #41	; 0x29
90005cba:	d104      	bne.n	90005cc6 <_ZN8MainView13decreaseValueEv+0x5a>
            setLimitEffects(true, true);
90005cbc:	2201      	movs	r2, #1
90005cbe:	2101      	movs	r1, #1
90005cc0:	6878      	ldr	r0, [r7, #4]
90005cc2:	f000 f81f 	bl	90005d04 <_ZN8MainView15setLimitEffectsEbb>
}
90005cc6:	bf00      	nop
90005cc8:	3708      	adds	r7, #8
90005cca:	46bd      	mov	sp, r7
90005ccc:	bd80      	pop	{r7, pc}
	...

90005cd0 <_ZN8MainView8setCountEh>:

void MainView::setCount(uint8_t countValue)
{
90005cd0:	b580      	push	{r7, lr}
90005cd2:	b082      	sub	sp, #8
90005cd4:	af00      	add	r7, sp, #0
90005cd6:	6078      	str	r0, [r7, #4]
90005cd8:	460b      	mov	r3, r1
90005cda:	70fb      	strb	r3, [r7, #3]
    Unicode::snprintf(countTxtBuffer, 3, "%d", countValue);
90005cdc:	687b      	ldr	r3, [r7, #4]
90005cde:	f503 70cc 	add.w	r0, r3, #408	; 0x198
90005ce2:	78fb      	ldrb	r3, [r7, #3]
90005ce4:	4a06      	ldr	r2, [pc, #24]	; (90005d00 <_ZN8MainView8setCountEh+0x30>)
90005ce6:	2103      	movs	r1, #3
90005ce8:	f00d fbd2 	bl	90013490 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    // Invalidate text area, which will result in it being redrawn in next tick.
    countTxt.invalidate();
90005cec:	687b      	ldr	r3, [r7, #4]
90005cee:	33f0      	adds	r3, #240	; 0xf0
90005cf0:	4618      	mov	r0, r3
90005cf2:	f00b fbff 	bl	900114f4 <_ZNK8touchgfx8Drawable10invalidateEv>
}
90005cf6:	bf00      	nop
90005cf8:	3708      	adds	r7, #8
90005cfa:	46bd      	mov	sp, r7
90005cfc:	bd80      	pop	{r7, pc}
90005cfe:	bf00      	nop
90005d00:	900210a8 	.word	0x900210a8

90005d04 <_ZN8MainView15setLimitEffectsEbb>:

void MainView::setLimitEffects(bool belowUpper, bool aboveLower)
{
90005d04:	b590      	push	{r4, r7, lr}
90005d06:	b08b      	sub	sp, #44	; 0x2c
90005d08:	af00      	add	r7, sp, #0
90005d0a:	6078      	str	r0, [r7, #4]
90005d0c:	460b      	mov	r3, r1
90005d0e:	70fb      	strb	r3, [r7, #3]
90005d10:	4613      	mov	r3, r2
90005d12:	70bb      	strb	r3, [r7, #2]
    buttonUp.setTouchable(belowUpper);
90005d14:	687b      	ldr	r3, [r7, #4]
90005d16:	f503 7398 	add.w	r3, r3, #304	; 0x130
90005d1a:	78fa      	ldrb	r2, [r7, #3]
90005d1c:	4611      	mov	r1, r2
90005d1e:	4618      	mov	r0, r3
90005d20:	f7fe fce3 	bl	900046ea <_ZN8touchgfx8Drawable12setTouchableEb>
    buttonDown.setTouchable(aboveLower);
90005d24:	687b      	ldr	r3, [r7, #4]
90005d26:	f503 73b2 	add.w	r3, r3, #356	; 0x164
90005d2a:	78ba      	ldrb	r2, [r7, #2]
90005d2c:	4611      	mov	r1, r2
90005d2e:	4618      	mov	r0, r3
90005d30:	f7fe fcdb 	bl	900046ea <_ZN8touchgfx8Drawable12setTouchableEb>

    if (belowUpper)
90005d34:	78fb      	ldrb	r3, [r7, #3]
90005d36:	2b00      	cmp	r3, #0
90005d38:	d017      	beq.n	90005d6a <_ZN8MainView15setLimitEffectsEbb+0x66>
    {
        buttonUp.setBitmaps(Bitmap(BITMAP_UP_BTN_ID), Bitmap(BITMAP_UP_BTN_PRESSED_ID));
90005d3a:	687b      	ldr	r3, [r7, #4]
90005d3c:	f503 7498 	add.w	r4, r3, #304	; 0x130
90005d40:	f107 0308 	add.w	r3, r7, #8
90005d44:	2105      	movs	r1, #5
90005d46:	4618      	mov	r0, r3
90005d48:	f7fe fb87 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90005d4c:	f107 030c 	add.w	r3, r7, #12
90005d50:	2107      	movs	r1, #7
90005d52:	4618      	mov	r0, r3
90005d54:	f7fe fb81 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90005d58:	f107 020c 	add.w	r2, r7, #12
90005d5c:	f107 0308 	add.w	r3, r7, #8
90005d60:	4619      	mov	r1, r3
90005d62:	4620      	mov	r0, r4
90005d64:	f008 fdce 	bl	9000e904 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
90005d68:	e016      	b.n	90005d98 <_ZN8MainView15setLimitEffectsEbb+0x94>
    }
    else
    {
        buttonUp.setBitmaps(Bitmap(BITMAP_UP_BTN_DISABLED_ID), Bitmap(BITMAP_UP_BTN_DISABLED_ID));
90005d6a:	687b      	ldr	r3, [r7, #4]
90005d6c:	f503 7498 	add.w	r4, r3, #304	; 0x130
90005d70:	f107 0310 	add.w	r3, r7, #16
90005d74:	2106      	movs	r1, #6
90005d76:	4618      	mov	r0, r3
90005d78:	f7fe fb6f 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90005d7c:	f107 0314 	add.w	r3, r7, #20
90005d80:	2106      	movs	r1, #6
90005d82:	4618      	mov	r0, r3
90005d84:	f7fe fb69 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90005d88:	f107 0214 	add.w	r2, r7, #20
90005d8c:	f107 0310 	add.w	r3, r7, #16
90005d90:	4619      	mov	r1, r3
90005d92:	4620      	mov	r0, r4
90005d94:	f008 fdb6 	bl	9000e904 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    }

    if (aboveLower)
90005d98:	78bb      	ldrb	r3, [r7, #2]
90005d9a:	2b00      	cmp	r3, #0
90005d9c:	d017      	beq.n	90005dce <_ZN8MainView15setLimitEffectsEbb+0xca>
    {
        buttonDown.setBitmaps(Bitmap(BITMAP_DOWN_BTN_ID), Bitmap(BITMAP_DOWN_BTN_PRESSED_ID));
90005d9e:	687b      	ldr	r3, [r7, #4]
90005da0:	f503 74b2 	add.w	r4, r3, #356	; 0x164
90005da4:	f107 0318 	add.w	r3, r7, #24
90005da8:	2102      	movs	r1, #2
90005daa:	4618      	mov	r0, r3
90005dac:	f7fe fb55 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90005db0:	f107 031c 	add.w	r3, r7, #28
90005db4:	2104      	movs	r1, #4
90005db6:	4618      	mov	r0, r3
90005db8:	f7fe fb4f 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90005dbc:	f107 021c 	add.w	r2, r7, #28
90005dc0:	f107 0318 	add.w	r3, r7, #24
90005dc4:	4619      	mov	r1, r3
90005dc6:	4620      	mov	r0, r4
90005dc8:	f008 fd9c 	bl	9000e904 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
90005dcc:	e016      	b.n	90005dfc <_ZN8MainView15setLimitEffectsEbb+0xf8>
    }
    else
    {
        buttonDown.setBitmaps(Bitmap(BITMAP_DOWN_BTN_DISABLED_ID), Bitmap(BITMAP_DOWN_BTN_DISABLED_ID));
90005dce:	687b      	ldr	r3, [r7, #4]
90005dd0:	f503 74b2 	add.w	r4, r3, #356	; 0x164
90005dd4:	f107 0320 	add.w	r3, r7, #32
90005dd8:	2103      	movs	r1, #3
90005dda:	4618      	mov	r0, r3
90005ddc:	f7fe fb3d 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90005de0:	f107 0324 	add.w	r3, r7, #36	; 0x24
90005de4:	2103      	movs	r1, #3
90005de6:	4618      	mov	r0, r3
90005de8:	f7fe fb37 	bl	9000445a <_ZN8touchgfx6BitmapC1Et>
90005dec:	f107 0224 	add.w	r2, r7, #36	; 0x24
90005df0:	f107 0320 	add.w	r3, r7, #32
90005df4:	4619      	mov	r1, r3
90005df6:	4620      	mov	r0, r4
90005df8:	f008 fd84 	bl	9000e904 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    }

    buttonUp.invalidate();
90005dfc:	687b      	ldr	r3, [r7, #4]
90005dfe:	f503 7398 	add.w	r3, r3, #304	; 0x130
90005e02:	4618      	mov	r0, r3
90005e04:	f00b fb76 	bl	900114f4 <_ZNK8touchgfx8Drawable10invalidateEv>
    buttonDown.invalidate();
90005e08:	687b      	ldr	r3, [r7, #4]
90005e0a:	f503 73b2 	add.w	r3, r3, #356	; 0x164
90005e0e:	4618      	mov	r0, r3
90005e10:	f00b fb70 	bl	900114f4 <_ZNK8touchgfx8Drawable10invalidateEv>
}
90005e14:	bf00      	nop
90005e16:	372c      	adds	r7, #44	; 0x2c
90005e18:	46bd      	mov	sp, r7
90005e1a:	bd90      	pop	{r4, r7, pc}

90005e1c <_ZN5ModelC1Ev>:


#define HARDWARE


Model::Model() : modelListener(0)
90005e1c:	b480      	push	{r7}
90005e1e:	b083      	sub	sp, #12
90005e20:	af00      	add	r7, sp, #0
90005e22:	6078      	str	r0, [r7, #4]
90005e24:	687b      	ldr	r3, [r7, #4]
90005e26:	2200      	movs	r2, #0
90005e28:	601a      	str	r2, [r3, #0]
{
}
90005e2a:	687b      	ldr	r3, [r7, #4]
90005e2c:	4618      	mov	r0, r3
90005e2e:	370c      	adds	r7, #12
90005e30:	46bd      	mov	sp, r7
90005e32:	f85d 7b04 	ldr.w	r7, [sp], #4
90005e36:	4770      	bx	lr

90005e38 <_ZN5Model4tickEv>:

void Model::tick()
{
90005e38:	b580      	push	{r7, lr}
90005e3a:	b082      	sub	sp, #8
90005e3c:	af00      	add	r7, sp, #0
90005e3e:	6078      	str	r0, [r7, #4]

	if (flag)
90005e40:	4b0a      	ldr	r3, [pc, #40]	; (90005e6c <_ZN5Model4tickEv+0x34>)
90005e42:	681b      	ldr	r3, [r3, #0]
90005e44:	2b00      	cmp	r3, #0
90005e46:	d00c      	beq.n	90005e62 <_ZN5Model4tickEv+0x2a>
	{

		modelListener->setnewval();
90005e48:	687b      	ldr	r3, [r7, #4]
90005e4a:	681a      	ldr	r2, [r3, #0]
90005e4c:	687b      	ldr	r3, [r7, #4]
90005e4e:	681b      	ldr	r3, [r3, #0]
90005e50:	681b      	ldr	r3, [r3, #0]
90005e52:	3308      	adds	r3, #8
90005e54:	681b      	ldr	r3, [r3, #0]
90005e56:	4610      	mov	r0, r2
90005e58:	4798      	blx	r3
#ifdef SIMULATOR
		Sleep(1000);
#endif
#ifdef HARDWARE
		HAL_Delay(1000);
90005e5a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
90005e5e:	f000 fe93 	bl	90006b88 <HAL_Delay>
#endif
	}
}
90005e62:	bf00      	nop
90005e64:	3708      	adds	r7, #8
90005e66:	46bd      	mov	sp, r7
90005e68:	bd80      	pop	{r7, pc}
90005e6a:	bf00      	nop
90005e6c:	24012e34 	.word	0x24012e34

90005e70 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90005e70:	f240 1301 	movw	r3, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90005e74:	f44f 72f0 	mov.w	r2, #480	; 0x1e0

  return FT5336_OK;
}
90005e78:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90005e7a:	800b      	strh	r3, [r1, #0]
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90005e7c:	2305      	movs	r3, #5
90005e7e:	708b      	strb	r3, [r1, #2]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90005e80:	f44f 7388 	mov.w	r3, #272	; 0x110
90005e84:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90005e88:	4770      	bx	lr

90005e8a <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90005e8a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90005e8e:	2b01      	cmp	r3, #1
  {
    pObj->IsInitialized = 0;
90005e90:	bf04      	itt	eq
90005e92:	2300      	moveq	r3, #0
90005e94:	f880 3024 	strbeq.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
90005e98:	2000      	movs	r0, #0
90005e9a:	4770      	bx	lr

90005e9c <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90005e9c:	2000      	movs	r0, #0
90005e9e:	4770      	bx	lr

90005ea0 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90005ea0:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90005ea2:	6904      	ldr	r4, [r0, #16]
90005ea4:	8900      	ldrh	r0, [r0, #8]
90005ea6:	46a4      	mov	ip, r4
}
90005ea8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90005eac:	4760      	bx	ip

90005eae <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90005eae:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90005eb0:	68c4      	ldr	r4, [r0, #12]
90005eb2:	8900      	ldrh	r0, [r0, #8]
90005eb4:	46a4      	mov	ip, r4
}
90005eb6:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90005eba:	4760      	bx	ip

90005ebc <FT5336_GestureConfig>:
{
90005ebc:	e92d 4320 	stmdb	sp!, {r5, r8, r9, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90005ec0:	f100 0818 	add.w	r8, r0, #24
{
90005ec4:	4689      	mov	r9, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90005ec6:	7809      	ldrb	r1, [r1, #0]
90005ec8:	4640      	mov	r0, r8
90005eca:	f000 f8fb 	bl	900060c4 <ft5336_radian_value>
90005ece:	4605      	mov	r5, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90005ed0:	f899 1004 	ldrb.w	r1, [r9, #4]
90005ed4:	4640      	mov	r0, r8
90005ed6:	f000 f901 	bl	900060dc <ft5336_offset_left_right>
90005eda:	4405      	add	r5, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90005edc:	f899 1008 	ldrb.w	r1, [r9, #8]
90005ee0:	4640      	mov	r0, r8
90005ee2:	f000 f907 	bl	900060f4 <ft5336_offset_up_down>
90005ee6:	4405      	add	r5, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90005ee8:	f899 100c 	ldrb.w	r1, [r9, #12]
90005eec:	4640      	mov	r0, r8
90005eee:	f000 f90d 	bl	9000610c <ft5336_disatnce_left_right>
90005ef2:	4405      	add	r5, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005ef4:	f899 1010 	ldrb.w	r1, [r9, #16]
90005ef8:	4640      	mov	r0, r8
90005efa:	f000 f913 	bl	90006124 <ft5336_distance_up_down>
90005efe:	4405      	add	r5, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90005f00:	f899 1014 	ldrb.w	r1, [r9, #20]
90005f04:	4640      	mov	r0, r8
90005f06:	f000 f919 	bl	9000613c <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90005f0a:	42c5      	cmn	r5, r0
}
90005f0c:	bf14      	ite	ne
90005f0e:	f04f 30ff 	movne.w	r0, #4294967295
90005f12:	2000      	moveq	r0, #0
90005f14:	e8bd 8320 	ldmia.w	sp!, {r5, r8, r9, pc}

90005f18 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90005f18:	3018      	adds	r0, #24
90005f1a:	f000 b927 	b.w	9000616c <ft5336_chip_id>

90005f1e <FT5336_GetMultiTouchState>:
{
90005f1e:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005f20:	f100 0518 	add.w	r5, r0, #24
{
90005f24:	b088      	sub	sp, #32
90005f26:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005f28:	4628      	mov	r0, r5
90005f2a:	4669      	mov	r1, sp
90005f2c:	f000 f8bd 	bl	900060aa <ft5336_td_status>
90005f30:	bb98      	cbnz	r0, 90005f9a <FT5336_GetMultiTouchState+0x7c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90005f32:	f89d 3000 	ldrb.w	r3, [sp]
      ret = (int32_t)nb_touch;
90005f36:	2b05      	cmp	r3, #5
90005f38:	bf98      	it	ls
90005f3a:	4618      	movls	r0, r3
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90005f3c:	6020      	str	r0, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90005f3e:	231e      	movs	r3, #30
90005f40:	466a      	mov	r2, sp
90005f42:	2103      	movs	r1, #3
90005f44:	4628      	mov	r0, r5
90005f46:	f000 f89d 	bl	90006084 <ft5336_read_reg>
90005f4a:	bb48      	cbnz	r0, 90005fa0 <FT5336_GetMultiTouchState+0x82>
90005f4c:	466b      	mov	r3, sp
90005f4e:	1d22      	adds	r2, r4, #4
90005f50:	f104 0118 	add.w	r1, r4, #24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005f54:	781d      	ldrb	r5, [r3, #0]
90005f56:	3306      	adds	r3, #6
90005f58:	f813 6c05 	ldrb.w	r6, [r3, #-5]
90005f5c:	022c      	lsls	r4, r5, #8
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005f5e:	09ad      	lsrs	r5, r5, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005f60:	f404 6470 	and.w	r4, r4, #3840	; 0xf00
90005f64:	4334      	orrs	r4, r6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005f66:	f813 6c03 	ldrb.w	r6, [r3, #-3]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005f6a:	f842 4b04 	str.w	r4, [r2], #4
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
90005f6e:	4291      	cmp	r1, r2
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005f70:	f813 4c04 	ldrb.w	r4, [r3, #-4]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005f74:	6395      	str	r5, [r2, #56]	; 0x38
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005f76:	ea4f 2404 	mov.w	r4, r4, lsl #8
90005f7a:	f404 6470 	and.w	r4, r4, #3840	; 0xf00
90005f7e:	ea44 0406 	orr.w	r4, r4, r6
90005f82:	6114      	str	r4, [r2, #16]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005f84:	f813 4c02 	ldrb.w	r4, [r3, #-2]
90005f88:	6254      	str	r4, [r2, #36]	; 0x24
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005f8a:	f813 4c01 	ldrb.w	r4, [r3, #-1]
90005f8e:	ea4f 1414 	mov.w	r4, r4, lsr #4
90005f92:	64d4      	str	r4, [r2, #76]	; 0x4c
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
90005f94:	d1de      	bne.n	90005f54 <FT5336_GetMultiTouchState+0x36>
}
90005f96:	b008      	add	sp, #32
90005f98:	bd70      	pop	{r4, r5, r6, pc}
    ret = FT5336_ERROR;
90005f9a:	f04f 30ff 	mov.w	r0, #4294967295
90005f9e:	e7cd      	b.n	90005f3c <FT5336_GetMultiTouchState+0x1e>
    ret = FT5336_ERROR;
90005fa0:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90005fa4:	e7f7      	b.n	90005f96 <FT5336_GetMultiTouchState+0x78>

90005fa6 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90005fa6:	3018      	adds	r0, #24
90005fa8:	f000 b87a 	b.w	900060a0 <ft5336_gest_id>

90005fac <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90005fac:	2101      	movs	r1, #1
90005fae:	3018      	adds	r0, #24
90005fb0:	f000 b8d0 	b.w	90006154 <ft5336_g_mode>

90005fb4 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90005fb4:	2100      	movs	r1, #0
90005fb6:	3018      	adds	r0, #24
90005fb8:	f000 b8cc 	b.w	90006154 <ft5336_g_mode>

90005fbc <FT5336_Init>:
{
90005fbc:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 0U)
90005fbe:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
90005fc2:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 0U)
90005fc4:	b96b      	cbnz	r3, 90005fe2 <FT5336_Init+0x26>
    pObj->IO.Init();
90005fc6:	6803      	ldr	r3, [r0, #0]
90005fc8:	4798      	blx	r3
    ret += FT5336_DisableIT(pObj);
90005fca:	4620      	mov	r0, r4
90005fcc:	f7ff fff2 	bl	90005fb4 <FT5336_DisableIT>
  if(ret != FT5336_OK)
90005fd0:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90005fd2:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90005fd6:	bf18      	it	ne
90005fd8:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90005fda:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
90005fde:	4240      	negs	r0, r0
}
90005fe0:	bd10      	pop	{r4, pc}
  int32_t ret = FT5336_OK;
90005fe2:	2000      	movs	r0, #0
  return ret;
90005fe4:	e7fc      	b.n	90005fe0 <FT5336_Init+0x24>

90005fe6 <FT5336_ClearIT>:
90005fe6:	2000      	movs	r0, #0
90005fe8:	4770      	bx	lr

90005fea <FT5336_GetState>:
{
90005fea:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005fec:	f100 0518 	add.w	r5, r0, #24
{
90005ff0:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005ff2:	a901      	add	r1, sp, #4
90005ff4:	4628      	mov	r0, r5
90005ff6:	f000 f858 	bl	900060aa <ft5336_td_status>
90005ffa:	bb08      	cbnz	r0, 90006040 <FT5336_GetState+0x56>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90005ffc:	f89d 3004 	ldrb.w	r3, [sp, #4]
      ret = (int32_t)nb_touch;
90006000:	2b05      	cmp	r3, #5
90006002:	bf98      	it	ls
90006004:	4618      	movls	r0, r3
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006006:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006008:	6020      	str	r0, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
9000600a:	2103      	movs	r1, #3
9000600c:	4628      	mov	r0, r5
9000600e:	eb0d 0203 	add.w	r2, sp, r3
90006012:	f000 f837 	bl	90006084 <ft5336_read_reg>
90006016:	b9b0      	cbnz	r0, 90006046 <FT5336_GetState+0x5c>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006018:	f89d 3004 	ldrb.w	r3, [sp, #4]
9000601c:	f89d 2005 	ldrb.w	r2, [sp, #5]
90006020:	021b      	lsls	r3, r3, #8
90006022:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
90006026:	4313      	orrs	r3, r2
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006028:	f89d 2007 	ldrb.w	r2, [sp, #7]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000602c:	6063      	str	r3, [r4, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
9000602e:	f89d 3006 	ldrb.w	r3, [sp, #6]
90006032:	021b      	lsls	r3, r3, #8
90006034:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
90006038:	4313      	orrs	r3, r2
9000603a:	60a3      	str	r3, [r4, #8]
}
9000603c:	b003      	add	sp, #12
9000603e:	bd30      	pop	{r4, r5, pc}
    ret = FT5336_ERROR;
90006040:	f04f 30ff 	mov.w	r0, #4294967295
90006044:	e7df      	b.n	90006006 <FT5336_GetState+0x1c>
    ret = FT5336_ERROR;
90006046:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000604a:	e7f7      	b.n	9000603c <FT5336_GetState+0x52>

9000604c <FT5336_RegisterBusIO>:
  if (pObj == NULL)
9000604c:	b190      	cbz	r0, 90006074 <FT5336_RegisterBusIO+0x28>
    pObj->IO.DeInit    = pIO->DeInit;
9000604e:	684a      	ldr	r2, [r1, #4]
    pObj->IO.Init      = pIO->Init;
90006050:	680b      	ldr	r3, [r1, #0]
    pObj->IO.DeInit    = pIO->DeInit;
90006052:	6042      	str	r2, [r0, #4]
    pObj->IO.Address   = pIO->Address;
90006054:	890a      	ldrh	r2, [r1, #8]
    pObj->IO.Init      = pIO->Init;
90006056:	6003      	str	r3, [r0, #0]
    pObj->IO.Address   = pIO->Address;
90006058:	8102      	strh	r2, [r0, #8]
    pObj->IO.WriteReg  = pIO->WriteReg;
9000605a:	68ca      	ldr	r2, [r1, #12]
9000605c:	60c2      	str	r2, [r0, #12]
    pObj->IO.ReadReg   = pIO->ReadReg;
9000605e:	690a      	ldr	r2, [r1, #16]
90006060:	6102      	str	r2, [r0, #16]
    pObj->IO.GetTick   = pIO->GetTick;
90006062:	694a      	ldr	r2, [r1, #20]
    pObj->Ctx.handle   = pObj;
90006064:	6200      	str	r0, [r0, #32]
    pObj->IO.GetTick   = pIO->GetTick;
90006066:	6142      	str	r2, [r0, #20]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90006068:	4a04      	ldr	r2, [pc, #16]	; (9000607c <FT5336_RegisterBusIO+0x30>)
9000606a:	61c2      	str	r2, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
9000606c:	4a04      	ldr	r2, [pc, #16]	; (90006080 <FT5336_RegisterBusIO+0x34>)
9000606e:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90006070:	b103      	cbz	r3, 90006074 <FT5336_RegisterBusIO+0x28>
      ret = pObj->IO.Init();
90006072:	4718      	bx	r3
}
90006074:	f04f 30ff 	mov.w	r0, #4294967295
90006078:	4770      	bx	lr
9000607a:	bf00      	nop
9000607c:	90005ea1 	.word	0x90005ea1
90006080:	90005eaf 	.word	0x90005eaf

90006084 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90006084:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006086:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
9000608a:	46a4      	mov	ip, r4
}
9000608c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006090:	4760      	bx	ip

90006092 <ft5336_write_reg>:
  * @param  pdata pointer to data to be written
  * @param  length Length of data to write   
  * @retval Component status
  */
int32_t ft5336_write_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t *pdata, uint16_t length)
{
90006092:	b410      	push	{r4}
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006094:	6804      	ldr	r4, [r0, #0]
90006096:	6880      	ldr	r0, [r0, #8]
90006098:	46a4      	mov	ip, r4
}
9000609a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000609e:	4760      	bx	ip

900060a0 <ft5336_gest_id>:
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
900060a0:	2301      	movs	r3, #1
{
900060a2:	460a      	mov	r2, r1
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
900060a4:	4619      	mov	r1, r3
900060a6:	f7ff bfed 	b.w	90006084 <ft5336_read_reg>

900060aa <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
900060aa:	b510      	push	{r4, lr}
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
900060ac:	460a      	mov	r2, r1
{
900060ae:	460c      	mov	r4, r1
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
900060b0:	2301      	movs	r3, #1
900060b2:	2102      	movs	r1, #2
900060b4:	f7ff ffe6 	bl	90006084 <ft5336_read_reg>
  
  if(ret == 0)
900060b8:	b918      	cbnz	r0, 900060c2 <ft5336_td_status+0x18>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
900060ba:	7823      	ldrb	r3, [r4, #0]
900060bc:	f003 030f 	and.w	r3, r3, #15
900060c0:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
900060c2:	bd10      	pop	{r4, pc}

900060c4 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
900060c4:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
900060c6:	2301      	movs	r3, #1
{
900060c8:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
900060cc:	f10d 0207 	add.w	r2, sp, #7
900060d0:	2191      	movs	r1, #145	; 0x91
900060d2:	f7ff ffde 	bl	90006092 <ft5336_write_reg>
}
900060d6:	b003      	add	sp, #12
900060d8:	f85d fb04 	ldr.w	pc, [sp], #4

900060dc <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
900060dc:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
900060de:	2301      	movs	r3, #1
{
900060e0:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
900060e4:	f10d 0207 	add.w	r2, sp, #7
900060e8:	2192      	movs	r1, #146	; 0x92
900060ea:	f7ff ffd2 	bl	90006092 <ft5336_write_reg>
}
900060ee:	b003      	add	sp, #12
900060f0:	f85d fb04 	ldr.w	pc, [sp], #4

900060f4 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
900060f4:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
900060f6:	2301      	movs	r3, #1
{
900060f8:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
900060fc:	f10d 0207 	add.w	r2, sp, #7
90006100:	2193      	movs	r1, #147	; 0x93
90006102:	f7ff ffc6 	bl	90006092 <ft5336_write_reg>
}
90006106:	b003      	add	sp, #12
90006108:	f85d fb04 	ldr.w	pc, [sp], #4

9000610c <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
9000610c:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
9000610e:	2301      	movs	r3, #1
{
90006110:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
90006114:	f10d 0207 	add.w	r2, sp, #7
90006118:	2194      	movs	r1, #148	; 0x94
9000611a:	f7ff ffba 	bl	90006092 <ft5336_write_reg>
}
9000611e:	b003      	add	sp, #12
90006120:	f85d fb04 	ldr.w	pc, [sp], #4

90006124 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006124:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
90006126:	2301      	movs	r3, #1
{
90006128:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
9000612c:	f10d 0207 	add.w	r2, sp, #7
90006130:	2195      	movs	r1, #149	; 0x95
90006132:	f7ff ffae 	bl	90006092 <ft5336_write_reg>
}
90006136:	b003      	add	sp, #12
90006138:	f85d fb04 	ldr.w	pc, [sp], #4

9000613c <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
9000613c:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
9000613e:	2301      	movs	r3, #1
{
90006140:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
90006144:	f10d 0207 	add.w	r2, sp, #7
90006148:	2196      	movs	r1, #150	; 0x96
9000614a:	f7ff ffa2 	bl	90006092 <ft5336_write_reg>
}
9000614e:	b003      	add	sp, #12
90006150:	f85d fb04 	ldr.w	pc, [sp], #4

90006154 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90006154:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
90006156:	2301      	movs	r3, #1
{
90006158:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
9000615c:	f10d 0207 	add.w	r2, sp, #7
90006160:	21a4      	movs	r1, #164	; 0xa4
90006162:	f7ff ff96 	bl	90006092 <ft5336_write_reg>
}
90006166:	b003      	add	sp, #12
90006168:	f85d fb04 	ldr.w	pc, [sp], #4

9000616c <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
9000616c:	460a      	mov	r2, r1
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_CHIP_ID_REG, (uint8_t *)value, 1);
9000616e:	2301      	movs	r3, #1
90006170:	21a8      	movs	r1, #168	; 0xa8
90006172:	f7ff bf87 	b.w	90006084 <ft5336_read_reg>
	...

90006178 <MT48LC4M32B2_ClockEnable>:
  * @param  Ctx : Component object pointer
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
90006178:	b508      	push	{r3, lr}
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000617a:	2201      	movs	r2, #1
9000617c:	4b07      	ldr	r3, [pc, #28]	; (9000619c <MT48LC4M32B2_ClockEnable+0x24>)
  Command.CommandTarget          = Interface;
9000617e:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 1;
90006182:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
90006184:	2200      	movs	r2, #0

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006186:	4619      	mov	r1, r3
  Command.ModeRegisterDefinition = 0;
90006188:	60da      	str	r2, [r3, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000618a:	f64f 72ff 	movw	r2, #65535	; 0xffff
9000618e:	f003 fd09 	bl	90009ba4 <HAL_SDRAM_SendCommand>
90006192:	3800      	subs	r0, #0
90006194:	bf18      	it	ne
90006196:	2001      	movne	r0, #1
  }
  else
  {
    return MT48LC4M32B2_OK;
  }
}
90006198:	4240      	negs	r0, r0
9000619a:	bd08      	pop	{r3, pc}
9000619c:	24001240 	.word	0x24001240

900061a0 <MT48LC4M32B2_Precharge>:
  * @param  Ctx : Component object pointer
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_Precharge(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
900061a0:	b508      	push	{r3, lr}
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
900061a2:	2202      	movs	r2, #2
900061a4:	4b08      	ldr	r3, [pc, #32]	; (900061c8 <MT48LC4M32B2_Precharge+0x28>)
  Command.CommandTarget          = Interface;
900061a6:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
900061aa:	2101      	movs	r1, #1
900061ac:	2200      	movs	r2, #0
900061ae:	e9c3 1202 	strd	r1, r2, [r3, #8]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900061b2:	f64f 72ff 	movw	r2, #65535	; 0xffff
900061b6:	4619      	mov	r1, r3
900061b8:	f003 fcf4 	bl	90009ba4 <HAL_SDRAM_SendCommand>
900061bc:	3800      	subs	r0, #0
900061be:	bf18      	it	ne
900061c0:	2001      	movne	r0, #1
  }
  else
  {
    return MT48LC4M32B2_OK;
  }
}
900061c2:	4240      	negs	r0, r0
900061c4:	bd08      	pop	{r3, pc}
900061c6:	bf00      	nop
900061c8:	24001240 	.word	0x24001240

900061cc <MT48LC4M32B2_ModeRegConfig>:
int32_t MT48LC4M32B2_ModeRegConfig(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
  uint32_t tmpmrd;

  /* Program the external memory mode register */
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900061cc:	e9d1 3203 	ldrd	r3, r2, [r1, #12]
{
900061d0:	b510      	push	{r4, lr}
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900061d2:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
900061d4:	694a      	ldr	r2, [r1, #20]
                     pRegMode->CASLatency    |\
                     pRegMode->OperationMode |\
                     pRegMode->WriteBurstMode;
  
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
900061d6:	4c0b      	ldr	r4, [pc, #44]	; (90006204 <MT48LC4M32B2_ModeRegConfig+0x38>)
                     pRegMode->BurstType     |\
900061d8:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
900061da:	698a      	ldr	r2, [r1, #24]
900061dc:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900061de:	69ca      	ldr	r2, [r1, #28]
900061e0:	4313      	orrs	r3, r2
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
900061e2:	2204      	movs	r2, #4
900061e4:	6022      	str	r2, [r4, #0]
  Command.CommandTarget          = pRegMode->TargetBank;
900061e6:	680a      	ldr	r2, [r1, #0]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;
  
  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900061e8:	4621      	mov	r1, r4
  Command.CommandTarget          = pRegMode->TargetBank;
900061ea:	6062      	str	r2, [r4, #4]
  Command.AutoRefreshNumber      = 1;
900061ec:	2201      	movs	r2, #1
  Command.ModeRegisterDefinition = tmpmrd;
900061ee:	e9c4 2302 	strd	r2, r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900061f2:	f64f 72ff 	movw	r2, #65535	; 0xffff
900061f6:	f003 fcd5 	bl	90009ba4 <HAL_SDRAM_SendCommand>
900061fa:	3800      	subs	r0, #0
900061fc:	bf18      	it	ne
900061fe:	2001      	movne	r0, #1
  }
  else
  {
    return MT48LC4M32B2_OK;
  }
}
90006200:	4240      	negs	r0, r0
90006202:	bd10      	pop	{r4, pc}
90006204:	24001240 	.word	0x24001240

90006208 <MT48LC4M32B2_RefreshMode>:
  * @param  RefreshMode : Could be MT48LC4M32B2_CMD_AUTOREFRESH_MODE or
  *                      MT48LC4M32B2_CMD_SELFREFRESH_MODE
  * @retval error status
  */
int32_t MT48LC4M32B2_RefreshMode(SDRAM_HandleTypeDef *Ctx, uint32_t Interface, uint32_t RefreshMode) 
{
90006208:	b508      	push	{r3, lr}
  Command.CommandMode            = RefreshMode;
9000620a:	4b08      	ldr	r3, [pc, #32]	; (9000622c <MT48LC4M32B2_RefreshMode+0x24>)
  Command.CommandTarget          = Interface;
9000620c:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;
90006210:	2108      	movs	r1, #8
90006212:	2200      	movs	r2, #0
90006214:	e9c3 1202 	strd	r1, r2, [r3, #8]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006218:	f64f 72ff 	movw	r2, #65535	; 0xffff
9000621c:	4619      	mov	r1, r3
9000621e:	f003 fcc1 	bl	90009ba4 <HAL_SDRAM_SendCommand>
90006222:	3800      	subs	r0, #0
90006224:	bf18      	it	ne
90006226:	2001      	movne	r0, #1
  }
  else
  {
    return MT48LC4M32B2_OK;
  }
}
90006228:	4240      	negs	r0, r0
9000622a:	bd08      	pop	{r3, pc}
9000622c:	24001240 	.word	0x24001240

90006230 <MT48LC4M32B2_RefreshRate>:
  * @param  Ctx : Component object pointer
  * @param  RefreshCount : The refresh rate to be programmed
  * @retval error status
  */
int32_t MT48LC4M32B2_RefreshRate(SDRAM_HandleTypeDef *Ctx, uint32_t RefreshCount) 
{
90006230:	b508      	push	{r3, lr}
  /* Set the device refresh rate */
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90006232:	f003 fcd6 	bl	90009be2 <HAL_SDRAM_ProgramRefreshRate>
90006236:	3800      	subs	r0, #0
90006238:	bf18      	it	ne
9000623a:	2001      	movne	r0, #1
  }
  else
  {
    return MT48LC4M32B2_OK;
  }
}
9000623c:	4240      	negs	r0, r0
9000623e:	bd08      	pop	{r3, pc}

90006240 <MT48LC4M32B2_Init>:
{
90006240:	b570      	push	{r4, r5, r6, lr}
90006242:	460c      	mov	r4, r1
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006244:	6809      	ldr	r1, [r1, #0]
{
90006246:	4605      	mov	r5, r0
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006248:	f7ff ff96 	bl	90006178 <MT48LC4M32B2_ClockEnable>
9000624c:	b110      	cbz	r0, 90006254 <MT48LC4M32B2_Init+0x14>
  int32_t ret = MT48LC4M32B2_ERROR;
9000624e:	f04f 30ff 	mov.w	r0, #4294967295
}
90006252:	bd70      	pop	{r4, r5, r6, pc}
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90006254:	f000 fc92 	bl	90006b7c <HAL_GetTick>
90006258:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
9000625a:	f000 fc8f 	bl	90006b7c <HAL_GetTick>
9000625e:	4286      	cmp	r6, r0
90006260:	d0fb      	beq.n	9000625a <MT48LC4M32B2_Init+0x1a>
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006262:	6821      	ldr	r1, [r4, #0]
90006264:	4628      	mov	r0, r5
90006266:	f7ff ff9b 	bl	900061a0 <MT48LC4M32B2_Precharge>
9000626a:	2800      	cmp	r0, #0
9000626c:	d1ef      	bne.n	9000624e <MT48LC4M32B2_Init+0xe>
      if(MT48LC4M32B2_RefreshMode(Ctx, pRegMode->TargetBank, pRegMode->RefreshMode) == MT48LC4M32B2_OK)
9000626e:	4628      	mov	r0, r5
90006270:	e9d4 1200 	ldrd	r1, r2, [r4]
90006274:	f7ff ffc8 	bl	90006208 <MT48LC4M32B2_RefreshMode>
90006278:	2800      	cmp	r0, #0
9000627a:	d1e8      	bne.n	9000624e <MT48LC4M32B2_Init+0xe>
        if(MT48LC4M32B2_ModeRegConfig(Ctx, pRegMode) == MT48LC4M32B2_OK)
9000627c:	4621      	mov	r1, r4
9000627e:	4628      	mov	r0, r5
90006280:	f7ff ffa4 	bl	900061cc <MT48LC4M32B2_ModeRegConfig>
90006284:	2800      	cmp	r0, #0
90006286:	d1e2      	bne.n	9000624e <MT48LC4M32B2_Init+0xe>
          if(MT48LC4M32B2_RefreshRate(Ctx, pRegMode->RefreshRate) == MT48LC4M32B2_OK)
90006288:	68a1      	ldr	r1, [r4, #8]
9000628a:	4628      	mov	r0, r5
9000628c:	f7ff ffd0 	bl	90006230 <MT48LC4M32B2_RefreshRate>
90006290:	3800      	subs	r0, #0
90006292:	bf18      	it	ne
90006294:	2001      	movne	r0, #1
90006296:	4240      	negs	r0, r0
  return ret;
90006298:	e7db      	b.n	90006252 <MT48LC4M32B2_Init+0x12>
	...

9000629c <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
9000629c:	4a10      	ldr	r2, [pc, #64]	; (900062e0 <BSP_I2C4_DeInit+0x44>)
{
9000629e:	b508      	push	{r3, lr}
  I2c4InitCounter--;
900062a0:	6813      	ldr	r3, [r2, #0]
900062a2:	3b01      	subs	r3, #1
900062a4:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
900062a6:	b10b      	cbz	r3, 900062ac <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
900062a8:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
900062aa:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
900062ac:	f44f 5180 	mov.w	r1, #4096	; 0x1000
900062b0:	480c      	ldr	r0, [pc, #48]	; (900062e4 <BSP_I2C4_DeInit+0x48>)
900062b2:	f001 f9f9 	bl	900076a8 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
900062b6:	480b      	ldr	r0, [pc, #44]	; (900062e4 <BSP_I2C4_DeInit+0x48>)
900062b8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
900062bc:	f001 f9f4 	bl	900076a8 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
900062c0:	4a09      	ldr	r2, [pc, #36]	; (900062e8 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900062c2:	480a      	ldr	r0, [pc, #40]	; (900062ec <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
900062c4:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
900062c8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900062cc:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900062d0:	f001 fc33 	bl	90007b3a <HAL_I2C_DeInit>
900062d4:	2800      	cmp	r0, #0
900062d6:	d0e7      	beq.n	900062a8 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
900062d8:	f06f 0007 	mvn.w	r0, #7
  return ret;
900062dc:	e7e5      	b.n	900062aa <BSP_I2C4_DeInit+0xe>
900062de:	bf00      	nop
900062e0:	24001250 	.word	0x24001250
900062e4:	58020c00 	.word	0x58020c00
900062e8:	58024400 	.word	0x58024400
900062ec:	24013018 	.word	0x24013018

900062f0 <MX_I2C4_Init>:
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
900062f0:	2300      	movs	r3, #0
900062f2:	2201      	movs	r2, #1
{
900062f4:	b510      	push	{r4, lr}
  hI2c->Init.Timing           = timing;
900062f6:	6041      	str	r1, [r0, #4]
{
900062f8:	4604      	mov	r4, r0
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
900062fa:	6203      	str	r3, [r0, #32]
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
900062fc:	e9c0 3202 	strd	r3, r2, [r0, #8]
  hI2c->Init.OwnAddress2      = 0;
90006300:	e9c0 3304 	strd	r3, r3, [r0, #16]
  hI2c->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
90006304:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90006308:	f001 fbc5 	bl	90007a96 <HAL_I2C_Init>
9000630c:	4601      	mov	r1, r0
9000630e:	b108      	cbz	r0, 90006314 <MX_I2C4_Init+0x24>
    status = HAL_ERROR;
90006310:	2001      	movs	r0, #1
}
90006312:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90006314:	4620      	mov	r0, r4
90006316:	f001 fda0 	bl	90007e5a <HAL_I2CEx_ConfigAnalogFilter>
9000631a:	4601      	mov	r1, r0
9000631c:	2800      	cmp	r0, #0
9000631e:	d1f7      	bne.n	90006310 <MX_I2C4_Init+0x20>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90006320:	4620      	mov	r0, r4
90006322:	f001 fdc0 	bl	90007ea6 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
90006326:	3800      	subs	r0, #0
90006328:	bf18      	it	ne
9000632a:	2001      	movne	r0, #1
9000632c:	e7f1      	b.n	90006312 <MX_I2C4_Init+0x22>
	...

90006330 <BSP_I2C4_Init>:
  hbus_i2c4.Instance = BUS_I2C4;
90006330:	4ba5      	ldr	r3, [pc, #660]	; (900065c8 <BSP_I2C4_Init+0x298>)
90006332:	48a6      	ldr	r0, [pc, #664]	; (900065cc <BSP_I2C4_Init+0x29c>)
{
90006334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  hbus_i2c4.Instance = BUS_I2C4;
90006338:	6003      	str	r3, [r0, #0]
{
9000633a:	b093      	sub	sp, #76	; 0x4c
  if (I2c4InitCounter == 0U)
9000633c:	4ba4      	ldr	r3, [pc, #656]	; (900065d0 <BSP_I2C4_Init+0x2a0>)
9000633e:	681a      	ldr	r2, [r3, #0]
90006340:	9200      	str	r2, [sp, #0]
90006342:	2a00      	cmp	r2, #0
90006344:	f040 80d0 	bne.w	900064e8 <BSP_I2C4_Init+0x1b8>
    I2c4InitCounter++;
90006348:	2201      	movs	r2, #1
9000634a:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
9000634c:	f001 fd80 	bl	90007e50 <HAL_I2C_GetState>
90006350:	2800      	cmp	r0, #0
90006352:	f040 80c9 	bne.w	900064e8 <BSP_I2C4_Init+0x1b8>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006356:	4d9f      	ldr	r5, [pc, #636]	; (900065d4 <BSP_I2C4_Init+0x2a4>)
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
90006358:	f04f 0812 	mov.w	r8, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
9000635c:	2702      	movs	r7, #2
9000635e:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006360:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006364:	a90d      	add	r1, sp, #52	; 0x34
90006366:	489c      	ldr	r0, [pc, #624]	; (900065d8 <BSP_I2C4_Init+0x2a8>)
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006368:	f043 0308 	orr.w	r3, r3, #8
9000636c:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90006370:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90006374:	f003 0308 	and.w	r3, r3, #8
90006378:	930a      	str	r3, [sp, #40]	; 0x28
9000637a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000637c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90006380:	f043 0308 	orr.w	r3, r3, #8
90006384:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90006388:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
9000638c:	f003 0308 	and.w	r3, r3, #8
90006390:	930b      	str	r3, [sp, #44]	; 0x2c
90006392:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
90006394:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90006398:	e9cd 380d 	strd	r3, r8, [sp, #52]	; 0x34
  gpio_init_structure.Pull      = GPIO_NOPULL;
9000639c:	9b00      	ldr	r3, [sp, #0]
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
9000639e:	e9cd 7610 	strd	r7, r6, [sp, #64]	; 0x40
  gpio_init_structure.Pull      = GPIO_NOPULL;
900063a2:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900063a4:	f001 f89a 	bl	900074dc <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900063a8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900063ac:	a90d      	add	r1, sp, #52	; 0x34
900063ae:	488a      	ldr	r0, [pc, #552]	; (900065d8 <BSP_I2C4_Init+0x2a8>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
900063b0:	9611      	str	r6, [sp, #68]	; 0x44
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
900063b2:	e9cd 380d 	strd	r3, r8, [sp, #52]	; 0x34
  gpio_init_structure.Pull      = GPIO_NOPULL;
900063b6:	9b00      	ldr	r3, [sp, #0]
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_HIGH;
900063b8:	e9cd 370f 	strd	r3, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900063bc:	f001 f88e 	bl	900074dc <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
900063c0:	f8d5 30f4 	ldr.w	r3, [r5, #244]	; 0xf4
900063c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900063c8:	f8c5 30f4 	str.w	r3, [r5, #244]	; 0xf4
900063cc:	f8d5 30f4 	ldr.w	r3, [r5, #244]	; 0xf4
900063d0:	f003 0380 	and.w	r3, r3, #128	; 0x80
900063d4:	930c      	str	r3, [sp, #48]	; 0x30
900063d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  BUS_I2C4_FORCE_RESET();
900063d8:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
900063dc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900063e0:	f8c5 309c 	str.w	r3, [r5, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
900063e4:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
900063e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900063ec:	f8c5 309c 	str.w	r3, [r5, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900063f0:	f002 fc5e 	bl	90008cb0 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
900063f4:	2800      	cmp	r0, #0
900063f6:	d071      	beq.n	900064dc <BSP_I2C4_Init+0x1ac>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900063f8:	4b78      	ldr	r3, [pc, #480]	; (900065dc <BSP_I2C4_Init+0x2ac>)
  uint32_t prev_presc = I2C_PRESC_MAX;
900063fa:	f04f 0e10 	mov.w	lr, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900063fe:	f8df 91e4 	ldr.w	r9, [pc, #484]	; 900065e4 <BSP_I2C4_Init+0x2b4>
90006402:	f04f 0a14 	mov.w	sl, #20
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006406:	eb03 0350 	add.w	r3, r3, r0, lsr #1
9000640a:	fbb3 f0f0 	udiv	r0, r3, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
9000640e:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006412:	f640 13f6 	movw	r3, #2550	; 0x9f6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006416:	4601      	mov	r1, r0
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90006418:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
9000641c:	eba3 0380 	sub.w	r3, r3, r0, lsl #2
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90006420:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
90006424:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90006428:	32e2      	adds	r2, #226	; 0xe2
  if (tsdadel_min <= 0)
9000642a:	9302      	str	r3, [sp, #8]
9000642c:	4b6c      	ldr	r3, [pc, #432]	; (900065e0 <BSP_I2C4_Init+0x2b0>)
9000642e:	ea22 7be2 	bic.w	fp, r2, r2, asr #31
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006432:	9a00      	ldr	r2, [sp, #0]
90006434:	681b      	ldr	r3, [r3, #0]
90006436:	4690      	mov	r8, r2
{
90006438:	468c      	mov	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
9000643a:	2600      	movs	r6, #0
      if (tscldel >= (uint32_t)tscldel_min)
9000643c:	f240 3479 	movw	r4, #889	; 0x379
90006440:	9601      	str	r6, [sp, #4]
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90006442:	3601      	adds	r6, #1
      if (tscldel >= (uint32_t)tscldel_min)
90006444:	45a4      	cmp	ip, r4
90006446:	d95a      	bls.n	900064fe <BSP_I2C4_Init+0x1ce>
90006448:	2500      	movs	r5, #0
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
9000644a:	462f      	mov	r7, r5
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
9000644c:	45ab      	cmp	fp, r5
9000644e:	d852      	bhi.n	900064f6 <BSP_I2C4_Init+0x1c6>
90006450:	9c02      	ldr	r4, [sp, #8]
90006452:	42ac      	cmp	r4, r5
90006454:	d34f      	bcc.n	900064f6 <BSP_I2C4_Init+0x1c6>
            if(presc != prev_presc)
90006456:	4596      	cmp	lr, r2
90006458:	d04d      	beq.n	900064f6 <BSP_I2C4_Init+0x1c6>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000645a:	fb0a f803 	mul.w	r8, sl, r3
              I2c_valid_timing_nbr ++;
9000645e:	3301      	adds	r3, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006460:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006462:	eb09 0e08 	add.w	lr, r9, r8
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006466:	2b7f      	cmp	r3, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006468:	f849 2008 	str.w	r2, [r9, r8]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000646c:	e9ce 4701 	strd	r4, r7, [lr, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006470:	d93e      	bls.n	900064f0 <BSP_I2C4_Init+0x1c0>
90006472:	4a5b      	ldr	r2, [pc, #364]	; (900065e0 <BSP_I2C4_Init+0x2b0>)
90006474:	6013      	str	r3, [r2, #0]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006476:	4b5a      	ldr	r3, [pc, #360]	; (900065e0 <BSP_I2C4_Init+0x2b0>)
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006478:	ea4f 0b40 	mov.w	fp, r0, lsl #1
9000647c:	4a59      	ldr	r2, [pc, #356]	; (900065e4 <BSP_I2C4_Init+0x2b4>)
9000647e:	2600      	movs	r6, #0
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006480:	681b      	ldr	r3, [r3, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006482:	f04f 38ff 	mov.w	r8, #4294967295
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006486:	9306      	str	r3, [sp, #24]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006488:	f242 7310 	movw	r3, #10000	; 0x2710
9000648c:	9303      	str	r3, [sp, #12]
9000648e:	f10b 0332 	add.w	r3, fp, #50	; 0x32
90006492:	9309      	str	r3, [sp, #36]	; 0x24
90006494:	f5ab 5311 	sub.w	r3, fp, #9280	; 0x2440
90006498:	3b0a      	subs	r3, #10
9000649a:	9302      	str	r3, [sp, #8]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000649c:	9b06      	ldr	r3, [sp, #24]
9000649e:	429e      	cmp	r6, r3
900064a0:	d138      	bne.n	90006514 <BSP_I2C4_Init+0x1e4>
        if (idx < I2C_VALID_TIMING_NBR)
900064a2:	f1b8 0f7f 	cmp.w	r8, #127	; 0x7f
900064a6:	d819      	bhi.n	900064dc <BSP_I2C4_Init+0x1ac>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900064a8:	2314      	movs	r3, #20
900064aa:	fb03 f808 	mul.w	r8, r3, r8
900064ae:	4b4d      	ldr	r3, [pc, #308]	; (900065e4 <BSP_I2C4_Init+0x2b4>)
900064b0:	eb03 0208 	add.w	r2, r3, r8
900064b4:	f853 3008 	ldr.w	r3, [r3, r8]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
900064b8:	7c14      	ldrb	r4, [r2, #16]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900064ba:	ea44 7403 	orr.w	r4, r4, r3, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900064be:	6853      	ldr	r3, [r2, #4]
900064c0:	051b      	lsls	r3, r3, #20
900064c2:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900064c6:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900064c8:	6893      	ldr	r3, [r2, #8]
900064ca:	041b      	lsls	r3, r3, #16
900064cc:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900064d0:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900064d2:	68d3      	ldr	r3, [r2, #12]
900064d4:	021b      	lsls	r3, r3, #8
900064d6:	b29b      	uxth	r3, r3
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900064d8:	4323      	orrs	r3, r4
900064da:	9300      	str	r3, [sp, #0]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900064dc:	9900      	ldr	r1, [sp, #0]
900064de:	483b      	ldr	r0, [pc, #236]	; (900065cc <BSP_I2C4_Init+0x29c>)
900064e0:	f7ff ff06 	bl	900062f0 <MX_I2C4_Init>
900064e4:	2800      	cmp	r0, #0
900064e6:	d16b      	bne.n	900065c0 <BSP_I2C4_Init+0x290>
  int32_t ret = BSP_ERROR_NONE;
900064e8:	2000      	movs	r0, #0
}
900064ea:	b013      	add	sp, #76	; 0x4c
900064ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900064f0:	4696      	mov	lr, r2
900064f2:	f04f 0801 	mov.w	r8, #1
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900064f6:	3701      	adds	r7, #1
900064f8:	440d      	add	r5, r1
900064fa:	2f10      	cmp	r7, #16
900064fc:	d1a6      	bne.n	9000644c <BSP_I2C4_Init+0x11c>
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900064fe:	2e10      	cmp	r6, #16
90006500:	448c      	add	ip, r1
90006502:	d19b      	bne.n	9000643c <BSP_I2C4_Init+0x10c>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90006504:	3201      	adds	r2, #1
90006506:	4401      	add	r1, r0
90006508:	2a10      	cmp	r2, #16
9000650a:	d195      	bne.n	90006438 <BSP_I2C4_Init+0x108>
9000650c:	f1b8 0f00 	cmp.w	r8, #0
90006510:	d1af      	bne.n	90006472 <BSP_I2C4_Init+0x142>
90006512:	e7b0      	b.n	90006476 <BSP_I2C4_Init+0x146>
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90006514:	6813      	ldr	r3, [r2, #0]
90006516:	f06f 0401 	mvn.w	r4, #1
9000651a:	9909      	ldr	r1, [sp, #36]	; 0x24
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
9000651c:	2700      	movs	r7, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000651e:	fb03 0300 	mla	r3, r3, r0, r0
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90006522:	4419      	add	r1, r3
90006524:	9104      	str	r1, [sp, #16]
90006526:	eb03 010b 	add.w	r1, r3, fp
9000652a:	4361      	muls	r1, r4
9000652c:	9c02      	ldr	r4, [sp, #8]
9000652e:	9101      	str	r1, [sp, #4]
90006530:	441c      	add	r4, r3
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90006532:	9904      	ldr	r1, [sp, #16]
90006534:	9408      	str	r4, [sp, #32]
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006536:	f241 245c 	movw	r4, #4700	; 0x125c
9000653a:	9707      	str	r7, [sp, #28]
9000653c:	f1a1 0532 	sub.w	r5, r1, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006540:	3701      	adds	r7, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006542:	42a1      	cmp	r1, r4
90006544:	d931      	bls.n	900065aa <BSP_I2C4_Init+0x27a>
90006546:	ebb0 0f95 	cmp.w	r0, r5, lsr #2
9000654a:	d22e      	bcs.n	900065aa <BSP_I2C4_Init+0x27a>
9000654c:	9c01      	ldr	r4, [sp, #4]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000654e:	f04f 0c00 	mov.w	ip, #0
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006552:	f8dd e010 	ldr.w	lr, [sp, #16]
90006556:	f504 5910 	add.w	r9, r4, #9216	; 0x2400
9000655a:	9c08      	ldr	r4, [sp, #32]
9000655c:	f109 0918 	add.w	r9, r9, #24
90006560:	1865      	adds	r5, r4, r1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006562:	f205 6a83 	addw	sl, r5, #1667	; 0x683
90006566:	f241 0447 	movw	r4, #4167	; 0x1047
9000656a:	f8cd c014 	str.w	ip, [sp, #20]
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000656e:	f10c 0c01 	add.w	ip, ip, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006572:	45a2      	cmp	sl, r4
90006574:	d812      	bhi.n	9000659c <BSP_I2C4_Init+0x26c>
90006576:	f5be 6f7a 	cmp.w	lr, #4000	; 0xfa0
9000657a:	d30f      	bcc.n	9000659c <BSP_I2C4_Init+0x26c>
9000657c:	4570      	cmp	r0, lr
9000657e:	d20d      	bcs.n	9000659c <BSP_I2C4_Init+0x26c>
              error = -error;
90006580:	ea35 0a25 	bics.w	sl, r5, r5, asr #32
90006584:	bf28      	it	cs
90006586:	46ca      	movcs	sl, r9
            if ((uint32_t)error < prev_error)
90006588:	9c03      	ldr	r4, [sp, #12]
9000658a:	4554      	cmp	r4, sl
9000658c:	d906      	bls.n	9000659c <BSP_I2C4_Init+0x26c>
              I2c_valid_timing[count].scll = scll;
9000658e:	9c07      	ldr	r4, [sp, #28]
              I2c_valid_timing[count].sclh = sclh;
90006590:	46b0      	mov	r8, r6
90006592:	f8cd a00c 	str.w	sl, [sp, #12]
              I2c_valid_timing[count].scll = scll;
90006596:	6114      	str	r4, [r2, #16]
              I2c_valid_timing[count].sclh = sclh;
90006598:	9c05      	ldr	r4, [sp, #20]
9000659a:	60d4      	str	r4, [r2, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000659c:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
900065a0:	eba9 0903 	sub.w	r9, r9, r3
900065a4:	441d      	add	r5, r3
900065a6:	449e      	add	lr, r3
900065a8:	d1db      	bne.n	90006562 <BSP_I2C4_Init+0x232>
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900065aa:	9c01      	ldr	r4, [sp, #4]
900065ac:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
900065b0:	4419      	add	r1, r3
900065b2:	eba4 0403 	sub.w	r4, r4, r3
900065b6:	9401      	str	r4, [sp, #4]
900065b8:	d1bd      	bne.n	90006536 <BSP_I2C4_Init+0x206>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900065ba:	3601      	adds	r6, #1
900065bc:	3214      	adds	r2, #20
900065be:	e76d      	b.n	9000649c <BSP_I2C4_Init+0x16c>
          ret = BSP_ERROR_BUS_FAILURE;
900065c0:	f06f 0007 	mvn.w	r0, #7
  return ret;
900065c4:	e791      	b.n	900064ea <BSP_I2C4_Init+0x1ba>
900065c6:	bf00      	nop
900065c8:	58001c00 	.word	0x58001c00
900065cc:	24013018 	.word	0x24013018
900065d0:	24001250 	.word	0x24001250
900065d4:	58024400 	.word	0x58024400
900065d8:	58020c00 	.word	0x58020c00
900065dc:	3b9aca00 	.word	0x3b9aca00
900065e0:	24001c54 	.word	0x24001c54
900065e4:	24001254 	.word	0x24001254

900065e8 <BSP_I2C4_WriteReg>:
{
900065e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900065ea:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
900065ee:	9200      	str	r2, [sp, #0]
900065f0:	460a      	mov	r2, r1
900065f2:	4601      	mov	r1, r0
900065f4:	4808      	ldr	r0, [pc, #32]	; (90006618 <BSP_I2C4_WriteReg+0x30>)
900065f6:	e9cd 3401 	strd	r3, r4, [sp, #4]
900065fa:	2301      	movs	r3, #1
900065fc:	f001 fab6 	bl	90007b6c <HAL_I2C_Mem_Write>
90006600:	b140      	cbz	r0, 90006614 <BSP_I2C4_WriteReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90006602:	4805      	ldr	r0, [pc, #20]	; (90006618 <BSP_I2C4_WriteReg+0x30>)
90006604:	f001 fc27 	bl	90007e56 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90006608:	2804      	cmp	r0, #4
9000660a:	bf0c      	ite	eq
9000660c:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90006610:	f06f 0003 	mvnne.w	r0, #3
}
90006614:	b004      	add	sp, #16
90006616:	bd10      	pop	{r4, pc}
90006618:	24013018 	.word	0x24013018

9000661c <BSP_I2C4_ReadReg>:
{
9000661c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000661e:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
90006622:	9200      	str	r2, [sp, #0]
90006624:	460a      	mov	r2, r1
90006626:	4601      	mov	r1, r0
90006628:	4808      	ldr	r0, [pc, #32]	; (9000664c <BSP_I2C4_ReadReg+0x30>)
9000662a:	e9cd 3401 	strd	r3, r4, [sp, #4]
9000662e:	2301      	movs	r3, #1
90006630:	f001 fb52 	bl	90007cd8 <HAL_I2C_Mem_Read>
90006634:	b140      	cbz	r0, 90006648 <BSP_I2C4_ReadReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90006636:	4805      	ldr	r0, [pc, #20]	; (9000664c <BSP_I2C4_ReadReg+0x30>)
90006638:	f001 fc0d 	bl	90007e56 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
9000663c:	2804      	cmp	r0, #4
9000663e:	bf0c      	ite	eq
90006640:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90006644:	f06f 0003 	mvnne.w	r0, #3
}
90006648:	b004      	add	sp, #16
9000664a:	bd10      	pop	{r4, pc}
9000664c:	24013018 	.word	0x24013018

90006650 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90006650:	f000 ba94 	b.w	90006b7c <HAL_GetTick>

90006654 <BSP_SDRAM_DeInit>:
  * @brief  DeInitializes the SDRAM device.
  * @param  Instance  SDRAM Instance
  * @retval BSP status
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
90006654:	b510      	push	{r4, lr}
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90006656:	4604      	mov	r4, r0
90006658:	b960      	cbnz	r0, 90006674 <BSP_SDRAM_DeInit+0x20>
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
9000665a:	4808      	ldr	r0, [pc, #32]	; (9000667c <BSP_SDRAM_DeInit+0x28>)
9000665c:	f003 fa94 	bl	90009b88 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90006660:	207a      	movs	r0, #122	; 0x7a
90006662:	f000 fafb 	bl	90006c5c <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006666:	4806      	ldr	r0, [pc, #24]	; (90006680 <BSP_SDRAM_DeInit+0x2c>)
90006668:	4b06      	ldr	r3, [pc, #24]	; (90006684 <BSP_SDRAM_DeInit+0x30>)
9000666a:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
9000666c:	f001 fe4b 	bl	90008306 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90006670:	4620      	mov	r0, r4
}
90006672:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90006674:	f06f 0001 	mvn.w	r0, #1
  return ret;
90006678:	e7fb      	b.n	90006672 <BSP_SDRAM_DeInit+0x1e>
9000667a:	bf00      	nop
9000667c:	24013064 	.word	0x24013064
90006680:	24001cc4 	.word	0x24001cc4
90006684:	52000040 	.word	0x52000040

90006688 <MX_SDRAM_BANK2_Init>:
{
90006688:	b530      	push	{r4, r5, lr}
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000668a:	4d15      	ldr	r5, [pc, #84]	; (900066e0 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
9000668c:	f04f 0c01 	mov.w	ip, #1
  hsdram->Instance = FMC_SDRAM_DEVICE;
90006690:	4c14      	ldr	r4, [pc, #80]	; (900066e4 <MX_SDRAM_BANK2_Init+0x5c>)
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90006692:	f44f 6e00 	mov.w	lr, #2048	; 0x800
{
90006696:	b089      	sub	sp, #36	; 0x24
  sdram_timing.ExitSelfRefreshDelay = 7;
90006698:	2302      	movs	r3, #2
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000669a:	602c      	str	r4, [r5, #0]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
9000669c:	2400      	movs	r4, #0
  sdram_timing.RCDDelay             = 2;
9000669e:	9307      	str	r3, [sp, #28]
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
900066a0:	6284      	str	r4, [r0, #40]	; 0x28
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
900066a2:	e9c0 1203 	strd	r1, r2, [r0, #12]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900066a6:	2240      	movs	r2, #64	; 0x40
  sdram_timing.SelfRefreshTime      = 4;
900066a8:	2104      	movs	r1, #4
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
900066aa:	e9c0 c401 	strd	ip, r4, [r0, #4]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900066ae:	616a      	str	r2, [r5, #20]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900066b0:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900066b4:	e9c0 2406 	strd	r2, r4, [r0, #24]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900066b8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
900066bc:	e9c0 e208 	strd	lr, r2, [r0, #32]
  sdram_timing.ExitSelfRefreshDelay = 7;
900066c0:	2207      	movs	r2, #7
  sdram_timing.RowCycleDelay        = 7;
900066c2:	e9cd 1203 	strd	r1, r2, [sp, #12]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900066c6:	4469      	add	r1, sp
  sdram_timing.ExitSelfRefreshDelay = 7;
900066c8:	e9cd 3201 	strd	r3, r2, [sp, #4]
  sdram_timing.RPDelay              = 2;
900066cc:	e9cd 3305 	strd	r3, r3, [sp, #20]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900066d0:	f003 fa32 	bl	90009b38 <HAL_SDRAM_Init>
}
900066d4:	1b00      	subs	r0, r0, r4
900066d6:	bf18      	it	ne
900066d8:	2001      	movne	r0, #1
900066da:	b009      	add	sp, #36	; 0x24
900066dc:	bd30      	pop	{r4, r5, pc}
900066de:	bf00      	nop
900066e0:	24013064 	.word	0x24013064
900066e4:	52004140 	.word	0x52004140

900066e8 <BSP_SDRAM_Init>:
{
900066e8:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(Instance >=SDRAM_INSTANCES_NBR)
900066ea:	4605      	mov	r5, r0
{
900066ec:	b08d      	sub	sp, #52	; 0x34
  if(Instance >=SDRAM_INSTANCES_NBR)
900066ee:	2800      	cmp	r0, #0
900066f0:	f040 80cb 	bne.w	9000688a <BSP_SDRAM_Init+0x1a2>
  __HAL_RCC_FMC_CLK_ENABLE();
900066f4:	4b68      	ldr	r3, [pc, #416]	; (90006898 <BSP_SDRAM_Init+0x1b0>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900066f6:	2703      	movs	r7, #3
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900066f8:	a907      	add	r1, sp, #28
900066fa:	4868      	ldr	r0, [pc, #416]	; (9000689c <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900066fc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006700:	4c67      	ldr	r4, [pc, #412]	; (900068a0 <BSP_SDRAM_Init+0x1b8>)
  __HAL_RCC_FMC_CLK_ENABLE();
90006702:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90006706:	4e67      	ldr	r6, [pc, #412]	; (900068a4 <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
90006708:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
9000670c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90006710:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
90006714:	9200      	str	r2, [sp, #0]
90006716:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
90006718:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000671c:	f042 0201 	orr.w	r2, r2, #1
90006720:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90006724:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90006728:	f002 0201 	and.w	r2, r2, #1
9000672c:	9201      	str	r2, [sp, #4]
9000672e:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90006730:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90006734:	f042 0208 	orr.w	r2, r2, #8
90006738:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000673c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90006740:	f002 0208 	and.w	r2, r2, #8
90006744:	9202      	str	r2, [sp, #8]
90006746:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90006748:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000674c:	f042 0210 	orr.w	r2, r2, #16
90006750:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90006754:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90006758:	f002 0210 	and.w	r2, r2, #16
9000675c:	9203      	str	r2, [sp, #12]
9000675e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90006760:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90006764:	f042 0220 	orr.w	r2, r2, #32
90006768:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000676c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90006770:	f002 0220 	and.w	r2, r2, #32
90006774:	9204      	str	r2, [sp, #16]
90006776:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90006778:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000677c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90006780:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90006784:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90006788:	f002 0240 	and.w	r2, r2, #64	; 0x40
9000678c:	9205      	str	r2, [sp, #20]
9000678e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006790:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90006794:	f042 0280 	orr.w	r2, r2, #128	; 0x80
90006798:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  gpio_init_structure.Pull      = GPIO_PULLUP;
9000679c:	2202      	movs	r2, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000679e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
900067a2:	f003 0380 	and.w	r3, r3, #128	; 0x80
900067a6:	9306      	str	r3, [sp, #24]
900067a8:	9b06      	ldr	r3, [sp, #24]
  gpio_init_structure.Pull      = GPIO_PULLUP;
900067aa:	2301      	movs	r3, #1
900067ac:	e9cd 2308 	strd	r2, r3, [sp, #32]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900067b0:	230c      	movs	r3, #12
900067b2:	e9cd 730a 	strd	r7, r3, [sp, #40]	; 0x28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900067b6:	f24c 7303 	movw	r3, #50947	; 0xc703
900067ba:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900067bc:	f000 fe8e 	bl	900074dc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900067c0:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900067c4:	a907      	add	r1, sp, #28
900067c6:	4838      	ldr	r0, [pc, #224]	; (900068a8 <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900067c8:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900067ca:	f000 fe87 	bl	900074dc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900067ce:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900067d2:	a907      	add	r1, sp, #28
900067d4:	4835      	ldr	r0, [pc, #212]	; (900068ac <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900067d6:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900067d8:	f000 fe80 	bl	900074dc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900067dc:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900067e0:	a907      	add	r1, sp, #28
900067e2:	4833      	ldr	r0, [pc, #204]	; (900068b0 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900067e4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900067e6:	f000 fe79 	bl	900074dc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900067ea:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900067ec:	a907      	add	r1, sp, #28
900067ee:	4831      	ldr	r0, [pc, #196]	; (900068b4 <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900067f0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900067f2:	f000 fe73 	bl	900074dc <HAL_GPIO_Init>
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
900067f6:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
900067fa:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
900067fe:	f240 2002 	movw	r0, #514	; 0x202
90006802:	f640 0208 	movw	r2, #2056	; 0x808
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90006806:	6334      	str	r4, [r6, #48]	; 0x30
90006808:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000680a:	e9c4 1301 	strd	r1, r3, [r4, #4]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
9000680e:	e9c4 0205 	strd	r0, r2, [r4, #20]
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90006812:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90006814:	2220      	movs	r2, #32
  HAL_MDMA_DeInit(&mdma_handle);
90006816:	4620      	mov	r0, r4
  mdma_handle.Init.BufferTransferLength = 128;
90006818:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000681a:	e9c4 2307 	strd	r2, r3, [r4, #28]
  mdma_handle.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
9000681e:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90006822:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006826:	4b24      	ldr	r3, [pc, #144]	; (900068b8 <BSP_SDRAM_Init+0x1d0>)
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90006828:	6262      	str	r2, [r4, #36]	; 0x24
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000682a:	6023      	str	r3, [r4, #0]
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
9000682c:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DestBlockAddressOffset = 0;
90006830:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90006834:	f001 fd67 	bl	90008306 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90006838:	4620      	mov	r0, r4
9000683a:	f001 fcf5 	bl	90008228 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
9000683e:	462a      	mov	r2, r5
90006840:	210f      	movs	r1, #15
90006842:	207a      	movs	r0, #122	; 0x7a
90006844:	f000 f9ca 	bl	90006bdc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90006848:	207a      	movs	r0, #122	; 0x7a
9000684a:	f000 f9f9 	bl	90006c40 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
9000684e:	2210      	movs	r2, #16
90006850:	2104      	movs	r1, #4
90006852:	4630      	mov	r0, r6
90006854:	f7ff ff18 	bl	90006688 <MX_SDRAM_BANK2_Init>
90006858:	b9d0      	cbnz	r0, 90006890 <BSP_SDRAM_Init+0x1a8>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000685a:	4918      	ldr	r1, [pc, #96]	; (900068bc <BSP_SDRAM_Init+0x1d4>)
9000685c:	2308      	movs	r3, #8
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
9000685e:	e9c1 3700 	strd	r3, r7, [r1]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90006862:	f240 6303 	movw	r3, #1539	; 0x603
      pRegMode.BurstType       = MT48LC4M32B2_BURST_TYPE_SEQUENTIAL;
90006866:	6108      	str	r0, [r1, #16]
      pRegMode.BurstLength     = MT48LC4M32B2_BURST_LENGTH_1;
90006868:	e9c1 3002 	strd	r3, r0, [r1, #8]
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
9000686c:	2330      	movs	r3, #48	; 0x30
      pRegMode.OperationMode   = MT48LC4M32B2_OPERATING_MODE_STANDARD;
9000686e:	e9c1 3005 	strd	r3, r0, [r1, #20]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90006872:	f44f 7300 	mov.w	r3, #512	; 0x200
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90006876:	4630      	mov	r0, r6
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90006878:	61cb      	str	r3, [r1, #28]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000687a:	f7ff fce1 	bl	90006240 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
9000687e:	2800      	cmp	r0, #0
90006880:	bf18      	it	ne
90006882:	f06f 0004 	mvnne.w	r0, #4
}
90006886:	b00d      	add	sp, #52	; 0x34
90006888:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000688a:	f06f 0001 	mvn.w	r0, #1
9000688e:	e7fa      	b.n	90006886 <BSP_SDRAM_Init+0x19e>
      ret = BSP_ERROR_NO_INIT;
90006890:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006894:	e7f7      	b.n	90006886 <BSP_SDRAM_Init+0x19e>
90006896:	bf00      	nop
90006898:	58024400 	.word	0x58024400
9000689c:	58020c00 	.word	0x58020c00
900068a0:	24001c58 	.word	0x24001c58
900068a4:	24013064 	.word	0x24013064
900068a8:	58021000 	.word	0x58021000
900068ac:	58021400 	.word	0x58021400
900068b0:	58021800 	.word	0x58021800
900068b4:	58021c00 	.word	0x58021c00
900068b8:	52000040 	.word	0x52000040
900068bc:	24001d30 	.word	0x24001d30

900068c0 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
900068c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900068c4:	460d      	mov	r5, r1
900068c6:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
900068c8:	2800      	cmp	r0, #0
900068ca:	d169      	bne.n	900069a0 <BSP_TS_Init+0xe0>
900068cc:	680b      	ldr	r3, [r1, #0]
900068ce:	1e5a      	subs	r2, r3, #1
900068d0:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
900068d4:	d264      	bcs.n	900069a0 <BSP_TS_Init+0xe0>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900068d6:	684a      	ldr	r2, [r1, #4]
  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
900068d8:	1e51      	subs	r1, r2, #1
900068da:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
900068de:	d25f      	bcs.n	900069a0 <BSP_TS_Init+0xe0>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
900068e0:	4293      	cmp	r3, r2
900068e2:	bf28      	it	cs
900068e4:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900068e6:	68ea      	ldr	r2, [r5, #12]
900068e8:	429a      	cmp	r2, r3
900068ea:	d859      	bhi.n	900069a0 <BSP_TS_Init+0xe0>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
900068ec:	2370      	movs	r3, #112	; 0x70
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900068ee:	4c2e      	ldr	r4, [pc, #184]	; (900069a8 <BSP_TS_Init+0xe8>)
  uint32_t ft5336_id       = 0;
900068f0:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900068f2:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
900068f4:	f8ad 3010 	strh.w	r3, [sp, #16]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900068f8:	4620      	mov	r0, r4
  IOCtx.Init        = BSP_I2C4_Init;
900068fa:	4b2c      	ldr	r3, [pc, #176]	; (900069ac <BSP_TS_Init+0xec>)
900068fc:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
900068fe:	4b2c      	ldr	r3, [pc, #176]	; (900069b0 <BSP_TS_Init+0xf0>)
90006900:	9303      	str	r3, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90006902:	4b2c      	ldr	r3, [pc, #176]	; (900069b4 <BSP_TS_Init+0xf4>)
90006904:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90006906:	4b2c      	ldr	r3, [pc, #176]	; (900069b8 <BSP_TS_Init+0xf8>)
90006908:	9305      	str	r3, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
9000690a:	4b2c      	ldr	r3, [pc, #176]	; (900069bc <BSP_TS_Init+0xfc>)
9000690c:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000690e:	f7ff fb9d 	bl	9000604c <FT5336_RegisterBusIO>
90006912:	b128      	cbz	r0, 90006920 <BSP_TS_Init+0x60>
      ret = BSP_ERROR_NO_INIT;
90006914:	f04f 36ff 	mov.w	r6, #4294967295
}
90006918:	4630      	mov	r0, r6
9000691a:	b008      	add	sp, #32
9000691c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90006920:	a901      	add	r1, sp, #4
90006922:	4620      	mov	r0, r4
90006924:	f7ff faf8 	bl	90005f18 <FT5336_ReadID>
90006928:	2800      	cmp	r0, #0
9000692a:	d1f3      	bne.n	90006914 <BSP_TS_Init+0x54>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
9000692c:	9b01      	ldr	r3, [sp, #4]
9000692e:	2b51      	cmp	r3, #81	; 0x51
90006930:	d1f0      	bne.n	90006914 <BSP_TS_Init+0x54>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006932:	4b23      	ldr	r3, [pc, #140]	; (900069c0 <BSP_TS_Init+0x100>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90006934:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90006936:	4f23      	ldr	r7, [pc, #140]	; (900069c4 <BSP_TS_Init+0x104>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006938:	f8df 8090 	ldr.w	r8, [pc, #144]	; 900069cc <BSP_TS_Init+0x10c>
    Ts_CompObj[Instance] = &FT5336Obj;
9000693c:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000693e:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90006942:	681b      	ldr	r3, [r3, #0]
90006944:	4798      	blx	r3
90006946:	4606      	mov	r6, r0
90006948:	2800      	cmp	r0, #0
9000694a:	d1e3      	bne.n	90006914 <BSP_TS_Init+0x54>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000694c:	682b      	ldr	r3, [r5, #0]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000694e:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006950:	4c1d      	ldr	r4, [pc, #116]	; (900069c8 <BSP_TS_Init+0x108>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006952:	6838      	ldr	r0, [r7, #0]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006954:	6023      	str	r3, [r4, #0]
      Ts_Ctx[Instance].Height            = TS_Init->Height;
90006956:	686b      	ldr	r3, [r5, #4]
90006958:	6063      	str	r3, [r4, #4]
      Ts_Ctx[Instance].Orientation       = TS_Init->Orientation;
9000695a:	68ab      	ldr	r3, [r5, #8]
9000695c:	60a3      	str	r3, [r4, #8]
      Ts_Ctx[Instance].Accuracy          = TS_Init->Accuracy;
9000695e:	68eb      	ldr	r3, [r5, #12]
90006960:	60e3      	str	r3, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006962:	f8d8 3000 	ldr.w	r3, [r8]
90006966:	69db      	ldr	r3, [r3, #28]
90006968:	4798      	blx	r3
9000696a:	2800      	cmp	r0, #0
9000696c:	db15      	blt.n	9000699a <BSP_TS_Init+0xda>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
9000696e:	9b03      	ldr	r3, [sp, #12]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006970:	682a      	ldr	r2, [r5, #0]
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90006972:	6123      	str	r3, [r4, #16]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
90006974:	9b04      	ldr	r3, [sp, #16]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006976:	6869      	ldr	r1, [r5, #4]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
90006978:	6163      	str	r3, [r4, #20]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000697a:	68eb      	ldr	r3, [r5, #12]
9000697c:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000697e:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006980:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006982:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006984:	61a2      	str	r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006986:	62e3      	str	r3, [r4, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006988:	61e2      	str	r2, [r4, #28]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000698a:	6323      	str	r3, [r4, #48]	; 0x30
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000698c:	6222      	str	r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000698e:	6363      	str	r3, [r4, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006990:	6262      	str	r2, [r4, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006992:	63a3      	str	r3, [r4, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006994:	62a2      	str	r2, [r4, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006996:	63e3      	str	r3, [r4, #60]	; 0x3c
        for(i = 0; i < TS_TOUCH_NBR; i++)
90006998:	e7be      	b.n	90006918 <BSP_TS_Init+0x58>
        ret = BSP_ERROR_COMPONENT_FAILURE;
9000699a:	f06f 0604 	mvn.w	r6, #4
9000699e:	e7bb      	b.n	90006918 <BSP_TS_Init+0x58>
    ret = BSP_ERROR_WRONG_PARAM;
900069a0:	f06f 0601 	mvn.w	r6, #1
  return ret;
900069a4:	e7b8      	b.n	90006918 <BSP_TS_Init+0x58>
900069a6:	bf00      	nop
900069a8:	24001d50 	.word	0x24001d50
900069ac:	90006331 	.word	0x90006331
900069b0:	9000629d 	.word	0x9000629d
900069b4:	9000661d 	.word	0x9000661d
900069b8:	900065e9 	.word	0x900065e9
900069bc:	90006651 	.word	0x90006651
900069c0:	2400000c 	.word	0x2400000c
900069c4:	24001d78 	.word	0x24001d78
900069c8:	24001d7c 	.word	0x24001d7c
900069cc:	24001dbc 	.word	0x24001dbc

900069d0 <BSP_TS_GetState>:
{
900069d0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
900069d4:	460c      	mov	r4, r1
  if(Instance >= TS_INSTANCES_NBR)
900069d6:	2800      	cmp	r0, #0
900069d8:	d151      	bne.n	90006a7e <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900069da:	4b2a      	ldr	r3, [pc, #168]	; (90006a84 <BSP_TS_GetState+0xb4>)
900069dc:	a901      	add	r1, sp, #4
900069de:	4a2a      	ldr	r2, [pc, #168]	; (90006a88 <BSP_TS_GetState+0xb8>)
900069e0:	681b      	ldr	r3, [r3, #0]
900069e2:	6810      	ldr	r0, [r2, #0]
900069e4:	691b      	ldr	r3, [r3, #16]
900069e6:	4798      	blx	r3
900069e8:	2800      	cmp	r0, #0
900069ea:	db45      	blt.n	90006a78 <BSP_TS_GetState+0xa8>
    else if(state.TouchDetected != 0U)
900069ec:	4b27      	ldr	r3, [pc, #156]	; (90006a8c <BSP_TS_GetState+0xbc>)
900069ee:	9801      	ldr	r0, [sp, #4]
900069f0:	f8d3 c018 	ldr.w	ip, [r3, #24]
900069f4:	6adf      	ldr	r7, [r3, #44]	; 0x2c
900069f6:	2800      	cmp	r0, #0
900069f8:	d03a      	beq.n	90006a70 <BSP_TS_GetState+0xa0>
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900069fa:	689e      	ldr	r6, [r3, #8]
900069fc:	f8d3 8010 	ldr.w	r8, [r3, #16]
90006a00:	0732      	lsls	r2, r6, #28
      y_oriented = state.TouchY;
90006a02:	e9dd e102 	ldrd	lr, r1, [sp, #8]
        x_oriented = state.TouchY;
90006a06:	bf4b      	itete	mi
90006a08:	460d      	movmi	r5, r1
      x_oriented = state.TouchX;
90006a0a:	4675      	movpl	r5, lr
        y_oriented = state.TouchX;
90006a0c:	4672      	movmi	r2, lr
      y_oriented = state.TouchY;
90006a0e:	460a      	movpl	r2, r1
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90006a10:	f016 0f02 	tst.w	r6, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90006a14:	bf1c      	itt	ne
90006a16:	f108 35ff 	addne.w	r5, r8, #4294967295
90006a1a:	eba5 050e 	subne.w	r5, r5, lr
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90006a1e:	f8d3 e014 	ldr.w	lr, [r3, #20]
90006a22:	0776      	lsls	r6, r6, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006a24:	681e      	ldr	r6, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90006a26:	bf48      	it	mi
90006a28:	ebae 0201 	submi.w	r2, lr, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006a2c:	4375      	muls	r5, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006a2e:	6859      	ldr	r1, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90006a30:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006a32:	434a      	muls	r2, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90006a34:	68d8      	ldr	r0, [r3, #12]
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006a36:	fbb5 f5f8 	udiv	r5, r5, r8
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006a3a:	fbb2 f2fe 	udiv	r2, r2, lr
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90006a3e:	4565      	cmp	r5, ip
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006a40:	6065      	str	r5, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006a42:	60a2      	str	r2, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90006a44:	bf8c      	ite	hi
90006a46:	eba5 060c 	subhi.w	r6, r5, ip
90006a4a:	ebac 0605 	subls.w	r6, ip, r5
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90006a4e:	42ba      	cmp	r2, r7
90006a50:	bf8c      	ite	hi
90006a52:	1bd1      	subhi	r1, r2, r7
90006a54:	1ab9      	subls	r1, r7, r2
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90006a56:	42b0      	cmp	r0, r6
90006a58:	d301      	bcc.n	90006a5e <BSP_TS_GetState+0x8e>
90006a5a:	4288      	cmp	r0, r1
90006a5c:	d205      	bcs.n	90006a6a <BSP_TS_GetState+0x9a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90006a5e:	619d      	str	r5, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90006a60:	62da      	str	r2, [r3, #44]	; 0x2c
  int32_t ret = BSP_ERROR_NONE;
90006a62:	2000      	movs	r0, #0
}
90006a64:	b004      	add	sp, #16
90006a66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90006a6a:	e9c4 c701 	strd	ip, r7, [r4, #4]
90006a6e:	e7f8      	b.n	90006a62 <BSP_TS_GetState+0x92>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
90006a70:	e9c4 0c00 	strd	r0, ip, [r4]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90006a74:	60a7      	str	r7, [r4, #8]
90006a76:	e7f5      	b.n	90006a64 <BSP_TS_GetState+0x94>
      ret = BSP_ERROR_COMPONENT_FAILURE;
90006a78:	f06f 0004 	mvn.w	r0, #4
90006a7c:	e7f2      	b.n	90006a64 <BSP_TS_GetState+0x94>
    ret = BSP_ERROR_WRONG_PARAM;
90006a7e:	f06f 0001 	mvn.w	r0, #1
return ret;
90006a82:	e7ef      	b.n	90006a64 <BSP_TS_GetState+0x94>
90006a84:	24001dbc 	.word	0x24001dbc
90006a88:	24001d78 	.word	0x24001d78
90006a8c:	24001d7c 	.word	0x24001d7c

90006a90 <SystemInit>:
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90006a90:	4917      	ldr	r1, [pc, #92]	; (90006af0 <SystemInit+0x60>)

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90006a92:	4818      	ldr	r0, [pc, #96]	; (90006af4 <SystemInit+0x64>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90006a94:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
90006a98:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
{
90006a9c:	b510      	push	{r4, lr}
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90006a9e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
90006aa2:	4b15      	ldr	r3, [pc, #84]	; (90006af8 <SystemInit+0x68>)
90006aa4:	681a      	ldr	r2, [r3, #0]
90006aa6:	f042 0201 	orr.w	r2, r2, #1
90006aaa:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
90006aac:	2200      	movs	r2, #0
90006aae:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90006ab0:	681c      	ldr	r4, [r3, #0]
90006ab2:	4020      	ands	r0, r4
90006ab4:	6018      	str	r0, [r3, #0]

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
90006ab6:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
90006ab8:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
90006aba:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x00000000;
90006abc:	629a      	str	r2, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x00000000;
90006abe:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x00000000;
90006ac0:	631a      	str	r2, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
90006ac2:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x00000000;
90006ac4:	639a      	str	r2, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
90006ac6:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x00000000;
90006ac8:	641a      	str	r2, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
90006aca:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
90006acc:	6818      	ldr	r0, [r3, #0]
90006ace:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
90006ad2:	6018      	str	r0, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
90006ad4:	661a      	str	r2, [r3, #96]	; 0x60
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90006ad6:	4b09      	ldr	r3, [pc, #36]	; (90006afc <SystemInit+0x6c>)
90006ad8:	681b      	ldr	r3, [r3, #0]
90006ada:	0c1b      	lsrs	r3, r3, #16
90006adc:	041b      	lsls	r3, r3, #16
90006ade:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
90006ae2:	d202      	bcs.n	90006aea <SystemInit+0x5a>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90006ae4:	4b06      	ldr	r3, [pc, #24]	; (90006b00 <SystemInit+0x70>)
90006ae6:	2201      	movs	r2, #1
90006ae8:	601a      	str	r2, [r3, #0]

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90006aea:	4b06      	ldr	r3, [pc, #24]	; (90006b04 <SystemInit+0x74>)
90006aec:	608b      	str	r3, [r1, #8]
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90006aee:	bd10      	pop	{r4, pc}
90006af0:	e000ed00 	.word	0xe000ed00
90006af4:	eaf6ed7f 	.word	0xeaf6ed7f
90006af8:	58024400 	.word	0x58024400
90006afc:	5c001000 	.word	0x5c001000
90006b00:	51008108 	.word	0x51008108
90006b04:	90000000 	.word	0x90000000

90006b08 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90006b08:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90006b0a:	2003      	movs	r0, #3
90006b0c:	f000 f854 	bl	90006bb8 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006b10:	f001 fed4 	bl	900088bc <HAL_RCC_GetSysClockFreq>
90006b14:	490f      	ldr	r1, [pc, #60]	; (90006b54 <HAL_Init+0x4c>)
90006b16:	4a10      	ldr	r2, [pc, #64]	; (90006b58 <HAL_Init+0x50>)
90006b18:	698b      	ldr	r3, [r1, #24]
90006b1a:	f3c3 2303 	ubfx	r3, r3, #8, #4
90006b1e:	5cd3      	ldrb	r3, [r2, r3]
90006b20:	f003 031f 	and.w	r3, r3, #31
90006b24:	40d8      	lsrs	r0, r3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006b26:	698b      	ldr	r3, [r1, #24]
90006b28:	f003 030f 	and.w	r3, r3, #15
90006b2c:	5cd3      	ldrb	r3, [r2, r3]
90006b2e:	4a0b      	ldr	r2, [pc, #44]	; (90006b5c <HAL_Init+0x54>)
90006b30:	f003 031f 	and.w	r3, r3, #31
90006b34:	fa20 f303 	lsr.w	r3, r0, r3
90006b38:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90006b3a:	4b09      	ldr	r3, [pc, #36]	; (90006b60 <HAL_Init+0x58>)
90006b3c:	6018      	str	r0, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90006b3e:	2000      	movs	r0, #0
90006b40:	f7fc fe78 	bl	90003834 <HAL_InitTick>
90006b44:	4604      	mov	r4, r0
90006b46:	b918      	cbnz	r0, 90006b50 <HAL_Init+0x48>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
90006b48:	f7fc fc78 	bl	9000343c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
90006b4c:	4620      	mov	r0, r4
90006b4e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90006b50:	2401      	movs	r4, #1
90006b52:	e7fb      	b.n	90006b4c <HAL_Init+0x44>
90006b54:	58024400 	.word	0x58024400
90006b58:	90021924 	.word	0x90021924
90006b5c:	24000040 	.word	0x24000040
90006b60:	2400003c 	.word	0x2400003c

90006b64 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90006b64:	4a03      	ldr	r2, [pc, #12]	; (90006b74 <HAL_IncTick+0x10>)
90006b66:	4b04      	ldr	r3, [pc, #16]	; (90006b78 <HAL_IncTick+0x14>)
90006b68:	6811      	ldr	r1, [r2, #0]
90006b6a:	781b      	ldrb	r3, [r3, #0]
90006b6c:	440b      	add	r3, r1
90006b6e:	6013      	str	r3, [r2, #0]
}
90006b70:	4770      	bx	lr
90006b72:	bf00      	nop
90006b74:	24013098 	.word	0x24013098
90006b78:	24000044 	.word	0x24000044

90006b7c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90006b7c:	4b01      	ldr	r3, [pc, #4]	; (90006b84 <HAL_GetTick+0x8>)
90006b7e:	6818      	ldr	r0, [r3, #0]
}
90006b80:	4770      	bx	lr
90006b82:	bf00      	nop
90006b84:	24013098 	.word	0x24013098

90006b88 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
90006b88:	b538      	push	{r3, r4, r5, lr}
90006b8a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
90006b8c:	f7ff fff6 	bl	90006b7c <HAL_GetTick>
90006b90:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
90006b92:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
90006b94:	bf1e      	ittt	ne
90006b96:	4b04      	ldrne	r3, [pc, #16]	; (90006ba8 <HAL_Delay+0x20>)
90006b98:	781b      	ldrbne	r3, [r3, #0]
90006b9a:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
90006b9c:	f7ff ffee 	bl	90006b7c <HAL_GetTick>
90006ba0:	1b43      	subs	r3, r0, r5
90006ba2:	42a3      	cmp	r3, r4
90006ba4:	d3fa      	bcc.n	90006b9c <HAL_Delay+0x14>
  {
  }
}
90006ba6:	bd38      	pop	{r3, r4, r5, pc}
90006ba8:	24000044 	.word	0x24000044

90006bac <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90006bac:	4b01      	ldr	r3, [pc, #4]	; (90006bb4 <HAL_GetREVID+0x8>)
90006bae:	6818      	ldr	r0, [r3, #0]
}
90006bb0:	0c00      	lsrs	r0, r0, #16
90006bb2:	4770      	bx	lr
90006bb4:	5c001000 	.word	0x5c001000

90006bb8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90006bb8:	4907      	ldr	r1, [pc, #28]	; (90006bd8 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90006bba:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90006bbc:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90006bbe:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90006bc2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
90006bc6:	0412      	lsls	r2, r2, #16
90006bc8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90006bca:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
90006bcc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
90006bd0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
90006bd4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90006bd6:	4770      	bx	lr
90006bd8:	e000ed00 	.word	0xe000ed00

90006bdc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90006bdc:	4b16      	ldr	r3, [pc, #88]	; (90006c38 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90006bde:	b530      	push	{r4, r5, lr}
90006be0:	68dc      	ldr	r4, [r3, #12]
90006be2:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90006be6:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006bea:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90006bec:	2d04      	cmp	r5, #4
90006bee:	bf28      	it	cs
90006bf0:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006bf2:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90006bf4:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006bf8:	bf8c      	ite	hi
90006bfa:	3c03      	subhi	r4, #3
90006bfc:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90006bfe:	fa03 f505 	lsl.w	r5, r3, r5
  if ((int32_t)(IRQn) >= 0)
90006c02:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90006c04:	fa03 f304 	lsl.w	r3, r3, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90006c08:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90006c0c:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90006c10:	fa01 f104 	lsl.w	r1, r1, r4
90006c14:	ea41 0302 	orr.w	r3, r1, r2
90006c18:	ea4f 1303 	mov.w	r3, r3, lsl #4
90006c1c:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90006c1e:	db06      	blt.n	90006c2e <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90006c20:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
90006c24:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
90006c28:	f880 3300 	strb.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90006c2c:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90006c2e:	f000 000f 	and.w	r0, r0, #15
90006c32:	4a02      	ldr	r2, [pc, #8]	; (90006c3c <HAL_NVIC_SetPriority+0x60>)
90006c34:	5413      	strb	r3, [r2, r0]
90006c36:	e7f9      	b.n	90006c2c <HAL_NVIC_SetPriority+0x50>
90006c38:	e000ed00 	.word	0xe000ed00
90006c3c:	e000ed14 	.word	0xe000ed14

90006c40 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90006c40:	2800      	cmp	r0, #0
90006c42:	db08      	blt.n	90006c56 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90006c44:	2301      	movs	r3, #1
90006c46:	0942      	lsrs	r2, r0, #5
90006c48:	f000 001f 	and.w	r0, r0, #31
90006c4c:	fa03 f000 	lsl.w	r0, r3, r0
90006c50:	4b01      	ldr	r3, [pc, #4]	; (90006c58 <HAL_NVIC_EnableIRQ+0x18>)
90006c52:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90006c56:	4770      	bx	lr
90006c58:	e000e100 	.word	0xe000e100

90006c5c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90006c5c:	2800      	cmp	r0, #0
90006c5e:	db0d      	blt.n	90006c7c <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90006c60:	0943      	lsrs	r3, r0, #5
90006c62:	2201      	movs	r2, #1
90006c64:	f000 001f 	and.w	r0, r0, #31
90006c68:	3320      	adds	r3, #32
90006c6a:	fa02 f000 	lsl.w	r0, r2, r0
90006c6e:	4a04      	ldr	r2, [pc, #16]	; (90006c80 <HAL_NVIC_DisableIRQ+0x24>)
90006c70:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90006c74:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90006c78:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90006c7c:	4770      	bx	lr
90006c7e:	bf00      	nop
90006c80:	e000e100 	.word	0xe000e100

90006c84 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90006c84:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90006c88:	4a04      	ldr	r2, [pc, #16]	; (90006c9c <HAL_MPU_Disable+0x18>)
90006c8a:	6a53      	ldr	r3, [r2, #36]	; 0x24
90006c8c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
90006c90:	6253      	str	r3, [r2, #36]	; 0x24

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90006c92:	2200      	movs	r2, #0
90006c94:	4b02      	ldr	r3, [pc, #8]	; (90006ca0 <HAL_MPU_Disable+0x1c>)
90006c96:	605a      	str	r2, [r3, #4]
}
90006c98:	4770      	bx	lr
90006c9a:	bf00      	nop
90006c9c:	e000ed00 	.word	0xe000ed00
90006ca0:	e000ed90 	.word	0xe000ed90

90006ca4 <HAL_MPU_Enable>:
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90006ca4:	4a06      	ldr	r2, [pc, #24]	; (90006cc0 <HAL_MPU_Enable+0x1c>)
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90006ca6:	f040 0001 	orr.w	r0, r0, #1
90006caa:	4b06      	ldr	r3, [pc, #24]	; (90006cc4 <HAL_MPU_Enable+0x20>)
90006cac:	6058      	str	r0, [r3, #4]
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90006cae:	6a53      	ldr	r3, [r2, #36]	; 0x24
90006cb0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90006cb4:	6253      	str	r3, [r2, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90006cb6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90006cba:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90006cbe:	4770      	bx	lr
90006cc0:	e000ed00 	.word	0xe000ed00
90006cc4:	e000ed90 	.word	0xe000ed90

90006cc8 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90006cc8:	7843      	ldrb	r3, [r0, #1]
90006cca:	4a12      	ldr	r2, [pc, #72]	; (90006d14 <HAL_MPU_ConfigRegion+0x4c>)
{
90006ccc:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
90006cce:	6093      	str	r3, [r2, #8]

  if ((MPU_Init->Enable) != 0UL)
90006cd0:	7801      	ldrb	r1, [r0, #0]
90006cd2:	b1d9      	cbz	r1, 90006d0c <HAL_MPU_ConfigRegion+0x44>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
90006cd4:	6843      	ldr	r3, [r0, #4]
90006cd6:	60d3      	str	r3, [r2, #12]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90006cd8:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90006cda:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90006cdc:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90006cde:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006ce2:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90006ce4:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006ce6:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90006cea:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006cec:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90006cf0:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006cf2:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90006cf6:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006cf8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90006cfc:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006cfe:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90006d02:	7a01      	ldrb	r1, [r0, #8]
90006d04:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90006d08:	6113      	str	r3, [r2, #16]
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
90006d0a:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
90006d0c:	60d1      	str	r1, [r2, #12]
    MPU->RASR = 0x00;
90006d0e:	6111      	str	r1, [r2, #16]
}
90006d10:	e7fb      	b.n	90006d0a <HAL_MPU_ConfigRegion+0x42>
90006d12:	bf00      	nop
90006d14:	e000ed90 	.word	0xe000ed90

90006d18 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
90006d18:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90006d1a:	4604      	mov	r4, r0
90006d1c:	b908      	cbnz	r0, 90006d22 <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
90006d1e:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
90006d20:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
90006d22:	7f43      	ldrb	r3, [r0, #29]
90006d24:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90006d28:	b913      	cbnz	r3, 90006d30 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
90006d2a:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90006d2c:	f7fc fb9e 	bl	9000346c <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
90006d30:	2302      	movs	r3, #2
90006d32:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90006d34:	7923      	ldrb	r3, [r4, #4]
90006d36:	b9e3      	cbnz	r3, 90006d72 <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90006d38:	6823      	ldr	r3, [r4, #0]
90006d3a:	4a13      	ldr	r2, [pc, #76]	; (90006d88 <HAL_CRC_Init+0x70>)
90006d3c:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90006d3e:	689a      	ldr	r2, [r3, #8]
90006d40:	f022 0218 	bic.w	r2, r2, #24
90006d44:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90006d46:	7962      	ldrb	r2, [r4, #5]
90006d48:	6823      	ldr	r3, [r4, #0]
90006d4a:	b9d2      	cbnz	r2, 90006d82 <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90006d4c:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90006d50:	611a      	str	r2, [r3, #16]
  return HAL_OK;
90006d52:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90006d54:	689a      	ldr	r2, [r3, #8]
90006d56:	6961      	ldr	r1, [r4, #20]
90006d58:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90006d5c:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90006d5e:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90006d60:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90006d62:	689a      	ldr	r2, [r3, #8]
90006d64:	f022 0280 	bic.w	r2, r2, #128	; 0x80
90006d68:	430a      	orrs	r2, r1
90006d6a:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90006d6c:	2301      	movs	r3, #1
90006d6e:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
90006d70:	e7d6      	b.n	90006d20 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90006d72:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90006d76:	4620      	mov	r0, r4
90006d78:	f000 f808 	bl	90006d8c <HAL_CRCEx_Polynomial_Set>
90006d7c:	2800      	cmp	r0, #0
90006d7e:	d0e2      	beq.n	90006d46 <HAL_CRC_Init+0x2e>
90006d80:	e7cd      	b.n	90006d1e <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90006d82:	6922      	ldr	r2, [r4, #16]
90006d84:	e7e4      	b.n	90006d50 <HAL_CRC_Init+0x38>
90006d86:	bf00      	nop
90006d88:	04c11db7 	.word	0x04c11db7

90006d8c <HAL_CRCEx_Polynomial_Set>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
90006d8c:	231f      	movs	r3, #31
{
90006d8e:	b510      	push	{r4, lr}
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90006d90:	3b01      	subs	r3, #1
90006d92:	d306      	bcc.n	90006da2 <HAL_CRCEx_Polynomial_Set+0x16>
90006d94:	fa21 f403 	lsr.w	r4, r1, r3
90006d98:	07e4      	lsls	r4, r4, #31
90006d9a:	d5f9      	bpl.n	90006d90 <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
90006d9c:	2a08      	cmp	r2, #8
90006d9e:	d014      	beq.n	90006dca <HAL_CRCEx_Polynomial_Set+0x3e>
90006da0:	d802      	bhi.n	90006da8 <HAL_CRCEx_Polynomial_Set+0x1c>
90006da2:	b13a      	cbz	r2, 90006db4 <HAL_CRCEx_Polynomial_Set+0x28>
      }
      break;
    case CRC_POLYLENGTH_8B:
      if (msb >= HAL_CRC_LENGTH_8B)
      {
        status =   HAL_ERROR;
90006da4:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
90006da6:	e00d      	b.n	90006dc4 <HAL_CRCEx_Polynomial_Set+0x38>
  switch (PolyLength)
90006da8:	2a10      	cmp	r2, #16
90006daa:	d00c      	beq.n	90006dc6 <HAL_CRCEx_Polynomial_Set+0x3a>
90006dac:	2a18      	cmp	r2, #24
90006dae:	d1f9      	bne.n	90006da4 <HAL_CRCEx_Polynomial_Set+0x18>
      if (msb >= HAL_CRC_LENGTH_7B)
90006db0:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
90006db2:	d8f7      	bhi.n	90006da4 <HAL_CRCEx_Polynomial_Set+0x18>
    WRITE_REG(hcrc->Instance->POL, Pol);
90006db4:	6800      	ldr	r0, [r0, #0]
90006db6:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90006db8:	6883      	ldr	r3, [r0, #8]
90006dba:	f023 0318 	bic.w	r3, r3, #24
90006dbe:	431a      	orrs	r2, r3
90006dc0:	6082      	str	r2, [r0, #8]
90006dc2:	2000      	movs	r0, #0
}
90006dc4:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
90006dc6:	2b07      	cmp	r3, #7
90006dc8:	e7f3      	b.n	90006db2 <HAL_CRCEx_Polynomial_Set+0x26>
      if (msb >= HAL_CRC_LENGTH_16B)
90006dca:	2b0f      	cmp	r3, #15
90006dcc:	e7f1      	b.n	90006db2 <HAL_CRCEx_Polynomial_Set+0x26>
	...

90006dd0 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
90006dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90006dd2:	4605      	mov	r5, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;
  const __IO uint32_t *enableRegister;

  uint32_t tickstart = HAL_GetTick();
90006dd4:	f7ff fed2 	bl	90006b7c <HAL_GetTick>
90006dd8:	4607      	mov	r7, r0

 /* Check the DMA peripheral handle */
  if(hdma == NULL)
90006dda:	b145      	cbz	r5, 90006dee <HAL_DMA_Abort+0x1e>
  {
    return HAL_ERROR;
  }

  /* Check the DMA peripheral state */
  if(hdma->State != HAL_DMA_STATE_BUSY)
90006ddc:	f895 3035 	ldrb.w	r3, [r5, #53]	; 0x35
90006de0:	2b02      	cmp	r3, #2
90006de2:	d006      	beq.n	90006df2 <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
90006de4:	2380      	movs	r3, #128	; 0x80
90006de6:	656b      	str	r3, [r5, #84]	; 0x54

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
90006de8:	2300      	movs	r3, #0
90006dea:	f885 3034 	strb.w	r3, [r5, #52]	; 0x34
    return HAL_ERROR;
90006dee:	2001      	movs	r0, #1
90006df0:	e157      	b.n	900070a2 <HAL_DMA_Abort+0x2d2>
    return HAL_ERROR;
  }
  else
  {
    /* Disable all the transfer interrupts */
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90006df2:	682c      	ldr	r4, [r5, #0]
90006df4:	4ec7      	ldr	r6, [pc, #796]	; (90007114 <HAL_DMA_Abort+0x344>)
90006df6:	42b4      	cmp	r4, r6
90006df8:	d04a      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006dfa:	4bc7      	ldr	r3, [pc, #796]	; (90007118 <HAL_DMA_Abort+0x348>)
90006dfc:	429c      	cmp	r4, r3
90006dfe:	d047      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e00:	3318      	adds	r3, #24
90006e02:	429c      	cmp	r4, r3
90006e04:	d044      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e06:	3318      	adds	r3, #24
90006e08:	429c      	cmp	r4, r3
90006e0a:	d041      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e0c:	3318      	adds	r3, #24
90006e0e:	429c      	cmp	r4, r3
90006e10:	d03e      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e12:	3318      	adds	r3, #24
90006e14:	429c      	cmp	r4, r3
90006e16:	d03b      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e18:	3318      	adds	r3, #24
90006e1a:	429c      	cmp	r4, r3
90006e1c:	d038      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e1e:	3318      	adds	r3, #24
90006e20:	429c      	cmp	r4, r3
90006e22:	d035      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e24:	f503 7356 	add.w	r3, r3, #856	; 0x358
90006e28:	429c      	cmp	r4, r3
90006e2a:	d031      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e2c:	3318      	adds	r3, #24
90006e2e:	429c      	cmp	r4, r3
90006e30:	d02e      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e32:	3318      	adds	r3, #24
90006e34:	429c      	cmp	r4, r3
90006e36:	d02b      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e38:	3318      	adds	r3, #24
90006e3a:	429c      	cmp	r4, r3
90006e3c:	d028      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e3e:	3318      	adds	r3, #24
90006e40:	429c      	cmp	r4, r3
90006e42:	d025      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e44:	3318      	adds	r3, #24
90006e46:	429c      	cmp	r4, r3
90006e48:	d022      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e4a:	3318      	adds	r3, #24
90006e4c:	429c      	cmp	r4, r3
90006e4e:	d01f      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
90006e50:	3318      	adds	r3, #24
90006e52:	429c      	cmp	r4, r3
90006e54:	d01c      	beq.n	90006e90 <HAL_DMA_Abort+0xc0>
      enableRegister = (__IO uint32_t *)(&(((DMA_Stream_TypeDef   *)hdma->Instance)->CR));
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
90006e56:	6823      	ldr	r3, [r4, #0]
90006e58:	f023 030e 	bic.w	r3, r3, #14
90006e5c:	6023      	str	r3, [r4, #0]

      enableRegister = (__IO uint32_t *)(&(((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR));
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006e5e:	4baf      	ldr	r3, [pc, #700]	; (9000711c <HAL_DMA_Abort+0x34c>)
90006e60:	429c      	cmp	r4, r3
90006e62:	d01f      	beq.n	90006ea4 <HAL_DMA_Abort+0xd4>
90006e64:	3314      	adds	r3, #20
90006e66:	429c      	cmp	r4, r3
90006e68:	d01c      	beq.n	90006ea4 <HAL_DMA_Abort+0xd4>
90006e6a:	3314      	adds	r3, #20
90006e6c:	429c      	cmp	r4, r3
90006e6e:	d019      	beq.n	90006ea4 <HAL_DMA_Abort+0xd4>
90006e70:	3314      	adds	r3, #20
90006e72:	429c      	cmp	r4, r3
90006e74:	d016      	beq.n	90006ea4 <HAL_DMA_Abort+0xd4>
90006e76:	3314      	adds	r3, #20
90006e78:	429c      	cmp	r4, r3
90006e7a:	d013      	beq.n	90006ea4 <HAL_DMA_Abort+0xd4>
90006e7c:	3314      	adds	r3, #20
90006e7e:	429c      	cmp	r4, r3
90006e80:	d010      	beq.n	90006ea4 <HAL_DMA_Abort+0xd4>
90006e82:	3314      	adds	r3, #20
90006e84:	429c      	cmp	r4, r3
90006e86:	d00d      	beq.n	90006ea4 <HAL_DMA_Abort+0xd4>
90006e88:	3314      	adds	r3, #20
90006e8a:	429c      	cmp	r4, r3
90006e8c:	d112      	bne.n	90006eb4 <HAL_DMA_Abort+0xe4>
90006e8e:	e009      	b.n	90006ea4 <HAL_DMA_Abort+0xd4>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006e90:	6823      	ldr	r3, [r4, #0]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006e92:	42b4      	cmp	r4, r6
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006e94:	f023 031e 	bic.w	r3, r3, #30
90006e98:	6023      	str	r3, [r4, #0]
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006e9a:	6963      	ldr	r3, [r4, #20]
90006e9c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90006ea0:	6163      	str	r3, [r4, #20]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006ea2:	d178      	bne.n	90006f96 <HAL_DMA_Abort+0x1c6>
    {
      /* disable the DMAMUX sync overrun IT */
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006ea4:	6e2a      	ldr	r2, [r5, #96]	; 0x60
    }

    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
90006ea6:	42b4      	cmp	r4, r6
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006ea8:	6813      	ldr	r3, [r2, #0]
90006eaa:	f423 7380 	bic.w	r3, r3, #256	; 0x100
90006eae:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006eb0:	f040 80ad 	bne.w	9000700e <HAL_DMA_Abort+0x23e>
90006eb4:	6823      	ldr	r3, [r4, #0]
90006eb6:	f023 0301 	bic.w	r3, r3, #1
90006eba:	6023      	str	r3, [r4, #0]

    /* Check if the DMA Stream is effectively disabled */
    while(((*enableRegister) & DMA_SxCR_EN) != 0U)
90006ebc:	6823      	ldr	r3, [r4, #0]
90006ebe:	07db      	lsls	r3, r3, #31
90006ec0:	f100 80cf 	bmi.w	90007062 <HAL_DMA_Abort+0x292>
        return HAL_ERROR;
      }
    }

    /* Clear all interrupt flags at correct offset within the register */
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90006ec4:	682b      	ldr	r3, [r5, #0]
90006ec6:	6dea      	ldr	r2, [r5, #92]	; 0x5c
90006ec8:	42b3      	cmp	r3, r6
90006eca:	6da8      	ldr	r0, [r5, #88]	; 0x58
90006ecc:	f002 021f 	and.w	r2, r2, #31
90006ed0:	f000 80d6 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006ed4:	4990      	ldr	r1, [pc, #576]	; (90007118 <HAL_DMA_Abort+0x348>)
90006ed6:	428b      	cmp	r3, r1
90006ed8:	f000 80d2 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006edc:	3118      	adds	r1, #24
90006ede:	428b      	cmp	r3, r1
90006ee0:	f000 80ce 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006ee4:	3118      	adds	r1, #24
90006ee6:	428b      	cmp	r3, r1
90006ee8:	f000 80ca 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006eec:	3118      	adds	r1, #24
90006eee:	428b      	cmp	r3, r1
90006ef0:	f000 80c6 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006ef4:	3118      	adds	r1, #24
90006ef6:	428b      	cmp	r3, r1
90006ef8:	f000 80c2 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006efc:	3118      	adds	r1, #24
90006efe:	428b      	cmp	r3, r1
90006f00:	f000 80be 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006f04:	3118      	adds	r1, #24
90006f06:	428b      	cmp	r3, r1
90006f08:	f000 80ba 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006f0c:	f501 7156 	add.w	r1, r1, #856	; 0x358
90006f10:	428b      	cmp	r3, r1
90006f12:	f000 80b5 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006f16:	3118      	adds	r1, #24
90006f18:	428b      	cmp	r3, r1
90006f1a:	f000 80b1 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006f1e:	3118      	adds	r1, #24
90006f20:	428b      	cmp	r3, r1
90006f22:	f000 80ad 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006f26:	3118      	adds	r1, #24
90006f28:	428b      	cmp	r3, r1
90006f2a:	f000 80a9 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006f2e:	3118      	adds	r1, #24
90006f30:	428b      	cmp	r3, r1
90006f32:	f000 80a5 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006f36:	3118      	adds	r1, #24
90006f38:	428b      	cmp	r3, r1
90006f3a:	f000 80a1 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006f3e:	3118      	adds	r1, #24
90006f40:	428b      	cmp	r3, r1
90006f42:	f000 809d 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
90006f46:	3118      	adds	r1, #24
90006f48:	428b      	cmp	r3, r1
90006f4a:	f000 8099 	beq.w	90007080 <HAL_DMA_Abort+0x2b0>
      regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
    }
    else /* BDMA channel */
    {
      regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006f4e:	2101      	movs	r1, #1
90006f50:	fa01 f202 	lsl.w	r2, r1, r2
90006f54:	6042      	str	r2, [r0, #4]
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006f56:	4a71      	ldr	r2, [pc, #452]	; (9000711c <HAL_DMA_Abort+0x34c>)
90006f58:	4293      	cmp	r3, r2
90006f5a:	f000 8097 	beq.w	9000708c <HAL_DMA_Abort+0x2bc>
90006f5e:	3214      	adds	r2, #20
90006f60:	4293      	cmp	r3, r2
90006f62:	f000 8093 	beq.w	9000708c <HAL_DMA_Abort+0x2bc>
90006f66:	3214      	adds	r2, #20
90006f68:	4293      	cmp	r3, r2
90006f6a:	f000 808f 	beq.w	9000708c <HAL_DMA_Abort+0x2bc>
90006f6e:	3214      	adds	r2, #20
90006f70:	4293      	cmp	r3, r2
90006f72:	f000 808b 	beq.w	9000708c <HAL_DMA_Abort+0x2bc>
90006f76:	3214      	adds	r2, #20
90006f78:	4293      	cmp	r3, r2
90006f7a:	f000 8087 	beq.w	9000708c <HAL_DMA_Abort+0x2bc>
90006f7e:	3214      	adds	r2, #20
90006f80:	4293      	cmp	r3, r2
90006f82:	f000 8083 	beq.w	9000708c <HAL_DMA_Abort+0x2bc>
90006f86:	3214      	adds	r2, #20
90006f88:	4293      	cmp	r3, r2
90006f8a:	d07f      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
90006f8c:	3214      	adds	r2, #20
90006f8e:	4293      	cmp	r3, r2
90006f90:	f040 8081 	bne.w	90007096 <HAL_DMA_Abort+0x2c6>
90006f94:	e07a      	b.n	9000708c <HAL_DMA_Abort+0x2bc>
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006f96:	4b60      	ldr	r3, [pc, #384]	; (90007118 <HAL_DMA_Abort+0x348>)
90006f98:	429c      	cmp	r4, r3
90006f9a:	d083      	beq.n	90006ea4 <HAL_DMA_Abort+0xd4>
90006f9c:	3318      	adds	r3, #24
90006f9e:	429c      	cmp	r4, r3
90006fa0:	d080      	beq.n	90006ea4 <HAL_DMA_Abort+0xd4>
90006fa2:	3318      	adds	r3, #24
90006fa4:	429c      	cmp	r4, r3
90006fa6:	f43f af7d 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
90006faa:	3318      	adds	r3, #24
90006fac:	429c      	cmp	r4, r3
90006fae:	f43f af79 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
90006fb2:	3318      	adds	r3, #24
90006fb4:	429c      	cmp	r4, r3
90006fb6:	f43f af75 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
90006fba:	3318      	adds	r3, #24
90006fbc:	429c      	cmp	r4, r3
90006fbe:	f43f af71 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
90006fc2:	3318      	adds	r3, #24
90006fc4:	429c      	cmp	r4, r3
90006fc6:	f43f af6d 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
90006fca:	f503 7356 	add.w	r3, r3, #856	; 0x358
90006fce:	429c      	cmp	r4, r3
90006fd0:	f43f af68 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
90006fd4:	3318      	adds	r3, #24
90006fd6:	429c      	cmp	r4, r3
90006fd8:	f43f af64 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
90006fdc:	3318      	adds	r3, #24
90006fde:	429c      	cmp	r4, r3
90006fe0:	f43f af60 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
90006fe4:	3318      	adds	r3, #24
90006fe6:	429c      	cmp	r4, r3
90006fe8:	f43f af5c 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
90006fec:	3318      	adds	r3, #24
90006fee:	429c      	cmp	r4, r3
90006ff0:	f43f af58 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
90006ff4:	3318      	adds	r3, #24
90006ff6:	429c      	cmp	r4, r3
90006ff8:	f43f af54 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
90006ffc:	3318      	adds	r3, #24
90006ffe:	429c      	cmp	r4, r3
90007000:	f43f af50 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
90007004:	3318      	adds	r3, #24
90007006:	429c      	cmp	r4, r3
90007008:	f43f af4c 	beq.w	90006ea4 <HAL_DMA_Abort+0xd4>
9000700c:	e727      	b.n	90006e5e <HAL_DMA_Abort+0x8e>
    __HAL_DMA_DISABLE(hdma);
9000700e:	4b42      	ldr	r3, [pc, #264]	; (90007118 <HAL_DMA_Abort+0x348>)
90007010:	429c      	cmp	r4, r3
90007012:	f43f af4f 	beq.w	90006eb4 <HAL_DMA_Abort+0xe4>
90007016:	3318      	adds	r3, #24
90007018:	429c      	cmp	r4, r3
9000701a:	f43f af4b 	beq.w	90006eb4 <HAL_DMA_Abort+0xe4>
9000701e:	3318      	adds	r3, #24
90007020:	429c      	cmp	r4, r3
90007022:	f43f af47 	beq.w	90006eb4 <HAL_DMA_Abort+0xe4>
90007026:	3318      	adds	r3, #24
90007028:	429c      	cmp	r4, r3
9000702a:	f43f af43 	beq.w	90006eb4 <HAL_DMA_Abort+0xe4>
9000702e:	3318      	adds	r3, #24
90007030:	429c      	cmp	r4, r3
90007032:	f43f af3f 	beq.w	90006eb4 <HAL_DMA_Abort+0xe4>
90007036:	3318      	adds	r3, #24
90007038:	429c      	cmp	r4, r3
9000703a:	f43f af3b 	beq.w	90006eb4 <HAL_DMA_Abort+0xe4>
9000703e:	3318      	adds	r3, #24
90007040:	429c      	cmp	r4, r3
90007042:	f43f af37 	beq.w	90006eb4 <HAL_DMA_Abort+0xe4>
90007046:	f503 7356 	add.w	r3, r3, #856	; 0x358
9000704a:	429c      	cmp	r4, r3
9000704c:	f43f af32 	beq.w	90006eb4 <HAL_DMA_Abort+0xe4>
90007050:	3318      	adds	r3, #24
90007052:	429c      	cmp	r4, r3
90007054:	f43f af2e 	beq.w	90006eb4 <HAL_DMA_Abort+0xe4>
90007058:	3318      	adds	r3, #24
9000705a:	429c      	cmp	r4, r3
9000705c:	f43f af2a 	beq.w	90006eb4 <HAL_DMA_Abort+0xe4>
90007060:	e728      	b.n	90006eb4 <HAL_DMA_Abort+0xe4>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
90007062:	f7ff fd8b 	bl	90006b7c <HAL_GetTick>
90007066:	1bc0      	subs	r0, r0, r7
90007068:	2805      	cmp	r0, #5
9000706a:	f67f af27 	bls.w	90006ebc <HAL_DMA_Abort+0xec>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
9000706e:	2320      	movs	r3, #32
90007070:	656b      	str	r3, [r5, #84]	; 0x54
        __HAL_UNLOCK(hdma);
90007072:	2300      	movs	r3, #0
90007074:	f885 3034 	strb.w	r3, [r5, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_ERROR;
90007078:	2303      	movs	r3, #3
9000707a:	f885 3035 	strb.w	r3, [r5, #53]	; 0x35
        return HAL_ERROR;
9000707e:	e6b6      	b.n	90006dee <HAL_DMA_Abort+0x1e>
      regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
90007080:	213f      	movs	r1, #63	; 0x3f
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90007082:	42b3      	cmp	r3, r6
      regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
90007084:	fa01 f202 	lsl.w	r2, r1, r2
90007088:	6082      	str	r2, [r0, #8]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000708a:	d10b      	bne.n	900070a4 <HAL_DMA_Abort+0x2d4>
    {
      /* Clear the DMAMUX synchro overrun flag */
      hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
9000708c:	e9d5 3219 	ldrd	r3, r2, [r5, #100]	; 0x64
90007090:	605a      	str	r2, [r3, #4]

      if(hdma->DMAmuxRequestGen != 0U)
90007092:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
90007094:	bbab      	cbnz	r3, 90007102 <HAL_DMA_Abort+0x332>
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
      }
    }

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
90007096:	2000      	movs	r0, #0

    /* Change the DMA state */
    hdma->State = HAL_DMA_STATE_READY;
90007098:	2301      	movs	r3, #1
    __HAL_UNLOCK(hdma);
9000709a:	f885 0034 	strb.w	r0, [r5, #52]	; 0x34
    hdma->State = HAL_DMA_STATE_READY;
9000709e:	f885 3035 	strb.w	r3, [r5, #53]	; 0x35
  }

  return HAL_OK;
}
900070a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900070a4:	4a1c      	ldr	r2, [pc, #112]	; (90007118 <HAL_DMA_Abort+0x348>)
900070a6:	4293      	cmp	r3, r2
900070a8:	d0f0      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070aa:	3218      	adds	r2, #24
900070ac:	4293      	cmp	r3, r2
900070ae:	d0ed      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070b0:	3218      	adds	r2, #24
900070b2:	4293      	cmp	r3, r2
900070b4:	d0ea      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070b6:	3218      	adds	r2, #24
900070b8:	4293      	cmp	r3, r2
900070ba:	d0e7      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070bc:	3218      	adds	r2, #24
900070be:	4293      	cmp	r3, r2
900070c0:	d0e4      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070c2:	3218      	adds	r2, #24
900070c4:	4293      	cmp	r3, r2
900070c6:	d0e1      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070c8:	3218      	adds	r2, #24
900070ca:	4293      	cmp	r3, r2
900070cc:	d0de      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070ce:	f502 7256 	add.w	r2, r2, #856	; 0x358
900070d2:	4293      	cmp	r3, r2
900070d4:	d0da      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070d6:	3218      	adds	r2, #24
900070d8:	4293      	cmp	r3, r2
900070da:	d0d7      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070dc:	3218      	adds	r2, #24
900070de:	4293      	cmp	r3, r2
900070e0:	d0d4      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070e2:	3218      	adds	r2, #24
900070e4:	4293      	cmp	r3, r2
900070e6:	d0d1      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070e8:	3218      	adds	r2, #24
900070ea:	4293      	cmp	r3, r2
900070ec:	d0ce      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070ee:	3218      	adds	r2, #24
900070f0:	4293      	cmp	r3, r2
900070f2:	d0cb      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070f4:	3218      	adds	r2, #24
900070f6:	4293      	cmp	r3, r2
900070f8:	d0c8      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
900070fa:	3218      	adds	r2, #24
900070fc:	4293      	cmp	r3, r2
900070fe:	d0c5      	beq.n	9000708c <HAL_DMA_Abort+0x2bc>
90007100:	e729      	b.n	90006f56 <HAL_DMA_Abort+0x186>
        hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90007102:	681a      	ldr	r2, [r3, #0]
90007104:	f422 7280 	bic.w	r2, r2, #256	; 0x100
90007108:	601a      	str	r2, [r3, #0]
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
9000710a:	e9d5 321c 	ldrd	r3, r2, [r5, #112]	; 0x70
9000710e:	605a      	str	r2, [r3, #4]
90007110:	e7c1      	b.n	90007096 <HAL_DMA_Abort+0x2c6>
90007112:	bf00      	nop
90007114:	40020010 	.word	0x40020010
90007118:	40020028 	.word	0x40020028
9000711c:	58025408 	.word	0x58025408

90007120 <HAL_DMA_Abort_IT>:
  * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
90007120:	b510      	push	{r4, lr}
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
90007122:	b128      	cbz	r0, 90007130 <HAL_DMA_Abort_IT+0x10>
  {
    return HAL_ERROR;
  }

  if(hdma->State != HAL_DMA_STATE_BUSY)
90007124:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
90007128:	2b02      	cmp	r3, #2
9000712a:	d003      	beq.n	90007134 <HAL_DMA_Abort_IT+0x14>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
9000712c:	2380      	movs	r3, #128	; 0x80
9000712e:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
90007130:	2001      	movs	r0, #1
90007132:	e07f      	b.n	90007234 <HAL_DMA_Abort_IT+0x114>
    return HAL_ERROR;
  }
  else
  {
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90007134:	6803      	ldr	r3, [r0, #0]
90007136:	4a50      	ldr	r2, [pc, #320]	; (90007278 <HAL_DMA_Abort_IT+0x158>)
90007138:	4293      	cmp	r3, r2
9000713a:	d052      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
9000713c:	494f      	ldr	r1, [pc, #316]	; (9000727c <HAL_DMA_Abort_IT+0x15c>)
9000713e:	428b      	cmp	r3, r1
90007140:	d04f      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
90007142:	3118      	adds	r1, #24
90007144:	428b      	cmp	r3, r1
90007146:	d04c      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
90007148:	3118      	adds	r1, #24
9000714a:	428b      	cmp	r3, r1
9000714c:	d049      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
9000714e:	3118      	adds	r1, #24
90007150:	428b      	cmp	r3, r1
90007152:	d046      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
90007154:	3118      	adds	r1, #24
90007156:	428b      	cmp	r3, r1
90007158:	d043      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
9000715a:	3118      	adds	r1, #24
9000715c:	428b      	cmp	r3, r1
9000715e:	d040      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
90007160:	3118      	adds	r1, #24
90007162:	428b      	cmp	r3, r1
90007164:	d03d      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
90007166:	f501 7156 	add.w	r1, r1, #856	; 0x358
9000716a:	428b      	cmp	r3, r1
9000716c:	d039      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
9000716e:	3118      	adds	r1, #24
90007170:	428b      	cmp	r3, r1
90007172:	d036      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
90007174:	3118      	adds	r1, #24
90007176:	428b      	cmp	r3, r1
90007178:	d033      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
9000717a:	3118      	adds	r1, #24
9000717c:	428b      	cmp	r3, r1
9000717e:	d030      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
90007180:	3118      	adds	r1, #24
90007182:	428b      	cmp	r3, r1
90007184:	d02d      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
90007186:	3118      	adds	r1, #24
90007188:	428b      	cmp	r3, r1
9000718a:	d02a      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
9000718c:	3118      	adds	r1, #24
9000718e:	428b      	cmp	r3, r1
90007190:	d027      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
90007192:	3118      	adds	r1, #24
90007194:	428b      	cmp	r3, r1
90007196:	d024      	beq.n	900071e2 <HAL_DMA_Abort_IT+0xc2>
      __HAL_DMA_DISABLE(hdma);
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts  */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
90007198:	681a      	ldr	r2, [r3, #0]
9000719a:	f022 020e 	bic.w	r2, r2, #14
9000719e:	601a      	str	r2, [r3, #0]

      /* Disable the channel */
      __HAL_DMA_DISABLE(hdma);
900071a0:	681a      	ldr	r2, [r3, #0]
900071a2:	f022 0201 	bic.w	r2, r2, #1
900071a6:	601a      	str	r2, [r3, #0]

      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900071a8:	4a35      	ldr	r2, [pc, #212]	; (90007280 <HAL_DMA_Abort_IT+0x160>)
900071aa:	4293      	cmp	r3, r2
900071ac:	d143      	bne.n	90007236 <HAL_DMA_Abort_IT+0x116>
      {
        /* disable the DMAMUX sync overrun IT */
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
900071ae:	6e02      	ldr	r2, [r0, #96]	; 0x60
900071b0:	6813      	ldr	r3, [r2, #0]
900071b2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
900071b6:	6013      	str	r3, [r2, #0]

        /* Clear all flags */
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
900071b8:	e9d0 1316 	ldrd	r1, r3, [r0, #88]	; 0x58
900071bc:	f003 021f 	and.w	r2, r3, #31
900071c0:	2301      	movs	r3, #1
900071c2:	4093      	lsls	r3, r2
900071c4:	604b      	str	r3, [r1, #4]

        /* Clear the DMAMUX synchro overrun flag */
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
900071c6:	e9d0 3219 	ldrd	r3, r2, [r0, #100]	; 0x64
900071ca:	605a      	str	r2, [r3, #4]

        if(hdma->DMAmuxRequestGen != 0U)
900071cc:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
900071ce:	2b00      	cmp	r3, #0
900071d0:	d046      	beq.n	90007260 <HAL_DMA_Abort_IT+0x140>
        {
          /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
          /* disable the request gen overrun IT */
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
900071d2:	681a      	ldr	r2, [r3, #0]
900071d4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
900071d8:	601a      	str	r2, [r3, #0]

          /* Clear the DMAMUX request generator overrun flag */
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
900071da:	e9d0 321c 	ldrd	r3, r2, [r0, #112]	; 0x70
900071de:	605a      	str	r2, [r3, #4]
900071e0:	e03e      	b.n	90007260 <HAL_DMA_Abort_IT+0x140>
      hdma->State = HAL_DMA_STATE_ABORT;
900071e2:	2104      	movs	r1, #4
      __HAL_DMA_DISABLE(hdma);
900071e4:	4293      	cmp	r3, r2
      hdma->State = HAL_DMA_STATE_ABORT;
900071e6:	f880 1035 	strb.w	r1, [r0, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
900071ea:	d01e      	beq.n	9000722a <HAL_DMA_Abort_IT+0x10a>
900071ec:	4a23      	ldr	r2, [pc, #140]	; (9000727c <HAL_DMA_Abort_IT+0x15c>)
900071ee:	4293      	cmp	r3, r2
900071f0:	d01b      	beq.n	9000722a <HAL_DMA_Abort_IT+0x10a>
900071f2:	3218      	adds	r2, #24
900071f4:	4293      	cmp	r3, r2
900071f6:	d018      	beq.n	9000722a <HAL_DMA_Abort_IT+0x10a>
900071f8:	3218      	adds	r2, #24
900071fa:	4293      	cmp	r3, r2
900071fc:	d015      	beq.n	9000722a <HAL_DMA_Abort_IT+0x10a>
900071fe:	3218      	adds	r2, #24
90007200:	4293      	cmp	r3, r2
90007202:	d012      	beq.n	9000722a <HAL_DMA_Abort_IT+0x10a>
90007204:	3218      	adds	r2, #24
90007206:	4293      	cmp	r3, r2
90007208:	d00f      	beq.n	9000722a <HAL_DMA_Abort_IT+0x10a>
9000720a:	3218      	adds	r2, #24
9000720c:	4293      	cmp	r3, r2
9000720e:	d00c      	beq.n	9000722a <HAL_DMA_Abort_IT+0x10a>
90007210:	3218      	adds	r2, #24
90007212:	4293      	cmp	r3, r2
90007214:	d009      	beq.n	9000722a <HAL_DMA_Abort_IT+0x10a>
90007216:	f502 7256 	add.w	r2, r2, #856	; 0x358
9000721a:	4293      	cmp	r3, r2
9000721c:	d005      	beq.n	9000722a <HAL_DMA_Abort_IT+0x10a>
9000721e:	3218      	adds	r2, #24
90007220:	4293      	cmp	r3, r2
90007222:	d002      	beq.n	9000722a <HAL_DMA_Abort_IT+0x10a>
90007224:	3218      	adds	r2, #24
90007226:	4293      	cmp	r3, r2
90007228:	d0ff      	beq.n	9000722a <HAL_DMA_Abort_IT+0x10a>
9000722a:	681a      	ldr	r2, [r3, #0]
9000722c:	f022 0201 	bic.w	r2, r2, #1
90007230:	601a      	str	r2, [r3, #0]
        hdma->XferAbortCallback(hdma);
      }
    }
  }

  return HAL_OK;
90007232:	2000      	movs	r0, #0
}
90007234:	bd10      	pop	{r4, pc}
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90007236:	4a13      	ldr	r2, [pc, #76]	; (90007284 <HAL_DMA_Abort_IT+0x164>)
90007238:	4293      	cmp	r3, r2
9000723a:	d0b8      	beq.n	900071ae <HAL_DMA_Abort_IT+0x8e>
9000723c:	3214      	adds	r2, #20
9000723e:	4293      	cmp	r3, r2
90007240:	d0b5      	beq.n	900071ae <HAL_DMA_Abort_IT+0x8e>
90007242:	3214      	adds	r2, #20
90007244:	4293      	cmp	r3, r2
90007246:	d0b2      	beq.n	900071ae <HAL_DMA_Abort_IT+0x8e>
90007248:	3214      	adds	r2, #20
9000724a:	4293      	cmp	r3, r2
9000724c:	d0af      	beq.n	900071ae <HAL_DMA_Abort_IT+0x8e>
9000724e:	3214      	adds	r2, #20
90007250:	4293      	cmp	r3, r2
90007252:	d0ac      	beq.n	900071ae <HAL_DMA_Abort_IT+0x8e>
90007254:	3214      	adds	r2, #20
90007256:	4293      	cmp	r3, r2
90007258:	d0a9      	beq.n	900071ae <HAL_DMA_Abort_IT+0x8e>
9000725a:	3214      	adds	r2, #20
9000725c:	4293      	cmp	r3, r2
9000725e:	d0a6      	beq.n	900071ae <HAL_DMA_Abort_IT+0x8e>
      hdma->State = HAL_DMA_STATE_READY;
90007260:	2301      	movs	r3, #1
      __HAL_UNLOCK(hdma);
90007262:	2400      	movs	r4, #0
      hdma->State = HAL_DMA_STATE_READY;
90007264:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
      if(hdma->XferAbortCallback != NULL)
90007268:	6d03      	ldr	r3, [r0, #80]	; 0x50
      __HAL_UNLOCK(hdma);
9000726a:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34
      if(hdma->XferAbortCallback != NULL)
9000726e:	b10b      	cbz	r3, 90007274 <HAL_DMA_Abort_IT+0x154>
        hdma->XferAbortCallback(hdma);
90007270:	4798      	blx	r3
90007272:	e7de      	b.n	90007232 <HAL_DMA_Abort_IT+0x112>
  return HAL_OK;
90007274:	4618      	mov	r0, r3
90007276:	e7dd      	b.n	90007234 <HAL_DMA_Abort_IT+0x114>
90007278:	40020010 	.word	0x40020010
9000727c:	40020028 	.word	0x40020028
90007280:	58025408 	.word	0x58025408
90007284:	5802541c 	.word	0x5802541c

90007288 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
90007288:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
9000728a:	4604      	mov	r4, r0
9000728c:	2800      	cmp	r0, #0
9000728e:	d036      	beq.n	900072fe <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90007290:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
90007294:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90007298:	b91b      	cbnz	r3, 900072a2 <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
9000729a:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
9000729e:	f7fc f8fd 	bl	9000349c <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900072a2:	2302      	movs	r3, #2

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900072a4:	69e0      	ldr	r0, [r4, #28]
900072a6:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900072a8:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900072ac:	6823      	ldr	r3, [r4, #0]
900072ae:	4302      	orrs	r2, r0

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900072b0:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900072b2:	6819      	ldr	r1, [r3, #0]
900072b4:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
900072b8:	f021 0140 	bic.w	r1, r1, #64	; 0x40
900072bc:	430a      	orrs	r2, r1
900072be:	601a      	str	r2, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900072c0:	6b59      	ldr	r1, [r3, #52]	; 0x34
900072c2:	68a2      	ldr	r2, [r4, #8]
900072c4:	f421 7183 	bic.w	r1, r1, #262	; 0x106
900072c8:	4302      	orrs	r2, r0
900072ca:	f021 0101 	bic.w	r1, r1, #1
900072ce:	430a      	orrs	r2, r1
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900072d0:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900072d2:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900072d4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
900072d6:	0c12      	lsrs	r2, r2, #16
900072d8:	0412      	lsls	r2, r2, #16
900072da:	430a      	orrs	r2, r1
900072dc:	641a      	str	r2, [r3, #64]	; 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900072de:	6b59      	ldr	r1, [r3, #52]	; 0x34
900072e0:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
900072e4:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
900072e8:	0552      	lsls	r2, r2, #21
900072ea:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
900072ee:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900072f0:	430a      	orrs	r2, r1
900072f2:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
900072f4:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
900072f6:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
900072f8:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
900072fc:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
900072fe:	2001      	movs	r0, #1
90007300:	e7fc      	b.n	900072fc <HAL_DMA2D_Init+0x74>

90007302 <HAL_DMA2D_LineEventCallback>:
90007302:	4770      	bx	lr

90007304 <HAL_DMA2D_CLUTLoadingCpltCallback>:
90007304:	4770      	bx	lr

90007306 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007306:	6803      	ldr	r3, [r0, #0]
{
90007308:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000730a:	685e      	ldr	r6, [r3, #4]
{
9000730c:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
9000730e:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90007310:	07f2      	lsls	r2, r6, #31
90007312:	d514      	bpl.n	9000733e <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
90007314:	05e9      	lsls	r1, r5, #23
90007316:	d512      	bpl.n	9000733e <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90007318:	681a      	ldr	r2, [r3, #0]
9000731a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000731e:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90007320:	6e42      	ldr	r2, [r0, #100]	; 0x64
90007322:	f042 0201 	orr.w	r2, r2, #1
90007326:	6642      	str	r2, [r0, #100]	; 0x64

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90007328:	2201      	movs	r2, #1
9000732a:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000732c:	2304      	movs	r3, #4
9000732e:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
90007332:	2300      	movs	r3, #0
90007334:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
90007338:	6a43      	ldr	r3, [r0, #36]	; 0x24
9000733a:	b103      	cbz	r3, 9000733e <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
9000733c:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000733e:	06b2      	lsls	r2, r6, #26
90007340:	d516      	bpl.n	90007370 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
90007342:	04ab      	lsls	r3, r5, #18
90007344:	d514      	bpl.n	90007370 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90007346:	6823      	ldr	r3, [r4, #0]
90007348:	681a      	ldr	r2, [r3, #0]
9000734a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
9000734e:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90007350:	2220      	movs	r2, #32
90007352:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90007354:	6e63      	ldr	r3, [r4, #100]	; 0x64
90007356:	f043 0302 	orr.w	r3, r3, #2
9000735a:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000735c:	2304      	movs	r3, #4
9000735e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
90007362:	2300      	movs	r3, #0
90007364:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
90007368:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000736a:	b10b      	cbz	r3, 90007370 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
9000736c:	4620      	mov	r0, r4
9000736e:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90007370:	0730      	lsls	r0, r6, #28
90007372:	d516      	bpl.n	900073a2 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
90007374:	0529      	lsls	r1, r5, #20
90007376:	d514      	bpl.n	900073a2 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90007378:	6823      	ldr	r3, [r4, #0]
9000737a:	681a      	ldr	r2, [r3, #0]
9000737c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
90007380:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90007382:	2208      	movs	r2, #8
90007384:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90007386:	6e63      	ldr	r3, [r4, #100]	; 0x64
90007388:	f043 0304 	orr.w	r3, r3, #4
9000738c:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000738e:	2304      	movs	r3, #4
90007390:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
90007394:	2300      	movs	r3, #0
90007396:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
9000739a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000739c:	b10b      	cbz	r3, 900073a2 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
9000739e:	4620      	mov	r0, r4
900073a0:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
900073a2:	0772      	lsls	r2, r6, #29
900073a4:	d50b      	bpl.n	900073be <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
900073a6:	056b      	lsls	r3, r5, #21
900073a8:	d509      	bpl.n	900073be <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
900073aa:	6823      	ldr	r3, [r4, #0]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
900073ac:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
900073ae:	681a      	ldr	r2, [r3, #0]
900073b0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
900073b4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
900073b6:	2204      	movs	r2, #4
900073b8:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
900073ba:	f7ff ffa2 	bl	90007302 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
900073be:	07b0      	lsls	r0, r6, #30
900073c0:	d514      	bpl.n	900073ec <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
900073c2:	05a9      	lsls	r1, r5, #22
900073c4:	d512      	bpl.n	900073ec <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
900073c6:	6823      	ldr	r3, [r4, #0]
900073c8:	681a      	ldr	r2, [r3, #0]
900073ca:	f422 7200 	bic.w	r2, r2, #512	; 0x200
900073ce:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
900073d0:	2202      	movs	r2, #2
900073d2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900073d4:	6e63      	ldr	r3, [r4, #100]	; 0x64
900073d6:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
900073d8:	2301      	movs	r3, #1
900073da:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
900073de:	2300      	movs	r3, #0
900073e0:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferCpltCallback != NULL)
900073e4:	6a23      	ldr	r3, [r4, #32]
900073e6:	b10b      	cbz	r3, 900073ec <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
900073e8:	4620      	mov	r0, r4
900073ea:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
900073ec:	06f2      	lsls	r2, r6, #27
900073ee:	d513      	bpl.n	90007418 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
900073f0:	04eb      	lsls	r3, r5, #19
900073f2:	d511      	bpl.n	90007418 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
900073f4:	6823      	ldr	r3, [r4, #0]

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
900073f6:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
900073f8:	681a      	ldr	r2, [r3, #0]
900073fa:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
900073fe:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007400:	2210      	movs	r2, #16
90007402:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007404:	6e63      	ldr	r3, [r4, #100]	; 0x64
90007406:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007408:	2301      	movs	r3, #1
9000740a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000740e:	2300      	movs	r3, #0
90007410:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007414:	f7ff ff76 	bl	90007304 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
90007418:	bd70      	pop	{r4, r5, r6, pc}
	...

9000741c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
9000741c:	b570      	push	{r4, r5, r6, lr}
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
9000741e:	f890 3060 	ldrb.w	r3, [r0, #96]	; 0x60
90007422:	2b01      	cmp	r3, #1
90007424:	f04f 0302 	mov.w	r3, #2
90007428:	d032      	beq.n	90007490 <HAL_DMA2D_ConfigLayer+0x74>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000742a:	241c      	movs	r4, #28
  __HAL_LOCK(hdma2d);
9000742c:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000742e:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007432:	fb04 0401 	mla	r4, r4, r1, r0
  __HAL_LOCK(hdma2d);
90007436:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000743a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000743c:	e9d4 650b 	ldrd	r6, r5, [r4, #44]	; 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007440:	0513      	lsls	r3, r2, #20
90007442:	6be2      	ldr	r2, [r4, #60]	; 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007444:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007448:	f1a6 0509 	sub.w	r5, r6, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000744c:	4333      	orrs	r3, r6
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000744e:	2d01      	cmp	r5, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007450:	ea43 5342 	orr.w	r3, r3, r2, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007454:	6b62      	ldr	r2, [r4, #52]	; 0x34
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90007456:	bf96      	itet	ls
90007458:	f002 427f 	andls.w	r2, r2, #4278190080	; 0xff000000
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
9000745c:	ea43 6302 	orrhi.w	r3, r3, r2, lsl #24
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90007460:	4313      	orrls	r3, r2
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007462:	6802      	ldr	r2, [r0, #0]
90007464:	b9b1      	cbnz	r1, 90007494 <HAL_DMA2D_ConfigLayer+0x78>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007466:	6a54      	ldr	r4, [r2, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007468:	2d01      	cmp	r5, #1
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000746a:	4919      	ldr	r1, [pc, #100]	; (900074d0 <HAL_DMA2D_ConfigLayer+0xb4>)
9000746c:	ea01 0104 	and.w	r1, r1, r4
90007470:	ea43 0301 	orr.w	r3, r3, r1
90007474:	6253      	str	r3, [r2, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007476:	6a83      	ldr	r3, [r0, #40]	; 0x28
90007478:	6193      	str	r3, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000747a:	d803      	bhi.n	90007484 <HAL_DMA2D_ConfigLayer+0x68>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000747c:	6b43      	ldr	r3, [r0, #52]	; 0x34
9000747e:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
90007482:	6293      	str	r3, [r2, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007484:	2301      	movs	r3, #1
90007486:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
9000748a:	2300      	movs	r3, #0
9000748c:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
  __HAL_LOCK(hdma2d);
90007490:	4618      	mov	r0, r3

  return HAL_OK;
}
90007492:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90007494:	2e0b      	cmp	r6, #11
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90007496:	bf05      	ittet	eq
90007498:	241c      	moveq	r4, #28
      regMask  |= DMA2D_FGPFCCR_CSS;
9000749a:	4e0e      	ldreq	r6, [pc, #56]	; (900074d4 <HAL_DMA2D_ConfigLayer+0xb8>)
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
9000749c:	4e0e      	ldrne	r6, [pc, #56]	; (900074d8 <HAL_DMA2D_ConfigLayer+0xbc>)
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
9000749e:	fb04 0401 	mlaeq	r4, r4, r1, r0
900074a2:	bf04      	itt	eq
900074a4:	6c24      	ldreq	r4, [r4, #64]	; 0x40
900074a6:	ea43 4384 	orreq.w	r3, r3, r4, lsl #18
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900074aa:	69d4      	ldr	r4, [r2, #28]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900074ac:	2d01      	cmp	r5, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900074ae:	ea24 0406 	bic.w	r4, r4, r6
900074b2:	ea43 0304 	orr.w	r3, r3, r4
900074b6:	61d3      	str	r3, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900074b8:	f04f 031c 	mov.w	r3, #28
900074bc:	fb03 0101 	mla	r1, r3, r1, r0
900074c0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
900074c2:	6113      	str	r3, [r2, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900074c4:	d8de      	bhi.n	90007484 <HAL_DMA2D_ConfigLayer+0x68>
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
900074c6:	6b4b      	ldr	r3, [r1, #52]	; 0x34
900074c8:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
900074cc:	6213      	str	r3, [r2, #32]
900074ce:	e7d9      	b.n	90007484 <HAL_DMA2D_ConfigLayer+0x68>
900074d0:	00ccfff0 	.word	0x00ccfff0
900074d4:	ff3f000f 	.word	0xff3f000f
900074d8:	ff33000f 	.word	0xff33000f

900074dc <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
900074dc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
900074e0:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900074e2:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 900076a0 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
900074e6:	f8df c1bc 	ldr.w	ip, [pc, #444]	; 900076a4 <HAL_GPIO_Init+0x1c8>
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
900074ea:	f04f 49b0 	mov.w	r9, #1476395008	; 0x58000000
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900074ee:	680a      	ldr	r2, [r1, #0]
900074f0:	fa32 f403 	lsrs.w	r4, r2, r3
900074f4:	d102      	bne.n	900074fc <HAL_GPIO_Init+0x20>
      }
    }

    position++;
  }
}
900074f6:	b003      	add	sp, #12
900074f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
900074fc:	2701      	movs	r7, #1
900074fe:	409f      	lsls	r7, r3
    if (iocurrent != 0x00U)
90007500:	403a      	ands	r2, r7
90007502:	f000 80b6 	beq.w	90007672 <HAL_GPIO_Init+0x196>
      if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
90007506:	684c      	ldr	r4, [r1, #4]
90007508:	ea4f 0e43 	mov.w	lr, r3, lsl #1
9000750c:	2503      	movs	r5, #3
9000750e:	f024 0a10 	bic.w	sl, r4, #16
90007512:	fa05 f50e 	lsl.w	r5, r5, lr
90007516:	f10a 36ff 	add.w	r6, sl, #4294967295
9000751a:	43ed      	mvns	r5, r5
9000751c:	2e01      	cmp	r6, #1
9000751e:	d810      	bhi.n	90007542 <HAL_GPIO_Init+0x66>
        temp = GPIOx->OSPEEDR;
90007520:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007522:	ea06 0b05 	and.w	fp, r6, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
90007526:	68ce      	ldr	r6, [r1, #12]
90007528:	fa06 f60e 	lsl.w	r6, r6, lr
9000752c:	ea46 060b 	orr.w	r6, r6, fp
        GPIOx->OSPEEDR = temp;
90007530:	6086      	str	r6, [r0, #8]
        temp = GPIOx->OTYPER;
90007532:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90007534:	ea26 0707 	bic.w	r7, r6, r7
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
90007538:	f3c4 1600 	ubfx	r6, r4, #4, #1
9000753c:	409e      	lsls	r6, r3
9000753e:	4337      	orrs	r7, r6
        GPIOx->OTYPER = temp;
90007540:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
90007542:	68c7      	ldr	r7, [r0, #12]
      if ((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
90007544:	f1ba 0f02 	cmp.w	sl, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007548:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000754a:	ea07 0705 	and.w	r7, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000754e:	fa06 f60e 	lsl.w	r6, r6, lr
90007552:	ea46 0607 	orr.w	r6, r6, r7
      GPIOx->PUPDR = temp;
90007556:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
90007558:	d114      	bne.n	90007584 <HAL_GPIO_Init+0xa8>
        temp = GPIOx->AFR[position >> 3U];
9000755a:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000755e:	f003 0b07 	and.w	fp, r3, #7
90007562:	270f      	movs	r7, #15
90007564:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
90007568:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
9000756c:	f8da 6020 	ldr.w	r6, [sl, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007570:	fa07 f70b 	lsl.w	r7, r7, fp
90007574:	ea26 0707 	bic.w	r7, r6, r7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007578:	690e      	ldr	r6, [r1, #16]
9000757a:	fa06 f60b 	lsl.w	r6, r6, fp
9000757e:	433e      	orrs	r6, r7
        GPIOx->AFR[position >> 3U] = temp;
90007580:	f8ca 6020 	str.w	r6, [sl, #32]
      temp = GPIOx->MODER;
90007584:	6806      	ldr	r6, [r0, #0]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90007586:	4035      	ands	r5, r6
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007588:	f004 0603 	and.w	r6, r4, #3
9000758c:	fa06 fe0e 	lsl.w	lr, r6, lr
90007590:	ea4e 0505 	orr.w	r5, lr, r5
      GPIOx->MODER = temp;
90007594:	6005      	str	r5, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
90007596:	00e5      	lsls	r5, r4, #3
90007598:	d56b      	bpl.n	90007672 <HAL_GPIO_Init+0x196>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000759a:	f8d8 50f4 	ldr.w	r5, [r8, #244]	; 0xf4
9000759e:	f023 0603 	bic.w	r6, r3, #3
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900075a2:	f003 0703 	and.w	r7, r3, #3
900075a6:	f04f 0e0f 	mov.w	lr, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900075aa:	f045 0502 	orr.w	r5, r5, #2
900075ae:	f106 46b0 	add.w	r6, r6, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900075b2:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900075b4:	f8c8 50f4 	str.w	r5, [r8, #244]	; 0xf4
900075b8:	f506 6680 	add.w	r6, r6, #1024	; 0x400
900075bc:	f8d8 50f4 	ldr.w	r5, [r8, #244]	; 0xf4
900075c0:	f005 0502 	and.w	r5, r5, #2
900075c4:	9501      	str	r5, [sp, #4]
900075c6:	9d01      	ldr	r5, [sp, #4]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900075c8:	fa0e f507 	lsl.w	r5, lr, r7
        temp = SYSCFG->EXTICR[position >> 2U];
900075cc:	f8d6 a008 	ldr.w	sl, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900075d0:	ea2a 0e05 	bic.w	lr, sl, r5
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900075d4:	4d31      	ldr	r5, [pc, #196]	; (9000769c <HAL_GPIO_Init+0x1c0>)
900075d6:	42a8      	cmp	r0, r5
900075d8:	d04d      	beq.n	90007676 <HAL_GPIO_Init+0x19a>
900075da:	f505 6580 	add.w	r5, r5, #1024	; 0x400
900075de:	42a8      	cmp	r0, r5
900075e0:	d04b      	beq.n	9000767a <HAL_GPIO_Init+0x19e>
900075e2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
900075e6:	42a8      	cmp	r0, r5
900075e8:	d049      	beq.n	9000767e <HAL_GPIO_Init+0x1a2>
900075ea:	f505 6580 	add.w	r5, r5, #1024	; 0x400
900075ee:	42a8      	cmp	r0, r5
900075f0:	d047      	beq.n	90007682 <HAL_GPIO_Init+0x1a6>
900075f2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
900075f6:	42a8      	cmp	r0, r5
900075f8:	d045      	beq.n	90007686 <HAL_GPIO_Init+0x1aa>
900075fa:	f505 6580 	add.w	r5, r5, #1024	; 0x400
900075fe:	42a8      	cmp	r0, r5
90007600:	d043      	beq.n	9000768a <HAL_GPIO_Init+0x1ae>
90007602:	f505 6580 	add.w	r5, r5, #1024	; 0x400
90007606:	42a8      	cmp	r0, r5
90007608:	d041      	beq.n	9000768e <HAL_GPIO_Init+0x1b2>
9000760a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
9000760e:	42a8      	cmp	r0, r5
90007610:	d03f      	beq.n	90007692 <HAL_GPIO_Init+0x1b6>
90007612:	f505 6580 	add.w	r5, r5, #1024	; 0x400
90007616:	42a8      	cmp	r0, r5
90007618:	d03d      	beq.n	90007696 <HAL_GPIO_Init+0x1ba>
9000761a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
9000761e:	42a8      	cmp	r0, r5
90007620:	bf0c      	ite	eq
90007622:	2509      	moveq	r5, #9
90007624:	250a      	movne	r5, #10
90007626:	40bd      	lsls	r5, r7
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
90007628:	03e7      	lsls	r7, r4, #15
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000762a:	ea45 050e 	orr.w	r5, r5, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
9000762e:	60b5      	str	r5, [r6, #8]
        temp &= ~(iocurrent);
90007630:	ea6f 0602 	mvn.w	r6, r2
        temp = EXTI_CurrentCPU->IMR1;
90007634:	f8dc 5000 	ldr.w	r5, [ip]
        temp &= ~(iocurrent);
90007638:	bf54      	ite	pl
9000763a:	4035      	andpl	r5, r6
          temp |= iocurrent;
9000763c:	4315      	orrmi	r5, r2
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
9000763e:	03a7      	lsls	r7, r4, #14
        EXTI_CurrentCPU->IMR1 = temp;
90007640:	f8cc 5000 	str.w	r5, [ip]
        temp = EXTI_CurrentCPU->EMR1;
90007644:	f8dc 5004 	ldr.w	r5, [ip, #4]
        temp &= ~(iocurrent);
90007648:	bf54      	ite	pl
9000764a:	4035      	andpl	r5, r6
          temp |= iocurrent;
9000764c:	4315      	orrmi	r5, r2
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
9000764e:	02e7      	lsls	r7, r4, #11
        EXTI->RTSR1 = temp;
90007650:	f04f 47b0 	mov.w	r7, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
90007654:	f8cc 5004 	str.w	r5, [ip, #4]
        temp = EXTI->RTSR1;
90007658:	f8d9 5000 	ldr.w	r5, [r9]
        temp &= ~(iocurrent);
9000765c:	bf54      	ite	pl
9000765e:	4035      	andpl	r5, r6
          temp |= iocurrent;
90007660:	4315      	orrmi	r5, r2
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
90007662:	02a4      	lsls	r4, r4, #10
        EXTI->RTSR1 = temp;
90007664:	603d      	str	r5, [r7, #0]
        temp = EXTI->FTSR1;
90007666:	687d      	ldr	r5, [r7, #4]
        temp &= ~(iocurrent);
90007668:	bf54      	ite	pl
9000766a:	4035      	andpl	r5, r6
          temp |= iocurrent;
9000766c:	4315      	orrmi	r5, r2
        EXTI->FTSR1 = temp;
9000766e:	f8c9 5004 	str.w	r5, [r9, #4]
    position++;
90007672:	3301      	adds	r3, #1
90007674:	e73b      	b.n	900074ee <HAL_GPIO_Init+0x12>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007676:	2500      	movs	r5, #0
90007678:	e7d5      	b.n	90007626 <HAL_GPIO_Init+0x14a>
9000767a:	2501      	movs	r5, #1
9000767c:	e7d3      	b.n	90007626 <HAL_GPIO_Init+0x14a>
9000767e:	2502      	movs	r5, #2
90007680:	e7d1      	b.n	90007626 <HAL_GPIO_Init+0x14a>
90007682:	2503      	movs	r5, #3
90007684:	e7cf      	b.n	90007626 <HAL_GPIO_Init+0x14a>
90007686:	2504      	movs	r5, #4
90007688:	e7cd      	b.n	90007626 <HAL_GPIO_Init+0x14a>
9000768a:	2505      	movs	r5, #5
9000768c:	e7cb      	b.n	90007626 <HAL_GPIO_Init+0x14a>
9000768e:	2506      	movs	r5, #6
90007690:	e7c9      	b.n	90007626 <HAL_GPIO_Init+0x14a>
90007692:	2507      	movs	r5, #7
90007694:	e7c7      	b.n	90007626 <HAL_GPIO_Init+0x14a>
90007696:	2508      	movs	r5, #8
90007698:	e7c5      	b.n	90007626 <HAL_GPIO_Init+0x14a>
9000769a:	bf00      	nop
9000769c:	58020000 	.word	0x58020000
900076a0:	58024400 	.word	0x58024400
900076a4:	58000080 	.word	0x58000080

900076a8 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin: specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
900076a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
900076ac:	2200      	movs	r2, #0
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900076ae:	4d4c      	ldr	r5, [pc, #304]	; (900077e0 <HAL_GPIO_DeInit+0x138>)
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900076b0:	f8df 9134 	ldr.w	r9, [pc, #308]	; 900077e8 <HAL_GPIO_DeInit+0x140>
900076b4:	f8df a134 	ldr.w	sl, [pc, #308]	; 900077ec <HAL_GPIO_DeInit+0x144>
900076b8:	f8df b134 	ldr.w	fp, [pc, #308]	; 900077f0 <HAL_GPIO_DeInit+0x148>
  while ((GPIO_Pin >> position) != 0x00U)
900076bc:	fa31 f302 	lsrs.w	r3, r1, r2
900076c0:	d101      	bne.n	900076c6 <HAL_GPIO_DeInit+0x1e>
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
    }

    position++;
  }
}
900076c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = GPIO_Pin & (1UL << position) ;
900076c6:	2301      	movs	r3, #1
900076c8:	fa03 fe02 	lsl.w	lr, r3, r2
    if (iocurrent != 0x00U)
900076cc:	ea1e 0701 	ands.w	r7, lr, r1
900076d0:	d072      	beq.n	900077b8 <HAL_GPIO_DeInit+0x110>
      tmp = SYSCFG->EXTICR[position >> 2U];
900076d2:	f022 0403 	bic.w	r4, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900076d6:	f002 0c03 	and.w	ip, r2, #3
900076da:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900076dc:	4b41      	ldr	r3, [pc, #260]	; (900077e4 <HAL_GPIO_DeInit+0x13c>)
900076de:	f104 44b0 	add.w	r4, r4, #1476395008	; 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900076e2:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900076e6:	4298      	cmp	r0, r3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900076e8:	fa06 f60c 	lsl.w	r6, r6, ip
      tmp = SYSCFG->EXTICR[position >> 2U];
900076ec:	f8d4 8408 	ldr.w	r8, [r4, #1032]	; 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900076f0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
900076f4:	ea06 0808 	and.w	r8, r6, r8
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900076f8:	d060      	beq.n	900077bc <HAL_GPIO_DeInit+0x114>
900076fa:	f503 6380 	add.w	r3, r3, #1024	; 0x400
900076fe:	4298      	cmp	r0, r3
90007700:	d05e      	beq.n	900077c0 <HAL_GPIO_DeInit+0x118>
90007702:	f503 6380 	add.w	r3, r3, #1024	; 0x400
90007706:	4298      	cmp	r0, r3
90007708:	d05c      	beq.n	900077c4 <HAL_GPIO_DeInit+0x11c>
9000770a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000770e:	4298      	cmp	r0, r3
90007710:	d05a      	beq.n	900077c8 <HAL_GPIO_DeInit+0x120>
90007712:	f503 6380 	add.w	r3, r3, #1024	; 0x400
90007716:	4298      	cmp	r0, r3
90007718:	d058      	beq.n	900077cc <HAL_GPIO_DeInit+0x124>
9000771a:	4548      	cmp	r0, r9
9000771c:	d058      	beq.n	900077d0 <HAL_GPIO_DeInit+0x128>
9000771e:	4550      	cmp	r0, sl
90007720:	d058      	beq.n	900077d4 <HAL_GPIO_DeInit+0x12c>
90007722:	4558      	cmp	r0, fp
90007724:	d058      	beq.n	900077d8 <HAL_GPIO_DeInit+0x130>
90007726:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
9000772a:	4298      	cmp	r0, r3
9000772c:	d056      	beq.n	900077dc <HAL_GPIO_DeInit+0x134>
9000772e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
90007732:	4298      	cmp	r0, r3
90007734:	bf0c      	ite	eq
90007736:	2309      	moveq	r3, #9
90007738:	230a      	movne	r3, #10
9000773a:	fa03 f30c 	lsl.w	r3, r3, ip
9000773e:	4543      	cmp	r3, r8
90007740:	d118      	bne.n	90007774 <HAL_GPIO_DeInit+0xcc>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90007742:	682b      	ldr	r3, [r5, #0]
90007744:	ea23 0307 	bic.w	r3, r3, r7
90007748:	602b      	str	r3, [r5, #0]
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
9000774a:	686b      	ldr	r3, [r5, #4]
9000774c:	ea23 0307 	bic.w	r3, r3, r7
90007750:	606b      	str	r3, [r5, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90007752:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
90007756:	f8d3 c000 	ldr.w	ip, [r3]
9000775a:	ea2c 0c07 	bic.w	ip, ip, r7
9000775e:	f8c3 c000 	str.w	ip, [r3]
        EXTI->FTSR1 &= ~(iocurrent);
90007762:	f8d3 c004 	ldr.w	ip, [r3, #4]
90007766:	ea2c 0707 	bic.w	r7, ip, r7
9000776a:	605f      	str	r7, [r3, #4]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000776c:	68a3      	ldr	r3, [r4, #8]
9000776e:	ea23 0606 	bic.w	r6, r3, r6
90007772:	60a6      	str	r6, [r4, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007774:	2603      	movs	r6, #3
90007776:	0053      	lsls	r3, r2, #1
90007778:	6804      	ldr	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000777a:	f002 0c07 	and.w	ip, r2, #7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000777e:	fa06 f303 	lsl.w	r3, r6, r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007782:	270f      	movs	r7, #15
90007784:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007788:	431c      	orrs	r4, r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000778a:	fa07 f70c 	lsl.w	r7, r7, ip
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000778e:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007790:	fa22 f406 	lsr.w	r4, r2, r6
90007794:	eb00 0484 	add.w	r4, r0, r4, lsl #2
90007798:	6a26      	ldr	r6, [r4, #32]
9000779a:	ea26 0707 	bic.w	r7, r6, r7
9000779e:	6227      	str	r7, [r4, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900077a0:	68c4      	ldr	r4, [r0, #12]
900077a2:	ea24 0403 	bic.w	r4, r4, r3
900077a6:	60c4      	str	r4, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
900077a8:	6844      	ldr	r4, [r0, #4]
900077aa:	ea24 040e 	bic.w	r4, r4, lr
900077ae:	6044      	str	r4, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900077b0:	6884      	ldr	r4, [r0, #8]
900077b2:	ea24 0303 	bic.w	r3, r4, r3
900077b6:	6083      	str	r3, [r0, #8]
    position++;
900077b8:	3201      	adds	r2, #1
900077ba:	e77f      	b.n	900076bc <HAL_GPIO_DeInit+0x14>
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900077bc:	2300      	movs	r3, #0
900077be:	e7bc      	b.n	9000773a <HAL_GPIO_DeInit+0x92>
900077c0:	2301      	movs	r3, #1
900077c2:	e7ba      	b.n	9000773a <HAL_GPIO_DeInit+0x92>
900077c4:	2302      	movs	r3, #2
900077c6:	e7b8      	b.n	9000773a <HAL_GPIO_DeInit+0x92>
900077c8:	2303      	movs	r3, #3
900077ca:	e7b6      	b.n	9000773a <HAL_GPIO_DeInit+0x92>
900077cc:	2304      	movs	r3, #4
900077ce:	e7b4      	b.n	9000773a <HAL_GPIO_DeInit+0x92>
900077d0:	2305      	movs	r3, #5
900077d2:	e7b2      	b.n	9000773a <HAL_GPIO_DeInit+0x92>
900077d4:	2306      	movs	r3, #6
900077d6:	e7b0      	b.n	9000773a <HAL_GPIO_DeInit+0x92>
900077d8:	2307      	movs	r3, #7
900077da:	e7ae      	b.n	9000773a <HAL_GPIO_DeInit+0x92>
900077dc:	2308      	movs	r3, #8
900077de:	e7ac      	b.n	9000773a <HAL_GPIO_DeInit+0x92>
900077e0:	58000080 	.word	0x58000080
900077e4:	58020000 	.word	0x58020000
900077e8:	58021400 	.word	0x58021400
900077ec:	58021800 	.word	0x58021800
900077f0:	58021c00 	.word	0x58021c00

900077f4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
900077f4:	b10a      	cbz	r2, 900077fa <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
900077f6:	6181      	str	r1, [r0, #24]
  }
}
900077f8:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
900077fa:	0409      	lsls	r1, r1, #16
900077fc:	e7fb      	b.n	900077f6 <HAL_GPIO_WritePin+0x2>

900077fe <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
900077fe:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90007800:	ea01 0203 	and.w	r2, r1, r3
90007804:	ea21 0103 	bic.w	r1, r1, r3
90007808:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000780c:	6181      	str	r1, [r0, #24]
}
9000780e:	4770      	bx	lr

90007810 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007810:	6803      	ldr	r3, [r0, #0]
90007812:	699a      	ldr	r2, [r3, #24]
90007814:	0791      	lsls	r1, r2, #30
90007816:	d501      	bpl.n	9000781c <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
90007818:	2200      	movs	r2, #0
9000781a:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000781c:	699a      	ldr	r2, [r3, #24]
9000781e:	07d2      	lsls	r2, r2, #31
90007820:	d403      	bmi.n	9000782a <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007822:	699a      	ldr	r2, [r3, #24]
90007824:	f042 0201 	orr.w	r2, r2, #1
90007828:	619a      	str	r2, [r3, #24]
  }
}
9000782a:	4770      	bx	lr

9000782c <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
9000782c:	b530      	push	{r4, r5, lr}
9000782e:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2,
90007830:	f3c1 0109 	ubfx	r1, r1, #0, #10
90007834:	6804      	ldr	r4, [r0, #0]
90007836:	ea45 4202 	orr.w	r2, r5, r2, lsl #16
9000783a:	6860      	ldr	r0, [r4, #4]
9000783c:	431a      	orrs	r2, r3
9000783e:	4b04      	ldr	r3, [pc, #16]	; (90007850 <I2C_TransferConfig+0x24>)
90007840:	ea43 5355 	orr.w	r3, r3, r5, lsr #21
90007844:	430a      	orrs	r2, r1
90007846:	ea20 0003 	bic.w	r0, r0, r3
9000784a:	4302      	orrs	r2, r0
9000784c:	6062      	str	r2, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | I2C_CR2_START | I2C_CR2_STOP)), \
             (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) |
                        (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | (uint32_t)Mode | (uint32_t)Request));
}
9000784e:	bd30      	pop	{r4, r5, pc}
90007850:	03ff63ff 	.word	0x03ff63ff

90007854 <I2C_IsAcknowledgeFailed>:
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
90007854:	6803      	ldr	r3, [r0, #0]
{
90007856:	b570      	push	{r4, r5, r6, lr}
90007858:	4604      	mov	r4, r0
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
9000785a:	6998      	ldr	r0, [r3, #24]
{
9000785c:	460d      	mov	r5, r1
9000785e:	4616      	mov	r6, r2
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
90007860:	f010 0010 	ands.w	r0, r0, #16
90007864:	d116      	bne.n	90007894 <I2C_IsAcknowledgeFailed+0x40>
}
90007866:	bd70      	pop	{r4, r5, r6, pc}
      if (Timeout != HAL_MAX_DELAY)
90007868:	1c69      	adds	r1, r5, #1
9000786a:	d014      	beq.n	90007896 <I2C_IsAcknowledgeFailed+0x42>
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000786c:	f7ff f986 	bl	90006b7c <HAL_GetTick>
90007870:	1b80      	subs	r0, r0, r6
90007872:	42a8      	cmp	r0, r5
90007874:	d800      	bhi.n	90007878 <I2C_IsAcknowledgeFailed+0x24>
90007876:	b96d      	cbnz	r5, 90007894 <I2C_IsAcknowledgeFailed+0x40>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007878:	6c63      	ldr	r3, [r4, #68]	; 0x44
9000787a:	f043 0320 	orr.w	r3, r3, #32
9000787e:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007880:	2320      	movs	r3, #32
90007882:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007886:	2300      	movs	r3, #0
    return HAL_ERROR;
90007888:	2001      	movs	r0, #1
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000788a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
9000788e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
    return HAL_ERROR;
90007892:	e7e8      	b.n	90007866 <I2C_IsAcknowledgeFailed+0x12>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007894:	6823      	ldr	r3, [r4, #0]
90007896:	699a      	ldr	r2, [r3, #24]
90007898:	0692      	lsls	r2, r2, #26
9000789a:	d5e5      	bpl.n	90007868 <I2C_IsAcknowledgeFailed+0x14>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000789c:	2210      	movs	r2, #16
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000789e:	2520      	movs	r5, #32
    I2C_Flush_TXDR(hi2c);
900078a0:	4620      	mov	r0, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900078a2:	61da      	str	r2, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900078a4:	61dd      	str	r5, [r3, #28]
    I2C_Flush_TXDR(hi2c);
900078a6:	f7ff ffb3 	bl	90007810 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
900078aa:	6822      	ldr	r2, [r4, #0]
900078ac:	6853      	ldr	r3, [r2, #4]
900078ae:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
900078b2:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
900078b6:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
900078ba:	f023 0301 	bic.w	r3, r3, #1
900078be:	6053      	str	r3, [r2, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
900078c0:	6c63      	ldr	r3, [r4, #68]	; 0x44
900078c2:	f043 0304 	orr.w	r3, r3, #4
900078c6:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
900078c8:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
900078cc:	e7db      	b.n	90007886 <I2C_IsAcknowledgeFailed+0x32>

900078ce <I2C_WaitOnSTOPFlagUntilTimeout>:
{
900078ce:	b570      	push	{r4, r5, r6, lr}
900078d0:	4604      	mov	r4, r0
900078d2:	460d      	mov	r5, r1
900078d4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900078d6:	6823      	ldr	r3, [r4, #0]
900078d8:	699b      	ldr	r3, [r3, #24]
900078da:	069b      	lsls	r3, r3, #26
900078dc:	d501      	bpl.n	900078e2 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
900078de:	2000      	movs	r0, #0
}
900078e0:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
900078e2:	4632      	mov	r2, r6
900078e4:	4629      	mov	r1, r5
900078e6:	4620      	mov	r0, r4
900078e8:	f7ff ffb4 	bl	90007854 <I2C_IsAcknowledgeFailed>
900078ec:	b990      	cbnz	r0, 90007914 <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900078ee:	f7ff f945 	bl	90006b7c <HAL_GetTick>
900078f2:	1b80      	subs	r0, r0, r6
900078f4:	42a8      	cmp	r0, r5
900078f6:	d801      	bhi.n	900078fc <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
900078f8:	2d00      	cmp	r5, #0
900078fa:	d1ec      	bne.n	900078d6 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900078fc:	6c63      	ldr	r3, [r4, #68]	; 0x44
900078fe:	f043 0320 	orr.w	r3, r3, #32
90007902:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007904:	2320      	movs	r3, #32
90007906:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000790a:	2300      	movs	r3, #0
9000790c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          __HAL_UNLOCK(hi2c);
90007910:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
90007914:	2001      	movs	r0, #1
90007916:	e7e3      	b.n	900078e0 <I2C_WaitOnSTOPFlagUntilTimeout+0x12>

90007918 <I2C_WaitOnFlagUntilTimeout>:
{
90007918:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000791c:	9f06      	ldr	r7, [sp, #24]
9000791e:	4604      	mov	r4, r0
90007920:	4688      	mov	r8, r1
90007922:	4616      	mov	r6, r2
90007924:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007926:	6822      	ldr	r2, [r4, #0]
90007928:	6993      	ldr	r3, [r2, #24]
9000792a:	ea38 0303 	bics.w	r3, r8, r3
9000792e:	bf0c      	ite	eq
90007930:	2301      	moveq	r3, #1
90007932:	2300      	movne	r3, #0
90007934:	42b3      	cmp	r3, r6
90007936:	d001      	beq.n	9000793c <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
90007938:	2000      	movs	r0, #0
9000793a:	e015      	b.n	90007968 <I2C_WaitOnFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
9000793c:	1c6b      	adds	r3, r5, #1
9000793e:	d0f3      	beq.n	90007928 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007940:	f7ff f91c 	bl	90006b7c <HAL_GetTick>
90007944:	1bc0      	subs	r0, r0, r7
90007946:	42a8      	cmp	r0, r5
90007948:	d801      	bhi.n	9000794e <I2C_WaitOnFlagUntilTimeout+0x36>
9000794a:	2d00      	cmp	r5, #0
9000794c:	d1eb      	bne.n	90007926 <I2C_WaitOnFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000794e:	6c63      	ldr	r3, [r4, #68]	; 0x44
          __HAL_UNLOCK(hi2c);
90007950:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007952:	f043 0320 	orr.w	r3, r3, #32
90007956:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007958:	2320      	movs	r3, #32
9000795a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000795e:	2300      	movs	r3, #0
90007960:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          __HAL_UNLOCK(hi2c);
90007964:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
90007968:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000796c <I2C_WaitOnTXISFlagUntilTimeout>:
{
9000796c:	b570      	push	{r4, r5, r6, lr}
9000796e:	4604      	mov	r4, r0
90007970:	460d      	mov	r5, r1
90007972:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90007974:	6823      	ldr	r3, [r4, #0]
90007976:	699b      	ldr	r3, [r3, #24]
90007978:	079b      	lsls	r3, r3, #30
9000797a:	d501      	bpl.n	90007980 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
9000797c:	2000      	movs	r0, #0
}
9000797e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
90007980:	4632      	mov	r2, r6
90007982:	4629      	mov	r1, r5
90007984:	4620      	mov	r0, r4
90007986:	f7ff ff65 	bl	90007854 <I2C_IsAcknowledgeFailed>
9000798a:	b9a0      	cbnz	r0, 900079b6 <I2C_WaitOnTXISFlagUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
9000798c:	1c6a      	adds	r2, r5, #1
9000798e:	d0f1      	beq.n	90007974 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007990:	f7ff f8f4 	bl	90006b7c <HAL_GetTick>
90007994:	1b80      	subs	r0, r0, r6
90007996:	42a8      	cmp	r0, r5
90007998:	d801      	bhi.n	9000799e <I2C_WaitOnTXISFlagUntilTimeout+0x32>
9000799a:	2d00      	cmp	r5, #0
9000799c:	d1ea      	bne.n	90007974 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000799e:	6c63      	ldr	r3, [r4, #68]	; 0x44
900079a0:	f043 0320 	orr.w	r3, r3, #32
900079a4:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900079a6:	2320      	movs	r3, #32
900079a8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900079ac:	2300      	movs	r3, #0
900079ae:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          __HAL_UNLOCK(hi2c);
900079b2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
900079b6:	2001      	movs	r0, #1
900079b8:	e7e1      	b.n	9000797e <I2C_WaitOnTXISFlagUntilTimeout+0x12>
	...

900079bc <I2C_RequestMemoryWrite>:
{
900079bc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900079c0:	461e      	mov	r6, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
900079c2:	4b18      	ldr	r3, [pc, #96]	; (90007a24 <I2C_RequestMemoryWrite+0x68>)
{
900079c4:	4605      	mov	r5, r0
900079c6:	4614      	mov	r4, r2
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
900079c8:	9300      	str	r3, [sp, #0]
900079ca:	b2f2      	uxtb	r2, r6
900079cc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
{
900079d0:	e9dd 7808 	ldrd	r7, r8, [sp, #32]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
900079d4:	f7ff ff2a 	bl	9000782c <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900079d8:	4628      	mov	r0, r5
900079da:	4642      	mov	r2, r8
900079dc:	4639      	mov	r1, r7
900079de:	f7ff ffc5 	bl	9000796c <I2C_WaitOnTXISFlagUntilTimeout>
900079e2:	b118      	cbz	r0, 900079ec <I2C_RequestMemoryWrite+0x30>
    return HAL_ERROR;
900079e4:	2001      	movs	r0, #1
}
900079e6:	b002      	add	sp, #8
900079e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900079ec:	2e01      	cmp	r6, #1
900079ee:	682b      	ldr	r3, [r5, #0]
900079f0:	d10d      	bne.n	90007a0e <I2C_RequestMemoryWrite+0x52>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900079f2:	b2e4      	uxtb	r4, r4
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
900079f4:	2200      	movs	r2, #0
900079f6:	2180      	movs	r1, #128	; 0x80
900079f8:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900079fa:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
900079fc:	463b      	mov	r3, r7
900079fe:	f8cd 8000 	str.w	r8, [sp]
90007a02:	f7ff ff89 	bl	90007918 <I2C_WaitOnFlagUntilTimeout>
    return HAL_ERROR;
90007a06:	3800      	subs	r0, #0
90007a08:	bf18      	it	ne
90007a0a:	2001      	movne	r0, #1
90007a0c:	e7eb      	b.n	900079e6 <I2C_RequestMemoryWrite+0x2a>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90007a0e:	0a22      	lsrs	r2, r4, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90007a10:	4639      	mov	r1, r7
90007a12:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90007a14:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90007a16:	4642      	mov	r2, r8
90007a18:	f7ff ffa8 	bl	9000796c <I2C_WaitOnTXISFlagUntilTimeout>
90007a1c:	2800      	cmp	r0, #0
90007a1e:	d1e1      	bne.n	900079e4 <I2C_RequestMemoryWrite+0x28>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90007a20:	682b      	ldr	r3, [r5, #0]
90007a22:	e7e6      	b.n	900079f2 <I2C_RequestMemoryWrite+0x36>
90007a24:	80002000 	.word	0x80002000

90007a28 <I2C_RequestMemoryRead>:
{
90007a28:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90007a2c:	461e      	mov	r6, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
90007a2e:	4b18      	ldr	r3, [pc, #96]	; (90007a90 <I2C_RequestMemoryRead+0x68>)
{
90007a30:	4605      	mov	r5, r0
90007a32:	4614      	mov	r4, r2
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
90007a34:	9300      	str	r3, [sp, #0]
90007a36:	b2f2      	uxtb	r2, r6
90007a38:	2300      	movs	r3, #0
{
90007a3a:	e9dd 7808 	ldrd	r7, r8, [sp, #32]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
90007a3e:	f7ff fef5 	bl	9000782c <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90007a42:	4628      	mov	r0, r5
90007a44:	4642      	mov	r2, r8
90007a46:	4639      	mov	r1, r7
90007a48:	f7ff ff90 	bl	9000796c <I2C_WaitOnTXISFlagUntilTimeout>
90007a4c:	b118      	cbz	r0, 90007a56 <I2C_RequestMemoryRead+0x2e>
    return HAL_ERROR;
90007a4e:	2001      	movs	r0, #1
}
90007a50:	b002      	add	sp, #8
90007a52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90007a56:	2e01      	cmp	r6, #1
90007a58:	682b      	ldr	r3, [r5, #0]
90007a5a:	d10d      	bne.n	90007a78 <I2C_RequestMemoryRead+0x50>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90007a5c:	b2e4      	uxtb	r4, r4
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90007a5e:	2200      	movs	r2, #0
90007a60:	2140      	movs	r1, #64	; 0x40
90007a62:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90007a64:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90007a66:	463b      	mov	r3, r7
90007a68:	f8cd 8000 	str.w	r8, [sp]
90007a6c:	f7ff ff54 	bl	90007918 <I2C_WaitOnFlagUntilTimeout>
    return HAL_ERROR;
90007a70:	3800      	subs	r0, #0
90007a72:	bf18      	it	ne
90007a74:	2001      	movne	r0, #1
90007a76:	e7eb      	b.n	90007a50 <I2C_RequestMemoryRead+0x28>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90007a78:	0a22      	lsrs	r2, r4, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90007a7a:	4639      	mov	r1, r7
90007a7c:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90007a7e:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90007a80:	4642      	mov	r2, r8
90007a82:	f7ff ff73 	bl	9000796c <I2C_WaitOnTXISFlagUntilTimeout>
90007a86:	2800      	cmp	r0, #0
90007a88:	d1e1      	bne.n	90007a4e <I2C_RequestMemoryRead+0x26>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90007a8a:	682b      	ldr	r3, [r5, #0]
90007a8c:	e7e6      	b.n	90007a5c <I2C_RequestMemoryRead+0x34>
90007a8e:	bf00      	nop
90007a90:	80002000 	.word	0x80002000

90007a94 <HAL_I2C_MspInit>:
}
90007a94:	4770      	bx	lr

90007a96 <HAL_I2C_Init>:
{
90007a96:	b510      	push	{r4, lr}
  if (hi2c == NULL)
90007a98:	4604      	mov	r4, r0
90007a9a:	2800      	cmp	r0, #0
90007a9c:	d04a      	beq.n	90007b34 <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
90007a9e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
90007aa2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90007aa6:	b91b      	cbnz	r3, 90007ab0 <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
90007aa8:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
90007aac:	f7ff fff2 	bl	90007a94 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
90007ab0:	2324      	movs	r3, #36	; 0x24
90007ab2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
90007ab6:	6823      	ldr	r3, [r4, #0]
90007ab8:	681a      	ldr	r2, [r3, #0]
90007aba:	f022 0201 	bic.w	r2, r2, #1
90007abe:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90007ac0:	6862      	ldr	r2, [r4, #4]
90007ac2:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
90007ac6:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90007ac8:	689a      	ldr	r2, [r3, #8]
90007aca:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
90007ace:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90007ad0:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
90007ad4:	2901      	cmp	r1, #1
90007ad6:	d124      	bne.n	90007b22 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90007ad8:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
90007adc:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90007ade:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90007ae0:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90007ae2:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
90007ae6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
90007aea:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90007aec:	68da      	ldr	r2, [r3, #12]
90007aee:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
90007af2:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
90007af4:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
90007af8:	430a      	orrs	r2, r1
90007afa:	69a1      	ldr	r1, [r4, #24]
90007afc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90007b00:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90007b02:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
90007b06:	430a      	orrs	r2, r1
90007b08:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90007b0a:	681a      	ldr	r2, [r3, #0]
90007b0c:	f042 0201 	orr.w	r2, r2, #1
90007b10:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
90007b12:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90007b14:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90007b16:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90007b1a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90007b1c:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
90007b20:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90007b22:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90007b26:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90007b28:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90007b2a:	d1d8      	bne.n	90007ade <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
90007b2c:	f44f 6200 	mov.w	r2, #2048	; 0x800
90007b30:	605a      	str	r2, [r3, #4]
90007b32:	e7d4      	b.n	90007ade <HAL_I2C_Init+0x48>
    return HAL_ERROR;
90007b34:	2001      	movs	r0, #1
90007b36:	e7f3      	b.n	90007b20 <HAL_I2C_Init+0x8a>

90007b38 <HAL_I2C_MspDeInit>:
90007b38:	4770      	bx	lr

90007b3a <HAL_I2C_DeInit>:
{
90007b3a:	b510      	push	{r4, lr}
  if (hi2c == NULL)
90007b3c:	4604      	mov	r4, r0
90007b3e:	b198      	cbz	r0, 90007b68 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
90007b40:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90007b42:	2324      	movs	r3, #36	; 0x24
90007b44:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
90007b48:	6813      	ldr	r3, [r2, #0]
90007b4a:	f023 0301 	bic.w	r3, r3, #1
90007b4e:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
90007b50:	f7ff fff2 	bl	90007b38 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90007b54:	2000      	movs	r0, #0
90007b56:	6460      	str	r0, [r4, #68]	; 0x44
  __HAL_UNLOCK(hi2c);
90007b58:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
90007b5c:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90007b60:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90007b62:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
90007b66:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90007b68:	2001      	movs	r0, #1
90007b6a:	e7fc      	b.n	90007b66 <HAL_I2C_DeInit+0x2c>

90007b6c <HAL_I2C_Mem_Write>:
{
90007b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007b70:	b085      	sub	sp, #20
90007b72:	469b      	mov	fp, r3
90007b74:	4604      	mov	r4, r0
90007b76:	460f      	mov	r7, r1
90007b78:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
90007b7c:	4692      	mov	sl, r2
90007b7e:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
90007b82:	9303      	str	r3, [sp, #12]
  if (hi2c->State == HAL_I2C_STATE_READY)
90007b84:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
90007b88:	2b20      	cmp	r3, #32
90007b8a:	f040 80a3 	bne.w	90007cd4 <HAL_I2C_Mem_Write+0x168>
    if ((pData == NULL) || (Size == 0U))
90007b8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90007b90:	b10b      	cbz	r3, 90007b96 <HAL_I2C_Mem_Write+0x2a>
90007b92:	9b03      	ldr	r3, [sp, #12]
90007b94:	b933      	cbnz	r3, 90007ba4 <HAL_I2C_Mem_Write+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90007b96:	f44f 7300 	mov.w	r3, #512	; 0x200
90007b9a:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
90007b9c:	2001      	movs	r0, #1
}
90007b9e:	b005      	add	sp, #20
90007ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
90007ba4:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90007ba8:	2b01      	cmp	r3, #1
90007baa:	f000 8093 	beq.w	90007cd4 <HAL_I2C_Mem_Write+0x168>
90007bae:	2501      	movs	r5, #1
90007bb0:	f880 5040 	strb.w	r5, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
90007bb4:	f7fe ffe2 	bl	90006b7c <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90007bb8:	2319      	movs	r3, #25
90007bba:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
90007bbc:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90007bbe:	462a      	mov	r2, r5
90007bc0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
90007bc4:	4620      	mov	r0, r4
90007bc6:	f7ff fea7 	bl	90007918 <I2C_WaitOnFlagUntilTimeout>
90007bca:	4680      	mov	r8, r0
90007bcc:	2800      	cmp	r0, #0
90007bce:	d1e5      	bne.n	90007b9c <HAL_I2C_Mem_Write+0x30>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90007bd0:	2321      	movs	r3, #33	; 0x21
    hi2c->XferISR   = NULL;
90007bd2:	6360      	str	r0, [r4, #52]	; 0x34
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
90007bd4:	4652      	mov	r2, sl
90007bd6:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90007bd8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90007bdc:	2340      	movs	r3, #64	; 0x40
90007bde:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
90007be2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90007be4:	6460      	str	r0, [r4, #68]	; 0x44
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
90007be6:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
90007be8:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
90007bea:	9b03      	ldr	r3, [sp, #12]
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
90007bec:	e9cd 9600 	strd	r9, r6, [sp]
    hi2c->XferCount = Size;
90007bf0:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
90007bf2:	465b      	mov	r3, fp
90007bf4:	f7ff fee2 	bl	900079bc <I2C_RequestMemoryWrite>
90007bf8:	b110      	cbz	r0, 90007c00 <HAL_I2C_Mem_Write+0x94>
      __HAL_UNLOCK(hi2c);
90007bfa:	f884 8040 	strb.w	r8, [r4, #64]	; 0x40
      return HAL_ERROR;
90007bfe:	e7cd      	b.n	90007b9c <HAL_I2C_Mem_Write+0x30>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90007c00:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90007c02:	b29b      	uxth	r3, r3
90007c04:	2bff      	cmp	r3, #255	; 0xff
90007c06:	d955      	bls.n	90007cb4 <HAL_I2C_Mem_Write+0x148>
      hi2c->XferSize = MAX_NBYTE_SIZE;
90007c08:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
90007c0a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
90007c0e:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = MAX_NBYTE_SIZE;
90007c10:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
90007c12:	4639      	mov	r1, r7
90007c14:	4620      	mov	r0, r4
90007c16:	f7ff fe09 	bl	9000782c <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90007c1a:	4632      	mov	r2, r6
90007c1c:	4649      	mov	r1, r9
90007c1e:	4620      	mov	r0, r4
90007c20:	f7ff fea4 	bl	9000796c <I2C_WaitOnTXISFlagUntilTimeout>
90007c24:	2800      	cmp	r0, #0
90007c26:	d1b9      	bne.n	90007b9c <HAL_I2C_Mem_Write+0x30>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90007c28:	6a63      	ldr	r3, [r4, #36]	; 0x24
90007c2a:	6822      	ldr	r2, [r4, #0]
90007c2c:	f813 1b01 	ldrb.w	r1, [r3], #1
90007c30:	6291      	str	r1, [r2, #40]	; 0x28
      hi2c->pBuffPtr++;
90007c32:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
90007c34:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
90007c36:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
90007c38:	3b01      	subs	r3, #1
      hi2c->XferSize--;
90007c3a:	3a01      	subs	r2, #1
      hi2c->XferCount--;
90007c3c:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
90007c3e:	b292      	uxth	r2, r2
      hi2c->XferCount--;
90007c40:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90007c42:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
90007c44:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90007c46:	b29b      	uxth	r3, r3
90007c48:	b1ab      	cbz	r3, 90007c76 <HAL_I2C_Mem_Write+0x10a>
90007c4a:	b9a2      	cbnz	r2, 90007c76 <HAL_I2C_Mem_Write+0x10a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90007c4c:	464b      	mov	r3, r9
90007c4e:	2180      	movs	r1, #128	; 0x80
90007c50:	4620      	mov	r0, r4
90007c52:	9600      	str	r6, [sp, #0]
90007c54:	f7ff fe60 	bl	90007918 <I2C_WaitOnFlagUntilTimeout>
90007c58:	2800      	cmp	r0, #0
90007c5a:	d19f      	bne.n	90007b9c <HAL_I2C_Mem_Write+0x30>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90007c5c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90007c5e:	b29b      	uxth	r3, r3
90007c60:	2bff      	cmp	r3, #255	; 0xff
90007c62:	d92f      	bls.n	90007cc4 <HAL_I2C_Mem_Write+0x158>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90007c64:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
90007c66:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
90007c6a:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90007c6c:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
90007c6e:	4639      	mov	r1, r7
90007c70:	4620      	mov	r0, r4
90007c72:	f7ff fddb 	bl	9000782c <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
90007c76:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90007c78:	b29b      	uxth	r3, r3
90007c7a:	2b00      	cmp	r3, #0
90007c7c:	d1cd      	bne.n	90007c1a <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90007c7e:	4632      	mov	r2, r6
90007c80:	4649      	mov	r1, r9
90007c82:	4620      	mov	r0, r4
90007c84:	f7ff fe23 	bl	900078ce <I2C_WaitOnSTOPFlagUntilTimeout>
90007c88:	2800      	cmp	r0, #0
90007c8a:	d187      	bne.n	90007b9c <HAL_I2C_Mem_Write+0x30>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007c8c:	6823      	ldr	r3, [r4, #0]
90007c8e:	2120      	movs	r1, #32
90007c90:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90007c92:	685a      	ldr	r2, [r3, #4]
90007c94:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
90007c98:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
90007c9c:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
90007ca0:	f022 0201 	bic.w	r2, r2, #1
90007ca4:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007ca6:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90007caa:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90007cae:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
90007cb2:	e774      	b.n	90007b9e <HAL_I2C_Mem_Write+0x32>
      hi2c->XferSize = hi2c->XferCount;
90007cb4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
90007cb6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
90007cba:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = hi2c->XferCount;
90007cbc:	b292      	uxth	r2, r2
90007cbe:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
90007cc0:	b2d2      	uxtb	r2, r2
90007cc2:	e7a6      	b.n	90007c12 <HAL_I2C_Mem_Write+0xa6>
          hi2c->XferSize = hi2c->XferCount;
90007cc4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
90007cc6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
90007cca:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
90007ccc:	b292      	uxth	r2, r2
90007cce:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
90007cd0:	b2d2      	uxtb	r2, r2
90007cd2:	e7cc      	b.n	90007c6e <HAL_I2C_Mem_Write+0x102>
    return HAL_BUSY;
90007cd4:	2002      	movs	r0, #2
90007cd6:	e762      	b.n	90007b9e <HAL_I2C_Mem_Write+0x32>

90007cd8 <HAL_I2C_Mem_Read>:
{
90007cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007cdc:	b085      	sub	sp, #20
90007cde:	469b      	mov	fp, r3
90007ce0:	4604      	mov	r4, r0
90007ce2:	460f      	mov	r7, r1
90007ce4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
90007ce8:	4692      	mov	sl, r2
90007cea:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
90007cee:	9303      	str	r3, [sp, #12]
  if (hi2c->State == HAL_I2C_STATE_READY)
90007cf0:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
90007cf4:	2b20      	cmp	r3, #32
90007cf6:	f040 80a7 	bne.w	90007e48 <HAL_I2C_Mem_Read+0x170>
    if ((pData == NULL) || (Size == 0U))
90007cfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90007cfc:	b10b      	cbz	r3, 90007d02 <HAL_I2C_Mem_Read+0x2a>
90007cfe:	9b03      	ldr	r3, [sp, #12]
90007d00:	b933      	cbnz	r3, 90007d10 <HAL_I2C_Mem_Read+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90007d02:	f44f 7300 	mov.w	r3, #512	; 0x200
90007d06:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
90007d08:	2001      	movs	r0, #1
}
90007d0a:	b005      	add	sp, #20
90007d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
90007d10:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90007d14:	2b01      	cmp	r3, #1
90007d16:	f000 8097 	beq.w	90007e48 <HAL_I2C_Mem_Read+0x170>
90007d1a:	2501      	movs	r5, #1
90007d1c:	f880 5040 	strb.w	r5, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
90007d20:	f7fe ff2c 	bl	90006b7c <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90007d24:	2319      	movs	r3, #25
90007d26:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
90007d28:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90007d2a:	462a      	mov	r2, r5
90007d2c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
90007d30:	4620      	mov	r0, r4
90007d32:	f7ff fdf1 	bl	90007918 <I2C_WaitOnFlagUntilTimeout>
90007d36:	4680      	mov	r8, r0
90007d38:	2800      	cmp	r0, #0
90007d3a:	d1e5      	bne.n	90007d08 <HAL_I2C_Mem_Read+0x30>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90007d3c:	2322      	movs	r3, #34	; 0x22
    hi2c->XferISR   = NULL;
90007d3e:	6360      	str	r0, [r4, #52]	; 0x34
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
90007d40:	4652      	mov	r2, sl
90007d42:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90007d44:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90007d48:	2340      	movs	r3, #64	; 0x40
90007d4a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
90007d4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90007d50:	6460      	str	r0, [r4, #68]	; 0x44
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
90007d52:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
90007d54:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
90007d56:	9b03      	ldr	r3, [sp, #12]
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
90007d58:	e9cd 9600 	strd	r9, r6, [sp]
    hi2c->XferCount = Size;
90007d5c:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
90007d5e:	465b      	mov	r3, fp
90007d60:	f7ff fe62 	bl	90007a28 <I2C_RequestMemoryRead>
90007d64:	b110      	cbz	r0, 90007d6c <HAL_I2C_Mem_Read+0x94>
      __HAL_UNLOCK(hi2c);
90007d66:	f884 8040 	strb.w	r8, [r4, #64]	; 0x40
      return HAL_ERROR;
90007d6a:	e7cd      	b.n	90007d08 <HAL_I2C_Mem_Read+0x30>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90007d6c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90007d6e:	b29b      	uxth	r3, r3
90007d70:	2bff      	cmp	r3, #255	; 0xff
90007d72:	4b36      	ldr	r3, [pc, #216]	; (90007e4c <HAL_I2C_Mem_Read+0x174>)
90007d74:	d958      	bls.n	90007e28 <HAL_I2C_Mem_Read+0x150>
      hi2c->XferSize = MAX_NBYTE_SIZE;
90007d76:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ);
90007d78:	9300      	str	r3, [sp, #0]
90007d7a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
90007d7e:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_READ);
90007d80:	4639      	mov	r1, r7
90007d82:	4620      	mov	r0, r4
90007d84:	f7ff fd52 	bl	9000782c <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
90007d88:	464b      	mov	r3, r9
90007d8a:	2200      	movs	r2, #0
90007d8c:	2104      	movs	r1, #4
90007d8e:	4620      	mov	r0, r4
90007d90:	9600      	str	r6, [sp, #0]
90007d92:	f7ff fdc1 	bl	90007918 <I2C_WaitOnFlagUntilTimeout>
90007d96:	2800      	cmp	r0, #0
90007d98:	d1b6      	bne.n	90007d08 <HAL_I2C_Mem_Read+0x30>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90007d9a:	6823      	ldr	r3, [r4, #0]
90007d9c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90007d9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90007da0:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
90007da2:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
90007da4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->pBuffPtr++;
90007da6:	3301      	adds	r3, #1
      hi2c->XferSize--;
90007da8:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
90007daa:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
90007dac:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
90007dae:	b292      	uxth	r2, r2
      hi2c->XferCount--;
90007db0:	3b01      	subs	r3, #1
      hi2c->XferSize--;
90007db2:	8522      	strh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
90007db4:	b29b      	uxth	r3, r3
90007db6:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90007db8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90007dba:	b29b      	uxth	r3, r3
90007dbc:	b1ab      	cbz	r3, 90007dea <HAL_I2C_Mem_Read+0x112>
90007dbe:	b9a2      	cbnz	r2, 90007dea <HAL_I2C_Mem_Read+0x112>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90007dc0:	464b      	mov	r3, r9
90007dc2:	2180      	movs	r1, #128	; 0x80
90007dc4:	4620      	mov	r0, r4
90007dc6:	9600      	str	r6, [sp, #0]
90007dc8:	f7ff fda6 	bl	90007918 <I2C_WaitOnFlagUntilTimeout>
90007dcc:	2800      	cmp	r0, #0
90007dce:	d19b      	bne.n	90007d08 <HAL_I2C_Mem_Read+0x30>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90007dd0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90007dd2:	b29b      	uxth	r3, r3
90007dd4:	2bff      	cmp	r3, #255	; 0xff
90007dd6:	d92f      	bls.n	90007e38 <HAL_I2C_Mem_Read+0x160>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90007dd8:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
90007dda:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
90007dde:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90007de0:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
90007de2:	4639      	mov	r1, r7
90007de4:	4620      	mov	r0, r4
90007de6:	f7ff fd21 	bl	9000782c <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
90007dea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90007dec:	b29b      	uxth	r3, r3
90007dee:	2b00      	cmp	r3, #0
90007df0:	d1ca      	bne.n	90007d88 <HAL_I2C_Mem_Read+0xb0>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90007df2:	4632      	mov	r2, r6
90007df4:	4649      	mov	r1, r9
90007df6:	4620      	mov	r0, r4
90007df8:	f7ff fd69 	bl	900078ce <I2C_WaitOnSTOPFlagUntilTimeout>
90007dfc:	2800      	cmp	r0, #0
90007dfe:	d183      	bne.n	90007d08 <HAL_I2C_Mem_Read+0x30>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007e00:	6823      	ldr	r3, [r4, #0]
90007e02:	2120      	movs	r1, #32
90007e04:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90007e06:	685a      	ldr	r2, [r3, #4]
90007e08:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
90007e0c:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
90007e10:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
90007e14:	f022 0201 	bic.w	r2, r2, #1
90007e18:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007e1a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90007e1e:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90007e22:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
90007e26:	e770      	b.n	90007d0a <HAL_I2C_Mem_Read+0x32>
      hi2c->XferSize = hi2c->XferCount;
90007e28:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_READ);
90007e2a:	9300      	str	r3, [sp, #0]
90007e2c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
      hi2c->XferSize = hi2c->XferCount;
90007e30:	b292      	uxth	r2, r2
90007e32:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_READ);
90007e34:	b2d2      	uxtb	r2, r2
90007e36:	e7a3      	b.n	90007d80 <HAL_I2C_Mem_Read+0xa8>
          hi2c->XferSize = hi2c->XferCount;
90007e38:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
90007e3a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
90007e3e:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
90007e40:	b292      	uxth	r2, r2
90007e42:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
90007e44:	b2d2      	uxtb	r2, r2
90007e46:	e7cc      	b.n	90007de2 <HAL_I2C_Mem_Read+0x10a>
    return HAL_BUSY;
90007e48:	2002      	movs	r0, #2
90007e4a:	e75e      	b.n	90007d0a <HAL_I2C_Mem_Read+0x32>
90007e4c:	80002400 	.word	0x80002400

90007e50 <HAL_I2C_GetState>:
  return hi2c->State;
90007e50:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
90007e54:	4770      	bx	lr

90007e56 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90007e56:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
90007e58:	4770      	bx	lr

90007e5a <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
90007e5a:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90007e5c:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
90007e60:	2b20      	cmp	r3, #32
90007e62:	b2dc      	uxtb	r4, r3
90007e64:	d11d      	bne.n	90007ea2 <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90007e66:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90007e6a:	2b01      	cmp	r3, #1
90007e6c:	d019      	beq.n	90007ea2 <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
90007e6e:	2324      	movs	r3, #36	; 0x24
90007e70:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90007e74:	6803      	ldr	r3, [r0, #0]
90007e76:	681a      	ldr	r2, [r3, #0]
90007e78:	f022 0201 	bic.w	r2, r2, #1
90007e7c:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90007e7e:	681a      	ldr	r2, [r3, #0]
90007e80:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
90007e84:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
90007e86:	681a      	ldr	r2, [r3, #0]
90007e88:	4311      	orrs	r1, r2
90007e8a:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
90007e8c:	681a      	ldr	r2, [r3, #0]
90007e8e:	f042 0201 	orr.w	r2, r2, #1
90007e92:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90007e94:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
90007e96:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90007e9a:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
90007e9e:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
90007ea0:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
90007ea2:	2002      	movs	r0, #2
90007ea4:	e7fc      	b.n	90007ea0 <HAL_I2CEx_ConfigAnalogFilter+0x46>

90007ea6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
90007ea6:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90007ea8:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
90007eac:	2b20      	cmp	r3, #32
90007eae:	b2dc      	uxtb	r4, r3
90007eb0:	d11c      	bne.n	90007eec <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90007eb2:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90007eb6:	2b01      	cmp	r3, #1
90007eb8:	d018      	beq.n	90007eec <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
90007eba:	2324      	movs	r3, #36	; 0x24
90007ebc:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90007ec0:	6803      	ldr	r3, [r0, #0]
90007ec2:	681a      	ldr	r2, [r3, #0]
90007ec4:	f022 0201 	bic.w	r2, r2, #1
90007ec8:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
90007eca:	681a      	ldr	r2, [r3, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
90007ecc:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
90007ed0:	ea42 2101 	orr.w	r1, r2, r1, lsl #8

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
90007ed4:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
90007ed6:	681a      	ldr	r2, [r3, #0]
90007ed8:	f042 0201 	orr.w	r2, r2, #1
90007edc:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90007ede:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
90007ee0:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90007ee4:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
90007ee8:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
90007eea:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
90007eec:	2002      	movs	r0, #2
90007eee:	e7fc      	b.n	90007eea <HAL_I2CEx_ConfigDigitalFilter+0x44>

90007ef0 <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90007ef0:	01d2      	lsls	r2, r2, #7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90007ef2:	f8d1 c000 	ldr.w	ip, [r1]
{
90007ef6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90007efa:	3284      	adds	r2, #132	; 0x84
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90007efc:	6804      	ldr	r4, [r0, #0]
90007efe:	684f      	ldr	r7, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90007f00:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90007f04:	18a3      	adds	r3, r4, r2
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90007f06:	68e5      	ldr	r5, [r4, #12]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
90007f08:	f04f 0e00 	mov.w	lr, #0
  tmp2 = (pLayerCfg->Alpha0 << 24U);
90007f0c:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90007f10:	6858      	ldr	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90007f12:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90007f16:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90007f1a:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90007f1c:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90007f1e:	68e0      	ldr	r0, [r4, #12]
90007f20:	f3c0 400b 	ubfx	r0, r0, #16, #12
90007f24:	4430      	add	r0, r6
90007f26:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90007f2a:	68cd      	ldr	r5, [r1, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90007f2c:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90007f2e:	68e0      	ldr	r0, [r4, #12]
90007f30:	f3c0 000a 	ubfx	r0, r0, #0, #11
90007f34:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90007f36:	6898      	ldr	r0, [r3, #8]
90007f38:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
90007f3c:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90007f3e:	6888      	ldr	r0, [r1, #8]
90007f40:	68e6      	ldr	r6, [r4, #12]
90007f42:	3001      	adds	r0, #1
90007f44:	f3c6 060a 	ubfx	r6, r6, #0, #11
90007f48:	4430      	add	r0, r6
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90007f4a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90007f4c:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
90007f50:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
90007f52:	6918      	ldr	r0, [r3, #16]
90007f54:	f020 0007 	bic.w	r0, r0, #7
90007f58:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90007f5a:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
90007f5c:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
90007f5e:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
90007f62:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
90007f66:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
90007f6a:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
90007f6e:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
90007f72:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90007f76:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
90007f7a:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
90007f7c:	6958      	ldr	r0, [r3, #20]
90007f7e:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
90007f82:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
90007f84:	6948      	ldr	r0, [r1, #20]
90007f86:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90007f88:	69d8      	ldr	r0, [r3, #28]
90007f8a:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
90007f8e:	f020 0007 	bic.w	r0, r0, #7
90007f92:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90007f94:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
90007f98:	4305      	orrs	r5, r0
90007f9a:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
90007f9c:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
90007f9e:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
90007fa0:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
90007fa4:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
90007fa6:	b31e      	cbz	r6, 90007ff0 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
90007fa8:	2e01      	cmp	r6, #1
90007faa:	d023      	beq.n	90007ff4 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
90007fac:	1eb0      	subs	r0, r6, #2
90007fae:	2802      	cmp	r0, #2
90007fb0:	d922      	bls.n	90007ff8 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
90007fb2:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
90007fb4:	bf0c      	ite	eq
90007fb6:	2002      	moveq	r0, #2
90007fb8:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
90007fba:	6add      	ldr	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90007fbc:	eba7 070c 	sub.w	r7, r7, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
90007fc0:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
90007fc4:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90007fc6:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90007fc8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90007fca:	4345      	muls	r5, r0
90007fcc:	4378      	muls	r0, r7
90007fce:	3007      	adds	r0, #7
90007fd0:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
90007fd4:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
90007fd6:	6b18      	ldr	r0, [r3, #48]	; 0x30
90007fd8:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
90007fdc:	f020 0007 	bic.w	r0, r0, #7
90007fe0:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90007fe2:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
90007fe4:	58a3      	ldr	r3, [r4, r2]
90007fe6:	f043 0301 	orr.w	r3, r3, #1
90007fea:	50a3      	str	r3, [r4, r2]
}
90007fec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
90007ff0:	2004      	movs	r0, #4
90007ff2:	e7e2      	b.n	90007fba <LTDC_SetConfig+0xca>
    tmp = 3U;
90007ff4:	2003      	movs	r0, #3
90007ff6:	e7e0      	b.n	90007fba <LTDC_SetConfig+0xca>
    tmp = 2U;
90007ff8:	2002      	movs	r0, #2
90007ffa:	e7de      	b.n	90007fba <LTDC_SetConfig+0xca>

90007ffc <HAL_LTDC_Init>:
{
90007ffc:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
90007ffe:	4604      	mov	r4, r0
90008000:	2800      	cmp	r0, #0
90008002:	d063      	beq.n	900080cc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
90008004:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
90008008:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000800c:	b91b      	cbnz	r3, 90008016 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
9000800e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
90008012:	f7fb fa67 	bl	900034e4 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
90008016:	2302      	movs	r3, #2
90008018:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000801c:	6823      	ldr	r3, [r4, #0]
9000801e:	699a      	ldr	r2, [r3, #24]
90008020:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
90008024:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90008026:	6999      	ldr	r1, [r3, #24]
90008028:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
9000802c:	4302      	orrs	r2, r0
9000802e:	68e0      	ldr	r0, [r4, #12]
90008030:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
90008032:	6920      	ldr	r0, [r4, #16]
90008034:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
90008036:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90008038:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000803a:	4925      	ldr	r1, [pc, #148]	; (900080d0 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000803c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000803e:	689a      	ldr	r2, [r3, #8]
90008040:	400a      	ands	r2, r1
90008042:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
90008044:	689a      	ldr	r2, [r3, #8]
90008046:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000804a:	69a0      	ldr	r0, [r4, #24]
9000804c:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000804e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
90008050:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
90008052:	68da      	ldr	r2, [r3, #12]
90008054:	400a      	ands	r2, r1
90008056:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
90008058:	68da      	ldr	r2, [r3, #12]
9000805a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000805e:	6a20      	ldr	r0, [r4, #32]
90008060:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
90008062:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
90008064:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
90008066:	691a      	ldr	r2, [r3, #16]
90008068:	400a      	ands	r2, r1
9000806a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000806c:	691a      	ldr	r2, [r3, #16]
9000806e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90008072:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90008074:	4302      	orrs	r2, r0
90008076:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
90008078:	695a      	ldr	r2, [r3, #20]
9000807a:	4011      	ands	r1, r2
9000807c:	6159      	str	r1, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
9000807e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
90008080:	695a      	ldr	r2, [r3, #20]
90008082:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90008086:	6b21      	ldr	r1, [r4, #48]	; 0x30
90008088:	430a      	orrs	r2, r1
9000808a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000808c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000808e:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90008092:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
90008096:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000809a:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000809c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
9000809e:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
900080a2:	430a      	orrs	r2, r1
900080a4:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
900080a8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
900080ac:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
900080ae:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
900080b0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900080b2:	f042 0206 	orr.w	r2, r2, #6
900080b6:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
900080b8:	699a      	ldr	r2, [r3, #24]
900080ba:	f042 0201 	orr.w	r2, r2, #1
900080be:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
900080c0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
900080c2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
900080c6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
900080ca:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
900080cc:	2001      	movs	r0, #1
900080ce:	e7fc      	b.n	900080ca <HAL_LTDC_Init+0xce>
900080d0:	f000f800 	.word	0xf000f800

900080d4 <HAL_LTDC_ErrorCallback>:
900080d4:	4770      	bx	lr

900080d6 <HAL_LTDC_ReloadEventCallback>:
900080d6:	4770      	bx	lr

900080d8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
900080d8:	6803      	ldr	r3, [r0, #0]
{
900080da:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
900080dc:	6b9e      	ldr	r6, [r3, #56]	; 0x38
{
900080de:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
900080e0:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
900080e2:	0772      	lsls	r2, r6, #29
900080e4:	d514      	bpl.n	90008110 <HAL_LTDC_IRQHandler+0x38>
900080e6:	0769      	lsls	r1, r5, #29
900080e8:	d512      	bpl.n	90008110 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
900080ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900080ec:	f022 0204 	bic.w	r2, r2, #4
900080f0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
900080f2:	2204      	movs	r2, #4
900080f4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
900080f6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
900080fa:	f043 0301 	orr.w	r3, r3, #1
900080fe:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
90008102:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
90008104:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
90008108:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000810c:	f7ff ffe2 	bl	900080d4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
90008110:	07b2      	lsls	r2, r6, #30
90008112:	d516      	bpl.n	90008142 <HAL_LTDC_IRQHandler+0x6a>
90008114:	07ab      	lsls	r3, r5, #30
90008116:	d514      	bpl.n	90008142 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90008118:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000811a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000811c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000811e:	f022 0202 	bic.w	r2, r2, #2
90008122:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
90008124:	2202      	movs	r2, #2
90008126:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
90008128:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000812c:	4313      	orrs	r3, r2
9000812e:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
90008132:	2304      	movs	r3, #4
90008134:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
90008138:	2300      	movs	r3, #0
9000813a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000813e:	f7ff ffc9 	bl	900080d4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
90008142:	07f0      	lsls	r0, r6, #31
90008144:	d510      	bpl.n	90008168 <HAL_LTDC_IRQHandler+0x90>
90008146:	07e9      	lsls	r1, r5, #31
90008148:	d50e      	bpl.n	90008168 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000814a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000814c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000814e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90008150:	f022 0201 	bic.w	r2, r2, #1
90008154:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
90008156:	2201      	movs	r2, #1
90008158:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000815a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000815c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
90008160:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
90008164:	f7fa fdea 	bl	90002d3c <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
90008168:	0732      	lsls	r2, r6, #28
9000816a:	d511      	bpl.n	90008190 <HAL_LTDC_IRQHandler+0xb8>
9000816c:	072b      	lsls	r3, r5, #28
9000816e:	d50f      	bpl.n	90008190 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90008170:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
90008172:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90008174:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90008176:	f022 0208 	bic.w	r2, r2, #8
9000817a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000817c:	2208      	movs	r2, #8
9000817e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
90008180:	2301      	movs	r3, #1
90008182:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
90008186:	2300      	movs	r3, #0
90008188:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000818c:	f7ff ffa3 	bl	900080d6 <HAL_LTDC_ReloadEventCallback>
}
90008190:	bd70      	pop	{r4, r5, r6, pc}

90008192 <HAL_LTDC_ConfigLayer>:
{
90008192:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
90008196:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
{
9000819a:	4606      	mov	r6, r0
9000819c:	460f      	mov	r7, r1
9000819e:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
900081a0:	2b01      	cmp	r3, #1
900081a2:	f04f 0002 	mov.w	r0, #2
900081a6:	d01f      	beq.n	900081e8 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
900081a8:	2434      	movs	r4, #52	; 0x34
  __HAL_LOCK(hltdc);
900081aa:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
900081ae:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
900081b0:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
900081b4:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
900081b8:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
900081bc:	3438      	adds	r4, #56	; 0x38
900081be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
900081c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900081c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
900081c4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900081c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
900081c8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900081ca:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
900081cc:	4630      	mov	r0, r6
900081ce:	4662      	mov	r2, ip
900081d0:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
900081d2:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
900081d4:	f7ff fe8c 	bl	90007ef0 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
900081d8:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
900081da:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
900081dc:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
900081e0:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
900081e4:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
900081e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900081ec <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
900081ec:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
900081f0:	2b01      	cmp	r3, #1
900081f2:	f04f 0302 	mov.w	r3, #2
900081f6:	d012      	beq.n	9000821e <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
900081f8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
900081fc:	6803      	ldr	r3, [r0, #0]
900081fe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90008200:	f022 0201 	bic.w	r2, r2, #1
90008204:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
90008206:	4a07      	ldr	r2, [pc, #28]	; (90008224 <HAL_LTDC_ProgramLineEvent+0x38>)
90008208:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000820a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000820c:	f042 0201 	orr.w	r2, r2, #1
90008210:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
90008212:	2301      	movs	r3, #1
90008214:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
90008218:	2300      	movs	r3, #0
9000821a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
9000821e:	4618      	mov	r0, r3
}
90008220:	4770      	bx	lr
90008222:	bf00      	nop
90008224:	50001000 	.word	0x50001000

90008228 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
90008228:	b538      	push	{r3, r4, r5, lr}
9000822a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000822c:	f7fe fca6 	bl	90006b7c <HAL_GetTick>
90008230:	4605      	mov	r5, r0

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
90008232:	2c00      	cmp	r4, #0
90008234:	d061      	beq.n	900082fa <HAL_MDMA_Init+0xd2>
  assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.SourceBlockAddressOffset));
  assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.DestBlockAddressOffset));


  /* Allocate lock resource */
  __HAL_UNLOCK(hmdma);
90008236:	2300      	movs	r3, #0

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
90008238:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hmdma);
9000823a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000823e:	2302      	movs	r3, #2
90008240:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_MDMA_DISABLE(hmdma);
90008244:	68d3      	ldr	r3, [r2, #12]
90008246:	f023 0301 	bic.w	r3, r3, #1
9000824a:	60d3      	str	r3, [r2, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000824c:	6823      	ldr	r3, [r4, #0]
9000824e:	68da      	ldr	r2, [r3, #12]
90008250:	07d2      	lsls	r2, r2, #31
90008252:	d448      	bmi.n	900082e6 <HAL_MDMA_Init+0xbe>
static void MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
  uint32_t blockoffset;

  /* Prepare the MDMA Channel configuration */
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
90008254:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
90008258:	430a      	orrs	r2, r1
9000825a:	60da      	str	r2, [r3, #12]
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000825c:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
90008260:	430a      	orrs	r2, r1
90008262:	69e1      	ldr	r1, [r4, #28]
90008264:	430a      	orrs	r2, r1
90008266:	6a21      	ldr	r1, [r4, #32]
90008268:	430a      	orrs	r2, r1
9000826a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000826c:	430a      	orrs	r2, r1
9000826e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90008270:	430a      	orrs	r2, r1
90008272:	6b21      	ldr	r1, [r4, #48]	; 0x30
90008274:	430a      	orrs	r2, r1
90008276:	68a1      	ldr	r1, [r4, #8]
90008278:	430a      	orrs	r2, r1
9000827a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000827c:	3901      	subs	r1, #1
9000827e:	ea42 4281 	orr.w	r2, r2, r1, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
90008282:	6861      	ldr	r1, [r4, #4]
90008284:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
90008288:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000828a:	d103      	bne.n	90008294 <HAL_MDMA_Init+0x6c>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000828c:	691a      	ldr	r2, [r3, #16]
9000828e:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
90008292:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
90008294:	2200      	movs	r2, #0
90008296:	615a      	str	r2, [r3, #20]

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
90008298:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000829a:	2a00      	cmp	r2, #0
9000829c:	da04      	bge.n	900082a8 <HAL_MDMA_Init+0x80>
  {
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000829e:	6958      	ldr	r0, [r3, #20]
    /* Write new CBRUR Register value : source repeat block offset */
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
900082a0:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
900082a2:	f440 2080 	orr.w	r0, r0, #262144	; 0x40000
900082a6:	6158      	str	r0, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
900082a8:	b292      	uxth	r2, r2
900082aa:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
900082ac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
900082ae:	2a00      	cmp	r2, #0
900082b0:	da25      	bge.n	900082fe <HAL_MDMA_Init+0xd6>
  {
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
900082b2:	6958      	ldr	r0, [r3, #20]
    /* Write new CBRUR Register value : destination repeat block offset */
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
900082b4:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
900082b6:	f440 2000 	orr.w	r0, r0, #524288	; 0x80000
900082ba:	6158      	str	r0, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
900082bc:	6a18      	ldr	r0, [r3, #32]
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
900082be:	ea40 4202 	orr.w	r2, r0, r2, lsl #16
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
900082c2:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
900082c6:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
900082c8:	f04f 0200 	mov.w	r2, #0
900082cc:	d019      	beq.n	90008302 <HAL_MDMA_Init+0xda>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
900082ce:	b2c9      	uxtb	r1, r1
900082d0:	6299      	str	r1, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
900082d2:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
900082d4:	2000      	movs	r0, #0
  hmdma->State = HAL_MDMA_STATE_READY;
900082d6:	2301      	movs	r3, #1
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
900082d8:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
900082da:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
900082dc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
900082e0:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
900082e4:	bd38      	pop	{r3, r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
900082e6:	f7fe fc49 	bl	90006b7c <HAL_GetTick>
900082ea:	1b40      	subs	r0, r0, r5
900082ec:	2805      	cmp	r0, #5
900082ee:	d9ad      	bls.n	9000824c <HAL_MDMA_Init+0x24>
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
900082f0:	2340      	movs	r3, #64	; 0x40
900082f2:	66a3      	str	r3, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
900082f4:	2303      	movs	r3, #3
900082f6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    return HAL_ERROR;
900082fa:	2001      	movs	r0, #1
900082fc:	e7f2      	b.n	900082e4 <HAL_MDMA_Init+0xbc>
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
900082fe:	6a18      	ldr	r0, [r3, #32]
90008300:	e7dd      	b.n	900082be <HAL_MDMA_Init+0x96>
    hmdma->Instance->CTBR = 0;
90008302:	629a      	str	r2, [r3, #40]	; 0x28
90008304:	e7e5      	b.n	900082d2 <HAL_MDMA_Init+0xaa>

90008306 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
90008306:	b1d8      	cbz	r0, 90008340 <HAL_MDMA_DeInit+0x3a>
  __HAL_MDMA_DISABLE(hmdma);
90008308:	6802      	ldr	r2, [r0, #0]
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000830a:	211f      	movs	r1, #31
  __HAL_MDMA_DISABLE(hmdma);
9000830c:	68d3      	ldr	r3, [r2, #12]
9000830e:	f023 0301 	bic.w	r3, r3, #1
90008312:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CCR  = 0;
90008314:	2300      	movs	r3, #0
90008316:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
90008318:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000831a:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000831c:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000831e:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
90008320:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
90008322:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
90008324:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
90008326:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
90008328:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000832a:	6051      	str	r1, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000832c:	6683      	str	r3, [r0, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000832e:	6643      	str	r3, [r0, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_RESET;
90008330:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
90008334:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  hmdma->LastLinkedListNodeAddress   = 0;
90008338:	e9c0 3317 	strd	r3, r3, [r0, #92]	; 0x5c
  return HAL_OK;
9000833c:	4618      	mov	r0, r3
9000833e:	4770      	bx	lr
    return HAL_ERROR;
90008340:	2001      	movs	r0, #1
}
90008342:	4770      	bx	lr

90008344 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
90008344:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
90008346:	4c10      	ldr	r4, [pc, #64]	; (90008388 <HAL_PWREx_ConfigSupply+0x44>)
90008348:	68e3      	ldr	r3, [r4, #12]
9000834a:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000834e:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
90008350:	d105      	bne.n	9000835e <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
90008352:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
90008356:	1a18      	subs	r0, r3, r0
90008358:	bf18      	it	ne
9000835a:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000835c:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000835e:	f023 0307 	bic.w	r3, r3, #7
90008362:	4318      	orrs	r0, r3
90008364:	60e0      	str	r0, [r4, #12]
  tickstart = HAL_GetTick ();
90008366:	f7fe fc09 	bl	90006b7c <HAL_GetTick>
9000836a:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000836c:	6863      	ldr	r3, [r4, #4]
9000836e:	049b      	lsls	r3, r3, #18
90008370:	d501      	bpl.n	90008376 <HAL_PWREx_ConfigSupply+0x32>
  return HAL_OK;
90008372:	2000      	movs	r0, #0
90008374:	e7f2      	b.n	9000835c <HAL_PWREx_ConfigSupply+0x18>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
90008376:	f7fe fc01 	bl	90006b7c <HAL_GetTick>
9000837a:	1b40      	subs	r0, r0, r5
9000837c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
90008380:	d9f4      	bls.n	9000836c <HAL_PWREx_ConfigSupply+0x28>
      return HAL_ERROR;
90008382:	2001      	movs	r0, #1
90008384:	e7ea      	b.n	9000835c <HAL_PWREx_ConfigSupply+0x18>
90008386:	bf00      	nop
90008388:	58024800 	.word	0x58024800

9000838c <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
9000838c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

    /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
9000838e:	4604      	mov	r4, r0
90008390:	2800      	cmp	r0, #0
90008392:	d074      	beq.n	9000847e <HAL_RCC_OscConfig+0xf2>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
90008394:	6803      	ldr	r3, [r0, #0]
90008396:	07d8      	lsls	r0, r3, #31
90008398:	d45e      	bmi.n	90008458 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000839a:	6823      	ldr	r3, [r4, #0]
9000839c:	0799      	lsls	r1, r3, #30
9000839e:	f100 80b0 	bmi.w	90008502 <HAL_RCC_OscConfig+0x176>
        }
      }
    }
  }
  /*----------------------------- CSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
900083a2:	6823      	ldr	r3, [r4, #0]
900083a4:	06da      	lsls	r2, r3, #27
900083a6:	d527      	bpl.n	900083f8 <HAL_RCC_OscConfig+0x6c>
    /* Check the parameters */
    assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
    assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));

    /* When the CSI is used as system clock it will not disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
900083a8:	4baa      	ldr	r3, [pc, #680]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
900083aa:	691a      	ldr	r2, [r3, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
900083ac:	6a99      	ldr	r1, [r3, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
900083ae:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
900083b2:	2a08      	cmp	r2, #8
900083b4:	d007      	beq.n	900083c6 <HAL_RCC_OscConfig+0x3a>
900083b6:	2a18      	cmp	r2, #24
900083b8:	f040 810e 	bne.w	900085d8 <HAL_RCC_OscConfig+0x24c>
900083bc:	f001 0203 	and.w	r2, r1, #3
900083c0:	2a01      	cmp	r2, #1
900083c2:	f040 8109 	bne.w	900085d8 <HAL_RCC_OscConfig+0x24c>
    {
      /* When CSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
900083c6:	681b      	ldr	r3, [r3, #0]
900083c8:	05db      	lsls	r3, r3, #23
900083ca:	d502      	bpl.n	900083d2 <HAL_RCC_OscConfig+0x46>
900083cc:	69e3      	ldr	r3, [r4, #28]
900083ce:	2b80      	cmp	r3, #128	; 0x80
900083d0:	d155      	bne.n	9000847e <HAL_RCC_OscConfig+0xf2>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
900083d2:	f7fe fbeb 	bl	90006bac <HAL_GetREVID>
900083d6:	f241 0303 	movw	r3, #4099	; 0x1003
900083da:	6a21      	ldr	r1, [r4, #32]
900083dc:	4298      	cmp	r0, r3
900083de:	4b9d      	ldr	r3, [pc, #628]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
900083e0:	f200 80f3 	bhi.w	900085ca <HAL_RCC_OscConfig+0x23e>
900083e4:	685a      	ldr	r2, [r3, #4]
900083e6:	2920      	cmp	r1, #32
900083e8:	f022 42f8 	bic.w	r2, r2, #2080374784	; 0x7c000000
900083ec:	bf0c      	ite	eq
900083ee:	f042 4280 	orreq.w	r2, r2, #1073741824	; 0x40000000
900083f2:	ea42 6281 	orrne.w	r2, r2, r1, lsl #26
900083f6:	605a      	str	r2, [r3, #4]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
900083f8:	6823      	ldr	r3, [r4, #0]
900083fa:	0719      	lsls	r1, r3, #28
900083fc:	f100 812e 	bmi.w	9000865c <HAL_RCC_OscConfig+0x2d0>
      }
    }
  }

  /*------------------------------ HSI48 Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
90008400:	6823      	ldr	r3, [r4, #0]
90008402:	069a      	lsls	r2, r3, #26
90008404:	f100 814f 	bmi.w	900086a6 <HAL_RCC_OscConfig+0x31a>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
90008408:	6823      	ldr	r3, [r4, #0]
9000840a:	075d      	lsls	r5, r3, #29
9000840c:	d51e      	bpl.n	9000844c <HAL_RCC_OscConfig+0xc0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
9000840e:	4d92      	ldr	r5, [pc, #584]	; (90008658 <HAL_RCC_OscConfig+0x2cc>)
90008410:	682b      	ldr	r3, [r5, #0]
90008412:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90008416:	602b      	str	r3, [r5, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
90008418:	f7fe fbb0 	bl	90006b7c <HAL_GetTick>
9000841c:	4606      	mov	r6, r0

    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000841e:	682b      	ldr	r3, [r5, #0]
90008420:	05da      	lsls	r2, r3, #23
90008422:	f140 8165 	bpl.w	900086f0 <HAL_RCC_OscConfig+0x364>
        return HAL_TIMEOUT;
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
90008426:	68a3      	ldr	r3, [r4, #8]
90008428:	4d8a      	ldr	r5, [pc, #552]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
9000842a:	2b01      	cmp	r3, #1
9000842c:	f040 8167 	bne.w	900086fe <HAL_RCC_OscConfig+0x372>
90008430:	6f2b      	ldr	r3, [r5, #112]	; 0x70
90008432:	f043 0301 	orr.w	r3, r3, #1
90008436:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
90008438:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000843c:	f7fe fb9e 	bl	90006b7c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
90008440:	4e84      	ldr	r6, [pc, #528]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
      tickstart = HAL_GetTick();
90008442:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
90008444:	6f33      	ldr	r3, [r6, #112]	; 0x70
90008446:	079b      	lsls	r3, r3, #30
90008448:	f140 817f 	bpl.w	9000874a <HAL_RCC_OscConfig+0x3be>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000844c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000844e:	2900      	cmp	r1, #0
90008450:	f040 8182 	bne.w	90008758 <HAL_RCC_OscConfig+0x3cc>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
90008454:	2000      	movs	r0, #0
90008456:	e02a      	b.n	900084ae <HAL_RCC_OscConfig+0x122>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
90008458:	4b7e      	ldr	r3, [pc, #504]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
9000845a:	691a      	ldr	r2, [r3, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000845c:	6a99      	ldr	r1, [r3, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000845e:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
90008462:	2a10      	cmp	r2, #16
90008464:	d005      	beq.n	90008472 <HAL_RCC_OscConfig+0xe6>
90008466:	2a18      	cmp	r2, #24
90008468:	d10b      	bne.n	90008482 <HAL_RCC_OscConfig+0xf6>
9000846a:	f001 0203 	and.w	r2, r1, #3
9000846e:	2a02      	cmp	r2, #2
90008470:	d107      	bne.n	90008482 <HAL_RCC_OscConfig+0xf6>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
90008472:	681b      	ldr	r3, [r3, #0]
90008474:	039a      	lsls	r2, r3, #14
90008476:	d590      	bpl.n	9000839a <HAL_RCC_OscConfig+0xe>
90008478:	6863      	ldr	r3, [r4, #4]
9000847a:	2b00      	cmp	r3, #0
9000847c:	d18d      	bne.n	9000839a <HAL_RCC_OscConfig+0xe>
        return HAL_ERROR;
9000847e:	2001      	movs	r0, #1
90008480:	e015      	b.n	900084ae <HAL_RCC_OscConfig+0x122>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
90008482:	6862      	ldr	r2, [r4, #4]
90008484:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
90008488:	d112      	bne.n	900084b0 <HAL_RCC_OscConfig+0x124>
9000848a:	681a      	ldr	r2, [r3, #0]
9000848c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
90008490:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
90008492:	f7fe fb73 	bl	90006b7c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
90008496:	4e6f      	ldr	r6, [pc, #444]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
        tickstart = HAL_GetTick();
90008498:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000849a:	6833      	ldr	r3, [r6, #0]
9000849c:	039b      	lsls	r3, r3, #14
9000849e:	f53f af7c 	bmi.w	9000839a <HAL_RCC_OscConfig+0xe>
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
900084a2:	f7fe fb6b 	bl	90006b7c <HAL_GetTick>
900084a6:	1b40      	subs	r0, r0, r5
900084a8:	2864      	cmp	r0, #100	; 0x64
900084aa:	d9f6      	bls.n	9000849a <HAL_RCC_OscConfig+0x10e>
            return HAL_TIMEOUT;
900084ac:	2003      	movs	r0, #3
}
900084ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
900084b0:	4d68      	ldr	r5, [pc, #416]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
900084b2:	682b      	ldr	r3, [r5, #0]
900084b4:	b99a      	cbnz	r2, 900084de <HAL_RCC_OscConfig+0x152>
900084b6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
900084ba:	602b      	str	r3, [r5, #0]
900084bc:	682b      	ldr	r3, [r5, #0]
900084be:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
900084c2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
900084c4:	f7fe fb5a 	bl	90006b7c <HAL_GetTick>
900084c8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
900084ca:	682b      	ldr	r3, [r5, #0]
900084cc:	039f      	lsls	r7, r3, #14
900084ce:	f57f af64 	bpl.w	9000839a <HAL_RCC_OscConfig+0xe>
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
900084d2:	f7fe fb53 	bl	90006b7c <HAL_GetTick>
900084d6:	1b80      	subs	r0, r0, r6
900084d8:	2864      	cmp	r0, #100	; 0x64
900084da:	d9f6      	bls.n	900084ca <HAL_RCC_OscConfig+0x13e>
900084dc:	e7e6      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
900084de:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
900084e2:	d107      	bne.n	900084f4 <HAL_RCC_OscConfig+0x168>
900084e4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
900084e8:	602b      	str	r3, [r5, #0]
900084ea:	682b      	ldr	r3, [r5, #0]
900084ec:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
900084f0:	602b      	str	r3, [r5, #0]
900084f2:	e7ce      	b.n	90008492 <HAL_RCC_OscConfig+0x106>
900084f4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
900084f8:	602b      	str	r3, [r5, #0]
900084fa:	682b      	ldr	r3, [r5, #0]
900084fc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
90008500:	e7f6      	b.n	900084f0 <HAL_RCC_OscConfig+0x164>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
90008502:	4b54      	ldr	r3, [pc, #336]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
90008504:	691a      	ldr	r2, [r3, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
90008506:	6a99      	ldr	r1, [r3, #40]	; 0x28
    if((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
90008508:	f012 0238 	ands.w	r2, r2, #56	; 0x38
9000850c:	d003      	beq.n	90008516 <HAL_RCC_OscConfig+0x18a>
9000850e:	2a18      	cmp	r2, #24
90008510:	d11f      	bne.n	90008552 <HAL_RCC_OscConfig+0x1c6>
90008512:	078e      	lsls	r6, r1, #30
90008514:	d11d      	bne.n	90008552 <HAL_RCC_OscConfig+0x1c6>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
90008516:	681b      	ldr	r3, [r3, #0]
90008518:	075d      	lsls	r5, r3, #29
9000851a:	d502      	bpl.n	90008522 <HAL_RCC_OscConfig+0x196>
9000851c:	68e3      	ldr	r3, [r4, #12]
9000851e:	2b00      	cmp	r3, #0
90008520:	d0ad      	beq.n	9000847e <HAL_RCC_OscConfig+0xf2>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
90008522:	f7fe fb43 	bl	90006bac <HAL_GetREVID>
90008526:	f241 0303 	movw	r3, #4099	; 0x1003
9000852a:	6921      	ldr	r1, [r4, #16]
9000852c:	4298      	cmp	r0, r3
9000852e:	4b49      	ldr	r3, [pc, #292]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
90008530:	685a      	ldr	r2, [r3, #4]
90008532:	d809      	bhi.n	90008548 <HAL_RCC_OscConfig+0x1bc>
90008534:	f422 327c 	bic.w	r2, r2, #258048	; 0x3f000
90008538:	2940      	cmp	r1, #64	; 0x40
9000853a:	bf0c      	ite	eq
9000853c:	f442 3200 	orreq.w	r2, r2, #131072	; 0x20000
90008540:	ea42 3201 	orrne.w	r2, r2, r1, lsl #12
90008544:	605a      	str	r2, [r3, #4]
90008546:	e72c      	b.n	900083a2 <HAL_RCC_OscConfig+0x16>
90008548:	f022 42fe 	bic.w	r2, r2, #2130706432	; 0x7f000000
9000854c:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
90008550:	e7f8      	b.n	90008544 <HAL_RCC_OscConfig+0x1b8>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
90008552:	68e1      	ldr	r1, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
90008554:	681a      	ldr	r2, [r3, #0]
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
90008556:	b339      	cbz	r1, 900085a8 <HAL_RCC_OscConfig+0x21c>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
90008558:	f022 0219 	bic.w	r2, r2, #25
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000855c:	4d3d      	ldr	r5, [pc, #244]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000855e:	430a      	orrs	r2, r1
90008560:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
90008562:	f7fe fb0b 	bl	90006b7c <HAL_GetTick>
90008566:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
90008568:	682b      	ldr	r3, [r5, #0]
9000856a:	0758      	lsls	r0, r3, #29
9000856c:	d511      	bpl.n	90008592 <HAL_RCC_OscConfig+0x206>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000856e:	f7fe fb1d 	bl	90006bac <HAL_GetREVID>
90008572:	f241 0303 	movw	r3, #4099	; 0x1003
90008576:	6922      	ldr	r2, [r4, #16]
90008578:	4298      	cmp	r0, r3
9000857a:	686b      	ldr	r3, [r5, #4]
9000857c:	d80f      	bhi.n	9000859e <HAL_RCC_OscConfig+0x212>
9000857e:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
90008582:	2a40      	cmp	r2, #64	; 0x40
90008584:	bf0c      	ite	eq
90008586:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000858a:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000858e:	606b      	str	r3, [r5, #4]
90008590:	e707      	b.n	900083a2 <HAL_RCC_OscConfig+0x16>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
90008592:	f7fe faf3 	bl	90006b7c <HAL_GetTick>
90008596:	1b80      	subs	r0, r0, r6
90008598:	2802      	cmp	r0, #2
9000859a:	d9e5      	bls.n	90008568 <HAL_RCC_OscConfig+0x1dc>
9000859c:	e786      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000859e:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
900085a2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
900085a6:	e7f2      	b.n	9000858e <HAL_RCC_OscConfig+0x202>
        __HAL_RCC_HSI_DISABLE();
900085a8:	f022 0201 	bic.w	r2, r2, #1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
900085ac:	4e29      	ldr	r6, [pc, #164]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
        __HAL_RCC_HSI_DISABLE();
900085ae:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
900085b0:	f7fe fae4 	bl	90006b7c <HAL_GetTick>
900085b4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
900085b6:	6833      	ldr	r3, [r6, #0]
900085b8:	0759      	lsls	r1, r3, #29
900085ba:	f57f aef2 	bpl.w	900083a2 <HAL_RCC_OscConfig+0x16>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
900085be:	f7fe fadd 	bl	90006b7c <HAL_GetTick>
900085c2:	1b40      	subs	r0, r0, r5
900085c4:	2802      	cmp	r0, #2
900085c6:	d9f6      	bls.n	900085b6 <HAL_RCC_OscConfig+0x22a>
900085c8:	e770      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
900085ca:	68da      	ldr	r2, [r3, #12]
900085cc:	f022 527c 	bic.w	r2, r2, #1056964608	; 0x3f000000
900085d0:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
900085d4:	60da      	str	r2, [r3, #12]
900085d6:	e70f      	b.n	900083f8 <HAL_RCC_OscConfig+0x6c>
      if((RCC_OscInitStruct->CSIState)!= RCC_CSI_OFF)
900085d8:	69e2      	ldr	r2, [r4, #28]
900085da:	b34a      	cbz	r2, 90008630 <HAL_RCC_OscConfig+0x2a4>
        __HAL_RCC_CSI_ENABLE();
900085dc:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
900085de:	4d1d      	ldr	r5, [pc, #116]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
        __HAL_RCC_CSI_ENABLE();
900085e0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900085e4:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
900085e6:	f7fe fac9 	bl	90006b7c <HAL_GetTick>
900085ea:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
900085ec:	682b      	ldr	r3, [r5, #0]
900085ee:	05df      	lsls	r7, r3, #23
900085f0:	d511      	bpl.n	90008616 <HAL_RCC_OscConfig+0x28a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
900085f2:	f7fe fadb 	bl	90006bac <HAL_GetREVID>
900085f6:	f241 0303 	movw	r3, #4099	; 0x1003
900085fa:	6a22      	ldr	r2, [r4, #32]
900085fc:	4298      	cmp	r0, r3
900085fe:	d810      	bhi.n	90008622 <HAL_RCC_OscConfig+0x296>
90008600:	686b      	ldr	r3, [r5, #4]
90008602:	2a20      	cmp	r2, #32
90008604:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
90008608:	bf0c      	ite	eq
9000860a:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000860e:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
90008612:	606b      	str	r3, [r5, #4]
90008614:	e6f0      	b.n	900083f8 <HAL_RCC_OscConfig+0x6c>
          if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
90008616:	f7fe fab1 	bl	90006b7c <HAL_GetTick>
9000861a:	1b80      	subs	r0, r0, r6
9000861c:	2802      	cmp	r0, #2
9000861e:	d9e5      	bls.n	900085ec <HAL_RCC_OscConfig+0x260>
90008620:	e744      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
90008622:	68eb      	ldr	r3, [r5, #12]
90008624:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
90008628:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000862c:	60eb      	str	r3, [r5, #12]
9000862e:	e6e3      	b.n	900083f8 <HAL_RCC_OscConfig+0x6c>
        __HAL_RCC_CSI_DISABLE();
90008630:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
90008632:	4e08      	ldr	r6, [pc, #32]	; (90008654 <HAL_RCC_OscConfig+0x2c8>)
        __HAL_RCC_CSI_DISABLE();
90008634:	f022 0280 	bic.w	r2, r2, #128	; 0x80
90008638:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000863a:	f7fe fa9f 	bl	90006b7c <HAL_GetTick>
9000863e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
90008640:	6833      	ldr	r3, [r6, #0]
90008642:	05d8      	lsls	r0, r3, #23
90008644:	f57f aed8 	bpl.w	900083f8 <HAL_RCC_OscConfig+0x6c>
          if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
90008648:	f7fe fa98 	bl	90006b7c <HAL_GetTick>
9000864c:	1b40      	subs	r0, r0, r5
9000864e:	2802      	cmp	r0, #2
90008650:	d9f6      	bls.n	90008640 <HAL_RCC_OscConfig+0x2b4>
90008652:	e72b      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
90008654:	58024400 	.word	0x58024400
90008658:	58024800 	.word	0x58024800
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
9000865c:	6963      	ldr	r3, [r4, #20]
9000865e:	4d96      	ldr	r5, [pc, #600]	; (900088b8 <HAL_RCC_OscConfig+0x52c>)
90008660:	b183      	cbz	r3, 90008684 <HAL_RCC_OscConfig+0x2f8>
      __HAL_RCC_LSI_ENABLE();
90008662:	6f6b      	ldr	r3, [r5, #116]	; 0x74
90008664:	f043 0301 	orr.w	r3, r3, #1
90008668:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000866a:	f7fe fa87 	bl	90006b7c <HAL_GetTick>
9000866e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
90008670:	6f6b      	ldr	r3, [r5, #116]	; 0x74
90008672:	079b      	lsls	r3, r3, #30
90008674:	f53f aec4 	bmi.w	90008400 <HAL_RCC_OscConfig+0x74>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
90008678:	f7fe fa80 	bl	90006b7c <HAL_GetTick>
9000867c:	1b80      	subs	r0, r0, r6
9000867e:	2802      	cmp	r0, #2
90008680:	d9f6      	bls.n	90008670 <HAL_RCC_OscConfig+0x2e4>
90008682:	e713      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
      __HAL_RCC_LSI_DISABLE();
90008684:	6f6b      	ldr	r3, [r5, #116]	; 0x74
90008686:	f023 0301 	bic.w	r3, r3, #1
9000868a:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000868c:	f7fe fa76 	bl	90006b7c <HAL_GetTick>
90008690:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
90008692:	6f6b      	ldr	r3, [r5, #116]	; 0x74
90008694:	079f      	lsls	r7, r3, #30
90008696:	f57f aeb3 	bpl.w	90008400 <HAL_RCC_OscConfig+0x74>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
9000869a:	f7fe fa6f 	bl	90006b7c <HAL_GetTick>
9000869e:	1b80      	subs	r0, r0, r6
900086a0:	2802      	cmp	r0, #2
900086a2:	d9f6      	bls.n	90008692 <HAL_RCC_OscConfig+0x306>
900086a4:	e702      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
    if((RCC_OscInitStruct->HSI48State)!= RCC_HSI48_OFF)
900086a6:	69a3      	ldr	r3, [r4, #24]
900086a8:	4d83      	ldr	r5, [pc, #524]	; (900088b8 <HAL_RCC_OscConfig+0x52c>)
900086aa:	b183      	cbz	r3, 900086ce <HAL_RCC_OscConfig+0x342>
      __HAL_RCC_HSI48_ENABLE();
900086ac:	682b      	ldr	r3, [r5, #0]
900086ae:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
900086b2:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
900086b4:	f7fe fa62 	bl	90006b7c <HAL_GetTick>
900086b8:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
900086ba:	682b      	ldr	r3, [r5, #0]
900086bc:	0498      	lsls	r0, r3, #18
900086be:	f53f aea3 	bmi.w	90008408 <HAL_RCC_OscConfig+0x7c>
        if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
900086c2:	f7fe fa5b 	bl	90006b7c <HAL_GetTick>
900086c6:	1b80      	subs	r0, r0, r6
900086c8:	2802      	cmp	r0, #2
900086ca:	d9f6      	bls.n	900086ba <HAL_RCC_OscConfig+0x32e>
900086cc:	e6ee      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
      __HAL_RCC_HSI48_DISABLE();
900086ce:	682b      	ldr	r3, [r5, #0]
900086d0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
900086d4:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
900086d6:	f7fe fa51 	bl	90006b7c <HAL_GetTick>
900086da:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
900086dc:	682b      	ldr	r3, [r5, #0]
900086de:	0499      	lsls	r1, r3, #18
900086e0:	f57f ae92 	bpl.w	90008408 <HAL_RCC_OscConfig+0x7c>
        if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
900086e4:	f7fe fa4a 	bl	90006b7c <HAL_GetTick>
900086e8:	1b80      	subs	r0, r0, r6
900086ea:	2802      	cmp	r0, #2
900086ec:	d9f6      	bls.n	900086dc <HAL_RCC_OscConfig+0x350>
900086ee:	e6dd      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
900086f0:	f7fe fa44 	bl	90006b7c <HAL_GetTick>
900086f4:	1b80      	subs	r0, r0, r6
900086f6:	2864      	cmp	r0, #100	; 0x64
900086f8:	f67f ae91 	bls.w	9000841e <HAL_RCC_OscConfig+0x92>
900086fc:	e6d6      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
900086fe:	b9b3      	cbnz	r3, 9000872e <HAL_RCC_OscConfig+0x3a2>
90008700:	6f2b      	ldr	r3, [r5, #112]	; 0x70
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
90008702:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
90008706:	f023 0301 	bic.w	r3, r3, #1
9000870a:	672b      	str	r3, [r5, #112]	; 0x70
9000870c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000870e:	f023 0304 	bic.w	r3, r3, #4
90008712:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
90008714:	f7fe fa32 	bl	90006b7c <HAL_GetTick>
90008718:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000871a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000871c:	0798      	lsls	r0, r3, #30
9000871e:	f57f ae95 	bpl.w	9000844c <HAL_RCC_OscConfig+0xc0>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
90008722:	f7fe fa2b 	bl	90006b7c <HAL_GetTick>
90008726:	1b80      	subs	r0, r0, r6
90008728:	42b8      	cmp	r0, r7
9000872a:	d9f6      	bls.n	9000871a <HAL_RCC_OscConfig+0x38e>
9000872c:	e6be      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000872e:	2b05      	cmp	r3, #5
90008730:	6f2b      	ldr	r3, [r5, #112]	; 0x70
90008732:	d103      	bne.n	9000873c <HAL_RCC_OscConfig+0x3b0>
90008734:	f043 0304 	orr.w	r3, r3, #4
90008738:	672b      	str	r3, [r5, #112]	; 0x70
9000873a:	e679      	b.n	90008430 <HAL_RCC_OscConfig+0xa4>
9000873c:	f023 0301 	bic.w	r3, r3, #1
90008740:	672b      	str	r3, [r5, #112]	; 0x70
90008742:	6f2b      	ldr	r3, [r5, #112]	; 0x70
90008744:	f023 0304 	bic.w	r3, r3, #4
90008748:	e675      	b.n	90008436 <HAL_RCC_OscConfig+0xaa>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
9000874a:	f7fe fa17 	bl	90006b7c <HAL_GetTick>
9000874e:	1b40      	subs	r0, r0, r5
90008750:	42b8      	cmp	r0, r7
90008752:	f67f ae77 	bls.w	90008444 <HAL_RCC_OscConfig+0xb8>
90008756:	e6a9      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
90008758:	4d57      	ldr	r5, [pc, #348]	; (900088b8 <HAL_RCC_OscConfig+0x52c>)
9000875a:	692b      	ldr	r3, [r5, #16]
9000875c:	f003 0338 	and.w	r3, r3, #56	; 0x38
90008760:	2b18      	cmp	r3, #24
90008762:	d07a      	beq.n	9000885a <HAL_RCC_OscConfig+0x4ce>
        __HAL_RCC_PLL_DISABLE();
90008764:	682b      	ldr	r3, [r5, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
90008766:	2902      	cmp	r1, #2
        __HAL_RCC_PLL_DISABLE();
90008768:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000876c:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000876e:	d167      	bne.n	90008840 <HAL_RCC_OscConfig+0x4b4>
        tickstart = HAL_GetTick();
90008770:	f7fe fa04 	bl	90006b7c <HAL_GetTick>
90008774:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
90008776:	682b      	ldr	r3, [r5, #0]
90008778:	0199      	lsls	r1, r3, #6
9000877a:	d45b      	bmi.n	90008834 <HAL_RCC_OscConfig+0x4a8>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000877c:	6aab      	ldr	r3, [r5, #40]	; 0x28
9000877e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90008780:	f423 737c 	bic.w	r3, r3, #1008	; 0x3f0
90008784:	f023 0303 	bic.w	r3, r3, #3
90008788:	4313      	orrs	r3, r2
9000878a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000878c:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
90008790:	62ab      	str	r3, [r5, #40]	; 0x28
90008792:	6b63      	ldr	r3, [r4, #52]	; 0x34
90008794:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90008796:	3b01      	subs	r3, #1
90008798:	3a01      	subs	r2, #1
9000879a:	025b      	lsls	r3, r3, #9
9000879c:	0412      	lsls	r2, r2, #16
9000879e:	b29b      	uxth	r3, r3
900087a0:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
900087a4:	4313      	orrs	r3, r2
900087a6:	6b22      	ldr	r2, [r4, #48]	; 0x30
900087a8:	3a01      	subs	r2, #1
900087aa:	f3c2 0208 	ubfx	r2, r2, #0, #9
900087ae:	4313      	orrs	r3, r2
900087b0:	6be2      	ldr	r2, [r4, #60]	; 0x3c
900087b2:	3a01      	subs	r2, #1
900087b4:	0612      	lsls	r2, r2, #24
900087b6:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
900087ba:	4313      	orrs	r3, r2
900087bc:	632b      	str	r3, [r5, #48]	; 0x30
         __HAL_RCC_PLLFRACN_DISABLE();
900087be:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900087c0:	f023 0301 	bic.w	r3, r3, #1
900087c4:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
900087c6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
900087c8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
900087ca:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
900087ce:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
900087d2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
900087d6:	636b      	str	r3, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
900087d8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900087da:	6c22      	ldr	r2, [r4, #64]	; 0x40
900087dc:	f023 030c 	bic.w	r3, r3, #12
900087e0:	4313      	orrs	r3, r2
900087e2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
900087e4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900087e6:	6c62      	ldr	r2, [r4, #68]	; 0x44
900087e8:	f023 0302 	bic.w	r3, r3, #2
900087ec:	4313      	orrs	r3, r2
900087ee:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
900087f0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900087f2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
900087f6:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
900087f8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900087fa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
900087fe:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
90008800:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
90008802:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
90008806:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLFRACN_ENABLE();
90008808:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000880a:	f043 0301 	orr.w	r3, r3, #1
9000880e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
90008810:	682b      	ldr	r3, [r5, #0]
90008812:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
90008816:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
90008818:	f7fe f9b0 	bl	90006b7c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000881c:	4d26      	ldr	r5, [pc, #152]	; (900088b8 <HAL_RCC_OscConfig+0x52c>)
        tickstart = HAL_GetTick();
9000881e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
90008820:	682b      	ldr	r3, [r5, #0]
90008822:	019a      	lsls	r2, r3, #6
90008824:	f53f ae16 	bmi.w	90008454 <HAL_RCC_OscConfig+0xc8>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
90008828:	f7fe f9a8 	bl	90006b7c <HAL_GetTick>
9000882c:	1b00      	subs	r0, r0, r4
9000882e:	2802      	cmp	r0, #2
90008830:	d9f6      	bls.n	90008820 <HAL_RCC_OscConfig+0x494>
90008832:	e63b      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
90008834:	f7fe f9a2 	bl	90006b7c <HAL_GetTick>
90008838:	1b80      	subs	r0, r0, r6
9000883a:	2802      	cmp	r0, #2
9000883c:	d99b      	bls.n	90008776 <HAL_RCC_OscConfig+0x3ea>
9000883e:	e635      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
        tickstart = HAL_GetTick();
90008840:	f7fe f99c 	bl	90006b7c <HAL_GetTick>
90008844:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
90008846:	682b      	ldr	r3, [r5, #0]
90008848:	019b      	lsls	r3, r3, #6
9000884a:	f57f ae03 	bpl.w	90008454 <HAL_RCC_OscConfig+0xc8>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
9000884e:	f7fe f995 	bl	90006b7c <HAL_GetTick>
90008852:	1b00      	subs	r0, r0, r4
90008854:	2802      	cmp	r0, #2
90008856:	d9f6      	bls.n	90008846 <HAL_RCC_OscConfig+0x4ba>
90008858:	e628      	b.n	900084ac <HAL_RCC_OscConfig+0x120>
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000885a:	2901      	cmp	r1, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000885c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000885e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
90008860:	f43f ae0d 	beq.w	9000847e <HAL_RCC_OscConfig+0xf2>
	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
90008864:	f002 0103 	and.w	r1, r2, #3
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
90008868:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000886a:	4281      	cmp	r1, r0
9000886c:	f47f ae07 	bne.w	9000847e <HAL_RCC_OscConfig+0xf2>
         ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
90008870:	f3c2 1205 	ubfx	r2, r2, #4, #6
	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
90008874:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90008876:	428a      	cmp	r2, r1
90008878:	f47f ae01 	bne.w	9000847e <HAL_RCC_OscConfig+0xf2>
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000887c:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000887e:	f3c3 0108 	ubfx	r1, r3, #0, #9
90008882:	3a01      	subs	r2, #1
         ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
90008884:	4291      	cmp	r1, r2
90008886:	f47f adfa 	bne.w	9000847e <HAL_RCC_OscConfig+0xf2>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000888a:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000888c:	f3c3 2146 	ubfx	r1, r3, #9, #7
90008890:	3a01      	subs	r2, #1
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
90008892:	4291      	cmp	r1, r2
90008894:	f47f adf3 	bne.w	9000847e <HAL_RCC_OscConfig+0xf2>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
90008898:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000889a:	f3c3 4106 	ubfx	r1, r3, #16, #7
9000889e:	3a01      	subs	r2, #1
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
900088a0:	4291      	cmp	r1, r2
900088a2:	f47f adec 	bne.w	9000847e <HAL_RCC_OscConfig+0xf2>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
900088a6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
900088a8:	f3c3 6306 	ubfx	r3, r3, #24, #7
900088ac:	3a01      	subs	r2, #1
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
900088ae:	4293      	cmp	r3, r2
900088b0:	f43f add0 	beq.w	90008454 <HAL_RCC_OscConfig+0xc8>
900088b4:	e5e3      	b.n	9000847e <HAL_RCC_OscConfig+0xf2>
900088b6:	bf00      	nop
900088b8:	58024400 	.word	0x58024400

900088bc <HAL_RCC_GetSysClockFreq>:
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
900088bc:	4b48      	ldr	r3, [pc, #288]	; (900089e0 <HAL_RCC_GetSysClockFreq+0x124>)
900088be:	691a      	ldr	r2, [r3, #16]
900088c0:	f002 0238 	and.w	r2, r2, #56	; 0x38
900088c4:	2a10      	cmp	r2, #16
{
900088c6:	b530      	push	{r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
900088c8:	f000 8086 	beq.w	900089d8 <HAL_RCC_GetSysClockFreq+0x11c>
900088cc:	2a18      	cmp	r2, #24
900088ce:	d00c      	beq.n	900088ea <HAL_RCC_GetSysClockFreq+0x2e>
900088d0:	2a00      	cmp	r2, #0
900088d2:	f040 8083 	bne.w	900089dc <HAL_RCC_GetSysClockFreq+0x120>
  {
  case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

   if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
900088d6:	681a      	ldr	r2, [r3, #0]
900088d8:	4842      	ldr	r0, [pc, #264]	; (900089e4 <HAL_RCC_GetSysClockFreq+0x128>)
900088da:	f012 0f20 	tst.w	r2, #32
900088de:	d003      	beq.n	900088e8 <HAL_RCC_GetSysClockFreq+0x2c>
      {
        sysclockfreq = (uint32_t) (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
900088e0:	681b      	ldr	r3, [r3, #0]
900088e2:	f3c3 03c1 	ubfx	r3, r3, #3, #2
900088e6:	40d8      	lsrs	r0, r3
    sysclockfreq = CSI_VALUE;
    break;
  }

  return sysclockfreq;
}
900088e8:	bd30      	pop	{r4, r5, pc}
    pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
900088ea:	6a99      	ldr	r1, [r3, #40]	; 0x28
    pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
900088ec:	6a9d      	ldr	r5, [r3, #40]	; 0x28
    pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
900088ee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    if (pllm != 0U)
900088f0:	f415 7f7c 	tst.w	r5, #1008	; 0x3f0
    pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
900088f4:	f3c5 1005 	ubfx	r0, r5, #4, #6
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
900088f8:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    if (pllm != 0U)
900088fa:	d0f5      	beq.n	900088e8 <HAL_RCC_GetSysClockFreq+0x2c>
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
900088fc:	f3c4 04cc 	ubfx	r4, r4, #3, #13
    pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
90008900:	f002 0201 	and.w	r2, r2, #1
90008904:	ee07 0a90 	vmov	s15, r0
    pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
90008908:	f001 0103 	and.w	r1, r1, #3
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
9000890c:	4362      	muls	r2, r4
9000890e:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
90008912:	eef8 6ae7 	vcvt.f32.s32	s13, s15
90008916:	2901      	cmp	r1, #1
90008918:	ee07 2a90 	vmov	s15, r2
9000891c:	eefa 7ae9 	vcvt.f32.s32	s15, s15, #13
90008920:	d04c      	beq.n	900089bc <HAL_RCC_GetSysClockFreq+0x100>
90008922:	2902      	cmp	r1, #2
90008924:	d03c      	beq.n	900089a0 <HAL_RCC_GetSysClockFreq+0xe4>
90008926:	2900      	cmp	r1, #0
90008928:	d148      	bne.n	900089bc <HAL_RCC_GetSysClockFreq+0x100>
       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000892a:	681a      	ldr	r2, [r3, #0]
9000892c:	0692      	lsls	r2, r2, #26
9000892e:	d527      	bpl.n	90008980 <HAL_RCC_GetSysClockFreq+0xc4>
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
90008930:	6819      	ldr	r1, [r3, #0]
90008932:	4a2c      	ldr	r2, [pc, #176]	; (900089e4 <HAL_RCC_GetSysClockFreq+0x128>)
90008934:	f3c1 01c1 	ubfx	r1, r1, #3, #2
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
90008938:	6b1b      	ldr	r3, [r3, #48]	; 0x30
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9000893a:	40ca      	lsrs	r2, r1
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
9000893c:	f3c3 0308 	ubfx	r3, r3, #0, #9
90008940:	ee07 2a10 	vmov	s14, r2
90008944:	eef8 5ac7 	vcvt.f32.s32	s11, s14
90008948:	ee85 7aa6 	vdiv.f32	s14, s11, s13
9000894c:	ee06 3a90 	vmov	s13, r3
90008950:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90008954:	ee76 7aa7 	vadd.f32	s15, s13, s15
90008958:	ee77 7a86 	vadd.f32	s15, s15, s12
      pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
9000895c:	4b20      	ldr	r3, [pc, #128]	; (900089e0 <HAL_RCC_GetSysClockFreq+0x124>)
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
9000895e:	ee67 7a87 	vmul.f32	s15, s15, s14
      pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
90008962:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90008964:	f3c3 2346 	ubfx	r3, r3, #9, #7
90008968:	3301      	adds	r3, #1
      sysclockfreq =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
9000896a:	ee07 3a10 	vmov	s14, r3
9000896e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
90008972:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90008976:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000897a:	ee17 0a90 	vmov	r0, s15
9000897e:	e7b3      	b.n	900088e8 <HAL_RCC_GetSysClockFreq+0x2c>
          pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
90008980:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90008982:	f3c3 0308 	ubfx	r3, r3, #0, #9
90008986:	ee07 3a10 	vmov	s14, r3
9000898a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000898e:	ee77 7a27 	vadd.f32	s15, s14, s15
90008992:	ee77 7a86 	vadd.f32	s15, s15, s12
90008996:	ed9f 6a14 	vldr	s12, [pc, #80]	; 900089e8 <HAL_RCC_GetSysClockFreq+0x12c>
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
9000899a:	ee86 7a26 	vdiv.f32	s14, s12, s13
9000899e:	e7dd      	b.n	9000895c <HAL_RCC_GetSysClockFreq+0xa0>
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
900089a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900089a2:	f3c3 0308 	ubfx	r3, r3, #0, #9
900089a6:	ee07 3a10 	vmov	s14, r3
900089aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900089ae:	ee77 7a27 	vadd.f32	s15, s14, s15
900089b2:	ee77 7a86 	vadd.f32	s15, s15, s12
900089b6:	ed9f 6a0d 	vldr	s12, [pc, #52]	; 900089ec <HAL_RCC_GetSysClockFreq+0x130>
900089ba:	e7ee      	b.n	9000899a <HAL_RCC_GetSysClockFreq+0xde>
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
900089bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900089be:	f3c3 0308 	ubfx	r3, r3, #0, #9
900089c2:	ee07 3a10 	vmov	s14, r3
900089c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900089ca:	ee77 7a27 	vadd.f32	s15, s14, s15
900089ce:	ee77 7a86 	vadd.f32	s15, s15, s12
900089d2:	ed9f 6a07 	vldr	s12, [pc, #28]	; 900089f0 <HAL_RCC_GetSysClockFreq+0x134>
900089d6:	e7e0      	b.n	9000899a <HAL_RCC_GetSysClockFreq+0xde>
  switch (RCC->CFGR & RCC_CFGR_SWS)
900089d8:	4806      	ldr	r0, [pc, #24]	; (900089f4 <HAL_RCC_GetSysClockFreq+0x138>)
900089da:	e785      	b.n	900088e8 <HAL_RCC_GetSysClockFreq+0x2c>
    sysclockfreq = CSI_VALUE;
900089dc:	4806      	ldr	r0, [pc, #24]	; (900089f8 <HAL_RCC_GetSysClockFreq+0x13c>)
900089de:	e783      	b.n	900088e8 <HAL_RCC_GetSysClockFreq+0x2c>
900089e0:	58024400 	.word	0x58024400
900089e4:	03d09000 	.word	0x03d09000
900089e8:	4c742400 	.word	0x4c742400
900089ec:	4bbebc20 	.word	0x4bbebc20
900089f0:	4a742400 	.word	0x4a742400
900089f4:	017d7840 	.word	0x017d7840
900089f8:	003d0900 	.word	0x003d0900

900089fc <HAL_RCC_ClockConfig>:
{
900089fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90008a00:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
90008a02:	4604      	mov	r4, r0
90008a04:	b910      	cbnz	r0, 90008a0c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
90008a06:	2001      	movs	r0, #1
}
90008a08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
90008a0c:	4a88      	ldr	r2, [pc, #544]	; (90008c30 <HAL_RCC_ClockConfig+0x234>)
90008a0e:	6813      	ldr	r3, [r2, #0]
90008a10:	f003 030f 	and.w	r3, r3, #15
90008a14:	428b      	cmp	r3, r1
90008a16:	f0c0 8093 	bcc.w	90008b40 <HAL_RCC_ClockConfig+0x144>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
90008a1a:	6823      	ldr	r3, [r4, #0]
90008a1c:	075f      	lsls	r7, r3, #29
90008a1e:	f100 809b 	bmi.w	90008b58 <HAL_RCC_ClockConfig+0x15c>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
90008a22:	071e      	lsls	r6, r3, #28
90008a24:	d50b      	bpl.n	90008a3e <HAL_RCC_ClockConfig+0x42>
    if((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
90008a26:	4983      	ldr	r1, [pc, #524]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
90008a28:	6966      	ldr	r6, [r4, #20]
90008a2a:	69c8      	ldr	r0, [r1, #28]
90008a2c:	f000 0070 	and.w	r0, r0, #112	; 0x70
90008a30:	4286      	cmp	r6, r0
90008a32:	d904      	bls.n	90008a3e <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
90008a34:	69ca      	ldr	r2, [r1, #28]
90008a36:	f022 0270 	bic.w	r2, r2, #112	; 0x70
90008a3a:	4332      	orrs	r2, r6
90008a3c:	61ca      	str	r2, [r1, #28]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
90008a3e:	06d8      	lsls	r0, r3, #27
90008a40:	d50b      	bpl.n	90008a5a <HAL_RCC_ClockConfig+0x5e>
    if((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
90008a42:	497c      	ldr	r1, [pc, #496]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
90008a44:	69a6      	ldr	r6, [r4, #24]
90008a46:	69c8      	ldr	r0, [r1, #28]
90008a48:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
90008a4c:	4286      	cmp	r6, r0
90008a4e:	d904      	bls.n	90008a5a <HAL_RCC_ClockConfig+0x5e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
90008a50:	69ca      	ldr	r2, [r1, #28]
90008a52:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
90008a56:	4332      	orrs	r2, r6
90008a58:	61ca      	str	r2, [r1, #28]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
90008a5a:	0699      	lsls	r1, r3, #26
90008a5c:	d50b      	bpl.n	90008a76 <HAL_RCC_ClockConfig+0x7a>
    if((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
90008a5e:	4975      	ldr	r1, [pc, #468]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
90008a60:	69e6      	ldr	r6, [r4, #28]
90008a62:	6a08      	ldr	r0, [r1, #32]
90008a64:	f000 0070 	and.w	r0, r0, #112	; 0x70
90008a68:	4286      	cmp	r6, r0
90008a6a:	d904      	bls.n	90008a76 <HAL_RCC_ClockConfig+0x7a>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
90008a6c:	6a0a      	ldr	r2, [r1, #32]
90008a6e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
90008a72:	4332      	orrs	r2, r6
90008a74:	620a      	str	r2, [r1, #32]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
90008a76:	079a      	lsls	r2, r3, #30
90008a78:	d50b      	bpl.n	90008a92 <HAL_RCC_ClockConfig+0x96>
    if((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
90008a7a:	496e      	ldr	r1, [pc, #440]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
90008a7c:	68e6      	ldr	r6, [r4, #12]
90008a7e:	6988      	ldr	r0, [r1, #24]
90008a80:	f000 000f 	and.w	r0, r0, #15
90008a84:	4286      	cmp	r6, r0
90008a86:	d904      	bls.n	90008a92 <HAL_RCC_ClockConfig+0x96>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
90008a88:	698a      	ldr	r2, [r1, #24]
90008a8a:	f022 020f 	bic.w	r2, r2, #15
90008a8e:	4332      	orrs	r2, r6
90008a90:	618a      	str	r2, [r1, #24]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
90008a92:	07df      	lsls	r7, r3, #31
90008a94:	d46e      	bmi.n	90008b74 <HAL_RCC_ClockConfig+0x178>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
90008a96:	6823      	ldr	r3, [r4, #0]
90008a98:	079e      	lsls	r6, r3, #30
90008a9a:	f100 80a1 	bmi.w	90008be0 <HAL_RCC_ClockConfig+0x1e4>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
90008a9e:	4964      	ldr	r1, [pc, #400]	; (90008c30 <HAL_RCC_ClockConfig+0x234>)
90008aa0:	680a      	ldr	r2, [r1, #0]
90008aa2:	f002 020f 	and.w	r2, r2, #15
90008aa6:	42aa      	cmp	r2, r5
90008aa8:	f200 80a8 	bhi.w	90008bfc <HAL_RCC_ClockConfig+0x200>
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
90008aac:	0758      	lsls	r0, r3, #29
90008aae:	f100 80b1 	bmi.w	90008c14 <HAL_RCC_ClockConfig+0x218>
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
90008ab2:	0719      	lsls	r1, r3, #28
90008ab4:	d50b      	bpl.n	90008ace <HAL_RCC_ClockConfig+0xd2>
   if((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
90008ab6:	495f      	ldr	r1, [pc, #380]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
90008ab8:	6965      	ldr	r5, [r4, #20]
90008aba:	69c8      	ldr	r0, [r1, #28]
90008abc:	f000 0070 	and.w	r0, r0, #112	; 0x70
90008ac0:	4285      	cmp	r5, r0
90008ac2:	d204      	bcs.n	90008ace <HAL_RCC_ClockConfig+0xd2>
     MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
90008ac4:	69ca      	ldr	r2, [r1, #28]
90008ac6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
90008aca:	432a      	orrs	r2, r5
90008acc:	61ca      	str	r2, [r1, #28]
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
90008ace:	06da      	lsls	r2, r3, #27
90008ad0:	d50b      	bpl.n	90008aea <HAL_RCC_ClockConfig+0xee>
   if((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
90008ad2:	4958      	ldr	r1, [pc, #352]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
90008ad4:	69a5      	ldr	r5, [r4, #24]
90008ad6:	69c8      	ldr	r0, [r1, #28]
90008ad8:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
90008adc:	4285      	cmp	r5, r0
90008ade:	d204      	bcs.n	90008aea <HAL_RCC_ClockConfig+0xee>
     MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
90008ae0:	69ca      	ldr	r2, [r1, #28]
90008ae2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
90008ae6:	432a      	orrs	r2, r5
90008ae8:	61ca      	str	r2, [r1, #28]
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
90008aea:	069b      	lsls	r3, r3, #26
90008aec:	d50b      	bpl.n	90008b06 <HAL_RCC_ClockConfig+0x10a>
   if((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
90008aee:	4a51      	ldr	r2, [pc, #324]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
90008af0:	69e0      	ldr	r0, [r4, #28]
90008af2:	6a11      	ldr	r1, [r2, #32]
90008af4:	f001 0170 	and.w	r1, r1, #112	; 0x70
90008af8:	4288      	cmp	r0, r1
90008afa:	d204      	bcs.n	90008b06 <HAL_RCC_ClockConfig+0x10a>
     MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
90008afc:	6a13      	ldr	r3, [r2, #32]
90008afe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
90008b02:	4303      	orrs	r3, r0
90008b04:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008b06:	f7ff fed9 	bl	900088bc <HAL_RCC_GetSysClockFreq>
90008b0a:	494a      	ldr	r1, [pc, #296]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
90008b0c:	4a4a      	ldr	r2, [pc, #296]	; (90008c38 <HAL_RCC_ClockConfig+0x23c>)
90008b0e:	698b      	ldr	r3, [r1, #24]
90008b10:	f3c3 2303 	ubfx	r3, r3, #8, #4
90008b14:	5cd3      	ldrb	r3, [r2, r3]
90008b16:	f003 031f 	and.w	r3, r3, #31
90008b1a:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008b1c:	698b      	ldr	r3, [r1, #24]
90008b1e:	f003 030f 	and.w	r3, r3, #15
90008b22:	5cd3      	ldrb	r3, [r2, r3]
90008b24:	4a45      	ldr	r2, [pc, #276]	; (90008c3c <HAL_RCC_ClockConfig+0x240>)
90008b26:	f003 031f 	and.w	r3, r3, #31
90008b2a:	fa20 f303 	lsr.w	r3, r0, r3
90008b2e:	6013      	str	r3, [r2, #0]
  SystemCoreClock = common_system_clock;
90008b30:	4b43      	ldr	r3, [pc, #268]	; (90008c40 <HAL_RCC_ClockConfig+0x244>)
90008b32:	6018      	str	r0, [r3, #0]
  halstatus = HAL_InitTick (uwTickPrio);
90008b34:	4b43      	ldr	r3, [pc, #268]	; (90008c44 <HAL_RCC_ClockConfig+0x248>)
}
90008b36:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick (uwTickPrio);
90008b3a:	6818      	ldr	r0, [r3, #0]
90008b3c:	f7fa be7a 	b.w	90003834 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
90008b40:	6813      	ldr	r3, [r2, #0]
90008b42:	f023 030f 	bic.w	r3, r3, #15
90008b46:	430b      	orrs	r3, r1
90008b48:	6013      	str	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
90008b4a:	6813      	ldr	r3, [r2, #0]
90008b4c:	f003 030f 	and.w	r3, r3, #15
90008b50:	428b      	cmp	r3, r1
90008b52:	f47f af58 	bne.w	90008a06 <HAL_RCC_ClockConfig+0xa>
90008b56:	e760      	b.n	90008a1a <HAL_RCC_ClockConfig+0x1e>
    if((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
90008b58:	4936      	ldr	r1, [pc, #216]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
90008b5a:	6926      	ldr	r6, [r4, #16]
90008b5c:	6988      	ldr	r0, [r1, #24]
90008b5e:	f000 0070 	and.w	r0, r0, #112	; 0x70
90008b62:	4286      	cmp	r6, r0
90008b64:	f67f af5d 	bls.w	90008a22 <HAL_RCC_ClockConfig+0x26>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
90008b68:	698a      	ldr	r2, [r1, #24]
90008b6a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
90008b6e:	4332      	orrs	r2, r6
90008b70:	618a      	str	r2, [r1, #24]
90008b72:	e756      	b.n	90008a22 <HAL_RCC_ClockConfig+0x26>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
90008b74:	4b2f      	ldr	r3, [pc, #188]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
90008b76:	68a1      	ldr	r1, [r4, #8]
90008b78:	699a      	ldr	r2, [r3, #24]
90008b7a:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
90008b7e:	430a      	orrs	r2, r1
90008b80:	619a      	str	r2, [r3, #24]
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
90008b82:	6862      	ldr	r2, [r4, #4]
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
90008b84:	681b      	ldr	r3, [r3, #0]
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
90008b86:	2a02      	cmp	r2, #2
90008b88:	d11d      	bne.n	90008bc6 <HAL_RCC_ClockConfig+0x1ca>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
90008b8a:	f413 3f00 	tst.w	r3, #131072	; 0x20000
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
90008b8e:	f43f af3a 	beq.w	90008a06 <HAL_RCC_ClockConfig+0xa>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
90008b92:	4e28      	ldr	r6, [pc, #160]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
90008b94:	f241 3888 	movw	r8, #5000	; 0x1388
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
90008b98:	6933      	ldr	r3, [r6, #16]
90008b9a:	f023 0307 	bic.w	r3, r3, #7
90008b9e:	4313      	orrs	r3, r2
90008ba0:	6133      	str	r3, [r6, #16]
      tickstart = HAL_GetTick();
90008ba2:	f7fd ffeb 	bl	90006b7c <HAL_GetTick>
90008ba6:	4607      	mov	r7, r0
        while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
90008ba8:	6933      	ldr	r3, [r6, #16]
90008baa:	6862      	ldr	r2, [r4, #4]
90008bac:	f003 0338 	and.w	r3, r3, #56	; 0x38
90008bb0:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
90008bb4:	f43f af6f 	beq.w	90008a96 <HAL_RCC_ClockConfig+0x9a>
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
90008bb8:	f7fd ffe0 	bl	90006b7c <HAL_GetTick>
90008bbc:	1bc0      	subs	r0, r0, r7
90008bbe:	4540      	cmp	r0, r8
90008bc0:	d9f2      	bls.n	90008ba8 <HAL_RCC_ClockConfig+0x1ac>
            return HAL_TIMEOUT;
90008bc2:	2003      	movs	r0, #3
90008bc4:	e720      	b.n	90008a08 <HAL_RCC_ClockConfig+0xc>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
90008bc6:	2a03      	cmp	r2, #3
90008bc8:	d102      	bne.n	90008bd0 <HAL_RCC_ClockConfig+0x1d4>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
90008bca:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
90008bce:	e7de      	b.n	90008b8e <HAL_RCC_ClockConfig+0x192>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
90008bd0:	2a01      	cmp	r2, #1
90008bd2:	d102      	bne.n	90008bda <HAL_RCC_ClockConfig+0x1de>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
90008bd4:	f413 7f80 	tst.w	r3, #256	; 0x100
90008bd8:	e7d9      	b.n	90008b8e <HAL_RCC_ClockConfig+0x192>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
90008bda:	f013 0f04 	tst.w	r3, #4
90008bde:	e7d6      	b.n	90008b8e <HAL_RCC_ClockConfig+0x192>
    if((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
90008be0:	4914      	ldr	r1, [pc, #80]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
90008be2:	68e6      	ldr	r6, [r4, #12]
90008be4:	6988      	ldr	r0, [r1, #24]
90008be6:	f000 000f 	and.w	r0, r0, #15
90008bea:	4286      	cmp	r6, r0
90008bec:	f4bf af57 	bcs.w	90008a9e <HAL_RCC_ClockConfig+0xa2>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
90008bf0:	698a      	ldr	r2, [r1, #24]
90008bf2:	f022 020f 	bic.w	r2, r2, #15
90008bf6:	4332      	orrs	r2, r6
90008bf8:	618a      	str	r2, [r1, #24]
90008bfa:	e750      	b.n	90008a9e <HAL_RCC_ClockConfig+0xa2>
    __HAL_FLASH_SET_LATENCY(FLatency);
90008bfc:	680a      	ldr	r2, [r1, #0]
90008bfe:	f022 020f 	bic.w	r2, r2, #15
90008c02:	432a      	orrs	r2, r5
90008c04:	600a      	str	r2, [r1, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
90008c06:	680a      	ldr	r2, [r1, #0]
90008c08:	f002 020f 	and.w	r2, r2, #15
90008c0c:	42aa      	cmp	r2, r5
90008c0e:	f47f aefa 	bne.w	90008a06 <HAL_RCC_ClockConfig+0xa>
90008c12:	e74b      	b.n	90008aac <HAL_RCC_ClockConfig+0xb0>
   if((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
90008c14:	4907      	ldr	r1, [pc, #28]	; (90008c34 <HAL_RCC_ClockConfig+0x238>)
90008c16:	6925      	ldr	r5, [r4, #16]
90008c18:	6988      	ldr	r0, [r1, #24]
90008c1a:	f000 0070 	and.w	r0, r0, #112	; 0x70
90008c1e:	4285      	cmp	r5, r0
90008c20:	f4bf af47 	bcs.w	90008ab2 <HAL_RCC_ClockConfig+0xb6>
     MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
90008c24:	698a      	ldr	r2, [r1, #24]
90008c26:	f022 0270 	bic.w	r2, r2, #112	; 0x70
90008c2a:	432a      	orrs	r2, r5
90008c2c:	618a      	str	r2, [r1, #24]
90008c2e:	e740      	b.n	90008ab2 <HAL_RCC_ClockConfig+0xb6>
90008c30:	52002000 	.word	0x52002000
90008c34:	58024400 	.word	0x58024400
90008c38:	90021924 	.word	0x90021924
90008c3c:	24000040 	.word	0x24000040
90008c40:	2400003c 	.word	0x2400003c
90008c44:	24000048 	.word	0x24000048

90008c48 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
90008c48:	b510      	push	{r4, lr}
uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
90008c4a:	4c0c      	ldr	r4, [pc, #48]	; (90008c7c <HAL_RCC_GetHCLKFreq+0x34>)
90008c4c:	f7ff fe36 	bl	900088bc <HAL_RCC_GetSysClockFreq>
90008c50:	490b      	ldr	r1, [pc, #44]	; (90008c80 <HAL_RCC_GetHCLKFreq+0x38>)
90008c52:	69a3      	ldr	r3, [r4, #24]
90008c54:	f3c3 2303 	ubfx	r3, r3, #8, #4
90008c58:	5cca      	ldrb	r2, [r1, r3]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008c5a:	69a3      	ldr	r3, [r4, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
90008c5c:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008c60:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
90008c64:	fa20 f202 	lsr.w	r2, r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008c68:	5ccb      	ldrb	r3, [r1, r3]
90008c6a:	f003 031f 	and.w	r3, r3, #31
90008c6e:	fa22 f003 	lsr.w	r0, r2, r3
90008c72:	4b04      	ldr	r3, [pc, #16]	; (90008c84 <HAL_RCC_GetHCLKFreq+0x3c>)
90008c74:	6018      	str	r0, [r3, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90008c76:	4b04      	ldr	r3, [pc, #16]	; (90008c88 <HAL_RCC_GetHCLKFreq+0x40>)
90008c78:	601a      	str	r2, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
90008c7a:	bd10      	pop	{r4, pc}
90008c7c:	58024400 	.word	0x58024400
90008c80:	90021924 	.word	0x90021924
90008c84:	24000040 	.word	0x24000040
90008c88:	2400003c 	.word	0x2400003c

90008c8c <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
90008c8c:	b508      	push	{r3, lr}
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1)>> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
90008c8e:	f7ff ffdb 	bl	90008c48 <HAL_RCC_GetHCLKFreq>
90008c92:	4b05      	ldr	r3, [pc, #20]	; (90008ca8 <HAL_RCC_GetPCLK1Freq+0x1c>)
90008c94:	4a05      	ldr	r2, [pc, #20]	; (90008cac <HAL_RCC_GetPCLK1Freq+0x20>)
90008c96:	69db      	ldr	r3, [r3, #28]
90008c98:	f3c3 1302 	ubfx	r3, r3, #4, #3
90008c9c:	5cd3      	ldrb	r3, [r2, r3]
90008c9e:	f003 031f 	and.w	r3, r3, #31
#else
 /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1)>> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
90008ca2:	40d8      	lsrs	r0, r3
90008ca4:	bd08      	pop	{r3, pc}
90008ca6:	bf00      	nop
90008ca8:	58024400 	.word	0x58024400
90008cac:	90021924 	.word	0x90021924

90008cb0 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
90008cb0:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2)>> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
90008cb2:	f7ff ffc9 	bl	90008c48 <HAL_RCC_GetHCLKFreq>
90008cb6:	4b05      	ldr	r3, [pc, #20]	; (90008ccc <HAL_RCC_GetPCLK2Freq+0x1c>)
90008cb8:	4a05      	ldr	r2, [pc, #20]	; (90008cd0 <HAL_RCC_GetPCLK2Freq+0x20>)
90008cba:	69db      	ldr	r3, [r3, #28]
90008cbc:	f3c3 2302 	ubfx	r3, r3, #8, #3
90008cc0:	5cd3      	ldrb	r3, [r2, r3]
90008cc2:	f003 031f 	and.w	r3, r3, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2)>> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
90008cc6:	40d8      	lsrs	r0, r3
90008cc8:	bd08      	pop	{r3, pc}
90008cca:	bf00      	nop
90008ccc:	58024400 	.word	0x58024400
90008cd0:	90021924 	.word	0x90021924

90008cd4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
90008cd4:	233f      	movs	r3, #63	; 0x3f
90008cd6:	6003      	str	r3, [r0, #0]
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
90008cd8:	4b11      	ldr	r3, [pc, #68]	; (90008d20 <HAL_RCC_GetClockConfig+0x4c>)
90008cda:	691a      	ldr	r2, [r3, #16]
90008cdc:	f002 0207 	and.w	r2, r2, #7
90008ce0:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
90008ce2:	699a      	ldr	r2, [r3, #24]
90008ce4:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
90008ce8:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
90008cea:	699a      	ldr	r2, [r3, #24]
90008cec:	f002 020f 	and.w	r2, r2, #15
90008cf0:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
90008cf2:	699a      	ldr	r2, [r3, #24]
90008cf4:	f002 0270 	and.w	r2, r2, #112	; 0x70
90008cf8:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
90008cfa:	69da      	ldr	r2, [r3, #28]
90008cfc:	f002 0270 	and.w	r2, r2, #112	; 0x70
90008d00:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
90008d02:	69da      	ldr	r2, [r3, #28]
90008d04:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
90008d08:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
90008d0a:	6a1b      	ldr	r3, [r3, #32]
90008d0c:	f003 0370 	and.w	r3, r3, #112	; 0x70
90008d10:	61c3      	str	r3, [r0, #28]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
90008d12:	4b04      	ldr	r3, [pc, #16]	; (90008d24 <HAL_RCC_GetClockConfig+0x50>)
90008d14:	681b      	ldr	r3, [r3, #0]
90008d16:	f003 030f 	and.w	r3, r3, #15
90008d1a:	600b      	str	r3, [r1, #0]
}
90008d1c:	4770      	bx	lr
90008d1e:	bf00      	nop
90008d20:	58024400 	.word	0x58024400
90008d24:	52002000 	.word	0x52002000

90008d28 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
90008d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
90008d2a:	4c3a      	ldr	r4, [pc, #232]	; (90008e14 <RCCEx_PLL2_Config+0xec>)
{
90008d2c:	4606      	mov	r6, r0
90008d2e:	460d      	mov	r5, r1
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
90008d30:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90008d32:	f003 0303 	and.w	r3, r3, #3
90008d36:	2b03      	cmp	r3, #3
90008d38:	d069      	beq.n	90008e0e <RCCEx_PLL2_Config+0xe6>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
90008d3a:	6823      	ldr	r3, [r4, #0]
90008d3c:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
90008d40:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
90008d42:	f7fd ff1b 	bl	90006b7c <HAL_GetTick>
90008d46:	4607      	mov	r7, r0

    /* Wait till PLL is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
90008d48:	6823      	ldr	r3, [r4, #0]
90008d4a:	011a      	lsls	r2, r3, #4
90008d4c:	d44b      	bmi.n	90008de6 <RCCEx_PLL2_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
90008d4e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90008d50:	6832      	ldr	r2, [r6, #0]
90008d52:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
90008d56:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
90008d5a:	62a3      	str	r3, [r4, #40]	; 0x28
90008d5c:	68b3      	ldr	r3, [r6, #8]
90008d5e:	68f2      	ldr	r2, [r6, #12]
90008d60:	3b01      	subs	r3, #1
90008d62:	3a01      	subs	r2, #1
90008d64:	025b      	lsls	r3, r3, #9
90008d66:	0412      	lsls	r2, r2, #16
90008d68:	b29b      	uxth	r3, r3
90008d6a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
90008d6e:	4313      	orrs	r3, r2
90008d70:	6872      	ldr	r2, [r6, #4]
90008d72:	3a01      	subs	r2, #1
90008d74:	f3c2 0208 	ubfx	r2, r2, #0, #9
90008d78:	4313      	orrs	r3, r2
90008d7a:	6932      	ldr	r2, [r6, #16]
90008d7c:	3a01      	subs	r2, #1
90008d7e:	0612      	lsls	r2, r2, #24
90008d80:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
90008d84:	4313      	orrs	r3, r2
90008d86:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
90008d88:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90008d8a:	6972      	ldr	r2, [r6, #20]
90008d8c:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
90008d90:	4313      	orrs	r3, r2
90008d92:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
90008d94:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90008d96:	69b2      	ldr	r2, [r6, #24]
90008d98:	f023 0320 	bic.w	r3, r3, #32
90008d9c:	4313      	orrs	r3, r2
90008d9e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
90008da0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90008da2:	f023 0310 	bic.w	r3, r3, #16
90008da6:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
90008da8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90008daa:	69f2      	ldr	r2, [r6, #28]
90008dac:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
90008db0:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
90008db4:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
90008db8:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
90008dba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90008dbc:	f043 0310 	orr.w	r3, r3, #16
90008dc0:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if(Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
90008dc2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if(Divider == DIVIDER_P_UPDATE)
90008dc4:	b9b5      	cbnz	r5, 90008df4 <RCCEx_PLL2_Config+0xcc>
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
90008dc6:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
90008dca:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
90008dcc:	4c11      	ldr	r4, [pc, #68]	; (90008e14 <RCCEx_PLL2_Config+0xec>)
90008dce:	6823      	ldr	r3, [r4, #0]
90008dd0:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
90008dd4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
90008dd6:	f7fd fed1 	bl	90006b7c <HAL_GetTick>
90008dda:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
90008ddc:	6823      	ldr	r3, [r4, #0]
90008dde:	011b      	lsls	r3, r3, #4
90008de0:	d50f      	bpl.n	90008e02 <RCCEx_PLL2_Config+0xda>
    }

  }


  return status;
90008de2:	2000      	movs	r0, #0
90008de4:	e005      	b.n	90008df2 <RCCEx_PLL2_Config+0xca>
      if( (HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
90008de6:	f7fd fec9 	bl	90006b7c <HAL_GetTick>
90008dea:	1bc0      	subs	r0, r0, r7
90008dec:	2802      	cmp	r0, #2
90008dee:	d9ab      	bls.n	90008d48 <RCCEx_PLL2_Config+0x20>
        return HAL_TIMEOUT;
90008df0:	2003      	movs	r0, #3
}
90008df2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if(Divider == DIVIDER_Q_UPDATE)
90008df4:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
90008df6:	bf0c      	ite	eq
90008df8:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
90008dfc:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
90008e00:	e7e3      	b.n	90008dca <RCCEx_PLL2_Config+0xa2>
      if( (HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
90008e02:	f7fd febb 	bl	90006b7c <HAL_GetTick>
90008e06:	1b40      	subs	r0, r0, r5
90008e08:	2802      	cmp	r0, #2
90008e0a:	d9e7      	bls.n	90008ddc <RCCEx_PLL2_Config+0xb4>
90008e0c:	e7f0      	b.n	90008df0 <RCCEx_PLL2_Config+0xc8>
    return HAL_ERROR;
90008e0e:	2001      	movs	r0, #1
90008e10:	e7ef      	b.n	90008df2 <RCCEx_PLL2_Config+0xca>
90008e12:	bf00      	nop
90008e14:	58024400 	.word	0x58024400

90008e18 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
90008e18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
90008e1a:	4c3a      	ldr	r4, [pc, #232]	; (90008f04 <RCCEx_PLL3_Config+0xec>)
{
90008e1c:	4606      	mov	r6, r0
90008e1e:	460d      	mov	r5, r1
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
90008e20:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90008e22:	f003 0303 	and.w	r3, r3, #3
90008e26:	2b03      	cmp	r3, #3
90008e28:	d069      	beq.n	90008efe <RCCEx_PLL3_Config+0xe6>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
90008e2a:	6823      	ldr	r3, [r4, #0]
90008e2c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
90008e30:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
90008e32:	f7fd fea3 	bl	90006b7c <HAL_GetTick>
90008e36:	4607      	mov	r7, r0
    /* Wait till PLL3 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
90008e38:	6823      	ldr	r3, [r4, #0]
90008e3a:	009a      	lsls	r2, r3, #2
90008e3c:	d44b      	bmi.n	90008ed6 <RCCEx_PLL3_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
90008e3e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90008e40:	6832      	ldr	r2, [r6, #0]
90008e42:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
90008e46:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
90008e4a:	62a3      	str	r3, [r4, #40]	; 0x28
90008e4c:	68b3      	ldr	r3, [r6, #8]
90008e4e:	68f2      	ldr	r2, [r6, #12]
90008e50:	3b01      	subs	r3, #1
90008e52:	3a01      	subs	r2, #1
90008e54:	025b      	lsls	r3, r3, #9
90008e56:	0412      	lsls	r2, r2, #16
90008e58:	b29b      	uxth	r3, r3
90008e5a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
90008e5e:	4313      	orrs	r3, r2
90008e60:	6872      	ldr	r2, [r6, #4]
90008e62:	3a01      	subs	r2, #1
90008e64:	f3c2 0208 	ubfx	r2, r2, #0, #9
90008e68:	4313      	orrs	r3, r2
90008e6a:	6932      	ldr	r2, [r6, #16]
90008e6c:	3a01      	subs	r2, #1
90008e6e:	0612      	lsls	r2, r2, #24
90008e70:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
90008e74:	4313      	orrs	r3, r2
90008e76:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
90008e78:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90008e7a:	6972      	ldr	r2, [r6, #20]
90008e7c:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
90008e80:	4313      	orrs	r3, r2
90008e82:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
90008e84:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90008e86:	69b2      	ldr	r2, [r6, #24]
90008e88:	f423 7300 	bic.w	r3, r3, #512	; 0x200
90008e8c:	4313      	orrs	r3, r2
90008e8e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
90008e90:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90008e92:	f423 7380 	bic.w	r3, r3, #256	; 0x100
90008e96:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
90008e98:	6c63      	ldr	r3, [r4, #68]	; 0x44
90008e9a:	69f2      	ldr	r2, [r6, #28]
90008e9c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
90008ea0:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
90008ea4:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
90008ea8:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
90008eaa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90008eac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90008eb0:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if(Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
90008eb2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if(Divider == DIVIDER_P_UPDATE)
90008eb4:	b9b5      	cbnz	r5, 90008ee4 <RCCEx_PLL3_Config+0xcc>
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
90008eb6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
90008eba:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
90008ebc:	4c11      	ldr	r4, [pc, #68]	; (90008f04 <RCCEx_PLL3_Config+0xec>)
90008ebe:	6823      	ldr	r3, [r4, #0]
90008ec0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
90008ec4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
90008ec6:	f7fd fe59 	bl	90006b7c <HAL_GetTick>
90008eca:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
90008ecc:	6823      	ldr	r3, [r4, #0]
90008ece:	009b      	lsls	r3, r3, #2
90008ed0:	d50f      	bpl.n	90008ef2 <RCCEx_PLL3_Config+0xda>
    }

  }


  return status;
90008ed2:	2000      	movs	r0, #0
90008ed4:	e005      	b.n	90008ee2 <RCCEx_PLL3_Config+0xca>
      if( (HAL_GetTick() - tickstart ) > PLL3_TIMEOUT_VALUE)
90008ed6:	f7fd fe51 	bl	90006b7c <HAL_GetTick>
90008eda:	1bc0      	subs	r0, r0, r7
90008edc:	2802      	cmp	r0, #2
90008ede:	d9ab      	bls.n	90008e38 <RCCEx_PLL3_Config+0x20>
        return HAL_TIMEOUT;
90008ee0:	2003      	movs	r0, #3
}
90008ee2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if(Divider == DIVIDER_Q_UPDATE)
90008ee4:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
90008ee6:	bf0c      	ite	eq
90008ee8:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
90008eec:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
90008ef0:	e7e3      	b.n	90008eba <RCCEx_PLL3_Config+0xa2>
      if( (HAL_GetTick() - tickstart ) > PLL3_TIMEOUT_VALUE)
90008ef2:	f7fd fe43 	bl	90006b7c <HAL_GetTick>
90008ef6:	1b40      	subs	r0, r0, r5
90008ef8:	2802      	cmp	r0, #2
90008efa:	d9e7      	bls.n	90008ecc <RCCEx_PLL3_Config+0xb4>
90008efc:	e7f0      	b.n	90008ee0 <RCCEx_PLL3_Config+0xc8>
    return HAL_ERROR;
90008efe:	2001      	movs	r0, #1
90008f00:	e7ef      	b.n	90008ee2 <RCCEx_PLL3_Config+0xca>
90008f02:	bf00      	nop
90008f04:	58024400 	.word	0x58024400

90008f08 <HAL_RCCEx_PeriphCLKConfig>:
{
90008f08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
90008f0c:	6806      	ldr	r6, [r0, #0]
{
90008f0e:	4605      	mov	r5, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
90008f10:	f016 6600 	ands.w	r6, r6, #134217728	; 0x8000000
90008f14:	d009      	beq.n	90008f2a <HAL_RCCEx_PeriphCLKConfig+0x22>
    switch(PeriphClkInit->SpdifrxClockSelection)
90008f16:	6e43      	ldr	r3, [r0, #100]	; 0x64
90008f18:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
90008f1c:	d02e      	beq.n	90008f7c <HAL_RCCEx_PeriphCLKConfig+0x74>
90008f1e:	d813      	bhi.n	90008f48 <HAL_RCCEx_PeriphCLKConfig+0x40>
90008f20:	b1f3      	cbz	r3, 90008f60 <HAL_RCCEx_PeriphCLKConfig+0x58>
90008f22:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
90008f26:	d021      	beq.n	90008f6c <HAL_RCCEx_PeriphCLKConfig+0x64>
90008f28:	2601      	movs	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
90008f2a:	682b      	ldr	r3, [r5, #0]
90008f2c:	05dc      	lsls	r4, r3, #23
90008f2e:	f140 80ea 	bpl.w	90009106 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
    switch(PeriphClkInit->Sai1ClockSelection)
90008f32:	6d6b      	ldr	r3, [r5, #84]	; 0x54
90008f34:	2b04      	cmp	r3, #4
90008f36:	f200 80e5 	bhi.w	90009104 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
90008f3a:	e8df f013 	tbh	[pc, r3, lsl #1]
90008f3e:	0024      	.short	0x0024
90008f40:	00dd002b 	.word	0x00dd002b
90008f44:	00290029 	.word	0x00290029
    switch(PeriphClkInit->SpdifrxClockSelection)
90008f48:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
90008f4c:	d1ec      	bne.n	90008f28 <HAL_RCCEx_PeriphCLKConfig+0x20>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
90008f4e:	4ab3      	ldr	r2, [pc, #716]	; (9000921c <HAL_RCCEx_PeriphCLKConfig+0x314>)
90008f50:	2600      	movs	r6, #0
90008f52:	6e69      	ldr	r1, [r5, #100]	; 0x64
90008f54:	6d13      	ldr	r3, [r2, #80]	; 0x50
90008f56:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
90008f5a:	430b      	orrs	r3, r1
90008f5c:	6513      	str	r3, [r2, #80]	; 0x50
90008f5e:	e7e4      	b.n	90008f2a <HAL_RCCEx_PeriphCLKConfig+0x22>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
90008f60:	4aae      	ldr	r2, [pc, #696]	; (9000921c <HAL_RCCEx_PeriphCLKConfig+0x314>)
90008f62:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
90008f64:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90008f68:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
90008f6a:	e7f0      	b.n	90008f4e <HAL_RCCEx_PeriphCLKConfig+0x46>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
90008f6c:	2102      	movs	r1, #2
90008f6e:	3004      	adds	r0, #4
90008f70:	f7ff feda 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
90008f74:	4606      	mov	r6, r0
    if(ret == HAL_OK)
90008f76:	2800      	cmp	r0, #0
90008f78:	d1d7      	bne.n	90008f2a <HAL_RCCEx_PeriphCLKConfig+0x22>
90008f7a:	e7e8      	b.n	90008f4e <HAL_RCCEx_PeriphCLKConfig+0x46>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
90008f7c:	2102      	movs	r1, #2
90008f7e:	3024      	adds	r0, #36	; 0x24
90008f80:	f7ff ff4a 	bl	90008e18 <RCCEx_PLL3_Config>
90008f84:	e7f6      	b.n	90008f74 <HAL_RCCEx_PeriphCLKConfig+0x6c>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
90008f86:	4aa5      	ldr	r2, [pc, #660]	; (9000921c <HAL_RCCEx_PeriphCLKConfig+0x314>)
90008f88:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
90008f8a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90008f8e:	62d3      	str	r3, [r2, #44]	; 0x2c
    switch(PeriphClkInit->Sai1ClockSelection)
90008f90:	4634      	mov	r4, r6
90008f92:	e004      	b.n	90008f9e <HAL_RCCEx_PeriphCLKConfig+0x96>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
90008f94:	2100      	movs	r1, #0
90008f96:	1d28      	adds	r0, r5, #4
90008f98:	f7ff fec6 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
90008f9c:	4604      	mov	r4, r0
    if(ret == HAL_OK)
90008f9e:	2c00      	cmp	r4, #0
90008fa0:	f040 80b3 	bne.w	9000910a <HAL_RCCEx_PeriphCLKConfig+0x202>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
90008fa4:	4a9d      	ldr	r2, [pc, #628]	; (9000921c <HAL_RCCEx_PeriphCLKConfig+0x314>)
90008fa6:	6d69      	ldr	r1, [r5, #84]	; 0x54
90008fa8:	6d13      	ldr	r3, [r2, #80]	; 0x50
90008faa:	f023 0307 	bic.w	r3, r3, #7
90008fae:	430b      	orrs	r3, r1
90008fb0:	6513      	str	r3, [r2, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
90008fb2:	682b      	ldr	r3, [r5, #0]
90008fb4:	0598      	lsls	r0, r3, #22
90008fb6:	d50d      	bpl.n	90008fd4 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    switch(PeriphClkInit->Sai23ClockSelection)
90008fb8:	6dab      	ldr	r3, [r5, #88]	; 0x58
90008fba:	2b80      	cmp	r3, #128	; 0x80
90008fbc:	f000 80c2 	beq.w	90009144 <HAL_RCCEx_PeriphCLKConfig+0x23c>
90008fc0:	f200 80a5 	bhi.w	9000910e <HAL_RCCEx_PeriphCLKConfig+0x206>
90008fc4:	2b00      	cmp	r3, #0
90008fc6:	f000 80b1 	beq.w	9000912c <HAL_RCCEx_PeriphCLKConfig+0x224>
90008fca:	2b40      	cmp	r3, #64	; 0x40
90008fcc:	f000 80b4 	beq.w	90009138 <HAL_RCCEx_PeriphCLKConfig+0x230>
90008fd0:	2601      	movs	r6, #1
90008fd2:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
90008fd4:	682b      	ldr	r3, [r5, #0]
90008fd6:	0559      	lsls	r1, r3, #21
90008fd8:	d510      	bpl.n	90008ffc <HAL_RCCEx_PeriphCLKConfig+0xf4>
    switch(PeriphClkInit->Sai4AClockSelection)
90008fda:	f8d5 30a4 	ldr.w	r3, [r5, #164]	; 0xa4
90008fde:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
90008fe2:	f000 80d4 	beq.w	9000918e <HAL_RCCEx_PeriphCLKConfig+0x286>
90008fe6:	f200 80b5 	bhi.w	90009154 <HAL_RCCEx_PeriphCLKConfig+0x24c>
90008fea:	2b00      	cmp	r3, #0
90008fec:	f000 80c3 	beq.w	90009176 <HAL_RCCEx_PeriphCLKConfig+0x26e>
90008ff0:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
90008ff4:	f000 80c5 	beq.w	90009182 <HAL_RCCEx_PeriphCLKConfig+0x27a>
90008ff8:	2601      	movs	r6, #1
90008ffa:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
90008ffc:	682b      	ldr	r3, [r5, #0]
90008ffe:	051a      	lsls	r2, r3, #20
90009000:	d510      	bpl.n	90009024 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch(PeriphClkInit->Sai4BClockSelection)
90009002:	f8d5 30a8 	ldr.w	r3, [r5, #168]	; 0xa8
90009006:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
9000900a:	f000 80e5 	beq.w	900091d8 <HAL_RCCEx_PeriphCLKConfig+0x2d0>
9000900e:	f200 80c6 	bhi.w	9000919e <HAL_RCCEx_PeriphCLKConfig+0x296>
90009012:	2b00      	cmp	r3, #0
90009014:	f000 80d4 	beq.w	900091c0 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
90009018:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
9000901c:	f000 80d6 	beq.w	900091cc <HAL_RCCEx_PeriphCLKConfig+0x2c4>
90009020:	2601      	movs	r6, #1
90009022:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
90009024:	682b      	ldr	r3, [r5, #0]
90009026:	019b      	lsls	r3, r3, #6
90009028:	d50d      	bpl.n	90009046 <HAL_RCCEx_PeriphCLKConfig+0x13e>
    switch(PeriphClkInit->QspiClockSelection)
9000902a:	6cab      	ldr	r3, [r5, #72]	; 0x48
9000902c:	2b20      	cmp	r3, #32
9000902e:	f000 80ed 	beq.w	9000920c <HAL_RCCEx_PeriphCLKConfig+0x304>
90009032:	f200 80d9 	bhi.w	900091e8 <HAL_RCCEx_PeriphCLKConfig+0x2e0>
90009036:	2b00      	cmp	r3, #0
90009038:	f000 80d9 	beq.w	900091ee <HAL_RCCEx_PeriphCLKConfig+0x2e6>
9000903c:	2b10      	cmp	r3, #16
9000903e:	f000 80df 	beq.w	90009200 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
90009042:	2601      	movs	r6, #1
90009044:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
90009046:	682b      	ldr	r3, [r5, #0]
90009048:	04df      	lsls	r7, r3, #19
9000904a:	d50f      	bpl.n	9000906c <HAL_RCCEx_PeriphCLKConfig+0x164>
    switch(PeriphClkInit->Spi123ClockSelection)
9000904c:	6deb      	ldr	r3, [r5, #92]	; 0x5c
9000904e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
90009052:	f000 8101 	beq.w	90009258 <HAL_RCCEx_PeriphCLKConfig+0x350>
90009056:	f200 80e3 	bhi.w	90009220 <HAL_RCCEx_PeriphCLKConfig+0x318>
9000905a:	2b00      	cmp	r3, #0
9000905c:	f000 80f0 	beq.w	90009240 <HAL_RCCEx_PeriphCLKConfig+0x338>
90009060:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
90009064:	f000 80f2 	beq.w	9000924c <HAL_RCCEx_PeriphCLKConfig+0x344>
90009068:	2601      	movs	r6, #1
9000906a:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000906c:	682b      	ldr	r3, [r5, #0]
9000906e:	0498      	lsls	r0, r3, #18
90009070:	d50f      	bpl.n	90009092 <HAL_RCCEx_PeriphCLKConfig+0x18a>
    switch(PeriphClkInit->Spi45ClockSelection)
90009072:	6e2b      	ldr	r3, [r5, #96]	; 0x60
90009074:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
90009078:	f000 810e 	beq.w	90009298 <HAL_RCCEx_PeriphCLKConfig+0x390>
9000907c:	f200 80f4 	bhi.w	90009268 <HAL_RCCEx_PeriphCLKConfig+0x360>
90009080:	2b00      	cmp	r3, #0
90009082:	f000 80fa 	beq.w	9000927a <HAL_RCCEx_PeriphCLKConfig+0x372>
90009086:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000908a:	f000 80ff 	beq.w	9000928c <HAL_RCCEx_PeriphCLKConfig+0x384>
9000908e:	2601      	movs	r6, #1
90009090:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
90009092:	682b      	ldr	r3, [r5, #0]
90009094:	0459      	lsls	r1, r3, #17
90009096:	d510      	bpl.n	900090ba <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    switch(PeriphClkInit->Spi6ClockSelection)
90009098:	f8d5 30ac 	ldr.w	r3, [r5, #172]	; 0xac
9000909c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
900090a0:	f000 811b 	beq.w	900092da <HAL_RCCEx_PeriphCLKConfig+0x3d2>
900090a4:	f200 8100 	bhi.w	900092a8 <HAL_RCCEx_PeriphCLKConfig+0x3a0>
900090a8:	2b00      	cmp	r3, #0
900090aa:	f000 8106 	beq.w	900092ba <HAL_RCCEx_PeriphCLKConfig+0x3b2>
900090ae:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
900090b2:	f000 810c 	beq.w	900092ce <HAL_RCCEx_PeriphCLKConfig+0x3c6>
900090b6:	2601      	movs	r6, #1
900090b8:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
900090ba:	682b      	ldr	r3, [r5, #0]
900090bc:	041a      	lsls	r2, r3, #16
900090be:	d50d      	bpl.n	900090dc <HAL_RCCEx_PeriphCLKConfig+0x1d4>
    switch(PeriphClkInit->FdcanClockSelection)
900090c0:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
900090c2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
900090c6:	f000 8110 	beq.w	900092ea <HAL_RCCEx_PeriphCLKConfig+0x3e2>
900090ca:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
900090ce:	f000 811a 	beq.w	90009306 <HAL_RCCEx_PeriphCLKConfig+0x3fe>
900090d2:	2b00      	cmp	r3, #0
900090d4:	f000 810e 	beq.w	900092f4 <HAL_RCCEx_PeriphCLKConfig+0x3ec>
900090d8:	2601      	movs	r6, #1
900090da:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
900090dc:	682b      	ldr	r3, [r5, #0]
900090de:	01db      	lsls	r3, r3, #7
900090e0:	f140 8127 	bpl.w	90009332 <HAL_RCCEx_PeriphCLKConfig+0x42a>
    switch(PeriphClkInit->FmcClockSelection)
900090e4:	6c6b      	ldr	r3, [r5, #68]	; 0x44
900090e6:	2b03      	cmp	r3, #3
900090e8:	f200 8167 	bhi.w	900093ba <HAL_RCCEx_PeriphCLKConfig+0x4b2>
900090ec:	e8df f013 	tbh	[pc, r3, lsl #1]
900090f0:	01130118 	.word	0x01130118
900090f4:	0118015f 	.word	0x0118015f
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
900090f8:	2100      	movs	r1, #0
900090fa:	f105 0024 	add.w	r0, r5, #36	; 0x24
900090fe:	f7ff fe8b 	bl	90008e18 <RCCEx_PLL3_Config>
90009102:	e74b      	b.n	90008f9c <HAL_RCCEx_PeriphCLKConfig+0x94>
    switch(PeriphClkInit->Sai1ClockSelection)
90009104:	2601      	movs	r6, #1
90009106:	4634      	mov	r4, r6
90009108:	e753      	b.n	90008fb2 <HAL_RCCEx_PeriphCLKConfig+0xaa>
9000910a:	4626      	mov	r6, r4
9000910c:	e751      	b.n	90008fb2 <HAL_RCCEx_PeriphCLKConfig+0xaa>
    switch(PeriphClkInit->Sai23ClockSelection)
9000910e:	2bc0      	cmp	r3, #192	; 0xc0
90009110:	d003      	beq.n	9000911a <HAL_RCCEx_PeriphCLKConfig+0x212>
90009112:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90009116:	f47f af5b 	bne.w	90008fd0 <HAL_RCCEx_PeriphCLKConfig+0xc8>
    if(ret == HAL_OK)
9000911a:	b9cc      	cbnz	r4, 90009150 <HAL_RCCEx_PeriphCLKConfig+0x248>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000911c:	4a3f      	ldr	r2, [pc, #252]	; (9000921c <HAL_RCCEx_PeriphCLKConfig+0x314>)
9000911e:	6da9      	ldr	r1, [r5, #88]	; 0x58
90009120:	6d13      	ldr	r3, [r2, #80]	; 0x50
90009122:	f423 73e0 	bic.w	r3, r3, #448	; 0x1c0
90009126:	430b      	orrs	r3, r1
90009128:	6513      	str	r3, [r2, #80]	; 0x50
9000912a:	e753      	b.n	90008fd4 <HAL_RCCEx_PeriphCLKConfig+0xcc>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000912c:	4a3b      	ldr	r2, [pc, #236]	; (9000921c <HAL_RCCEx_PeriphCLKConfig+0x314>)
9000912e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
90009130:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90009134:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
90009136:	e7f0      	b.n	9000911a <HAL_RCCEx_PeriphCLKConfig+0x212>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
90009138:	2100      	movs	r1, #0
9000913a:	1d28      	adds	r0, r5, #4
9000913c:	f7ff fdf4 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
90009140:	4604      	mov	r4, r0
      break;
90009142:	e7ea      	b.n	9000911a <HAL_RCCEx_PeriphCLKConfig+0x212>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
90009144:	2100      	movs	r1, #0
90009146:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000914a:	f7ff fe65 	bl	90008e18 <RCCEx_PLL3_Config>
9000914e:	e7f7      	b.n	90009140 <HAL_RCCEx_PeriphCLKConfig+0x238>
90009150:	4626      	mov	r6, r4
90009152:	e73f      	b.n	90008fd4 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    switch(PeriphClkInit->Sai4AClockSelection)
90009154:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
90009158:	d003      	beq.n	90009162 <HAL_RCCEx_PeriphCLKConfig+0x25a>
9000915a:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
9000915e:	f47f af4b 	bne.w	90008ff8 <HAL_RCCEx_PeriphCLKConfig+0xf0>
    if(ret == HAL_OK)
90009162:	b9d4      	cbnz	r4, 9000919a <HAL_RCCEx_PeriphCLKConfig+0x292>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
90009164:	4a2d      	ldr	r2, [pc, #180]	; (9000921c <HAL_RCCEx_PeriphCLKConfig+0x314>)
90009166:	f8d5 10a4 	ldr.w	r1, [r5, #164]	; 0xa4
9000916a:	6d93      	ldr	r3, [r2, #88]	; 0x58
9000916c:	f423 0360 	bic.w	r3, r3, #14680064	; 0xe00000
90009170:	430b      	orrs	r3, r1
90009172:	6593      	str	r3, [r2, #88]	; 0x58
90009174:	e742      	b.n	90008ffc <HAL_RCCEx_PeriphCLKConfig+0xf4>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
90009176:	4a29      	ldr	r2, [pc, #164]	; (9000921c <HAL_RCCEx_PeriphCLKConfig+0x314>)
90009178:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000917a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000917e:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
90009180:	e7ef      	b.n	90009162 <HAL_RCCEx_PeriphCLKConfig+0x25a>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
90009182:	2100      	movs	r1, #0
90009184:	1d28      	adds	r0, r5, #4
90009186:	f7ff fdcf 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
9000918a:	4604      	mov	r4, r0
      break;
9000918c:	e7e9      	b.n	90009162 <HAL_RCCEx_PeriphCLKConfig+0x25a>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
9000918e:	2100      	movs	r1, #0
90009190:	f105 0024 	add.w	r0, r5, #36	; 0x24
90009194:	f7ff fe40 	bl	90008e18 <RCCEx_PLL3_Config>
90009198:	e7f7      	b.n	9000918a <HAL_RCCEx_PeriphCLKConfig+0x282>
9000919a:	4626      	mov	r6, r4
9000919c:	e72e      	b.n	90008ffc <HAL_RCCEx_PeriphCLKConfig+0xf4>
    switch(PeriphClkInit->Sai4BClockSelection)
9000919e:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
900091a2:	d003      	beq.n	900091ac <HAL_RCCEx_PeriphCLKConfig+0x2a4>
900091a4:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
900091a8:	f47f af3a 	bne.w	90009020 <HAL_RCCEx_PeriphCLKConfig+0x118>
    if(ret == HAL_OK)
900091ac:	b9d4      	cbnz	r4, 900091e4 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
900091ae:	4a1b      	ldr	r2, [pc, #108]	; (9000921c <HAL_RCCEx_PeriphCLKConfig+0x314>)
900091b0:	f8d5 10a8 	ldr.w	r1, [r5, #168]	; 0xa8
900091b4:	6d93      	ldr	r3, [r2, #88]	; 0x58
900091b6:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
900091ba:	430b      	orrs	r3, r1
900091bc:	6593      	str	r3, [r2, #88]	; 0x58
900091be:	e731      	b.n	90009024 <HAL_RCCEx_PeriphCLKConfig+0x11c>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
900091c0:	4a16      	ldr	r2, [pc, #88]	; (9000921c <HAL_RCCEx_PeriphCLKConfig+0x314>)
900091c2:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
900091c4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
900091c8:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
900091ca:	e7ef      	b.n	900091ac <HAL_RCCEx_PeriphCLKConfig+0x2a4>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
900091cc:	2100      	movs	r1, #0
900091ce:	1d28      	adds	r0, r5, #4
900091d0:	f7ff fdaa 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
900091d4:	4604      	mov	r4, r0
      break;
900091d6:	e7e9      	b.n	900091ac <HAL_RCCEx_PeriphCLKConfig+0x2a4>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
900091d8:	2100      	movs	r1, #0
900091da:	f105 0024 	add.w	r0, r5, #36	; 0x24
900091de:	f7ff fe1b 	bl	90008e18 <RCCEx_PLL3_Config>
900091e2:	e7f7      	b.n	900091d4 <HAL_RCCEx_PeriphCLKConfig+0x2cc>
900091e4:	4626      	mov	r6, r4
900091e6:	e71d      	b.n	90009024 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch(PeriphClkInit->QspiClockSelection)
900091e8:	2b30      	cmp	r3, #48	; 0x30
900091ea:	f47f af2a 	bne.w	90009042 <HAL_RCCEx_PeriphCLKConfig+0x13a>
    if(ret == HAL_OK)
900091ee:	b99c      	cbnz	r4, 90009218 <HAL_RCCEx_PeriphCLKConfig+0x310>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
900091f0:	4a0a      	ldr	r2, [pc, #40]	; (9000921c <HAL_RCCEx_PeriphCLKConfig+0x314>)
900091f2:	6ca9      	ldr	r1, [r5, #72]	; 0x48
900091f4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
900091f6:	f023 0330 	bic.w	r3, r3, #48	; 0x30
900091fa:	430b      	orrs	r3, r1
900091fc:	64d3      	str	r3, [r2, #76]	; 0x4c
900091fe:	e722      	b.n	90009046 <HAL_RCCEx_PeriphCLKConfig+0x13e>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
90009200:	4a06      	ldr	r2, [pc, #24]	; (9000921c <HAL_RCCEx_PeriphCLKConfig+0x314>)
90009202:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
90009204:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90009208:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
9000920a:	e7f0      	b.n	900091ee <HAL_RCCEx_PeriphCLKConfig+0x2e6>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
9000920c:	2102      	movs	r1, #2
9000920e:	1d28      	adds	r0, r5, #4
90009210:	f7ff fd8a 	bl	90008d28 <RCCEx_PLL2_Config>
90009214:	4604      	mov	r4, r0
      break;
90009216:	e7ea      	b.n	900091ee <HAL_RCCEx_PeriphCLKConfig+0x2e6>
90009218:	4626      	mov	r6, r4
9000921a:	e714      	b.n	90009046 <HAL_RCCEx_PeriphCLKConfig+0x13e>
9000921c:	58024400 	.word	0x58024400
    switch(PeriphClkInit->Spi123ClockSelection)
90009220:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
90009224:	d003      	beq.n	9000922e <HAL_RCCEx_PeriphCLKConfig+0x326>
90009226:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
9000922a:	f47f af1d 	bne.w	90009068 <HAL_RCCEx_PeriphCLKConfig+0x160>
    if(ret == HAL_OK)
9000922e:	b9cc      	cbnz	r4, 90009264 <HAL_RCCEx_PeriphCLKConfig+0x35c>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
90009230:	4aa2      	ldr	r2, [pc, #648]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
90009232:	6de9      	ldr	r1, [r5, #92]	; 0x5c
90009234:	6d13      	ldr	r3, [r2, #80]	; 0x50
90009236:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
9000923a:	430b      	orrs	r3, r1
9000923c:	6513      	str	r3, [r2, #80]	; 0x50
9000923e:	e715      	b.n	9000906c <HAL_RCCEx_PeriphCLKConfig+0x164>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
90009240:	4a9e      	ldr	r2, [pc, #632]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
90009242:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
90009244:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90009248:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
9000924a:	e7f0      	b.n	9000922e <HAL_RCCEx_PeriphCLKConfig+0x326>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
9000924c:	2100      	movs	r1, #0
9000924e:	1d28      	adds	r0, r5, #4
90009250:	f7ff fd6a 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
90009254:	4604      	mov	r4, r0
      break;
90009256:	e7ea      	b.n	9000922e <HAL_RCCEx_PeriphCLKConfig+0x326>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
90009258:	2100      	movs	r1, #0
9000925a:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000925e:	f7ff fddb 	bl	90008e18 <RCCEx_PLL3_Config>
90009262:	e7f7      	b.n	90009254 <HAL_RCCEx_PeriphCLKConfig+0x34c>
90009264:	4626      	mov	r6, r4
90009266:	e701      	b.n	9000906c <HAL_RCCEx_PeriphCLKConfig+0x164>
    switch(PeriphClkInit->Spi45ClockSelection)
90009268:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
9000926c:	f5b2 2f80 	cmp.w	r2, #262144	; 0x40000
90009270:	d003      	beq.n	9000927a <HAL_RCCEx_PeriphCLKConfig+0x372>
90009272:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
90009276:	f47f af0a 	bne.w	9000908e <HAL_RCCEx_PeriphCLKConfig+0x186>
    if(ret == HAL_OK)
9000927a:	b99c      	cbnz	r4, 900092a4 <HAL_RCCEx_PeriphCLKConfig+0x39c>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000927c:	4a8f      	ldr	r2, [pc, #572]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
9000927e:	6e29      	ldr	r1, [r5, #96]	; 0x60
90009280:	6d13      	ldr	r3, [r2, #80]	; 0x50
90009282:	f423 23e0 	bic.w	r3, r3, #458752	; 0x70000
90009286:	430b      	orrs	r3, r1
90009288:	6513      	str	r3, [r2, #80]	; 0x50
9000928a:	e702      	b.n	90009092 <HAL_RCCEx_PeriphCLKConfig+0x18a>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
9000928c:	2101      	movs	r1, #1
9000928e:	1d28      	adds	r0, r5, #4
90009290:	f7ff fd4a 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
90009294:	4604      	mov	r4, r0
      break;
90009296:	e7f0      	b.n	9000927a <HAL_RCCEx_PeriphCLKConfig+0x372>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
90009298:	2101      	movs	r1, #1
9000929a:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000929e:	f7ff fdbb 	bl	90008e18 <RCCEx_PLL3_Config>
900092a2:	e7f7      	b.n	90009294 <HAL_RCCEx_PeriphCLKConfig+0x38c>
900092a4:	4626      	mov	r6, r4
900092a6:	e6f4      	b.n	90009092 <HAL_RCCEx_PeriphCLKConfig+0x18a>
    switch(PeriphClkInit->Spi6ClockSelection)
900092a8:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
900092ac:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
900092b0:	d003      	beq.n	900092ba <HAL_RCCEx_PeriphCLKConfig+0x3b2>
900092b2:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
900092b6:	f47f aefe 	bne.w	900090b6 <HAL_RCCEx_PeriphCLKConfig+0x1ae>
    if(ret == HAL_OK)
900092ba:	b9a4      	cbnz	r4, 900092e6 <HAL_RCCEx_PeriphCLKConfig+0x3de>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
900092bc:	4a7f      	ldr	r2, [pc, #508]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
900092be:	f8d5 10ac 	ldr.w	r1, [r5, #172]	; 0xac
900092c2:	6d93      	ldr	r3, [r2, #88]	; 0x58
900092c4:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
900092c8:	430b      	orrs	r3, r1
900092ca:	6593      	str	r3, [r2, #88]	; 0x58
900092cc:	e6f5      	b.n	900090ba <HAL_RCCEx_PeriphCLKConfig+0x1b2>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
900092ce:	2101      	movs	r1, #1
900092d0:	1d28      	adds	r0, r5, #4
900092d2:	f7ff fd29 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
900092d6:	4604      	mov	r4, r0
      break;
900092d8:	e7ef      	b.n	900092ba <HAL_RCCEx_PeriphCLKConfig+0x3b2>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
900092da:	2101      	movs	r1, #1
900092dc:	f105 0024 	add.w	r0, r5, #36	; 0x24
900092e0:	f7ff fd9a 	bl	90008e18 <RCCEx_PLL3_Config>
900092e4:	e7f7      	b.n	900092d6 <HAL_RCCEx_PeriphCLKConfig+0x3ce>
900092e6:	4626      	mov	r6, r4
900092e8:	e6e7      	b.n	900090ba <HAL_RCCEx_PeriphCLKConfig+0x1b2>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
900092ea:	4a74      	ldr	r2, [pc, #464]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
900092ec:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
900092ee:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
900092f2:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
900092f4:	b96c      	cbnz	r4, 90009312 <HAL_RCCEx_PeriphCLKConfig+0x40a>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
900092f6:	4a71      	ldr	r2, [pc, #452]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
900092f8:	6ee9      	ldr	r1, [r5, #108]	; 0x6c
900092fa:	6d13      	ldr	r3, [r2, #80]	; 0x50
900092fc:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
90009300:	430b      	orrs	r3, r1
90009302:	6513      	str	r3, [r2, #80]	; 0x50
90009304:	e6ea      	b.n	900090dc <HAL_RCCEx_PeriphCLKConfig+0x1d4>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
90009306:	2101      	movs	r1, #1
90009308:	1d28      	adds	r0, r5, #4
9000930a:	f7ff fd0d 	bl	90008d28 <RCCEx_PLL2_Config>
9000930e:	4604      	mov	r4, r0
      break;
90009310:	e7f0      	b.n	900092f4 <HAL_RCCEx_PeriphCLKConfig+0x3ec>
90009312:	4626      	mov	r6, r4
90009314:	e6e2      	b.n	900090dc <HAL_RCCEx_PeriphCLKConfig+0x1d4>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
90009316:	4a69      	ldr	r2, [pc, #420]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
90009318:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000931a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000931e:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
90009320:	2c00      	cmp	r4, #0
90009322:	d14d      	bne.n	900093c0 <HAL_RCCEx_PeriphCLKConfig+0x4b8>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
90009324:	4a65      	ldr	r2, [pc, #404]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
90009326:	6c69      	ldr	r1, [r5, #68]	; 0x44
90009328:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
9000932a:	f023 0303 	bic.w	r3, r3, #3
9000932e:	430b      	orrs	r3, r1
90009330:	64d3      	str	r3, [r2, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
90009332:	682b      	ldr	r3, [r5, #0]
90009334:	025f      	lsls	r7, r3, #9
90009336:	d54d      	bpl.n	900093d4 <HAL_RCCEx_PeriphCLKConfig+0x4cc>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
90009338:	4f61      	ldr	r7, [pc, #388]	; (900094c0 <HAL_RCCEx_PeriphCLKConfig+0x5b8>)
9000933a:	683b      	ldr	r3, [r7, #0]
9000933c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90009340:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
90009342:	f7fd fc1b 	bl	90006b7c <HAL_GetTick>
90009346:	4680      	mov	r8, r0
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
90009348:	683b      	ldr	r3, [r7, #0]
9000934a:	05d8      	lsls	r0, r3, #23
9000934c:	d53a      	bpl.n	900093c4 <HAL_RCCEx_PeriphCLKConfig+0x4bc>
    if(ret == HAL_OK)
9000934e:	2c00      	cmp	r4, #0
90009350:	d16c      	bne.n	9000942c <HAL_RCCEx_PeriphCLKConfig+0x524>
      if((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
90009352:	4b5a      	ldr	r3, [pc, #360]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
90009354:	f8d5 00b0 	ldr.w	r0, [r5, #176]	; 0xb0
90009358:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000935a:	4042      	eors	r2, r0
9000935c:	f412 7f40 	tst.w	r2, #768	; 0x300
90009360:	d00b      	beq.n	9000937a <HAL_RCCEx_PeriphCLKConfig+0x472>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
90009362:	6f1a      	ldr	r2, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
90009364:	6f19      	ldr	r1, [r3, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
90009366:	f422 7240 	bic.w	r2, r2, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000936a:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
9000936e:	6719      	str	r1, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
90009370:	6f19      	ldr	r1, [r3, #112]	; 0x70
90009372:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
90009376:	6719      	str	r1, [r3, #112]	; 0x70
        RCC->BDCR = tmpreg;
90009378:	671a      	str	r2, [r3, #112]	; 0x70
      if(PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000937a:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000937e:	d040      	beq.n	90009402 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
90009380:	f8d5 30b0 	ldr.w	r3, [r5, #176]	; 0xb0
90009384:	494d      	ldr	r1, [pc, #308]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
90009386:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000938a:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000938e:	d149      	bne.n	90009424 <HAL_RCCEx_PeriphCLKConfig+0x51c>
90009390:	6908      	ldr	r0, [r1, #16]
90009392:	4a4c      	ldr	r2, [pc, #304]	; (900094c4 <HAL_RCCEx_PeriphCLKConfig+0x5bc>)
90009394:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
90009398:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000939c:	4302      	orrs	r2, r0
9000939e:	610a      	str	r2, [r1, #16]
900093a0:	f3c3 030b 	ubfx	r3, r3, #0, #12
900093a4:	4a45      	ldr	r2, [pc, #276]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
900093a6:	6f11      	ldr	r1, [r2, #112]	; 0x70
900093a8:	430b      	orrs	r3, r1
900093aa:	6713      	str	r3, [r2, #112]	; 0x70
900093ac:	e012      	b.n	900093d4 <HAL_RCCEx_PeriphCLKConfig+0x4cc>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
900093ae:	2102      	movs	r1, #2
900093b0:	1d28      	adds	r0, r5, #4
900093b2:	f7ff fcb9 	bl	90008d28 <RCCEx_PLL2_Config>
900093b6:	4604      	mov	r4, r0
      break;
900093b8:	e7b2      	b.n	90009320 <HAL_RCCEx_PeriphCLKConfig+0x418>
    switch(PeriphClkInit->FmcClockSelection)
900093ba:	2601      	movs	r6, #1
900093bc:	4634      	mov	r4, r6
900093be:	e7b8      	b.n	90009332 <HAL_RCCEx_PeriphCLKConfig+0x42a>
900093c0:	4626      	mov	r6, r4
900093c2:	e7b6      	b.n	90009332 <HAL_RCCEx_PeriphCLKConfig+0x42a>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
900093c4:	f7fd fbda 	bl	90006b7c <HAL_GetTick>
900093c8:	eba0 0008 	sub.w	r0, r0, r8
900093cc:	2864      	cmp	r0, #100	; 0x64
900093ce:	d9bb      	bls.n	90009348 <HAL_RCCEx_PeriphCLKConfig+0x440>
        ret = HAL_TIMEOUT;
900093d0:	2603      	movs	r6, #3
900093d2:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
900093d4:	682b      	ldr	r3, [r5, #0]
900093d6:	07da      	lsls	r2, r3, #31
900093d8:	d508      	bpl.n	900093ec <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    switch(PeriphClkInit->Usart16ClockSelection)
900093da:	6fab      	ldr	r3, [r5, #120]	; 0x78
900093dc:	2b10      	cmp	r3, #16
900093de:	d03c      	beq.n	9000945a <HAL_RCCEx_PeriphCLKConfig+0x552>
900093e0:	d826      	bhi.n	90009430 <HAL_RCCEx_PeriphCLKConfig+0x528>
900093e2:	b35b      	cbz	r3, 9000943c <HAL_RCCEx_PeriphCLKConfig+0x534>
900093e4:	2b08      	cmp	r3, #8
900093e6:	d032      	beq.n	9000944e <HAL_RCCEx_PeriphCLKConfig+0x546>
900093e8:	2601      	movs	r6, #1
900093ea:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
900093ec:	682b      	ldr	r3, [r5, #0]
900093ee:	079b      	lsls	r3, r3, #30
900093f0:	d548      	bpl.n	90009484 <HAL_RCCEx_PeriphCLKConfig+0x57c>
    switch(PeriphClkInit->Usart234578ClockSelection)
900093f2:	6f6b      	ldr	r3, [r5, #116]	; 0x74
900093f4:	2b05      	cmp	r3, #5
900093f6:	d85b      	bhi.n	900094b0 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
900093f8:	e8df f003 	tbb	[pc, r3]
900093fc:	3c54373c 	.word	0x3c54373c
90009400:	3c3c      	.short	0x3c3c
        tickstart = HAL_GetTick();
90009402:	f7fd fbbb 	bl	90006b7c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
90009406:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>
        tickstart = HAL_GetTick();
9000940a:	4607      	mov	r7, r0
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000940c:	f241 3988 	movw	r9, #5000	; 0x1388
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
90009410:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
90009414:	0799      	lsls	r1, r3, #30
90009416:	d4b3      	bmi.n	90009380 <HAL_RCCEx_PeriphCLKConfig+0x478>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
90009418:	f7fd fbb0 	bl	90006b7c <HAL_GetTick>
9000941c:	1bc0      	subs	r0, r0, r7
9000941e:	4548      	cmp	r0, r9
90009420:	d9f6      	bls.n	90009410 <HAL_RCCEx_PeriphCLKConfig+0x508>
90009422:	e7d5      	b.n	900093d0 <HAL_RCCEx_PeriphCLKConfig+0x4c8>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
90009424:	690a      	ldr	r2, [r1, #16]
90009426:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000942a:	e7b8      	b.n	9000939e <HAL_RCCEx_PeriphCLKConfig+0x496>
9000942c:	4626      	mov	r6, r4
9000942e:	e7d1      	b.n	900093d4 <HAL_RCCEx_PeriphCLKConfig+0x4cc>
    switch(PeriphClkInit->Usart16ClockSelection)
90009430:	f023 0208 	bic.w	r2, r3, #8
90009434:	2a20      	cmp	r2, #32
90009436:	d001      	beq.n	9000943c <HAL_RCCEx_PeriphCLKConfig+0x534>
90009438:	2b18      	cmp	r3, #24
9000943a:	d1d5      	bne.n	900093e8 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
    if(ret == HAL_OK)
9000943c:	b99c      	cbnz	r4, 90009466 <HAL_RCCEx_PeriphCLKConfig+0x55e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000943e:	4a1f      	ldr	r2, [pc, #124]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
90009440:	6fa9      	ldr	r1, [r5, #120]	; 0x78
90009442:	6d53      	ldr	r3, [r2, #84]	; 0x54
90009444:	f023 0338 	bic.w	r3, r3, #56	; 0x38
90009448:	430b      	orrs	r3, r1
9000944a:	6553      	str	r3, [r2, #84]	; 0x54
9000944c:	e7ce      	b.n	900093ec <HAL_RCCEx_PeriphCLKConfig+0x4e4>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
9000944e:	2101      	movs	r1, #1
90009450:	1d28      	adds	r0, r5, #4
90009452:	f7ff fc69 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
90009456:	4604      	mov	r4, r0
      break;
90009458:	e7f0      	b.n	9000943c <HAL_RCCEx_PeriphCLKConfig+0x534>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
9000945a:	2101      	movs	r1, #1
9000945c:	f105 0024 	add.w	r0, r5, #36	; 0x24
90009460:	f7ff fcda 	bl	90008e18 <RCCEx_PLL3_Config>
90009464:	e7f7      	b.n	90009456 <HAL_RCCEx_PeriphCLKConfig+0x54e>
90009466:	4626      	mov	r6, r4
90009468:	e7c0      	b.n	900093ec <HAL_RCCEx_PeriphCLKConfig+0x4e4>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
9000946a:	2101      	movs	r1, #1
9000946c:	1d28      	adds	r0, r5, #4
9000946e:	f7ff fc5b 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
90009472:	4604      	mov	r4, r0
    if(ret == HAL_OK)
90009474:	b9fc      	cbnz	r4, 900094b6 <HAL_RCCEx_PeriphCLKConfig+0x5ae>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
90009476:	4a11      	ldr	r2, [pc, #68]	; (900094bc <HAL_RCCEx_PeriphCLKConfig+0x5b4>)
90009478:	6f69      	ldr	r1, [r5, #116]	; 0x74
9000947a:	6d53      	ldr	r3, [r2, #84]	; 0x54
9000947c:	f023 0307 	bic.w	r3, r3, #7
90009480:	430b      	orrs	r3, r1
90009482:	6553      	str	r3, [r2, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
90009484:	682b      	ldr	r3, [r5, #0]
90009486:	075f      	lsls	r7, r3, #29
90009488:	d52e      	bpl.n	900094e8 <HAL_RCCEx_PeriphCLKConfig+0x5e0>
    switch(PeriphClkInit->Lpuart1ClockSelection)
9000948a:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
9000948e:	2b05      	cmp	r3, #5
90009490:	f200 8140 	bhi.w	90009714 <HAL_RCCEx_PeriphCLKConfig+0x80c>
90009494:	e8df f013 	tbh	[pc, r3, lsl #1]
90009498:	0018001d 	.word	0x0018001d
9000949c:	001d0138 	.word	0x001d0138
900094a0:	001d001d 	.word	0x001d001d
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
900094a4:	2101      	movs	r1, #1
900094a6:	f105 0024 	add.w	r0, r5, #36	; 0x24
900094aa:	f7ff fcb5 	bl	90008e18 <RCCEx_PLL3_Config>
900094ae:	e7e0      	b.n	90009472 <HAL_RCCEx_PeriphCLKConfig+0x56a>
    switch(PeriphClkInit->Usart234578ClockSelection)
900094b0:	2601      	movs	r6, #1
900094b2:	4634      	mov	r4, r6
900094b4:	e7e6      	b.n	90009484 <HAL_RCCEx_PeriphCLKConfig+0x57c>
900094b6:	4626      	mov	r6, r4
900094b8:	e7e4      	b.n	90009484 <HAL_RCCEx_PeriphCLKConfig+0x57c>
900094ba:	bf00      	nop
900094bc:	58024400 	.word	0x58024400
900094c0:	58024800 	.word	0x58024800
900094c4:	00ffffcf 	.word	0x00ffffcf
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
900094c8:	2101      	movs	r1, #1
900094ca:	1d28      	adds	r0, r5, #4
900094cc:	f7ff fc2c 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
900094d0:	4604      	mov	r4, r0
    if(ret == HAL_OK)
900094d2:	2c00      	cmp	r4, #0
900094d4:	f040 8121 	bne.w	9000971a <HAL_RCCEx_PeriphCLKConfig+0x812>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
900094d8:	4ab2      	ldr	r2, [pc, #712]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
900094da:	f8d5 1090 	ldr.w	r1, [r5, #144]	; 0x90
900094de:	6d93      	ldr	r3, [r2, #88]	; 0x58
900094e0:	f023 0307 	bic.w	r3, r3, #7
900094e4:	430b      	orrs	r3, r1
900094e6:	6593      	str	r3, [r2, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
900094e8:	682b      	ldr	r3, [r5, #0]
900094ea:	0698      	lsls	r0, r3, #26
900094ec:	d510      	bpl.n	90009510 <HAL_RCCEx_PeriphCLKConfig+0x608>
    switch(PeriphClkInit->Lptim1ClockSelection)
900094ee:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
900094f2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
900094f6:	f000 812b 	beq.w	90009750 <HAL_RCCEx_PeriphCLKConfig+0x848>
900094fa:	f200 8110 	bhi.w	9000971e <HAL_RCCEx_PeriphCLKConfig+0x816>
900094fe:	2b00      	cmp	r3, #0
90009500:	f000 8116 	beq.w	90009730 <HAL_RCCEx_PeriphCLKConfig+0x828>
90009504:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
90009508:	f000 811c 	beq.w	90009744 <HAL_RCCEx_PeriphCLKConfig+0x83c>
9000950c:	2601      	movs	r6, #1
9000950e:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
90009510:	682b      	ldr	r3, [r5, #0]
90009512:	0659      	lsls	r1, r3, #25
90009514:	d510      	bpl.n	90009538 <HAL_RCCEx_PeriphCLKConfig+0x630>
    switch(PeriphClkInit->Lptim2ClockSelection)
90009516:	f8d5 3098 	ldr.w	r3, [r5, #152]	; 0x98
9000951a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
9000951e:	f000 8138 	beq.w	90009792 <HAL_RCCEx_PeriphCLKConfig+0x88a>
90009522:	f200 811d 	bhi.w	90009760 <HAL_RCCEx_PeriphCLKConfig+0x858>
90009526:	2b00      	cmp	r3, #0
90009528:	f000 8123 	beq.w	90009772 <HAL_RCCEx_PeriphCLKConfig+0x86a>
9000952c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
90009530:	f000 8129 	beq.w	90009786 <HAL_RCCEx_PeriphCLKConfig+0x87e>
90009534:	2601      	movs	r6, #1
90009536:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
90009538:	682b      	ldr	r3, [r5, #0]
9000953a:	061a      	lsls	r2, r3, #24
9000953c:	d510      	bpl.n	90009560 <HAL_RCCEx_PeriphCLKConfig+0x658>
    switch(PeriphClkInit->Lptim345ClockSelection)
9000953e:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
90009542:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
90009546:	f000 8148 	beq.w	900097da <HAL_RCCEx_PeriphCLKConfig+0x8d2>
9000954a:	f200 812d 	bhi.w	900097a8 <HAL_RCCEx_PeriphCLKConfig+0x8a0>
9000954e:	2b00      	cmp	r3, #0
90009550:	f000 8133 	beq.w	900097ba <HAL_RCCEx_PeriphCLKConfig+0x8b2>
90009554:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
90009558:	f000 8139 	beq.w	900097ce <HAL_RCCEx_PeriphCLKConfig+0x8c6>
9000955c:	2601      	movs	r6, #1
9000955e:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
90009560:	682b      	ldr	r3, [r5, #0]
90009562:	071b      	lsls	r3, r3, #28
90009564:	d514      	bpl.n	90009590 <HAL_RCCEx_PeriphCLKConfig+0x688>
    if ((PeriphClkInit->I2c123ClockSelection )== RCC_I2C123CLKSOURCE_PLL3 )
90009566:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
9000956a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
9000956e:	d107      	bne.n	90009580 <HAL_RCCEx_PeriphCLKConfig+0x678>
        if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!= HAL_OK)
90009570:	2102      	movs	r1, #2
90009572:	f105 0024 	add.w	r0, r5, #36	; 0x24
90009576:	f7ff fc4f 	bl	90008e18 <RCCEx_PLL3_Config>
          status = HAL_ERROR;
9000957a:	2800      	cmp	r0, #0
9000957c:	bf18      	it	ne
9000957e:	2601      	movne	r6, #1
      __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
90009580:	4a88      	ldr	r2, [pc, #544]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
90009582:	f8d5 1080 	ldr.w	r1, [r5, #128]	; 0x80
90009586:	6d53      	ldr	r3, [r2, #84]	; 0x54
90009588:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
9000958c:	430b      	orrs	r3, r1
9000958e:	6553      	str	r3, [r2, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
90009590:	682b      	ldr	r3, [r5, #0]
90009592:	06df      	lsls	r7, r3, #27
90009594:	d514      	bpl.n	900095c0 <HAL_RCCEx_PeriphCLKConfig+0x6b8>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3 )
90009596:	f8d5 3094 	ldr.w	r3, [r5, #148]	; 0x94
9000959a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000959e:	d107      	bne.n	900095b0 <HAL_RCCEx_PeriphCLKConfig+0x6a8>
      if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!= HAL_OK)
900095a0:	2102      	movs	r1, #2
900095a2:	f105 0024 	add.w	r0, r5, #36	; 0x24
900095a6:	f7ff fc37 	bl	90008e18 <RCCEx_PLL3_Config>
        status = HAL_ERROR;
900095aa:	2800      	cmp	r0, #0
900095ac:	bf18      	it	ne
900095ae:	2601      	movne	r6, #1
      __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
900095b0:	4a7c      	ldr	r2, [pc, #496]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
900095b2:	f8d5 1094 	ldr.w	r1, [r5, #148]	; 0x94
900095b6:	6d93      	ldr	r3, [r2, #88]	; 0x58
900095b8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
900095bc:	430b      	orrs	r3, r1
900095be:	6593      	str	r3, [r2, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
900095c0:	682b      	ldr	r3, [r5, #0]
900095c2:	0318      	lsls	r0, r3, #12
900095c4:	d51a      	bpl.n	900095fc <HAL_RCCEx_PeriphCLKConfig+0x6f4>
    switch(PeriphClkInit->AdcClockSelection)
900095c6:	f8d5 10a0 	ldr.w	r1, [r5, #160]	; 0xa0
900095ca:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
900095ce:	f000 810c 	beq.w	900097ea <HAL_RCCEx_PeriphCLKConfig+0x8e2>
900095d2:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
900095d6:	d006      	beq.n	900095e6 <HAL_RCCEx_PeriphCLKConfig+0x6de>
900095d8:	2900      	cmp	r1, #0
900095da:	f040 810c 	bne.w	900097f6 <HAL_RCCEx_PeriphCLKConfig+0x8ee>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
900095de:	1d28      	adds	r0, r5, #4
900095e0:	f7ff fba2 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
900095e4:	4604      	mov	r4, r0
    if(ret == HAL_OK)
900095e6:	2c00      	cmp	r4, #0
900095e8:	f040 8108 	bne.w	900097fc <HAL_RCCEx_PeriphCLKConfig+0x8f4>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
900095ec:	4a6d      	ldr	r2, [pc, #436]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
900095ee:	f8d5 10a0 	ldr.w	r1, [r5, #160]	; 0xa0
900095f2:	6d93      	ldr	r3, [r2, #88]	; 0x58
900095f4:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
900095f8:	430b      	orrs	r3, r1
900095fa:	6593      	str	r3, [r2, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
900095fc:	682b      	ldr	r3, [r5, #0]
900095fe:	0359      	lsls	r1, r3, #13
90009600:	d51c      	bpl.n	9000963c <HAL_RCCEx_PeriphCLKConfig+0x734>
    switch(PeriphClkInit->UsbClockSelection)
90009602:	f8d5 3084 	ldr.w	r3, [r5, #132]	; 0x84
90009606:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
9000960a:	f000 80f9 	beq.w	90009800 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000960e:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
90009612:	d008      	beq.n	90009626 <HAL_RCCEx_PeriphCLKConfig+0x71e>
90009614:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
90009618:	f040 80f9 	bne.w	9000980e <HAL_RCCEx_PeriphCLKConfig+0x906>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000961c:	4a61      	ldr	r2, [pc, #388]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
9000961e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
90009620:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90009624:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
90009626:	2c00      	cmp	r4, #0
90009628:	f040 80f4 	bne.w	90009814 <HAL_RCCEx_PeriphCLKConfig+0x90c>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000962c:	4a5d      	ldr	r2, [pc, #372]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
9000962e:	f8d5 1084 	ldr.w	r1, [r5, #132]	; 0x84
90009632:	6d53      	ldr	r3, [r2, #84]	; 0x54
90009634:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
90009638:	430b      	orrs	r3, r1
9000963a:	6553      	str	r3, [r2, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000963c:	682b      	ldr	r3, [r5, #0]
9000963e:	03da      	lsls	r2, r3, #15
90009640:	d509      	bpl.n	90009656 <HAL_RCCEx_PeriphCLKConfig+0x74e>
    switch(PeriphClkInit->SdmmcClockSelection)
90009642:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
90009644:	2b00      	cmp	r3, #0
90009646:	f000 80e7 	beq.w	90009818 <HAL_RCCEx_PeriphCLKConfig+0x910>
9000964a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000964e:	f000 80f1 	beq.w	90009834 <HAL_RCCEx_PeriphCLKConfig+0x92c>
90009652:	2601      	movs	r6, #1
90009654:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
90009656:	682b      	ldr	r3, [r5, #0]
90009658:	009b      	lsls	r3, r3, #2
9000965a:	d507      	bpl.n	9000966c <HAL_RCCEx_PeriphCLKConfig+0x764>
    if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!=HAL_OK)
9000965c:	2102      	movs	r1, #2
9000965e:	f105 0024 	add.w	r0, r5, #36	; 0x24
90009662:	f7ff fbd9 	bl	90008e18 <RCCEx_PLL3_Config>
      status=HAL_ERROR;
90009666:	2800      	cmp	r0, #0
90009668:	bf18      	it	ne
9000966a:	2601      	movne	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000966c:	682b      	ldr	r3, [r5, #0]
9000966e:	039f      	lsls	r7, r3, #14
90009670:	d50a      	bpl.n	90009688 <HAL_RCCEx_PeriphCLKConfig+0x780>
    switch(PeriphClkInit->RngClockSelection)
90009672:	6fe9      	ldr	r1, [r5, #124]	; 0x7c
90009674:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
90009678:	f000 80f2 	beq.w	90009860 <HAL_RCCEx_PeriphCLKConfig+0x958>
9000967c:	f200 80e2 	bhi.w	90009844 <HAL_RCCEx_PeriphCLKConfig+0x93c>
90009680:	2900      	cmp	r1, #0
90009682:	f000 80e5 	beq.w	90009850 <HAL_RCCEx_PeriphCLKConfig+0x948>
90009686:	2601      	movs	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
90009688:	02dc      	lsls	r4, r3, #11
9000968a:	d506      	bpl.n	9000969a <HAL_RCCEx_PeriphCLKConfig+0x792>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000968c:	4945      	ldr	r1, [pc, #276]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
9000968e:	6f28      	ldr	r0, [r5, #112]	; 0x70
90009690:	6d0a      	ldr	r2, [r1, #80]	; 0x50
90009692:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
90009696:	4302      	orrs	r2, r0
90009698:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000969a:	00d8      	lsls	r0, r3, #3
9000969c:	d507      	bpl.n	900096ae <HAL_RCCEx_PeriphCLKConfig+0x7a6>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000969e:	4941      	ldr	r1, [pc, #260]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
900096a0:	f8d5 00b4 	ldr.w	r0, [r5, #180]	; 0xb4
900096a4:	690a      	ldr	r2, [r1, #16]
900096a6:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
900096aa:	4302      	orrs	r2, r0
900096ac:	610a      	str	r2, [r1, #16]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
900096ae:	0299      	lsls	r1, r3, #10
900096b0:	d506      	bpl.n	900096c0 <HAL_RCCEx_PeriphCLKConfig+0x7b8>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
900096b2:	493c      	ldr	r1, [pc, #240]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
900096b4:	6ea8      	ldr	r0, [r5, #104]	; 0x68
900096b6:	6d0a      	ldr	r2, [r1, #80]	; 0x50
900096b8:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
900096bc:	4302      	orrs	r2, r0
900096be:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
900096c0:	005a      	lsls	r2, r3, #1
900096c2:	d509      	bpl.n	900096d8 <HAL_RCCEx_PeriphCLKConfig+0x7d0>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
900096c4:	4a37      	ldr	r2, [pc, #220]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
900096c6:	6911      	ldr	r1, [r2, #16]
900096c8:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
900096cc:	6111      	str	r1, [r2, #16]
900096ce:	6911      	ldr	r1, [r2, #16]
900096d0:	f8d5 00b8 	ldr.w	r0, [r5, #184]	; 0xb8
900096d4:	4301      	orrs	r1, r0
900096d6:	6111      	str	r1, [r2, #16]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
900096d8:	2b00      	cmp	r3, #0
900096da:	da06      	bge.n	900096ea <HAL_RCCEx_PeriphCLKConfig+0x7e2>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
900096dc:	4931      	ldr	r1, [pc, #196]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
900096de:	6d28      	ldr	r0, [r5, #80]	; 0x50
900096e0:	6cca      	ldr	r2, [r1, #76]	; 0x4c
900096e2:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
900096e6:	4302      	orrs	r2, r0
900096e8:	64ca      	str	r2, [r1, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
900096ea:	021b      	lsls	r3, r3, #8
900096ec:	d507      	bpl.n	900096fe <HAL_RCCEx_PeriphCLKConfig+0x7f6>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
900096ee:	4a2d      	ldr	r2, [pc, #180]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
900096f0:	f8d5 1088 	ldr.w	r1, [r5, #136]	; 0x88
900096f4:	6d53      	ldr	r3, [r2, #84]	; 0x54
900096f6:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
900096fa:	430b      	orrs	r3, r1
900096fc:	6553      	str	r3, [r2, #84]	; 0x54
}
900096fe:	1e30      	subs	r0, r6, #0
90009700:	bf18      	it	ne
90009702:	2001      	movne	r0, #1
90009704:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
90009708:	2101      	movs	r1, #1
9000970a:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000970e:	f7ff fb83 	bl	90008e18 <RCCEx_PLL3_Config>
90009712:	e6dd      	b.n	900094d0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
    switch(PeriphClkInit->Lpuart1ClockSelection)
90009714:	2601      	movs	r6, #1
90009716:	4634      	mov	r4, r6
90009718:	e6e6      	b.n	900094e8 <HAL_RCCEx_PeriphCLKConfig+0x5e0>
9000971a:	4626      	mov	r6, r4
9000971c:	e6e4      	b.n	900094e8 <HAL_RCCEx_PeriphCLKConfig+0x5e0>
    switch(PeriphClkInit->Lptim1ClockSelection)
9000971e:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
90009722:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
90009726:	d003      	beq.n	90009730 <HAL_RCCEx_PeriphCLKConfig+0x828>
90009728:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
9000972c:	f47f aeee 	bne.w	9000950c <HAL_RCCEx_PeriphCLKConfig+0x604>
    if(ret == HAL_OK)
90009730:	b9a4      	cbnz	r4, 9000975c <HAL_RCCEx_PeriphCLKConfig+0x854>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
90009732:	4a1c      	ldr	r2, [pc, #112]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
90009734:	f8d5 108c 	ldr.w	r1, [r5, #140]	; 0x8c
90009738:	6d53      	ldr	r3, [r2, #84]	; 0x54
9000973a:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
9000973e:	430b      	orrs	r3, r1
90009740:	6553      	str	r3, [r2, #84]	; 0x54
90009742:	e6e5      	b.n	90009510 <HAL_RCCEx_PeriphCLKConfig+0x608>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
90009744:	2100      	movs	r1, #0
90009746:	1d28      	adds	r0, r5, #4
90009748:	f7ff faee 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
9000974c:	4604      	mov	r4, r0
      break;
9000974e:	e7ef      	b.n	90009730 <HAL_RCCEx_PeriphCLKConfig+0x828>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
90009750:	2102      	movs	r1, #2
90009752:	f105 0024 	add.w	r0, r5, #36	; 0x24
90009756:	f7ff fb5f 	bl	90008e18 <RCCEx_PLL3_Config>
9000975a:	e7f7      	b.n	9000974c <HAL_RCCEx_PeriphCLKConfig+0x844>
9000975c:	4626      	mov	r6, r4
9000975e:	e6d7      	b.n	90009510 <HAL_RCCEx_PeriphCLKConfig+0x608>
    switch(PeriphClkInit->Lptim2ClockSelection)
90009760:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
90009764:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
90009768:	d003      	beq.n	90009772 <HAL_RCCEx_PeriphCLKConfig+0x86a>
9000976a:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
9000976e:	f47f aee1 	bne.w	90009534 <HAL_RCCEx_PeriphCLKConfig+0x62c>
    if(ret == HAL_OK)
90009772:	b9a4      	cbnz	r4, 9000979e <HAL_RCCEx_PeriphCLKConfig+0x896>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
90009774:	4a0b      	ldr	r2, [pc, #44]	; (900097a4 <HAL_RCCEx_PeriphCLKConfig+0x89c>)
90009776:	f8d5 1098 	ldr.w	r1, [r5, #152]	; 0x98
9000977a:	6d93      	ldr	r3, [r2, #88]	; 0x58
9000977c:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
90009780:	430b      	orrs	r3, r1
90009782:	6593      	str	r3, [r2, #88]	; 0x58
90009784:	e6d8      	b.n	90009538 <HAL_RCCEx_PeriphCLKConfig+0x630>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
90009786:	2100      	movs	r1, #0
90009788:	1d28      	adds	r0, r5, #4
9000978a:	f7ff facd 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
9000978e:	4604      	mov	r4, r0
      break;
90009790:	e7ef      	b.n	90009772 <HAL_RCCEx_PeriphCLKConfig+0x86a>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
90009792:	2102      	movs	r1, #2
90009794:	f105 0024 	add.w	r0, r5, #36	; 0x24
90009798:	f7ff fb3e 	bl	90008e18 <RCCEx_PLL3_Config>
9000979c:	e7f7      	b.n	9000978e <HAL_RCCEx_PeriphCLKConfig+0x886>
9000979e:	4626      	mov	r6, r4
900097a0:	e6ca      	b.n	90009538 <HAL_RCCEx_PeriphCLKConfig+0x630>
900097a2:	bf00      	nop
900097a4:	58024400 	.word	0x58024400
    switch(PeriphClkInit->Lptim345ClockSelection)
900097a8:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
900097ac:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
900097b0:	d003      	beq.n	900097ba <HAL_RCCEx_PeriphCLKConfig+0x8b2>
900097b2:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
900097b6:	f47f aed1 	bne.w	9000955c <HAL_RCCEx_PeriphCLKConfig+0x654>
    if(ret == HAL_OK)
900097ba:	b9a4      	cbnz	r4, 900097e6 <HAL_RCCEx_PeriphCLKConfig+0x8de>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
900097bc:	4a2c      	ldr	r2, [pc, #176]	; (90009870 <HAL_RCCEx_PeriphCLKConfig+0x968>)
900097be:	f8d5 109c 	ldr.w	r1, [r5, #156]	; 0x9c
900097c2:	6d93      	ldr	r3, [r2, #88]	; 0x58
900097c4:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
900097c8:	430b      	orrs	r3, r1
900097ca:	6593      	str	r3, [r2, #88]	; 0x58
900097cc:	e6c8      	b.n	90009560 <HAL_RCCEx_PeriphCLKConfig+0x658>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
900097ce:	2100      	movs	r1, #0
900097d0:	1d28      	adds	r0, r5, #4
900097d2:	f7ff faa9 	bl	90008d28 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
900097d6:	4604      	mov	r4, r0
      break;
900097d8:	e7ef      	b.n	900097ba <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
900097da:	2102      	movs	r1, #2
900097dc:	f105 0024 	add.w	r0, r5, #36	; 0x24
900097e0:	f7ff fb1a 	bl	90008e18 <RCCEx_PLL3_Config>
900097e4:	e7f7      	b.n	900097d6 <HAL_RCCEx_PeriphCLKConfig+0x8ce>
900097e6:	4626      	mov	r6, r4
900097e8:	e6ba      	b.n	90009560 <HAL_RCCEx_PeriphCLKConfig+0x658>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
900097ea:	2102      	movs	r1, #2
900097ec:	f105 0024 	add.w	r0, r5, #36	; 0x24
900097f0:	f7ff fb12 	bl	90008e18 <RCCEx_PLL3_Config>
900097f4:	e6f6      	b.n	900095e4 <HAL_RCCEx_PeriphCLKConfig+0x6dc>
    switch(PeriphClkInit->AdcClockSelection)
900097f6:	2601      	movs	r6, #1
900097f8:	4634      	mov	r4, r6
900097fa:	e6ff      	b.n	900095fc <HAL_RCCEx_PeriphCLKConfig+0x6f4>
900097fc:	4626      	mov	r6, r4
900097fe:	e6fd      	b.n	900095fc <HAL_RCCEx_PeriphCLKConfig+0x6f4>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
90009800:	2101      	movs	r1, #1
90009802:	f105 0024 	add.w	r0, r5, #36	; 0x24
90009806:	f7ff fb07 	bl	90008e18 <RCCEx_PLL3_Config>
9000980a:	4604      	mov	r4, r0
      break;
9000980c:	e70b      	b.n	90009626 <HAL_RCCEx_PeriphCLKConfig+0x71e>
    switch(PeriphClkInit->UsbClockSelection)
9000980e:	2601      	movs	r6, #1
90009810:	4634      	mov	r4, r6
90009812:	e713      	b.n	9000963c <HAL_RCCEx_PeriphCLKConfig+0x734>
90009814:	4626      	mov	r6, r4
90009816:	e711      	b.n	9000963c <HAL_RCCEx_PeriphCLKConfig+0x734>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
90009818:	4a15      	ldr	r2, [pc, #84]	; (90009870 <HAL_RCCEx_PeriphCLKConfig+0x968>)
9000981a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000981c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90009820:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
90009822:	b96c      	cbnz	r4, 90009840 <HAL_RCCEx_PeriphCLKConfig+0x938>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
90009824:	4a12      	ldr	r2, [pc, #72]	; (90009870 <HAL_RCCEx_PeriphCLKConfig+0x968>)
90009826:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
90009828:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
9000982a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000982e:	430b      	orrs	r3, r1
90009830:	64d3      	str	r3, [r2, #76]	; 0x4c
90009832:	e710      	b.n	90009656 <HAL_RCCEx_PeriphCLKConfig+0x74e>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
90009834:	2102      	movs	r1, #2
90009836:	1d28      	adds	r0, r5, #4
90009838:	f7ff fa76 	bl	90008d28 <RCCEx_PLL2_Config>
9000983c:	4604      	mov	r4, r0
      break;
9000983e:	e7f0      	b.n	90009822 <HAL_RCCEx_PeriphCLKConfig+0x91a>
90009840:	4626      	mov	r6, r4
90009842:	e708      	b.n	90009656 <HAL_RCCEx_PeriphCLKConfig+0x74e>
    switch(PeriphClkInit->RngClockSelection)
90009844:	f421 7280 	bic.w	r2, r1, #256	; 0x100
90009848:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9000984c:	f47f af1b 	bne.w	90009686 <HAL_RCCEx_PeriphCLKConfig+0x77e>
    if(ret == HAL_OK)
90009850:	b964      	cbnz	r4, 9000986c <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
90009852:	4807      	ldr	r0, [pc, #28]	; (90009870 <HAL_RCCEx_PeriphCLKConfig+0x968>)
90009854:	6d42      	ldr	r2, [r0, #84]	; 0x54
90009856:	f422 7240 	bic.w	r2, r2, #768	; 0x300
9000985a:	430a      	orrs	r2, r1
9000985c:	6542      	str	r2, [r0, #84]	; 0x54
9000985e:	e713      	b.n	90009688 <HAL_RCCEx_PeriphCLKConfig+0x780>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
90009860:	4803      	ldr	r0, [pc, #12]	; (90009870 <HAL_RCCEx_PeriphCLKConfig+0x968>)
90009862:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90009864:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90009868:	62c2      	str	r2, [r0, #44]	; 0x2c
      break;
9000986a:	e7f1      	b.n	90009850 <HAL_RCCEx_PeriphCLKConfig+0x948>
9000986c:	4626      	mov	r6, r4
9000986e:	e70b      	b.n	90009688 <HAL_RCCEx_PeriphCLKConfig+0x780>
90009870:	58024400 	.word	0x58024400

90009874 <HAL_RCCEx_GetD3PCLK1Freq>:
{
90009874:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE)>> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
90009876:	f7ff f9e7 	bl	90008c48 <HAL_RCC_GetHCLKFreq>
9000987a:	4b05      	ldr	r3, [pc, #20]	; (90009890 <HAL_RCCEx_GetD3PCLK1Freq+0x1c>)
9000987c:	4a05      	ldr	r2, [pc, #20]	; (90009894 <HAL_RCCEx_GetD3PCLK1Freq+0x20>)
9000987e:	6a1b      	ldr	r3, [r3, #32]
90009880:	f3c3 1302 	ubfx	r3, r3, #4, #3
90009884:	5cd3      	ldrb	r3, [r2, r3]
90009886:	f003 031f 	and.w	r3, r3, #31
}
9000988a:	40d8      	lsrs	r0, r3
9000988c:	bd08      	pop	{r3, pc}
9000988e:	bf00      	nop
90009890:	58024400 	.word	0x58024400
90009894:	90021924 	.word	0x90021924

90009898 <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
90009898:	4a4e      	ldr	r2, [pc, #312]	; (900099d4 <HAL_RCCEx_GetPLL2ClockFreq+0x13c>)
{
9000989a:	b570      	push	{r4, r5, r6, lr}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000989c:	6a94      	ldr	r4, [r2, #40]	; 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2)>> 12);
9000989e:	6a96      	ldr	r6, [r2, #40]	; 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
900098a0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
  if (pll2m != 0U)
900098a2:	f416 3f7c 	tst.w	r6, #258048	; 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2)>> 12);
900098a6:	f3c6 3105 	ubfx	r1, r6, #12, #6
  fracn2 =(float_t)(uint32_t)(pll2fracen* ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2)>> 3));
900098aa:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
  if (pll2m != 0U)
900098ac:	f000 808d 	beq.w	900099ca <HAL_RCCEx_GetPLL2ClockFreq+0x132>
    switch (pllsource)
900098b0:	ee07 1a90 	vmov	s15, r1
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
900098b4:	f3c3 1300 	ubfx	r3, r3, #4, #1
  fracn2 =(float_t)(uint32_t)(pll2fracen* ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2)>> 3));
900098b8:	f3c5 01cc 	ubfx	r1, r5, #3, #13
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
900098bc:	f004 0403 	and.w	r4, r4, #3
900098c0:	eef8 6ae7 	vcvt.f32.s32	s13, s15
  fracn2 =(float_t)(uint32_t)(pll2fracen* ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2)>> 3));
900098c4:	434b      	muls	r3, r1
    switch (pllsource)
900098c6:	2c01      	cmp	r4, #1
900098c8:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
  fracn2 =(float_t)(uint32_t)(pll2fracen* ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2)>> 3));
900098cc:	ee07 3a90 	vmov	s15, r3
900098d0:	eefa 7ae9 	vcvt.f32.s32	s15, s15, #13
    switch (pllsource)
900098d4:	d06b      	beq.n	900099ae <HAL_RCCEx_GetPLL2ClockFreq+0x116>
900098d6:	2c02      	cmp	r4, #2
900098d8:	d05b      	beq.n	90009992 <HAL_RCCEx_GetPLL2ClockFreq+0xfa>
900098da:	2c00      	cmp	r4, #0
900098dc:	d167      	bne.n	900099ae <HAL_RCCEx_GetPLL2ClockFreq+0x116>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
900098de:	6813      	ldr	r3, [r2, #0]
900098e0:	069b      	lsls	r3, r3, #26
900098e2:	d546      	bpl.n	90009972 <HAL_RCCEx_GetPLL2ClockFreq+0xda>
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
900098e4:	6811      	ldr	r1, [r2, #0]
        pll2vco = ( (float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
900098e6:	6b93      	ldr	r3, [r2, #56]	; 0x38
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
900098e8:	f3c1 01c1 	ubfx	r1, r1, #3, #2
900098ec:	4a3a      	ldr	r2, [pc, #232]	; (900099d8 <HAL_RCCEx_GetPLL2ClockFreq+0x140>)
        pll2vco = ( (float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
900098ee:	f3c3 0308 	ubfx	r3, r3, #0, #9
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
900098f2:	40ca      	lsrs	r2, r1
        pll2vco = ( (float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
900098f4:	ee07 2a10 	vmov	s14, r2
900098f8:	eef8 5ac7 	vcvt.f32.s32	s11, s14
900098fc:	ee85 7aa6 	vdiv.f32	s14, s11, s13
90009900:	ee06 3a90 	vmov	s13, r3
90009904:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90009908:	ee76 7aa7 	vadd.f32	s15, s13, s15
9000990c:	ee77 7a86 	vadd.f32	s15, s15, s12
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco/((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >>9)  + (float_t)1 )) ;
90009910:	4a30      	ldr	r2, [pc, #192]	; (900099d4 <HAL_RCCEx_GetPLL2ClockFreq+0x13c>)
      pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
90009912:	ee67 7a87 	vmul.f32	s15, s15, s14
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco/((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >>9)  + (float_t)1 )) ;
90009916:	6b93      	ldr	r3, [r2, #56]	; 0x38
90009918:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000991c:	ee07 3a10 	vmov	s14, r3
90009920:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90009924:	ee37 7a06 	vadd.f32	s14, s14, s12
90009928:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000992c:	eefc 6ae6 	vcvt.u32.f32	s13, s13
90009930:	edc0 6a00 	vstr	s13, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco/((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >>16) + (float_t)1 )) ;
90009934:	6b93      	ldr	r3, [r2, #56]	; 0x38
90009936:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000993a:	ee07 3a10 	vmov	s14, r3
9000993e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90009942:	ee37 7a06 	vadd.f32	s14, s14, s12
90009946:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000994a:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000994e:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco/((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >>24) + (float_t)1 )) ;
90009952:	6b93      	ldr	r3, [r2, #56]	; 0x38
90009954:	f3c3 6306 	ubfx	r3, r3, #24, #7
90009958:	ee07 3a10 	vmov	s14, r3
9000995c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90009960:	ee37 6a06 	vadd.f32	s12, s14, s12
90009964:	ee87 7a86 	vdiv.f32	s14, s15, s12
90009968:	eebc 7ac7 	vcvt.u32.f32	s14, s14
9000996c:	ed80 7a02 	vstr	s14, [r0, #8]
}
90009970:	bd70      	pop	{r4, r5, r6, pc}
        pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
90009972:	6b93      	ldr	r3, [r2, #56]	; 0x38
90009974:	eddf 5a19 	vldr	s11, [pc, #100]	; 900099dc <HAL_RCCEx_GetPLL2ClockFreq+0x144>
90009978:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000997c:	ee07 3a10 	vmov	s14, r3
90009980:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90009984:	ee77 7a27 	vadd.f32	s15, s14, s15
90009988:	ee77 7a86 	vadd.f32	s15, s15, s12
      pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
9000998c:	ee85 7aa6 	vdiv.f32	s14, s11, s13
90009990:	e7be      	b.n	90009910 <HAL_RCCEx_GetPLL2ClockFreq+0x78>
      pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
90009992:	6b93      	ldr	r3, [r2, #56]	; 0x38
90009994:	eddf 5a12 	vldr	s11, [pc, #72]	; 900099e0 <HAL_RCCEx_GetPLL2ClockFreq+0x148>
90009998:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000999c:	ee07 3a10 	vmov	s14, r3
900099a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900099a4:	ee77 7a27 	vadd.f32	s15, s14, s15
900099a8:	ee77 7a86 	vadd.f32	s15, s15, s12
900099ac:	e7ee      	b.n	9000998c <HAL_RCCEx_GetPLL2ClockFreq+0xf4>
      pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
900099ae:	6b93      	ldr	r3, [r2, #56]	; 0x38
900099b0:	eddf 5a0c 	vldr	s11, [pc, #48]	; 900099e4 <HAL_RCCEx_GetPLL2ClockFreq+0x14c>
900099b4:	f3c3 0308 	ubfx	r3, r3, #0, #9
900099b8:	ee07 3a10 	vmov	s14, r3
900099bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900099c0:	ee77 7a27 	vadd.f32	s15, s14, s15
900099c4:	ee77 7a86 	vadd.f32	s15, s15, s12
900099c8:	e7e0      	b.n	9000998c <HAL_RCCEx_GetPLL2ClockFreq+0xf4>
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
900099ca:	e9c0 1100 	strd	r1, r1, [r0]
    PLL2_Clocks->PLL2_R_Frequency = 0U;
900099ce:	6081      	str	r1, [r0, #8]
}
900099d0:	e7ce      	b.n	90009970 <HAL_RCCEx_GetPLL2ClockFreq+0xd8>
900099d2:	bf00      	nop
900099d4:	58024400 	.word	0x58024400
900099d8:	03d09000 	.word	0x03d09000
900099dc:	4c742400 	.word	0x4c742400
900099e0:	4bbebc20 	.word	0x4bbebc20
900099e4:	4a742400 	.word	0x4a742400

900099e8 <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
900099e8:	4a4e      	ldr	r2, [pc, #312]	; (90009b24 <HAL_RCCEx_GetPLL3ClockFreq+0x13c>)
{
900099ea:	b570      	push	{r4, r5, r6, lr}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
900099ec:	6a94      	ldr	r4, [r2, #40]	; 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3)>> 20)  ;
900099ee:	6a96      	ldr	r6, [r2, #40]	; 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
900099f0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
  if (pll3m != 0U)
900099f2:	f016 7f7c 	tst.w	r6, #66060288	; 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3)>> 20)  ;
900099f6:	f3c6 5105 	ubfx	r1, r6, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen* ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3)>> 3));
900099fa:	6c55      	ldr	r5, [r2, #68]	; 0x44
  if (pll3m != 0U)
900099fc:	f000 808d 	beq.w	90009b1a <HAL_RCCEx_GetPLL3ClockFreq+0x132>
    switch (pllsource)
90009a00:	ee07 1a90 	vmov	s15, r1
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
90009a04:	f3c3 2300 	ubfx	r3, r3, #8, #1
  fracn3 = (float_t)(uint32_t)(pll3fracen* ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3)>> 3));
90009a08:	f3c5 01cc 	ubfx	r1, r5, #3, #13
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
90009a0c:	f004 0403 	and.w	r4, r4, #3
90009a10:	eef8 6ae7 	vcvt.f32.s32	s13, s15
  fracn3 = (float_t)(uint32_t)(pll3fracen* ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3)>> 3));
90009a14:	434b      	muls	r3, r1
    switch (pllsource)
90009a16:	2c01      	cmp	r4, #1
90009a18:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
  fracn3 = (float_t)(uint32_t)(pll3fracen* ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3)>> 3));
90009a1c:	ee07 3a90 	vmov	s15, r3
90009a20:	eefa 7ae9 	vcvt.f32.s32	s15, s15, #13
    switch (pllsource)
90009a24:	d06b      	beq.n	90009afe <HAL_RCCEx_GetPLL3ClockFreq+0x116>
90009a26:	2c02      	cmp	r4, #2
90009a28:	d05b      	beq.n	90009ae2 <HAL_RCCEx_GetPLL3ClockFreq+0xfa>
90009a2a:	2c00      	cmp	r4, #0
90009a2c:	d167      	bne.n	90009afe <HAL_RCCEx_GetPLL3ClockFreq+0x116>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
90009a2e:	6813      	ldr	r3, [r2, #0]
90009a30:	069b      	lsls	r3, r3, #26
90009a32:	d546      	bpl.n	90009ac2 <HAL_RCCEx_GetPLL3ClockFreq+0xda>
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
90009a34:	6811      	ldr	r1, [r2, #0]
        pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
90009a36:	6c13      	ldr	r3, [r2, #64]	; 0x40
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
90009a38:	f3c1 01c1 	ubfx	r1, r1, #3, #2
90009a3c:	4a3a      	ldr	r2, [pc, #232]	; (90009b28 <HAL_RCCEx_GetPLL3ClockFreq+0x140>)
        pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
90009a3e:	f3c3 0308 	ubfx	r3, r3, #0, #9
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
90009a42:	40ca      	lsrs	r2, r1
        pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
90009a44:	ee07 2a10 	vmov	s14, r2
90009a48:	eef8 5ac7 	vcvt.f32.s32	s11, s14
90009a4c:	ee85 7aa6 	vdiv.f32	s14, s11, s13
90009a50:	ee06 3a90 	vmov	s13, r3
90009a54:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90009a58:	ee76 7aa7 	vadd.f32	s15, s13, s15
90009a5c:	ee77 7a86 	vadd.f32	s15, s15, s12
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco/((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >>9)  + (float_t)1 )) ;
90009a60:	4a30      	ldr	r2, [pc, #192]	; (90009b24 <HAL_RCCEx_GetPLL3ClockFreq+0x13c>)
      pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
90009a62:	ee67 7a87 	vmul.f32	s15, s15, s14
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco/((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >>9)  + (float_t)1 )) ;
90009a66:	6c13      	ldr	r3, [r2, #64]	; 0x40
90009a68:	f3c3 2346 	ubfx	r3, r3, #9, #7
90009a6c:	ee07 3a10 	vmov	s14, r3
90009a70:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90009a74:	ee37 7a06 	vadd.f32	s14, s14, s12
90009a78:	eec7 6a87 	vdiv.f32	s13, s15, s14
90009a7c:	eefc 6ae6 	vcvt.u32.f32	s13, s13
90009a80:	edc0 6a00 	vstr	s13, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco/((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >>16) + (float_t)1 )) ;
90009a84:	6c13      	ldr	r3, [r2, #64]	; 0x40
90009a86:	f3c3 4306 	ubfx	r3, r3, #16, #7
90009a8a:	ee07 3a10 	vmov	s14, r3
90009a8e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90009a92:	ee37 7a06 	vadd.f32	s14, s14, s12
90009a96:	eec7 6a87 	vdiv.f32	s13, s15, s14
90009a9a:	eefc 6ae6 	vcvt.u32.f32	s13, s13
90009a9e:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco/((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >>24) + (float_t)1 )) ;
90009aa2:	6c13      	ldr	r3, [r2, #64]	; 0x40
90009aa4:	f3c3 6306 	ubfx	r3, r3, #24, #7
90009aa8:	ee07 3a10 	vmov	s14, r3
90009aac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90009ab0:	ee37 6a06 	vadd.f32	s12, s14, s12
90009ab4:	ee87 7a86 	vdiv.f32	s14, s15, s12
90009ab8:	eebc 7ac7 	vcvt.u32.f32	s14, s14
90009abc:	ed80 7a02 	vstr	s14, [r0, #8]
}
90009ac0:	bd70      	pop	{r4, r5, r6, pc}
        pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
90009ac2:	6c13      	ldr	r3, [r2, #64]	; 0x40
90009ac4:	eddf 5a19 	vldr	s11, [pc, #100]	; 90009b2c <HAL_RCCEx_GetPLL3ClockFreq+0x144>
90009ac8:	f3c3 0308 	ubfx	r3, r3, #0, #9
90009acc:	ee07 3a10 	vmov	s14, r3
90009ad0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90009ad4:	ee77 7a27 	vadd.f32	s15, s14, s15
90009ad8:	ee77 7a86 	vadd.f32	s15, s15, s12
      pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
90009adc:	ee85 7aa6 	vdiv.f32	s14, s11, s13
90009ae0:	e7be      	b.n	90009a60 <HAL_RCCEx_GetPLL3ClockFreq+0x78>
      pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
90009ae2:	6c13      	ldr	r3, [r2, #64]	; 0x40
90009ae4:	eddf 5a12 	vldr	s11, [pc, #72]	; 90009b30 <HAL_RCCEx_GetPLL3ClockFreq+0x148>
90009ae8:	f3c3 0308 	ubfx	r3, r3, #0, #9
90009aec:	ee07 3a10 	vmov	s14, r3
90009af0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90009af4:	ee77 7a27 	vadd.f32	s15, s14, s15
90009af8:	ee77 7a86 	vadd.f32	s15, s15, s12
90009afc:	e7ee      	b.n	90009adc <HAL_RCCEx_GetPLL3ClockFreq+0xf4>
      pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
90009afe:	6c13      	ldr	r3, [r2, #64]	; 0x40
90009b00:	eddf 5a0c 	vldr	s11, [pc, #48]	; 90009b34 <HAL_RCCEx_GetPLL3ClockFreq+0x14c>
90009b04:	f3c3 0308 	ubfx	r3, r3, #0, #9
90009b08:	ee07 3a10 	vmov	s14, r3
90009b0c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90009b10:	ee77 7a27 	vadd.f32	s15, s14, s15
90009b14:	ee77 7a86 	vadd.f32	s15, s15, s12
90009b18:	e7e0      	b.n	90009adc <HAL_RCCEx_GetPLL3ClockFreq+0xf4>
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
90009b1a:	e9c0 1100 	strd	r1, r1, [r0]
    PLL3_Clocks->PLL3_R_Frequency = 0U;
90009b1e:	6081      	str	r1, [r0, #8]
}
90009b20:	e7ce      	b.n	90009ac0 <HAL_RCCEx_GetPLL3ClockFreq+0xd8>
90009b22:	bf00      	nop
90009b24:	58024400 	.word	0x58024400
90009b28:	03d09000 	.word	0x03d09000
90009b2c:	4c742400 	.word	0x4c742400
90009b30:	4bbebc20 	.word	0x4bbebc20
90009b34:	4a742400 	.word	0x4a742400

90009b38 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
90009b38:	b538      	push	{r3, r4, r5, lr}
90009b3a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
90009b3c:	4604      	mov	r4, r0
90009b3e:	b1f0      	cbz	r0, 90009b7e <HAL_SDRAM_Init+0x46>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
90009b40:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90009b44:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90009b48:	b91b      	cbnz	r3, 90009b52 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
90009b4a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
90009b4e:	f7f9 fdc7 	bl	900036e0 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
90009b52:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
90009b54:	1d21      	adds	r1, r4, #4
90009b56:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
90009b58:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
90009b5c:	f001 f962 	bl	9000ae24 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
90009b60:	6862      	ldr	r2, [r4, #4]
90009b62:	4629      	mov	r1, r5
90009b64:	6820      	ldr	r0, [r4, #0]
90009b66:	f001 f998 	bl	9000ae9a <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
90009b6a:	4a06      	ldr	r2, [pc, #24]	; (90009b84 <HAL_SDRAM_Init+0x4c>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;

  return HAL_OK;
90009b6c:	2000      	movs	r0, #0
  __FMC_ENABLE();
90009b6e:	6813      	ldr	r3, [r2, #0]
90009b70:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
90009b74:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
90009b76:	2301      	movs	r3, #1
90009b78:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
90009b7c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90009b7e:	2001      	movs	r0, #1
90009b80:	e7fc      	b.n	90009b7c <HAL_SDRAM_Init+0x44>
90009b82:	bf00      	nop
90009b84:	52004000 	.word	0x52004000

90009b88 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
90009b88:	b510      	push	{r4, lr}
90009b8a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
90009b8c:	f7f9 fe1c 	bl	900037c8 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
90009b90:	e9d4 0100 	ldrd	r0, r1, [r4]
90009b94:	f001 f9b7 	bl	9000af06 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
90009b98:	2000      	movs	r0, #0
90009b9a:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
90009b9e:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
90009ba2:	bd10      	pop	{r4, pc}

90009ba4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
90009ba4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
90009ba6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
90009baa:	4605      	mov	r5, r0
90009bac:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
90009bae:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
90009bb0:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
90009bb2:	d010      	beq.n	90009bd6 <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
90009bb4:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
90009bb8:	2c01      	cmp	r4, #1
90009bba:	d110      	bne.n	90009bde <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
90009bbc:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
90009bbe:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
90009bc0:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
90009bc4:	f001 f9ae 	bl	9000af24 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
90009bc8:	6833      	ldr	r3, [r6, #0]
90009bca:	2b02      	cmp	r3, #2
90009bcc:	d104      	bne.n	90009bd8 <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
90009bce:	2305      	movs	r3, #5
90009bd0:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
90009bd4:	2000      	movs	r0, #0
}
90009bd6:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
90009bd8:	f885 402c 	strb.w	r4, [r5, #44]	; 0x2c
90009bdc:	e7fa      	b.n	90009bd4 <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
90009bde:	2001      	movs	r0, #1
90009be0:	e7f9      	b.n	90009bd6 <HAL_SDRAM_SendCommand+0x32>

90009be2 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
90009be2:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
90009be4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
90009be8:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
90009bea:	2b02      	cmp	r3, #2
90009bec:	b2d8      	uxtb	r0, r3
90009bee:	d00d      	beq.n	90009c0c <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
90009bf0:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
90009bf4:	2b01      	cmp	r3, #1
90009bf6:	b2dd      	uxtb	r5, r3
90009bf8:	d109      	bne.n	90009c0e <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
90009bfa:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
90009bfc:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
90009bfe:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
90009c02:	f001 f9a1 	bl	9000af48 <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
90009c06:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
90009c08:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
90009c0c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90009c0e:	2001      	movs	r0, #1
90009c10:	e7fc      	b.n	90009c0c <HAL_SDRAM_ProgramRefreshRate+0x2a>

90009c12 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
90009c12:	4770      	bx	lr

90009c14 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
90009c14:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
90009c18:	2b01      	cmp	r3, #1
90009c1a:	d12f      	bne.n	90009c7c <HAL_TIM_Base_Start_IT+0x68>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
90009c1c:	2302      	movs	r3, #2
90009c1e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
90009c22:	6803      	ldr	r3, [r0, #0]
90009c24:	68da      	ldr	r2, [r3, #12]
90009c26:	f042 0201 	orr.w	r2, r2, #1
90009c2a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
90009c2c:	4a14      	ldr	r2, [pc, #80]	; (90009c80 <HAL_TIM_Base_Start_IT+0x6c>)
90009c2e:	4293      	cmp	r3, r2
90009c30:	d016      	beq.n	90009c60 <HAL_TIM_Base_Start_IT+0x4c>
90009c32:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
90009c36:	d013      	beq.n	90009c60 <HAL_TIM_Base_Start_IT+0x4c>
90009c38:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
90009c3c:	4293      	cmp	r3, r2
90009c3e:	d00f      	beq.n	90009c60 <HAL_TIM_Base_Start_IT+0x4c>
90009c40:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90009c44:	4293      	cmp	r3, r2
90009c46:	d00b      	beq.n	90009c60 <HAL_TIM_Base_Start_IT+0x4c>
90009c48:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90009c4c:	4293      	cmp	r3, r2
90009c4e:	d007      	beq.n	90009c60 <HAL_TIM_Base_Start_IT+0x4c>
90009c50:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
90009c54:	4293      	cmp	r3, r2
90009c56:	d003      	beq.n	90009c60 <HAL_TIM_Base_Start_IT+0x4c>
90009c58:	f5a2 426c 	sub.w	r2, r2, #60416	; 0xec00
90009c5c:	4293      	cmp	r3, r2
90009c5e:	d107      	bne.n	90009c70 <HAL_TIM_Base_Start_IT+0x5c>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
90009c60:	6899      	ldr	r1, [r3, #8]
90009c62:	4a08      	ldr	r2, [pc, #32]	; (90009c84 <HAL_TIM_Base_Start_IT+0x70>)
90009c64:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
90009c66:	2a06      	cmp	r2, #6
90009c68:	d006      	beq.n	90009c78 <HAL_TIM_Base_Start_IT+0x64>
90009c6a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
90009c6e:	d003      	beq.n	90009c78 <HAL_TIM_Base_Start_IT+0x64>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
90009c70:	681a      	ldr	r2, [r3, #0]
90009c72:	f042 0201 	orr.w	r2, r2, #1
90009c76:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
90009c78:	2000      	movs	r0, #0
}
90009c7a:	4770      	bx	lr
    return HAL_ERROR;
90009c7c:	2001      	movs	r0, #1
90009c7e:	4770      	bx	lr
90009c80:	40010000 	.word	0x40010000
90009c84:	00010007 	.word	0x00010007

90009c88 <HAL_TIM_OC_DelayElapsedCallback>:
90009c88:	4770      	bx	lr

90009c8a <HAL_TIM_IC_CaptureCallback>:
90009c8a:	4770      	bx	lr

90009c8c <HAL_TIM_PWM_PulseFinishedCallback>:
90009c8c:	4770      	bx	lr

90009c8e <HAL_TIM_TriggerCallback>:
90009c8e:	4770      	bx	lr

90009c90 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
90009c90:	6803      	ldr	r3, [r0, #0]
90009c92:	691a      	ldr	r2, [r3, #16]
90009c94:	0791      	lsls	r1, r2, #30
{
90009c96:	b510      	push	{r4, lr}
90009c98:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
90009c9a:	d50f      	bpl.n	90009cbc <HAL_TIM_IRQHandler+0x2c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
90009c9c:	68da      	ldr	r2, [r3, #12]
90009c9e:	0792      	lsls	r2, r2, #30
90009ca0:	d50c      	bpl.n	90009cbc <HAL_TIM_IRQHandler+0x2c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
90009ca2:	f06f 0202 	mvn.w	r2, #2
90009ca6:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
90009ca8:	2201      	movs	r2, #1
90009caa:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
90009cac:	699b      	ldr	r3, [r3, #24]
90009cae:	0799      	lsls	r1, r3, #30
90009cb0:	f000 8085 	beq.w	90009dbe <HAL_TIM_IRQHandler+0x12e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
90009cb4:	f7ff ffe9 	bl	90009c8a <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90009cb8:	2300      	movs	r3, #0
90009cba:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
90009cbc:	6823      	ldr	r3, [r4, #0]
90009cbe:	691a      	ldr	r2, [r3, #16]
90009cc0:	0752      	lsls	r2, r2, #29
90009cc2:	d510      	bpl.n	90009ce6 <HAL_TIM_IRQHandler+0x56>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
90009cc4:	68da      	ldr	r2, [r3, #12]
90009cc6:	0750      	lsls	r0, r2, #29
90009cc8:	d50d      	bpl.n	90009ce6 <HAL_TIM_IRQHandler+0x56>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
90009cca:	f06f 0204 	mvn.w	r2, #4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
90009cce:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
90009cd0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
90009cd2:	2202      	movs	r2, #2
90009cd4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
90009cd6:	699b      	ldr	r3, [r3, #24]
90009cd8:	f413 7f40 	tst.w	r3, #768	; 0x300
90009cdc:	d075      	beq.n	90009dca <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
90009cde:	f7ff ffd4 	bl	90009c8a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90009ce2:	2300      	movs	r3, #0
90009ce4:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
90009ce6:	6823      	ldr	r3, [r4, #0]
90009ce8:	691a      	ldr	r2, [r3, #16]
90009cea:	0711      	lsls	r1, r2, #28
90009cec:	d50f      	bpl.n	90009d0e <HAL_TIM_IRQHandler+0x7e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
90009cee:	68da      	ldr	r2, [r3, #12]
90009cf0:	0712      	lsls	r2, r2, #28
90009cf2:	d50c      	bpl.n	90009d0e <HAL_TIM_IRQHandler+0x7e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
90009cf4:	f06f 0208 	mvn.w	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
90009cf8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
90009cfa:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
90009cfc:	2204      	movs	r2, #4
90009cfe:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
90009d00:	69db      	ldr	r3, [r3, #28]
90009d02:	079b      	lsls	r3, r3, #30
90009d04:	d067      	beq.n	90009dd6 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
90009d06:	f7ff ffc0 	bl	90009c8a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90009d0a:	2300      	movs	r3, #0
90009d0c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
90009d0e:	6823      	ldr	r3, [r4, #0]
90009d10:	691a      	ldr	r2, [r3, #16]
90009d12:	06d0      	lsls	r0, r2, #27
90009d14:	d510      	bpl.n	90009d38 <HAL_TIM_IRQHandler+0xa8>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
90009d16:	68da      	ldr	r2, [r3, #12]
90009d18:	06d1      	lsls	r1, r2, #27
90009d1a:	d50d      	bpl.n	90009d38 <HAL_TIM_IRQHandler+0xa8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
90009d1c:	f06f 0210 	mvn.w	r2, #16
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
90009d20:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
90009d22:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
90009d24:	2208      	movs	r2, #8
90009d26:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
90009d28:	69db      	ldr	r3, [r3, #28]
90009d2a:	f413 7f40 	tst.w	r3, #768	; 0x300
90009d2e:	d058      	beq.n	90009de2 <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
90009d30:	f7ff ffab 	bl	90009c8a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90009d34:	2300      	movs	r3, #0
90009d36:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
90009d38:	6823      	ldr	r3, [r4, #0]
90009d3a:	691a      	ldr	r2, [r3, #16]
90009d3c:	07d2      	lsls	r2, r2, #31
90009d3e:	d508      	bpl.n	90009d52 <HAL_TIM_IRQHandler+0xc2>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
90009d40:	68da      	ldr	r2, [r3, #12]
90009d42:	07d0      	lsls	r0, r2, #31
90009d44:	d505      	bpl.n	90009d52 <HAL_TIM_IRQHandler+0xc2>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
90009d46:	f06f 0201 	mvn.w	r2, #1
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
90009d4a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
90009d4c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
90009d4e:	f7f9 fb69 	bl	90003424 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
90009d52:	6823      	ldr	r3, [r4, #0]
90009d54:	691a      	ldr	r2, [r3, #16]
90009d56:	0611      	lsls	r1, r2, #24
90009d58:	d508      	bpl.n	90009d6c <HAL_TIM_IRQHandler+0xdc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
90009d5a:	68da      	ldr	r2, [r3, #12]
90009d5c:	0612      	lsls	r2, r2, #24
90009d5e:	d505      	bpl.n	90009d6c <HAL_TIM_IRQHandler+0xdc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
90009d60:	f06f 0280 	mvn.w	r2, #128	; 0x80
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
90009d64:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
90009d66:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
90009d68:	f000 f8d9 	bl	90009f1e <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
90009d6c:	6823      	ldr	r3, [r4, #0]
90009d6e:	691a      	ldr	r2, [r3, #16]
90009d70:	05d0      	lsls	r0, r2, #23
90009d72:	d508      	bpl.n	90009d86 <HAL_TIM_IRQHandler+0xf6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
90009d74:	68da      	ldr	r2, [r3, #12]
90009d76:	0611      	lsls	r1, r2, #24
90009d78:	d505      	bpl.n	90009d86 <HAL_TIM_IRQHandler+0xf6>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
90009d7a:	f46f 7280 	mvn.w	r2, #256	; 0x100
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
90009d7e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
90009d80:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
90009d82:	f000 f8cd 	bl	90009f20 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
90009d86:	6823      	ldr	r3, [r4, #0]
90009d88:	691a      	ldr	r2, [r3, #16]
90009d8a:	0652      	lsls	r2, r2, #25
90009d8c:	d508      	bpl.n	90009da0 <HAL_TIM_IRQHandler+0x110>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
90009d8e:	68da      	ldr	r2, [r3, #12]
90009d90:	0650      	lsls	r0, r2, #25
90009d92:	d505      	bpl.n	90009da0 <HAL_TIM_IRQHandler+0x110>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
90009d94:	f06f 0240 	mvn.w	r2, #64	; 0x40
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
90009d98:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
90009d9a:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
90009d9c:	f7ff ff77 	bl	90009c8e <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
90009da0:	6823      	ldr	r3, [r4, #0]
90009da2:	691a      	ldr	r2, [r3, #16]
90009da4:	0691      	lsls	r1, r2, #26
90009da6:	d522      	bpl.n	90009dee <HAL_TIM_IRQHandler+0x15e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
90009da8:	68da      	ldr	r2, [r3, #12]
90009daa:	0692      	lsls	r2, r2, #26
90009dac:	d51f      	bpl.n	90009dee <HAL_TIM_IRQHandler+0x15e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
90009dae:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
90009db2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
90009db4:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
90009db6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
90009dba:	f000 b8af 	b.w	90009f1c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
90009dbe:	f7ff ff63 	bl	90009c88 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
90009dc2:	4620      	mov	r0, r4
90009dc4:	f7ff ff62 	bl	90009c8c <HAL_TIM_PWM_PulseFinishedCallback>
90009dc8:	e776      	b.n	90009cb8 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
90009dca:	f7ff ff5d 	bl	90009c88 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
90009dce:	4620      	mov	r0, r4
90009dd0:	f7ff ff5c 	bl	90009c8c <HAL_TIM_PWM_PulseFinishedCallback>
90009dd4:	e785      	b.n	90009ce2 <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
90009dd6:	f7ff ff57 	bl	90009c88 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
90009dda:	4620      	mov	r0, r4
90009ddc:	f7ff ff56 	bl	90009c8c <HAL_TIM_PWM_PulseFinishedCallback>
90009de0:	e793      	b.n	90009d0a <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
90009de2:	f7ff ff51 	bl	90009c88 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
90009de6:	4620      	mov	r0, r4
90009de8:	f7ff ff50 	bl	90009c8c <HAL_TIM_PWM_PulseFinishedCallback>
90009dec:	e7a2      	b.n	90009d34 <HAL_TIM_IRQHandler+0xa4>
}
90009dee:	bd10      	pop	{r4, pc}

90009df0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
90009df0:	4a30      	ldr	r2, [pc, #192]	; (90009eb4 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
90009df2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
90009df4:	4290      	cmp	r0, r2
90009df6:	d012      	beq.n	90009e1e <TIM_Base_SetConfig+0x2e>
90009df8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
90009dfc:	d00f      	beq.n	90009e1e <TIM_Base_SetConfig+0x2e>
90009dfe:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
90009e02:	4290      	cmp	r0, r2
90009e04:	d00b      	beq.n	90009e1e <TIM_Base_SetConfig+0x2e>
90009e06:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90009e0a:	4290      	cmp	r0, r2
90009e0c:	d007      	beq.n	90009e1e <TIM_Base_SetConfig+0x2e>
90009e0e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90009e12:	4290      	cmp	r0, r2
90009e14:	d003      	beq.n	90009e1e <TIM_Base_SetConfig+0x2e>
90009e16:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
90009e1a:	4290      	cmp	r0, r2
90009e1c:	d119      	bne.n	90009e52 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
90009e1e:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
90009e20:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
90009e24:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
90009e26:	4a23      	ldr	r2, [pc, #140]	; (90009eb4 <TIM_Base_SetConfig+0xc4>)
90009e28:	4290      	cmp	r0, r2
90009e2a:	d01d      	beq.n	90009e68 <TIM_Base_SetConfig+0x78>
90009e2c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
90009e30:	d01a      	beq.n	90009e68 <TIM_Base_SetConfig+0x78>
90009e32:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
90009e36:	4290      	cmp	r0, r2
90009e38:	d016      	beq.n	90009e68 <TIM_Base_SetConfig+0x78>
90009e3a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90009e3e:	4290      	cmp	r0, r2
90009e40:	d012      	beq.n	90009e68 <TIM_Base_SetConfig+0x78>
90009e42:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90009e46:	4290      	cmp	r0, r2
90009e48:	d00e      	beq.n	90009e68 <TIM_Base_SetConfig+0x78>
90009e4a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
90009e4e:	4290      	cmp	r0, r2
90009e50:	d00a      	beq.n	90009e68 <TIM_Base_SetConfig+0x78>
90009e52:	4a19      	ldr	r2, [pc, #100]	; (90009eb8 <TIM_Base_SetConfig+0xc8>)
90009e54:	4290      	cmp	r0, r2
90009e56:	d007      	beq.n	90009e68 <TIM_Base_SetConfig+0x78>
90009e58:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90009e5c:	4290      	cmp	r0, r2
90009e5e:	d003      	beq.n	90009e68 <TIM_Base_SetConfig+0x78>
90009e60:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90009e64:	4290      	cmp	r0, r2
90009e66:	d103      	bne.n	90009e70 <TIM_Base_SetConfig+0x80>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
90009e68:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
90009e6c:	68ca      	ldr	r2, [r1, #12]
90009e6e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
90009e70:	694a      	ldr	r2, [r1, #20]
90009e72:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90009e76:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
90009e78:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
90009e7a:	688b      	ldr	r3, [r1, #8]
90009e7c:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
90009e7e:	680b      	ldr	r3, [r1, #0]
90009e80:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
90009e82:	4b0c      	ldr	r3, [pc, #48]	; (90009eb4 <TIM_Base_SetConfig+0xc4>)
90009e84:	4298      	cmp	r0, r3
90009e86:	d00f      	beq.n	90009ea8 <TIM_Base_SetConfig+0xb8>
90009e88:	f503 6380 	add.w	r3, r3, #1024	; 0x400
90009e8c:	4298      	cmp	r0, r3
90009e8e:	d00b      	beq.n	90009ea8 <TIM_Base_SetConfig+0xb8>
90009e90:	f503 5370 	add.w	r3, r3, #15360	; 0x3c00
90009e94:	4298      	cmp	r0, r3
90009e96:	d007      	beq.n	90009ea8 <TIM_Base_SetConfig+0xb8>
90009e98:	f503 6380 	add.w	r3, r3, #1024	; 0x400
90009e9c:	4298      	cmp	r0, r3
90009e9e:	d003      	beq.n	90009ea8 <TIM_Base_SetConfig+0xb8>
90009ea0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
90009ea4:	4298      	cmp	r0, r3
90009ea6:	d101      	bne.n	90009eac <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
90009ea8:	690b      	ldr	r3, [r1, #16]
90009eaa:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
90009eac:	2301      	movs	r3, #1
90009eae:	6143      	str	r3, [r0, #20]
}
90009eb0:	4770      	bx	lr
90009eb2:	bf00      	nop
90009eb4:	40010000 	.word	0x40010000
90009eb8:	40014000 	.word	0x40014000

90009ebc <HAL_TIM_Base_Init>:
{
90009ebc:	b510      	push	{r4, lr}
  if (htim == NULL)
90009ebe:	4604      	mov	r4, r0
90009ec0:	b350      	cbz	r0, 90009f18 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
90009ec2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
90009ec6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90009eca:	b91b      	cbnz	r3, 90009ed4 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
90009ecc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
90009ed0:	f7ff fe9f 	bl	90009c12 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
90009ed4:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
90009ed6:	6820      	ldr	r0, [r4, #0]
90009ed8:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
90009eda:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
90009ede:	f7ff ff87 	bl	90009df0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
90009ee2:	2301      	movs	r3, #1
  return HAL_OK;
90009ee4:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
90009ee6:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
90009eea:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
90009eee:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
90009ef2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90009ef6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
90009efa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
90009efe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
90009f02:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
90009f06:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
90009f0a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
90009f0e:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
90009f12:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
90009f16:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90009f18:	2001      	movs	r0, #1
90009f1a:	e7fc      	b.n	90009f16 <HAL_TIM_Base_Init+0x5a>

90009f1c <HAL_TIMEx_CommutCallback>:
90009f1c:	4770      	bx	lr

90009f1e <HAL_TIMEx_BreakCallback>:
90009f1e:	4770      	bx	lr

90009f20 <HAL_TIMEx_Break2Callback>:
90009f20:	4770      	bx	lr

90009f22 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
90009f22:	6803      	ldr	r3, [r0, #0]
90009f24:	681a      	ldr	r2, [r3, #0]
90009f26:	f422 7290 	bic.w	r2, r2, #288	; 0x120
90009f2a:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
90009f2c:	689a      	ldr	r2, [r3, #8]
90009f2e:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
90009f32:	f022 0201 	bic.w	r2, r2, #1
90009f36:	609a      	str	r2, [r3, #8]

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
90009f38:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
90009f3a:	2a01      	cmp	r2, #1
90009f3c:	d103      	bne.n	90009f46 <UART_EndRxTransfer+0x24>
  {
    CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
90009f3e:	681a      	ldr	r2, [r3, #0]
90009f40:	f022 0210 	bic.w	r2, r2, #16
90009f44:	601a      	str	r2, [r3, #0]
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
90009f46:	2320      	movs	r3, #32
90009f48:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90009f4c:	2300      	movs	r3, #0
90009f4e:	66c3      	str	r3, [r0, #108]	; 0x6c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
90009f50:	6703      	str	r3, [r0, #112]	; 0x70
}
90009f52:	4770      	bx	lr

90009f54 <HAL_UART_TxCpltCallback>:
90009f54:	4770      	bx	lr

90009f56 <HAL_UART_ErrorCallback>:
90009f56:	4770      	bx	lr

90009f58 <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
90009f58:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
90009f5a:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0U;
90009f5c:	2300      	movs	r3, #0
90009f5e:	f8a0 305e 	strh.w	r3, [r0, #94]	; 0x5e
  huart->TxXferCount = 0U;
90009f62:	f8a0 3056 	strh.w	r3, [r0, #86]	; 0x56
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
90009f66:	f7ff fff6 	bl	90009f56 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
90009f6a:	bd08      	pop	{r3, pc}

90009f6c <HAL_UARTEx_RxEventCallback>:
}
90009f6c:	4770      	bx	lr
	...

90009f70 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
90009f70:	6803      	ldr	r3, [r0, #0]
{
90009f72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
90009f76:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
90009f78:	f640 060f 	movw	r6, #2063	; 0x80f
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
90009f7c:	6819      	ldr	r1, [r3, #0]
{
90009f7e:	4604      	mov	r4, r0
  if (errorflags == 0U)
90009f80:	4232      	tst	r2, r6
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
90009f82:	689d      	ldr	r5, [r3, #8]
  if (errorflags == 0U)
90009f84:	d10f      	bne.n	90009fa6 <HAL_UART_IRQHandler+0x36>
    if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
90009f86:	0696      	lsls	r6, r2, #26
90009f88:	f140 808b 	bpl.w	9000a0a2 <HAL_UART_IRQHandler+0x132>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
90009f8c:	f001 0620 	and.w	r6, r1, #32
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
90009f90:	f005 5780 	and.w	r7, r5, #268435456	; 0x10000000
90009f94:	433e      	orrs	r6, r7
90009f96:	f000 8084 	beq.w	9000a0a2 <HAL_UART_IRQHandler+0x132>
      if (huart->RxISR != NULL)
90009f9a:	6f03      	ldr	r3, [r0, #112]	; 0x70
90009f9c:	2b00      	cmp	r3, #0
90009f9e:	d079      	beq.n	9000a094 <HAL_UART_IRQHandler+0x124>
}
90009fa0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
90009fa4:	4718      	bx	r3
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
90009fa6:	4e9f      	ldr	r6, [pc, #636]	; (9000a224 <HAL_UART_IRQHandler+0x2b4>)
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
90009fa8:	489f      	ldr	r0, [pc, #636]	; (9000a228 <HAL_UART_IRQHandler+0x2b8>)
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
90009faa:	402e      	ands	r6, r5
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
90009fac:	4008      	ands	r0, r1
90009fae:	4330      	orrs	r0, r6
90009fb0:	d077      	beq.n	9000a0a2 <HAL_UART_IRQHandler+0x132>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
90009fb2:	07d7      	lsls	r7, r2, #31
90009fb4:	d509      	bpl.n	90009fca <HAL_UART_IRQHandler+0x5a>
90009fb6:	05c8      	lsls	r0, r1, #23
90009fb8:	d507      	bpl.n	90009fca <HAL_UART_IRQHandler+0x5a>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
90009fba:	2001      	movs	r0, #1
90009fbc:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
90009fbe:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
90009fc2:	f040 0001 	orr.w	r0, r0, #1
90009fc6:	f8c4 008c 	str.w	r0, [r4, #140]	; 0x8c
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
90009fca:	0797      	lsls	r7, r2, #30
90009fcc:	d509      	bpl.n	90009fe2 <HAL_UART_IRQHandler+0x72>
90009fce:	07e8      	lsls	r0, r5, #31
90009fd0:	d507      	bpl.n	90009fe2 <HAL_UART_IRQHandler+0x72>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
90009fd2:	2002      	movs	r0, #2
90009fd4:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
90009fd6:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
90009fda:	f040 0004 	orr.w	r0, r0, #4
90009fde:	f8c4 008c 	str.w	r0, [r4, #140]	; 0x8c
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
90009fe2:	0757      	lsls	r7, r2, #29
90009fe4:	d509      	bpl.n	90009ffa <HAL_UART_IRQHandler+0x8a>
90009fe6:	07e8      	lsls	r0, r5, #31
90009fe8:	d507      	bpl.n	90009ffa <HAL_UART_IRQHandler+0x8a>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
90009fea:	2004      	movs	r0, #4
90009fec:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
90009fee:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
90009ff2:	f040 0002 	orr.w	r0, r0, #2
90009ff6:	f8c4 008c 	str.w	r0, [r4, #140]	; 0x8c
    if (((isrflags & USART_ISR_ORE) != 0U)
90009ffa:	0717      	lsls	r7, r2, #28
90009ffc:	d50b      	bpl.n	9000a016 <HAL_UART_IRQHandler+0xa6>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
90009ffe:	f001 0020 	and.w	r0, r1, #32
9000a002:	4330      	orrs	r0, r6
9000a004:	d007      	beq.n	9000a016 <HAL_UART_IRQHandler+0xa6>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000a006:	2008      	movs	r0, #8
9000a008:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
9000a00a:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000a00e:	f040 0008 	orr.w	r0, r0, #8
9000a012:	f8c4 008c 	str.w	r0, [r4, #140]	; 0x8c
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
9000a016:	0516      	lsls	r6, r2, #20
9000a018:	d50a      	bpl.n	9000a030 <HAL_UART_IRQHandler+0xc0>
9000a01a:	0148      	lsls	r0, r1, #5
9000a01c:	d508      	bpl.n	9000a030 <HAL_UART_IRQHandler+0xc0>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000a01e:	f44f 6000 	mov.w	r0, #2048	; 0x800
9000a022:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
9000a024:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
9000a028:	f043 0320 	orr.w	r3, r3, #32
9000a02c:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000a030:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
9000a034:	b373      	cbz	r3, 9000a094 <HAL_UART_IRQHandler+0x124>
      if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
9000a036:	0693      	lsls	r3, r2, #26
9000a038:	d50a      	bpl.n	9000a050 <HAL_UART_IRQHandler+0xe0>
          && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
9000a03a:	f001 0120 	and.w	r1, r1, #32
              || ((cr3its & USART_CR3_RXFTIE) != 0U)))
9000a03e:	f005 5580 	and.w	r5, r5, #268435456	; 0x10000000
9000a042:	ea51 0305 	orrs.w	r3, r1, r5
9000a046:	d003      	beq.n	9000a050 <HAL_UART_IRQHandler+0xe0>
        if (huart->RxISR != NULL)
9000a048:	6f23      	ldr	r3, [r4, #112]	; 0x70
9000a04a:	b10b      	cbz	r3, 9000a050 <HAL_UART_IRQHandler+0xe0>
          huart->RxISR(huart);
9000a04c:	4620      	mov	r0, r4
9000a04e:	4798      	blx	r3
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000a050:	6823      	ldr	r3, [r4, #0]
        UART_EndRxTransfer(huart);
9000a052:	4620      	mov	r0, r4
      errorcode = huart->ErrorCode;
9000a054:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000a058:	689b      	ldr	r3, [r3, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
9000a05a:	f005 0528 	and.w	r5, r5, #40	; 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000a05e:	f003 0340 	and.w	r3, r3, #64	; 0x40
9000a062:	431d      	orrs	r5, r3
9000a064:	d018      	beq.n	9000a098 <HAL_UART_IRQHandler+0x128>
        UART_EndRxTransfer(huart);
9000a066:	f7ff ff5c 	bl	90009f22 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000a06a:	6823      	ldr	r3, [r4, #0]
9000a06c:	689a      	ldr	r2, [r3, #8]
9000a06e:	0657      	lsls	r7, r2, #25
9000a070:	d50d      	bpl.n	9000a08e <HAL_UART_IRQHandler+0x11e>
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000a072:	689a      	ldr	r2, [r3, #8]
          if (huart->hdmarx != NULL)
9000a074:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000a076:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000a07a:	609a      	str	r2, [r3, #8]
          if (huart->hdmarx != NULL)
9000a07c:	b138      	cbz	r0, 9000a08e <HAL_UART_IRQHandler+0x11e>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
9000a07e:	4b6b      	ldr	r3, [pc, #428]	; (9000a22c <HAL_UART_IRQHandler+0x2bc>)
9000a080:	6503      	str	r3, [r0, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
9000a082:	f7fd f84d 	bl	90007120 <HAL_DMA_Abort_IT>
9000a086:	b128      	cbz	r0, 9000a094 <HAL_UART_IRQHandler+0x124>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
9000a088:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000a08a:	6d03      	ldr	r3, [r0, #80]	; 0x50
9000a08c:	e788      	b.n	90009fa0 <HAL_UART_IRQHandler+0x30>
            HAL_UART_ErrorCallback(huart);
9000a08e:	4620      	mov	r0, r4
9000a090:	f7ff ff61 	bl	90009f56 <HAL_UART_ErrorCallback>
}
9000a094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        HAL_UART_ErrorCallback(huart);
9000a098:	f7ff ff5d 	bl	90009f56 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
9000a09c:	f8c4 508c 	str.w	r5, [r4, #140]	; 0x8c
9000a0a0:	e7f8      	b.n	9000a094 <HAL_UART_IRQHandler+0x124>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000a0a2:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
9000a0a4:	2801      	cmp	r0, #1
9000a0a6:	d17e      	bne.n	9000a1a6 <HAL_UART_IRQHandler+0x236>
      && ((isrflags & USART_ISR_IDLE) != 0U)
9000a0a8:	06d6      	lsls	r6, r2, #27
9000a0aa:	d57c      	bpl.n	9000a1a6 <HAL_UART_IRQHandler+0x236>
      && ((cr1its & USART_ISR_IDLE) != 0U))
9000a0ac:	06c8      	lsls	r0, r1, #27
9000a0ae:	d57a      	bpl.n	9000a1a6 <HAL_UART_IRQHandler+0x236>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000a0b0:	2210      	movs	r2, #16
9000a0b2:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000a0b4:	689a      	ldr	r2, [r3, #8]
9000a0b6:	f012 0240 	ands.w	r2, r2, #64	; 0x40
9000a0ba:	d052      	beq.n	9000a162 <HAL_UART_IRQHandler+0x1f2>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
9000a0bc:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000a0be:	495c      	ldr	r1, [pc, #368]	; (9000a230 <HAL_UART_IRQHandler+0x2c0>)
9000a0c0:	6802      	ldr	r2, [r0, #0]
9000a0c2:	428a      	cmp	r2, r1
9000a0c4:	d01e      	beq.n	9000a104 <HAL_UART_IRQHandler+0x194>
9000a0c6:	3118      	adds	r1, #24
9000a0c8:	428a      	cmp	r2, r1
9000a0ca:	d01b      	beq.n	9000a104 <HAL_UART_IRQHandler+0x194>
9000a0cc:	3118      	adds	r1, #24
9000a0ce:	428a      	cmp	r2, r1
9000a0d0:	d018      	beq.n	9000a104 <HAL_UART_IRQHandler+0x194>
9000a0d2:	3118      	adds	r1, #24
9000a0d4:	428a      	cmp	r2, r1
9000a0d6:	d015      	beq.n	9000a104 <HAL_UART_IRQHandler+0x194>
9000a0d8:	3118      	adds	r1, #24
9000a0da:	428a      	cmp	r2, r1
9000a0dc:	d012      	beq.n	9000a104 <HAL_UART_IRQHandler+0x194>
9000a0de:	3118      	adds	r1, #24
9000a0e0:	428a      	cmp	r2, r1
9000a0e2:	d00f      	beq.n	9000a104 <HAL_UART_IRQHandler+0x194>
9000a0e4:	3118      	adds	r1, #24
9000a0e6:	428a      	cmp	r2, r1
9000a0e8:	d00c      	beq.n	9000a104 <HAL_UART_IRQHandler+0x194>
9000a0ea:	3118      	adds	r1, #24
9000a0ec:	428a      	cmp	r2, r1
9000a0ee:	d009      	beq.n	9000a104 <HAL_UART_IRQHandler+0x194>
9000a0f0:	f501 7156 	add.w	r1, r1, #856	; 0x358
9000a0f4:	428a      	cmp	r2, r1
9000a0f6:	d005      	beq.n	9000a104 <HAL_UART_IRQHandler+0x194>
9000a0f8:	3118      	adds	r1, #24
9000a0fa:	428a      	cmp	r2, r1
9000a0fc:	d002      	beq.n	9000a104 <HAL_UART_IRQHandler+0x194>
9000a0fe:	3118      	adds	r1, #24
9000a100:	428a      	cmp	r2, r1
9000a102:	d0ff      	beq.n	9000a104 <HAL_UART_IRQHandler+0x194>
9000a104:	6852      	ldr	r2, [r2, #4]
9000a106:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
9000a108:	2a00      	cmp	r2, #0
9000a10a:	d0c3      	beq.n	9000a094 <HAL_UART_IRQHandler+0x124>
          && (nb_remaining_rx_data < huart->RxXferSize))
9000a10c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
9000a110:	4291      	cmp	r1, r2
9000a112:	d9bf      	bls.n	9000a094 <HAL_UART_IRQHandler+0x124>
        huart->RxXferCount = nb_remaining_rx_data;
9000a114:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
9000a118:	69c2      	ldr	r2, [r0, #28]
9000a11a:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
9000a11e:	d016      	beq.n	9000a14e <HAL_UART_IRQHandler+0x1de>
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000a120:	681a      	ldr	r2, [r3, #0]
9000a122:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000a126:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000a128:	689a      	ldr	r2, [r3, #8]
9000a12a:	f022 0201 	bic.w	r2, r2, #1
9000a12e:	609a      	str	r2, [r3, #8]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000a130:	689a      	ldr	r2, [r3, #8]
9000a132:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000a136:	609a      	str	r2, [r3, #8]
          huart->RxState = HAL_UART_STATE_READY;
9000a138:	2220      	movs	r2, #32
9000a13a:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000a13e:	2200      	movs	r2, #0
9000a140:	66e2      	str	r2, [r4, #108]	; 0x6c
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000a142:	681a      	ldr	r2, [r3, #0]
9000a144:	f022 0210 	bic.w	r2, r2, #16
9000a148:	601a      	str	r2, [r3, #0]
          (void)HAL_DMA_Abort(huart->hdmarx);
9000a14a:	f7fc fe41 	bl	90006dd0 <HAL_DMA_Abort>
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000a14e:	f8b4 305e 	ldrh.w	r3, [r4, #94]	; 0x5e
9000a152:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
9000a156:	1ac9      	subs	r1, r1, r3
9000a158:	b289      	uxth	r1, r1
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
9000a15a:	4620      	mov	r0, r4
9000a15c:	f7ff ff06 	bl	90009f6c <HAL_UARTEx_RxEventCallback>
9000a160:	e798      	b.n	9000a094 <HAL_UART_IRQHandler+0x124>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000a162:	f8b4 105e 	ldrh.w	r1, [r4, #94]	; 0x5e
9000a166:	b288      	uxth	r0, r1
      if ((huart->RxXferCount > 0U)
9000a168:	f8b4 105e 	ldrh.w	r1, [r4, #94]	; 0x5e
9000a16c:	b289      	uxth	r1, r1
9000a16e:	2900      	cmp	r1, #0
9000a170:	d090      	beq.n	9000a094 <HAL_UART_IRQHandler+0x124>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000a172:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
9000a176:	1a09      	subs	r1, r1, r0
9000a178:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
9000a17a:	2900      	cmp	r1, #0
9000a17c:	d08a      	beq.n	9000a094 <HAL_UART_IRQHandler+0x124>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000a17e:	6818      	ldr	r0, [r3, #0]
9000a180:	f420 7090 	bic.w	r0, r0, #288	; 0x120
9000a184:	6018      	str	r0, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000a186:	6898      	ldr	r0, [r3, #8]
9000a188:	f020 5080 	bic.w	r0, r0, #268435456	; 0x10000000
9000a18c:	f020 0001 	bic.w	r0, r0, #1
9000a190:	6098      	str	r0, [r3, #8]
        huart->RxState = HAL_UART_STATE_READY;
9000a192:	2020      	movs	r0, #32
        huart->RxISR = NULL;
9000a194:	6722      	str	r2, [r4, #112]	; 0x70
        huart->RxState = HAL_UART_STATE_READY;
9000a196:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000a19a:	66e2      	str	r2, [r4, #108]	; 0x6c
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000a19c:	681a      	ldr	r2, [r3, #0]
9000a19e:	f022 0210 	bic.w	r2, r2, #16
9000a1a2:	601a      	str	r2, [r3, #0]
9000a1a4:	e7d9      	b.n	9000a15a <HAL_UART_IRQHandler+0x1ea>
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
9000a1a6:	02d7      	lsls	r7, r2, #11
9000a1a8:	d509      	bpl.n	9000a1be <HAL_UART_IRQHandler+0x24e>
9000a1aa:	026e      	lsls	r6, r5, #9
9000a1ac:	d507      	bpl.n	9000a1be <HAL_UART_IRQHandler+0x24e>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
9000a1ae:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
    HAL_UARTEx_WakeupCallback(huart);
9000a1b2:	4620      	mov	r0, r4
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
9000a1b4:	621a      	str	r2, [r3, #32]
}
9000a1b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    HAL_UARTEx_WakeupCallback(huart);
9000a1ba:	f000 bdcd 	b.w	9000ad58 <HAL_UARTEx_WakeupCallback>
  if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
9000a1be:	0610      	lsls	r0, r2, #24
9000a1c0:	d50b      	bpl.n	9000a1da <HAL_UART_IRQHandler+0x26a>
      && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
9000a1c2:	f001 0080 	and.w	r0, r1, #128	; 0x80
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
9000a1c6:	f405 0500 	and.w	r5, r5, #8388608	; 0x800000
9000a1ca:	4328      	orrs	r0, r5
9000a1cc:	d005      	beq.n	9000a1da <HAL_UART_IRQHandler+0x26a>
    if (huart->TxISR != NULL)
9000a1ce:	6f63      	ldr	r3, [r4, #116]	; 0x74
9000a1d0:	2b00      	cmp	r3, #0
9000a1d2:	f43f af5f 	beq.w	9000a094 <HAL_UART_IRQHandler+0x124>
      huart->TxISR(huart);
9000a1d6:	4620      	mov	r0, r4
9000a1d8:	e6e2      	b.n	90009fa0 <HAL_UART_IRQHandler+0x30>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
9000a1da:	0657      	lsls	r7, r2, #25
9000a1dc:	d50e      	bpl.n	9000a1fc <HAL_UART_IRQHandler+0x28c>
9000a1de:	064e      	lsls	r6, r1, #25
9000a1e0:	d50c      	bpl.n	9000a1fc <HAL_UART_IRQHandler+0x28c>
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000a1e2:	681a      	ldr	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
9000a1e4:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000a1e6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000a1ea:	601a      	str	r2, [r3, #0]
  huart->gState = HAL_UART_STATE_READY;
9000a1ec:	2320      	movs	r3, #32
9000a1ee:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
  huart->TxISR = NULL;
9000a1f2:	2300      	movs	r3, #0
9000a1f4:	6763      	str	r3, [r4, #116]	; 0x74
  HAL_UART_TxCpltCallback(huart);
9000a1f6:	f7ff fead 	bl	90009f54 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
9000a1fa:	e74b      	b.n	9000a094 <HAL_UART_IRQHandler+0x124>
  if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
9000a1fc:	0215      	lsls	r5, r2, #8
9000a1fe:	d506      	bpl.n	9000a20e <HAL_UART_IRQHandler+0x29e>
9000a200:	0048      	lsls	r0, r1, #1
9000a202:	d504      	bpl.n	9000a20e <HAL_UART_IRQHandler+0x29e>
    HAL_UARTEx_TxFifoEmptyCallback(huart);
9000a204:	4620      	mov	r0, r4
}
9000a206:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    HAL_UARTEx_TxFifoEmptyCallback(huart);
9000a20a:	f000 bda7 	b.w	9000ad5c <HAL_UARTEx_TxFifoEmptyCallback>
  if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
9000a20e:	01d3      	lsls	r3, r2, #7
9000a210:	f57f af40 	bpl.w	9000a094 <HAL_UART_IRQHandler+0x124>
9000a214:	2900      	cmp	r1, #0
9000a216:	f6bf af3d 	bge.w	9000a094 <HAL_UART_IRQHandler+0x124>
    HAL_UARTEx_RxFifoFullCallback(huart);
9000a21a:	4620      	mov	r0, r4
}
9000a21c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    HAL_UARTEx_RxFifoFullCallback(huart);
9000a220:	f000 bd9b 	b.w	9000ad5a <HAL_UARTEx_RxFifoFullCallback>
9000a224:	10000001 	.word	0x10000001
9000a228:	04000120 	.word	0x04000120
9000a22c:	90009f59 	.word	0x90009f59
9000a230:	40020010 	.word	0x40020010

9000a234 <UART_RxISR_8BIT>:
{
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000a234:	f8d0 2088 	ldr.w	r2, [r0, #136]	; 0x88
9000a238:	6803      	ldr	r3, [r0, #0]
9000a23a:	2a22      	cmp	r2, #34	; 0x22
{
9000a23c:	b510      	push	{r4, lr}
9000a23e:	4604      	mov	r4, r0
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000a240:	d130      	bne.n	9000a2a4 <UART_RxISR_8BIT+0x70>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000a242:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000a244:	f890 1060 	ldrb.w	r1, [r0, #96]	; 0x60
9000a248:	6d82      	ldr	r2, [r0, #88]	; 0x58
9000a24a:	400b      	ands	r3, r1
9000a24c:	7013      	strb	r3, [r2, #0]
    huart->pRxBuffPtr++;
9000a24e:	6d83      	ldr	r3, [r0, #88]	; 0x58
9000a250:	3301      	adds	r3, #1
9000a252:	6583      	str	r3, [r0, #88]	; 0x58
    huart->RxXferCount--;
9000a254:	f8b0 305e 	ldrh.w	r3, [r0, #94]	; 0x5e
9000a258:	3b01      	subs	r3, #1
9000a25a:	b29b      	uxth	r3, r3
9000a25c:	f8a0 305e 	strh.w	r3, [r0, #94]	; 0x5e

    if (huart->RxXferCount == 0U)
9000a260:	f8b0 205e 	ldrh.w	r2, [r0, #94]	; 0x5e
9000a264:	b292      	uxth	r2, r2
9000a266:	b9ca      	cbnz	r2, 9000a29c <UART_RxISR_8BIT+0x68>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000a268:	6803      	ldr	r3, [r0, #0]
9000a26a:	6819      	ldr	r1, [r3, #0]
9000a26c:	f421 7190 	bic.w	r1, r1, #288	; 0x120
9000a270:	6019      	str	r1, [r3, #0]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000a272:	6899      	ldr	r1, [r3, #8]
9000a274:	f021 0101 	bic.w	r1, r1, #1
9000a278:	6099      	str	r1, [r3, #8]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
9000a27a:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
9000a27c:	6702      	str	r2, [r0, #112]	; 0x70
      huart->RxState = HAL_UART_STATE_READY;
9000a27e:	f8c0 1088 	str.w	r1, [r0, #136]	; 0x88

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000a282:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
9000a284:	2a01      	cmp	r2, #1
9000a286:	d10a      	bne.n	9000a29e <UART_RxISR_8BIT+0x6a>
      {
        /* Disable IDLE interrupt */
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000a288:	681a      	ldr	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000a28a:	f8b0 105c 	ldrh.w	r1, [r0, #92]	; 0x5c
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000a28e:	f022 0210 	bic.w	r2, r2, #16
9000a292:	601a      	str	r2, [r3, #0]
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000a294:	f7ff fe6a 	bl	90009f6c <HAL_UARTEx_RxEventCallback>
#else
        /*Call legacy weak Rx complete callback*/
        HAL_UART_RxCpltCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000a298:	2300      	movs	r3, #0
9000a29a:	66e3      	str	r3, [r4, #108]	; 0x6c
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
9000a29c:	bd10      	pop	{r4, pc}
        HAL_UART_RxCpltCallback(huart);
9000a29e:	f7f9 f893 	bl	900033c8 <HAL_UART_RxCpltCallback>
9000a2a2:	e7f9      	b.n	9000a298 <UART_RxISR_8BIT+0x64>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000a2a4:	699a      	ldr	r2, [r3, #24]
9000a2a6:	f042 0208 	orr.w	r2, r2, #8
9000a2aa:	619a      	str	r2, [r3, #24]
}
9000a2ac:	e7f6      	b.n	9000a29c <UART_RxISR_8BIT+0x68>

9000a2ae <UART_RxISR_16BIT>:
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000a2ae:	f8d0 2088 	ldr.w	r2, [r0, #136]	; 0x88
9000a2b2:	6803      	ldr	r3, [r0, #0]
9000a2b4:	2a22      	cmp	r2, #34	; 0x22
{
9000a2b6:	b510      	push	{r4, lr}
9000a2b8:	4604      	mov	r4, r0
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000a2ba:	d12e      	bne.n	9000a31a <UART_RxISR_16BIT+0x6c>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000a2bc:	6a59      	ldr	r1, [r3, #36]	; 0x24
    tmp = (uint16_t *) huart->pRxBuffPtr ;
    *tmp = (uint16_t)(uhdata & uhMask);
9000a2be:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
9000a2c2:	4011      	ands	r1, r2
9000a2c4:	6d82      	ldr	r2, [r0, #88]	; 0x58
9000a2c6:	f822 1b02 	strh.w	r1, [r2], #2
    huart->pRxBuffPtr += 2U;
9000a2ca:	6582      	str	r2, [r0, #88]	; 0x58
    huart->RxXferCount--;
9000a2cc:	f8b0 205e 	ldrh.w	r2, [r0, #94]	; 0x5e
9000a2d0:	3a01      	subs	r2, #1
9000a2d2:	b292      	uxth	r2, r2
9000a2d4:	f8a0 205e 	strh.w	r2, [r0, #94]	; 0x5e

    if (huart->RxXferCount == 0U)
9000a2d8:	f8b0 205e 	ldrh.w	r2, [r0, #94]	; 0x5e
9000a2dc:	b292      	uxth	r2, r2
9000a2de:	b9c2      	cbnz	r2, 9000a312 <UART_RxISR_16BIT+0x64>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000a2e0:	6819      	ldr	r1, [r3, #0]
9000a2e2:	f421 7190 	bic.w	r1, r1, #288	; 0x120
9000a2e6:	6019      	str	r1, [r3, #0]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000a2e8:	6899      	ldr	r1, [r3, #8]
9000a2ea:	f021 0101 	bic.w	r1, r1, #1
9000a2ee:	6099      	str	r1, [r3, #8]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
9000a2f0:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
9000a2f2:	6702      	str	r2, [r0, #112]	; 0x70
      huart->RxState = HAL_UART_STATE_READY;
9000a2f4:	f8c0 1088 	str.w	r1, [r0, #136]	; 0x88

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000a2f8:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
9000a2fa:	2a01      	cmp	r2, #1
9000a2fc:	d10a      	bne.n	9000a314 <UART_RxISR_16BIT+0x66>
      {
        /* Disable IDLE interrupt */
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000a2fe:	681a      	ldr	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000a300:	f8b0 105c 	ldrh.w	r1, [r0, #92]	; 0x5c
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000a304:	f022 0210 	bic.w	r2, r2, #16
9000a308:	601a      	str	r2, [r3, #0]
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000a30a:	f7ff fe2f 	bl	90009f6c <HAL_UARTEx_RxEventCallback>
#else
        /*Call legacy weak Rx complete callback*/
        HAL_UART_RxCpltCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000a30e:	2300      	movs	r3, #0
9000a310:	66e3      	str	r3, [r4, #108]	; 0x6c
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
9000a312:	bd10      	pop	{r4, pc}
        HAL_UART_RxCpltCallback(huart);
9000a314:	f7f9 f858 	bl	900033c8 <HAL_UART_RxCpltCallback>
9000a318:	e7f9      	b.n	9000a30e <UART_RxISR_16BIT+0x60>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000a31a:	699a      	ldr	r2, [r3, #24]
9000a31c:	f042 0208 	orr.w	r2, r2, #8
9000a320:	619a      	str	r2, [r3, #24]
}
9000a322:	e7f6      	b.n	9000a312 <UART_RxISR_16BIT+0x64>

9000a324 <UART_RxISR_8BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
{
9000a324:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000a328:	6803      	ldr	r3, [r0, #0]
{
9000a32a:	4604      	mov	r4, r0
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000a32c:	69dd      	ldr	r5, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
9000a32e:	f8d3 9000 	ldr.w	r9, [r3]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
9000a332:	689e      	ldr	r6, [r3, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000a334:	f8d0 2088 	ldr.w	r2, [r0, #136]	; 0x88
9000a338:	2a22      	cmp	r2, #34	; 0x22
9000a33a:	f040 8085 	bne.w	9000a448 <UART_RxISR_8BIT_FIFOEN+0x124>
  uint16_t  uhMask = huart->Mask;
9000a33e:	f8b0 8060 	ldrh.w	r8, [r0, #96]	; 0x60
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000a342:	2700      	movs	r7, #0
    nb_rx_data = huart->NbRxDataToProcess;
9000a344:	f8b0 a068 	ldrh.w	sl, [r0, #104]	; 0x68
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000a348:	f006 0601 	and.w	r6, r6, #1
        /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
           and RX FIFO Threshold interrupt */
        CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000a34c:	f8df b108 	ldr.w	fp, [pc, #264]	; 9000a458 <UART_RxISR_8BIT_FIFOEN+0x134>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000a350:	f1ba 0f00 	cmp.w	sl, #0
9000a354:	d001      	beq.n	9000a35a <UART_RxISR_8BIT_FIFOEN+0x36>
9000a356:	06ab      	lsls	r3, r5, #26
9000a358:	d414      	bmi.n	9000a384 <UART_RxISR_8BIT_FIFOEN+0x60>

    /* When remaining number of bytes to receive is less than the RX FIFO
    threshold, next incoming frames are processed as if FIFO mode was
    disabled (i.e. one interrupt per received frame).
    */
    rxdatacount = huart->RxXferCount;
9000a35a:	f8b4 305e 	ldrh.w	r3, [r4, #94]	; 0x5e
9000a35e:	b29b      	uxth	r3, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
9000a360:	b173      	cbz	r3, 9000a380 <UART_RxISR_8BIT_FIFOEN+0x5c>
9000a362:	f8b4 2068 	ldrh.w	r2, [r4, #104]	; 0x68
9000a366:	429a      	cmp	r2, r3
9000a368:	d90a      	bls.n	9000a380 <UART_RxISR_8BIT_FIFOEN+0x5c>
    {
      /* Disable the UART RXFT interrupt*/
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000a36a:	6823      	ldr	r3, [r4, #0]
9000a36c:	689a      	ldr	r2, [r3, #8]
9000a36e:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
9000a372:	609a      	str	r2, [r3, #8]

      /* Update the RxISR function pointer */
      huart->RxISR = UART_RxISR_8BIT;
9000a374:	4a37      	ldr	r2, [pc, #220]	; (9000a454 <UART_RxISR_8BIT_FIFOEN+0x130>)
9000a376:	6722      	str	r2, [r4, #112]	; 0x70

      /* Enable the UART Data Register Not Empty interrupt */
      SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000a378:	681a      	ldr	r2, [r3, #0]
9000a37a:	f042 0220 	orr.w	r2, r2, #32
9000a37e:	601a      	str	r2, [r3, #0]
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
9000a380:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000a384:	6823      	ldr	r3, [r4, #0]
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000a386:	6da2      	ldr	r2, [r4, #88]	; 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000a388:	6a5b      	ldr	r3, [r3, #36]	; 0x24
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000a38a:	ea03 0308 	and.w	r3, r3, r8
9000a38e:	7013      	strb	r3, [r2, #0]
      huart->pRxBuffPtr++;
9000a390:	6da3      	ldr	r3, [r4, #88]	; 0x58
9000a392:	3301      	adds	r3, #1
9000a394:	65a3      	str	r3, [r4, #88]	; 0x58
      huart->RxXferCount--;
9000a396:	f8b4 305e 	ldrh.w	r3, [r4, #94]	; 0x5e
9000a39a:	3b01      	subs	r3, #1
9000a39c:	b29b      	uxth	r3, r3
9000a39e:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000a3a2:	6823      	ldr	r3, [r4, #0]
9000a3a4:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000a3a6:	076a      	lsls	r2, r5, #29
9000a3a8:	d02a      	beq.n	9000a400 <UART_RxISR_8BIT_FIFOEN+0xdc>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000a3aa:	07e8      	lsls	r0, r5, #31
9000a3ac:	d50a      	bpl.n	9000a3c4 <UART_RxISR_8BIT_FIFOEN+0xa0>
9000a3ae:	f419 7f80 	tst.w	r9, #256	; 0x100
9000a3b2:	d007      	beq.n	9000a3c4 <UART_RxISR_8BIT_FIFOEN+0xa0>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000a3b4:	2201      	movs	r2, #1
9000a3b6:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000a3b8:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
9000a3bc:	f042 0201 	orr.w	r2, r2, #1
9000a3c0:	f8c4 208c 	str.w	r2, [r4, #140]	; 0x8c
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000a3c4:	07a9      	lsls	r1, r5, #30
9000a3c6:	d508      	bpl.n	9000a3da <UART_RxISR_8BIT_FIFOEN+0xb6>
9000a3c8:	b13e      	cbz	r6, 9000a3da <UART_RxISR_8BIT_FIFOEN+0xb6>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000a3ca:	2202      	movs	r2, #2
9000a3cc:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
9000a3ce:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
9000a3d2:	f042 0204 	orr.w	r2, r2, #4
9000a3d6:	f8c4 208c 	str.w	r2, [r4, #140]	; 0x8c
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000a3da:	076a      	lsls	r2, r5, #29
9000a3dc:	d508      	bpl.n	9000a3f0 <UART_RxISR_8BIT_FIFOEN+0xcc>
9000a3de:	b13e      	cbz	r6, 9000a3f0 <UART_RxISR_8BIT_FIFOEN+0xcc>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000a3e0:	2204      	movs	r2, #4
9000a3e2:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
9000a3e4:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
9000a3e8:	f043 0302 	orr.w	r3, r3, #2
9000a3ec:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000a3f0:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
9000a3f4:	b123      	cbz	r3, 9000a400 <UART_RxISR_8BIT_FIFOEN+0xdc>
          HAL_UART_ErrorCallback(huart);
9000a3f6:	4620      	mov	r0, r4
9000a3f8:	f7ff fdad 	bl	90009f56 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000a3fc:	f8c4 708c 	str.w	r7, [r4, #140]	; 0x8c
      if (huart->RxXferCount == 0U)
9000a400:	f8b4 205e 	ldrh.w	r2, [r4, #94]	; 0x5e
9000a404:	b292      	uxth	r2, r2
9000a406:	2a00      	cmp	r2, #0
9000a408:	d1a2      	bne.n	9000a350 <UART_RxISR_8BIT_FIFOEN+0x2c>
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000a40a:	6823      	ldr	r3, [r4, #0]
9000a40c:	6819      	ldr	r1, [r3, #0]
9000a40e:	f421 7180 	bic.w	r1, r1, #256	; 0x100
9000a412:	6019      	str	r1, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000a414:	6899      	ldr	r1, [r3, #8]
9000a416:	ea01 010b 	and.w	r1, r1, fp
9000a41a:	6099      	str	r1, [r3, #8]
        huart->RxState = HAL_UART_STATE_READY;
9000a41c:	2120      	movs	r1, #32
        huart->RxISR = NULL;
9000a41e:	6722      	str	r2, [r4, #112]	; 0x70
        huart->RxState = HAL_UART_STATE_READY;
9000a420:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000a424:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
9000a426:	2a01      	cmp	r2, #1
9000a428:	d10a      	bne.n	9000a440 <UART_RxISR_8BIT_FIFOEN+0x11c>
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000a42a:	681a      	ldr	r2, [r3, #0]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000a42c:	4620      	mov	r0, r4
9000a42e:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000a432:	f022 0210 	bic.w	r2, r2, #16
9000a436:	601a      	str	r2, [r3, #0]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000a438:	f7ff fd98 	bl	90009f6c <HAL_UARTEx_RxEventCallback>
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000a43c:	66e7      	str	r7, [r4, #108]	; 0x6c
9000a43e:	e787      	b.n	9000a350 <UART_RxISR_8BIT_FIFOEN+0x2c>
          HAL_UART_RxCpltCallback(huart);
9000a440:	4620      	mov	r0, r4
9000a442:	f7f8 ffc1 	bl	900033c8 <HAL_UART_RxCpltCallback>
9000a446:	e7f9      	b.n	9000a43c <UART_RxISR_8BIT_FIFOEN+0x118>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000a448:	699a      	ldr	r2, [r3, #24]
9000a44a:	f042 0208 	orr.w	r2, r2, #8
9000a44e:	619a      	str	r2, [r3, #24]
}
9000a450:	e796      	b.n	9000a380 <UART_RxISR_8BIT_FIFOEN+0x5c>
9000a452:	bf00      	nop
9000a454:	9000a235 	.word	0x9000a235
9000a458:	effffffe 	.word	0xeffffffe

9000a45c <UART_RxISR_16BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
{
9000a45c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint16_t *tmp;
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000a460:	6803      	ldr	r3, [r0, #0]
{
9000a462:	4604      	mov	r4, r0
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000a464:	69dd      	ldr	r5, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
9000a466:	f8d3 9000 	ldr.w	r9, [r3]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
9000a46a:	689e      	ldr	r6, [r3, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000a46c:	f8d0 2088 	ldr.w	r2, [r0, #136]	; 0x88
9000a470:	2a22      	cmp	r2, #34	; 0x22
9000a472:	f040 8083 	bne.w	9000a57c <UART_RxISR_16BIT_FIFOEN+0x120>
  uint16_t  uhMask = huart->Mask;
9000a476:	f8b0 8060 	ldrh.w	r8, [r0, #96]	; 0x60
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000a47a:	2700      	movs	r7, #0
    nb_rx_data = huart->NbRxDataToProcess;
9000a47c:	f8b0 a068 	ldrh.w	sl, [r0, #104]	; 0x68
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000a480:	f006 0601 	and.w	r6, r6, #1
        /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
           and RX FIFO Threshold interrupt */
        CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000a484:	f8df b104 	ldr.w	fp, [pc, #260]	; 9000a58c <UART_RxISR_16BIT_FIFOEN+0x130>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000a488:	f1ba 0f00 	cmp.w	sl, #0
9000a48c:	d001      	beq.n	9000a492 <UART_RxISR_16BIT_FIFOEN+0x36>
9000a48e:	06ab      	lsls	r3, r5, #26
9000a490:	d414      	bmi.n	9000a4bc <UART_RxISR_16BIT_FIFOEN+0x60>

    /* When remaining number of bytes to receive is less than the RX FIFO
    threshold, next incoming frames are processed as if FIFO mode was
    disabled (i.e. one interrupt per received frame).
    */
    rxdatacount = huart->RxXferCount;
9000a492:	f8b4 305e 	ldrh.w	r3, [r4, #94]	; 0x5e
9000a496:	b29b      	uxth	r3, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
9000a498:	b173      	cbz	r3, 9000a4b8 <UART_RxISR_16BIT_FIFOEN+0x5c>
9000a49a:	f8b4 2068 	ldrh.w	r2, [r4, #104]	; 0x68
9000a49e:	429a      	cmp	r2, r3
9000a4a0:	d90a      	bls.n	9000a4b8 <UART_RxISR_16BIT_FIFOEN+0x5c>
    {
      /* Disable the UART RXFT interrupt*/
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000a4a2:	6823      	ldr	r3, [r4, #0]
9000a4a4:	689a      	ldr	r2, [r3, #8]
9000a4a6:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
9000a4aa:	609a      	str	r2, [r3, #8]

      /* Update the RxISR function pointer */
      huart->RxISR = UART_RxISR_16BIT;
9000a4ac:	4a36      	ldr	r2, [pc, #216]	; (9000a588 <UART_RxISR_16BIT_FIFOEN+0x12c>)
9000a4ae:	6722      	str	r2, [r4, #112]	; 0x70

      /* Enable the UART Data Register Not Empty interrupt */
      SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000a4b0:	681a      	ldr	r2, [r3, #0]
9000a4b2:	f042 0220 	orr.w	r2, r2, #32
9000a4b6:	601a      	str	r2, [r3, #0]
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
9000a4b8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000a4bc:	6823      	ldr	r3, [r4, #0]
      *tmp = (uint16_t)(uhdata & uhMask);
9000a4be:	6da2      	ldr	r2, [r4, #88]	; 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000a4c0:	6a59      	ldr	r1, [r3, #36]	; 0x24
      *tmp = (uint16_t)(uhdata & uhMask);
9000a4c2:	ea08 0101 	and.w	r1, r8, r1
9000a4c6:	f822 1b02 	strh.w	r1, [r2], #2
      huart->pRxBuffPtr += 2U;
9000a4ca:	65a2      	str	r2, [r4, #88]	; 0x58
      huart->RxXferCount--;
9000a4cc:	f8b4 205e 	ldrh.w	r2, [r4, #94]	; 0x5e
9000a4d0:	3a01      	subs	r2, #1
9000a4d2:	b292      	uxth	r2, r2
9000a4d4:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000a4d8:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000a4da:	076a      	lsls	r2, r5, #29
9000a4dc:	d02a      	beq.n	9000a534 <UART_RxISR_16BIT_FIFOEN+0xd8>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000a4de:	07e8      	lsls	r0, r5, #31
9000a4e0:	d50a      	bpl.n	9000a4f8 <UART_RxISR_16BIT_FIFOEN+0x9c>
9000a4e2:	f419 7f80 	tst.w	r9, #256	; 0x100
9000a4e6:	d007      	beq.n	9000a4f8 <UART_RxISR_16BIT_FIFOEN+0x9c>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000a4e8:	2201      	movs	r2, #1
9000a4ea:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000a4ec:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
9000a4f0:	f042 0201 	orr.w	r2, r2, #1
9000a4f4:	f8c4 208c 	str.w	r2, [r4, #140]	; 0x8c
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000a4f8:	07a9      	lsls	r1, r5, #30
9000a4fa:	d508      	bpl.n	9000a50e <UART_RxISR_16BIT_FIFOEN+0xb2>
9000a4fc:	b13e      	cbz	r6, 9000a50e <UART_RxISR_16BIT_FIFOEN+0xb2>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000a4fe:	2202      	movs	r2, #2
9000a500:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
9000a502:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
9000a506:	f042 0204 	orr.w	r2, r2, #4
9000a50a:	f8c4 208c 	str.w	r2, [r4, #140]	; 0x8c
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000a50e:	076a      	lsls	r2, r5, #29
9000a510:	d508      	bpl.n	9000a524 <UART_RxISR_16BIT_FIFOEN+0xc8>
9000a512:	b13e      	cbz	r6, 9000a524 <UART_RxISR_16BIT_FIFOEN+0xc8>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000a514:	2204      	movs	r2, #4
9000a516:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
9000a518:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
9000a51c:	f043 0302 	orr.w	r3, r3, #2
9000a520:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000a524:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
9000a528:	b123      	cbz	r3, 9000a534 <UART_RxISR_16BIT_FIFOEN+0xd8>
          HAL_UART_ErrorCallback(huart);
9000a52a:	4620      	mov	r0, r4
9000a52c:	f7ff fd13 	bl	90009f56 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000a530:	f8c4 708c 	str.w	r7, [r4, #140]	; 0x8c
      if (huart->RxXferCount == 0U)
9000a534:	f8b4 205e 	ldrh.w	r2, [r4, #94]	; 0x5e
9000a538:	b292      	uxth	r2, r2
9000a53a:	2a00      	cmp	r2, #0
9000a53c:	d1a4      	bne.n	9000a488 <UART_RxISR_16BIT_FIFOEN+0x2c>
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000a53e:	6823      	ldr	r3, [r4, #0]
9000a540:	6819      	ldr	r1, [r3, #0]
9000a542:	f421 7180 	bic.w	r1, r1, #256	; 0x100
9000a546:	6019      	str	r1, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000a548:	6899      	ldr	r1, [r3, #8]
9000a54a:	ea01 010b 	and.w	r1, r1, fp
9000a54e:	6099      	str	r1, [r3, #8]
        huart->RxState = HAL_UART_STATE_READY;
9000a550:	2120      	movs	r1, #32
        huart->RxISR = NULL;
9000a552:	6722      	str	r2, [r4, #112]	; 0x70
        huart->RxState = HAL_UART_STATE_READY;
9000a554:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000a558:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
9000a55a:	2a01      	cmp	r2, #1
9000a55c:	d10a      	bne.n	9000a574 <UART_RxISR_16BIT_FIFOEN+0x118>
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000a55e:	681a      	ldr	r2, [r3, #0]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000a560:	4620      	mov	r0, r4
9000a562:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000a566:	f022 0210 	bic.w	r2, r2, #16
9000a56a:	601a      	str	r2, [r3, #0]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000a56c:	f7ff fcfe 	bl	90009f6c <HAL_UARTEx_RxEventCallback>
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000a570:	66e7      	str	r7, [r4, #108]	; 0x6c
9000a572:	e789      	b.n	9000a488 <UART_RxISR_16BIT_FIFOEN+0x2c>
          HAL_UART_RxCpltCallback(huart);
9000a574:	4620      	mov	r0, r4
9000a576:	f7f8 ff27 	bl	900033c8 <HAL_UART_RxCpltCallback>
9000a57a:	e7f9      	b.n	9000a570 <UART_RxISR_16BIT_FIFOEN+0x114>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000a57c:	699a      	ldr	r2, [r3, #24]
9000a57e:	f042 0208 	orr.w	r2, r2, #8
9000a582:	619a      	str	r2, [r3, #24]
}
9000a584:	e798      	b.n	9000a4b8 <UART_RxISR_16BIT_FIFOEN+0x5c>
9000a586:	bf00      	nop
9000a588:	9000a2af 	.word	0x9000a2af
9000a58c:	effffffe 	.word	0xeffffffe

9000a590 <UART_SetConfig>:
{
9000a590:	b5f0      	push	{r4, r5, r6, r7, lr}
9000a592:	4604      	mov	r4, r0
  if (UART_INSTANCE_LOWPOWER(huart))
9000a594:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000a596:	69c0      	ldr	r0, [r0, #28]
{
9000a598:	b087      	sub	sp, #28
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000a59a:	6921      	ldr	r1, [r4, #16]
9000a59c:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000a59e:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000a5a0:	430a      	orrs	r2, r1
9000a5a2:	6961      	ldr	r1, [r4, #20]
9000a5a4:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000a5a6:	49a4      	ldr	r1, [pc, #656]	; (9000a838 <UART_SetConfig+0x2a8>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000a5a8:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000a5aa:	4029      	ands	r1, r5
9000a5ac:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000a5ae:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000a5b0:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000a5b2:	685a      	ldr	r2, [r3, #4]
9000a5b4:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
9000a5b8:	430a      	orrs	r2, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
9000a5ba:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000a5bc:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9000a5be:	4a9f      	ldr	r2, [pc, #636]	; (9000a83c <UART_SetConfig+0x2ac>)
9000a5c0:	4293      	cmp	r3, r2
    tmpreg |= huart->Init.OneBitSampling;
9000a5c2:	bf1c      	itt	ne
9000a5c4:	6a22      	ldrne	r2, [r4, #32]
9000a5c6:	4311      	orrne	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000a5c8:	689a      	ldr	r2, [r3, #8]
9000a5ca:	f022 426e 	bic.w	r2, r2, #3992977408	; 0xee000000
9000a5ce:	f422 6230 	bic.w	r2, r2, #2816	; 0xb00
9000a5d2:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000a5d4:	6a61      	ldr	r1, [r4, #36]	; 0x24
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000a5d6:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000a5d8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000a5da:	f022 020f 	bic.w	r2, r2, #15
9000a5de:	430a      	orrs	r2, r1
9000a5e0:	62da      	str	r2, [r3, #44]	; 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000a5e2:	4a97      	ldr	r2, [pc, #604]	; (9000a840 <UART_SetConfig+0x2b0>)
9000a5e4:	4293      	cmp	r3, r2
9000a5e6:	d11b      	bne.n	9000a620 <UART_SetConfig+0x90>
9000a5e8:	4b96      	ldr	r3, [pc, #600]	; (9000a844 <UART_SetConfig+0x2b4>)
9000a5ea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000a5ec:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000a5f0:	2b28      	cmp	r3, #40	; 0x28
9000a5f2:	d86c      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
9000a5f4:	4a94      	ldr	r2, [pc, #592]	; (9000a848 <UART_SetConfig+0x2b8>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000a5f6:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000a5fa:	5cd3      	ldrb	r3, [r2, r3]
9000a5fc:	f040 8102 	bne.w	9000a804 <UART_SetConfig+0x274>
    switch (clocksource)
9000a600:	2b08      	cmp	r3, #8
9000a602:	f200 80bf 	bhi.w	9000a784 <UART_SetConfig+0x1f4>
9000a606:	2b08      	cmp	r3, #8
9000a608:	d861      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
9000a60a:	e8df f013 	tbh	[pc, r3, lsl #1]
9000a60e:	00e7      	.short	0x00e7
9000a610:	006000ec 	.word	0x006000ec
9000a614:	00ef0060 	.word	0x00ef0060
9000a618:	00600060 	.word	0x00600060
9000a61c:	00f40060 	.word	0x00f40060
  UART_GETCLOCKSOURCE(huart, clocksource);
9000a620:	4a8a      	ldr	r2, [pc, #552]	; (9000a84c <UART_SetConfig+0x2bc>)
9000a622:	4293      	cmp	r3, r2
9000a624:	d107      	bne.n	9000a636 <UART_SetConfig+0xa6>
9000a626:	4b87      	ldr	r3, [pc, #540]	; (9000a844 <UART_SetConfig+0x2b4>)
9000a628:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000a62a:	f003 0307 	and.w	r3, r3, #7
9000a62e:	2b05      	cmp	r3, #5
9000a630:	d84d      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
9000a632:	4a87      	ldr	r2, [pc, #540]	; (9000a850 <UART_SetConfig+0x2c0>)
9000a634:	e7df      	b.n	9000a5f6 <UART_SetConfig+0x66>
9000a636:	4a87      	ldr	r2, [pc, #540]	; (9000a854 <UART_SetConfig+0x2c4>)
9000a638:	4293      	cmp	r3, r2
9000a63a:	d107      	bne.n	9000a64c <UART_SetConfig+0xbc>
9000a63c:	4b81      	ldr	r3, [pc, #516]	; (9000a844 <UART_SetConfig+0x2b4>)
9000a63e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000a640:	f003 0307 	and.w	r3, r3, #7
9000a644:	2b05      	cmp	r3, #5
9000a646:	d842      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
9000a648:	4a83      	ldr	r2, [pc, #524]	; (9000a858 <UART_SetConfig+0x2c8>)
9000a64a:	e7d4      	b.n	9000a5f6 <UART_SetConfig+0x66>
9000a64c:	4a83      	ldr	r2, [pc, #524]	; (9000a85c <UART_SetConfig+0x2cc>)
9000a64e:	4293      	cmp	r3, r2
9000a650:	d107      	bne.n	9000a662 <UART_SetConfig+0xd2>
9000a652:	4b7c      	ldr	r3, [pc, #496]	; (9000a844 <UART_SetConfig+0x2b4>)
9000a654:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000a656:	f003 0307 	and.w	r3, r3, #7
9000a65a:	2b05      	cmp	r3, #5
9000a65c:	d837      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
9000a65e:	4a80      	ldr	r2, [pc, #512]	; (9000a860 <UART_SetConfig+0x2d0>)
9000a660:	e7c9      	b.n	9000a5f6 <UART_SetConfig+0x66>
9000a662:	4a80      	ldr	r2, [pc, #512]	; (9000a864 <UART_SetConfig+0x2d4>)
9000a664:	4293      	cmp	r3, r2
9000a666:	d107      	bne.n	9000a678 <UART_SetConfig+0xe8>
9000a668:	4b76      	ldr	r3, [pc, #472]	; (9000a844 <UART_SetConfig+0x2b4>)
9000a66a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000a66c:	f003 0307 	and.w	r3, r3, #7
9000a670:	2b05      	cmp	r3, #5
9000a672:	d82c      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
9000a674:	4a7c      	ldr	r2, [pc, #496]	; (9000a868 <UART_SetConfig+0x2d8>)
9000a676:	e7be      	b.n	9000a5f6 <UART_SetConfig+0x66>
9000a678:	4a7c      	ldr	r2, [pc, #496]	; (9000a86c <UART_SetConfig+0x2dc>)
9000a67a:	4293      	cmp	r3, r2
9000a67c:	d107      	bne.n	9000a68e <UART_SetConfig+0xfe>
9000a67e:	4b71      	ldr	r3, [pc, #452]	; (9000a844 <UART_SetConfig+0x2b4>)
9000a680:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000a682:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000a686:	2b28      	cmp	r3, #40	; 0x28
9000a688:	d821      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
9000a68a:	4a79      	ldr	r2, [pc, #484]	; (9000a870 <UART_SetConfig+0x2e0>)
9000a68c:	e7b3      	b.n	9000a5f6 <UART_SetConfig+0x66>
9000a68e:	4a79      	ldr	r2, [pc, #484]	; (9000a874 <UART_SetConfig+0x2e4>)
9000a690:	4293      	cmp	r3, r2
9000a692:	d107      	bne.n	9000a6a4 <UART_SetConfig+0x114>
9000a694:	4b6b      	ldr	r3, [pc, #428]	; (9000a844 <UART_SetConfig+0x2b4>)
9000a696:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000a698:	f003 0307 	and.w	r3, r3, #7
9000a69c:	2b05      	cmp	r3, #5
9000a69e:	d816      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
9000a6a0:	4a75      	ldr	r2, [pc, #468]	; (9000a878 <UART_SetConfig+0x2e8>)
9000a6a2:	e7a8      	b.n	9000a5f6 <UART_SetConfig+0x66>
9000a6a4:	4a75      	ldr	r2, [pc, #468]	; (9000a87c <UART_SetConfig+0x2ec>)
9000a6a6:	4293      	cmp	r3, r2
9000a6a8:	d107      	bne.n	9000a6ba <UART_SetConfig+0x12a>
9000a6aa:	4b66      	ldr	r3, [pc, #408]	; (9000a844 <UART_SetConfig+0x2b4>)
9000a6ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000a6ae:	f003 0307 	and.w	r3, r3, #7
9000a6b2:	2b05      	cmp	r3, #5
9000a6b4:	d80b      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
9000a6b6:	4a72      	ldr	r2, [pc, #456]	; (9000a880 <UART_SetConfig+0x2f0>)
9000a6b8:	e79d      	b.n	9000a5f6 <UART_SetConfig+0x66>
9000a6ba:	4a60      	ldr	r2, [pc, #384]	; (9000a83c <UART_SetConfig+0x2ac>)
9000a6bc:	4293      	cmp	r3, r2
9000a6be:	d106      	bne.n	9000a6ce <UART_SetConfig+0x13e>
9000a6c0:	f502 320e 	add.w	r2, r2, #145408	; 0x23800
9000a6c4:	6d93      	ldr	r3, [r2, #88]	; 0x58
9000a6c6:	f003 0307 	and.w	r3, r3, #7
9000a6ca:	2b05      	cmp	r3, #5
9000a6cc:	d901      	bls.n	9000a6d2 <UART_SetConfig+0x142>
    switch (clocksource)
9000a6ce:	2001      	movs	r0, #1
9000a6d0:	e00e      	b.n	9000a6f0 <UART_SetConfig+0x160>
9000a6d2:	496c      	ldr	r1, [pc, #432]	; (9000a884 <UART_SetConfig+0x2f4>)
9000a6d4:	5ccb      	ldrb	r3, [r1, r3]
    switch (clocksource)
9000a6d6:	2b10      	cmp	r3, #16
9000a6d8:	d023      	beq.n	9000a722 <UART_SetConfig+0x192>
9000a6da:	d811      	bhi.n	9000a700 <UART_SetConfig+0x170>
9000a6dc:	2b04      	cmp	r3, #4
9000a6de:	d016      	beq.n	9000a70e <UART_SetConfig+0x17e>
9000a6e0:	2b08      	cmp	r3, #8
9000a6e2:	d019      	beq.n	9000a718 <UART_SetConfig+0x188>
9000a6e4:	2b02      	cmp	r3, #2
9000a6e6:	d1f2      	bne.n	9000a6ce <UART_SetConfig+0x13e>
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
9000a6e8:	f7ff f8c4 	bl	90009874 <HAL_RCCEx_GetD3PCLK1Freq>
    if (pclk != 0U)
9000a6ec:	bb10      	cbnz	r0, 9000a734 <UART_SetConfig+0x1a4>
9000a6ee:	2000      	movs	r0, #0
  huart->NbRxDataToProcess = 1;
9000a6f0:	f04f 1301 	mov.w	r3, #65537	; 0x10001
9000a6f4:	66a3      	str	r3, [r4, #104]	; 0x68
  huart->RxISR = NULL;
9000a6f6:	2300      	movs	r3, #0
  huart->TxISR = NULL;
9000a6f8:	e9c4 331c 	strd	r3, r3, [r4, #112]	; 0x70
}
9000a6fc:	b007      	add	sp, #28
9000a6fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    switch (clocksource)
9000a700:	2b20      	cmp	r3, #32
9000a702:	d03d      	beq.n	9000a780 <UART_SetConfig+0x1f0>
9000a704:	2b40      	cmp	r3, #64	; 0x40
9000a706:	d1e2      	bne.n	9000a6ce <UART_SetConfig+0x13e>
9000a708:	f44f 4000 	mov.w	r0, #32768	; 0x8000
9000a70c:	e012      	b.n	9000a734 <UART_SetConfig+0x1a4>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000a70e:	4668      	mov	r0, sp
9000a710:	f7ff f8c2 	bl	90009898 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000a714:	9801      	ldr	r0, [sp, #4]
        break;
9000a716:	e7e9      	b.n	9000a6ec <UART_SetConfig+0x15c>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000a718:	a803      	add	r0, sp, #12
9000a71a:	f7ff f965 	bl	900099e8 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000a71e:	9804      	ldr	r0, [sp, #16]
        break;
9000a720:	e7e4      	b.n	9000a6ec <UART_SetConfig+0x15c>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000a722:	6813      	ldr	r3, [r2, #0]
9000a724:	4858      	ldr	r0, [pc, #352]	; (9000a888 <UART_SetConfig+0x2f8>)
9000a726:	f013 0f20 	tst.w	r3, #32
9000a72a:	d003      	beq.n	9000a734 <UART_SetConfig+0x1a4>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000a72c:	6813      	ldr	r3, [r2, #0]
9000a72e:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000a732:	40d8      	lsrs	r0, r3
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000a734:	4b55      	ldr	r3, [pc, #340]	; (9000a88c <UART_SetConfig+0x2fc>)
9000a736:	6a62      	ldr	r2, [r4, #36]	; 0x24
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000a738:	6865      	ldr	r5, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000a73a:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000a73e:	eb05 0145 	add.w	r1, r5, r5, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000a742:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000a746:	4299      	cmp	r1, r3
9000a748:	d8c1      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
9000a74a:	ebb3 3f05 	cmp.w	r3, r5, lsl #12
9000a74e:	d8be      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000a750:	2300      	movs	r3, #0
9000a752:	2100      	movs	r1, #0
9000a754:	f7f5 fe14 	bl	90000380 <__aeabi_uldivmod>
9000a758:	462a      	mov	r2, r5
9000a75a:	020f      	lsls	r7, r1, #8
9000a75c:	2300      	movs	r3, #0
9000a75e:	0206      	lsls	r6, r0, #8
9000a760:	ea47 6710 	orr.w	r7, r7, r0, lsr #24
9000a764:	0868      	lsrs	r0, r5, #1
9000a766:	1830      	adds	r0, r6, r0
9000a768:	f147 0100 	adc.w	r1, r7, #0
9000a76c:	f7f5 fe08 	bl	90000380 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9000a770:	4b47      	ldr	r3, [pc, #284]	; (9000a890 <UART_SetConfig+0x300>)
9000a772:	f5a0 7240 	sub.w	r2, r0, #768	; 0x300
9000a776:	429a      	cmp	r2, r3
9000a778:	d8a9      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
          huart->Instance->BRR = usartdiv;
9000a77a:	6823      	ldr	r3, [r4, #0]
9000a77c:	60d8      	str	r0, [r3, #12]
9000a77e:	e7b6      	b.n	9000a6ee <UART_SetConfig+0x15e>
        pclk = (uint32_t) CSI_VALUE;
9000a780:	4844      	ldr	r0, [pc, #272]	; (9000a894 <UART_SetConfig+0x304>)
9000a782:	e7d7      	b.n	9000a734 <UART_SetConfig+0x1a4>
    switch (clocksource)
9000a784:	2b20      	cmp	r3, #32
9000a786:	d03b      	beq.n	9000a800 <UART_SetConfig+0x270>
9000a788:	2b40      	cmp	r3, #64	; 0x40
9000a78a:	d00b      	beq.n	9000a7a4 <UART_SetConfig+0x214>
9000a78c:	2b10      	cmp	r3, #16
9000a78e:	d19e      	bne.n	9000a6ce <UART_SetConfig+0x13e>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000a790:	4b2c      	ldr	r3, [pc, #176]	; (9000a844 <UART_SetConfig+0x2b4>)
9000a792:	483d      	ldr	r0, [pc, #244]	; (9000a888 <UART_SetConfig+0x2f8>)
9000a794:	681a      	ldr	r2, [r3, #0]
9000a796:	f012 0f20 	tst.w	r2, #32
9000a79a:	d003      	beq.n	9000a7a4 <UART_SetConfig+0x214>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000a79c:	681b      	ldr	r3, [r3, #0]
9000a79e:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000a7a2:	40d8      	lsrs	r0, r3
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000a7a4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a7a6:	4b39      	ldr	r3, [pc, #228]	; (9000a88c <UART_SetConfig+0x2fc>)
9000a7a8:	6862      	ldr	r2, [r4, #4]
9000a7aa:	f833 3011 	ldrh.w	r3, [r3, r1, lsl #1]
9000a7ae:	fbb0 f3f3 	udiv	r3, r0, r3
9000a7b2:	0850      	lsrs	r0, r2, #1
9000a7b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9000a7b8:	fbb0 f0f2 	udiv	r0, r0, r2
9000a7bc:	b283      	uxth	r3, r0
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000a7be:	f64f 72ef 	movw	r2, #65519	; 0xffef
9000a7c2:	f1a3 0110 	sub.w	r1, r3, #16
9000a7c6:	4291      	cmp	r1, r2
9000a7c8:	d881      	bhi.n	9000a6ce <UART_SetConfig+0x13e>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000a7ca:	f020 000f 	bic.w	r0, r0, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
9000a7ce:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
9000a7d2:	6822      	ldr	r2, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000a7d4:	b280      	uxth	r0, r0
        huart->Instance->BRR = brrtemp;
9000a7d6:	4318      	orrs	r0, r3
9000a7d8:	60d0      	str	r0, [r2, #12]
9000a7da:	e788      	b.n	9000a6ee <UART_SetConfig+0x15e>
        pclk = HAL_RCC_GetPCLK1Freq();
9000a7dc:	f7fe fa56 	bl	90008c8c <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
9000a7e0:	2800      	cmp	r0, #0
9000a7e2:	d084      	beq.n	9000a6ee <UART_SetConfig+0x15e>
9000a7e4:	e7de      	b.n	9000a7a4 <UART_SetConfig+0x214>
        pclk = HAL_RCC_GetPCLK2Freq();
9000a7e6:	f7fe fa63 	bl	90008cb0 <HAL_RCC_GetPCLK2Freq>
        break;
9000a7ea:	e7f9      	b.n	9000a7e0 <UART_SetConfig+0x250>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000a7ec:	4668      	mov	r0, sp
9000a7ee:	f7ff f853 	bl	90009898 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000a7f2:	9801      	ldr	r0, [sp, #4]
        break;
9000a7f4:	e7f4      	b.n	9000a7e0 <UART_SetConfig+0x250>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000a7f6:	a803      	add	r0, sp, #12
9000a7f8:	f7ff f8f6 	bl	900099e8 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000a7fc:	9804      	ldr	r0, [sp, #16]
        break;
9000a7fe:	e7ef      	b.n	9000a7e0 <UART_SetConfig+0x250>
        pclk = (uint32_t) CSI_VALUE;
9000a800:	4824      	ldr	r0, [pc, #144]	; (9000a894 <UART_SetConfig+0x304>)
9000a802:	e7cf      	b.n	9000a7a4 <UART_SetConfig+0x214>
    switch (clocksource)
9000a804:	2b08      	cmp	r3, #8
9000a806:	d847      	bhi.n	9000a898 <UART_SetConfig+0x308>
9000a808:	2b08      	cmp	r3, #8
9000a80a:	f63f af60 	bhi.w	9000a6ce <UART_SetConfig+0x13e>
9000a80e:	a201      	add	r2, pc, #4	; (adr r2, 9000a814 <UART_SetConfig+0x284>)
9000a810:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000a814:	9000a8e9 	.word	0x9000a8e9
9000a818:	9000a8f5 	.word	0x9000a8f5
9000a81c:	9000a6cf 	.word	0x9000a6cf
9000a820:	9000a6cf 	.word	0x9000a6cf
9000a824:	9000a8fb 	.word	0x9000a8fb
9000a828:	9000a6cf 	.word	0x9000a6cf
9000a82c:	9000a6cf 	.word	0x9000a6cf
9000a830:	9000a6cf 	.word	0x9000a6cf
9000a834:	9000a905 	.word	0x9000a905
9000a838:	cfff69f3 	.word	0xcfff69f3
9000a83c:	58000c00 	.word	0x58000c00
9000a840:	40011000 	.word	0x40011000
9000a844:	58024400 	.word	0x58024400
9000a848:	90021934 	.word	0x90021934
9000a84c:	40004400 	.word	0x40004400
9000a850:	9002195d 	.word	0x9002195d
9000a854:	40004800 	.word	0x40004800
9000a858:	9002195d 	.word	0x9002195d
9000a85c:	40004c00 	.word	0x40004c00
9000a860:	9002195d 	.word	0x9002195d
9000a864:	40005000 	.word	0x40005000
9000a868:	9002195d 	.word	0x9002195d
9000a86c:	40011400 	.word	0x40011400
9000a870:	90021934 	.word	0x90021934
9000a874:	40007800 	.word	0x40007800
9000a878:	9002195d 	.word	0x9002195d
9000a87c:	40007c00 	.word	0x40007c00
9000a880:	9002195d 	.word	0x9002195d
9000a884:	90021963 	.word	0x90021963
9000a888:	03d09000 	.word	0x03d09000
9000a88c:	9002196a 	.word	0x9002196a
9000a890:	000ffcff 	.word	0x000ffcff
9000a894:	003d0900 	.word	0x003d0900
9000a898:	2b20      	cmp	r3, #32
9000a89a:	d038      	beq.n	9000a90e <UART_SetConfig+0x37e>
9000a89c:	2b40      	cmp	r3, #64	; 0x40
9000a89e:	d038      	beq.n	9000a912 <UART_SetConfig+0x382>
9000a8a0:	2b10      	cmp	r3, #16
9000a8a2:	f47f af14 	bne.w	9000a6ce <UART_SetConfig+0x13e>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000a8a6:	4a1d      	ldr	r2, [pc, #116]	; (9000a91c <UART_SetConfig+0x38c>)
9000a8a8:	6813      	ldr	r3, [r2, #0]
9000a8aa:	f013 0f20 	tst.w	r3, #32
9000a8ae:	4b1c      	ldr	r3, [pc, #112]	; (9000a920 <UART_SetConfig+0x390>)
9000a8b0:	d032      	beq.n	9000a918 <UART_SetConfig+0x388>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000a8b2:	6810      	ldr	r0, [r2, #0]
9000a8b4:	f3c0 00c1 	ubfx	r0, r0, #3, #2
9000a8b8:	fa23 f000 	lsr.w	r0, r3, r0
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000a8bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a8be:	4b19      	ldr	r3, [pc, #100]	; (9000a924 <UART_SetConfig+0x394>)
9000a8c0:	6862      	ldr	r2, [r4, #4]
9000a8c2:	f833 3011 	ldrh.w	r3, [r3, r1, lsl #1]
9000a8c6:	fbb0 f3f3 	udiv	r3, r0, r3
9000a8ca:	eb03 0352 	add.w	r3, r3, r2, lsr #1
9000a8ce:	fbb3 f3f2 	udiv	r3, r3, r2
9000a8d2:	b29b      	uxth	r3, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000a8d4:	f64f 72ef 	movw	r2, #65519	; 0xffef
9000a8d8:	f1a3 0110 	sub.w	r1, r3, #16
9000a8dc:	4291      	cmp	r1, r2
9000a8de:	f63f aef6 	bhi.w	9000a6ce <UART_SetConfig+0x13e>
        huart->Instance->BRR = usartdiv;
9000a8e2:	6822      	ldr	r2, [r4, #0]
9000a8e4:	60d3      	str	r3, [r2, #12]
9000a8e6:	e702      	b.n	9000a6ee <UART_SetConfig+0x15e>
        pclk = HAL_RCC_GetPCLK1Freq();
9000a8e8:	f7fe f9d0 	bl	90008c8c <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
9000a8ec:	2800      	cmp	r0, #0
9000a8ee:	f43f aefe 	beq.w	9000a6ee <UART_SetConfig+0x15e>
9000a8f2:	e7e3      	b.n	9000a8bc <UART_SetConfig+0x32c>
        pclk = HAL_RCC_GetPCLK2Freq();
9000a8f4:	f7fe f9dc 	bl	90008cb0 <HAL_RCC_GetPCLK2Freq>
        break;
9000a8f8:	e7f8      	b.n	9000a8ec <UART_SetConfig+0x35c>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000a8fa:	4668      	mov	r0, sp
9000a8fc:	f7fe ffcc 	bl	90009898 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000a900:	9801      	ldr	r0, [sp, #4]
        break;
9000a902:	e7f3      	b.n	9000a8ec <UART_SetConfig+0x35c>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000a904:	a803      	add	r0, sp, #12
9000a906:	f7ff f86f 	bl	900099e8 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000a90a:	9804      	ldr	r0, [sp, #16]
        break;
9000a90c:	e7ee      	b.n	9000a8ec <UART_SetConfig+0x35c>
        pclk = (uint32_t) CSI_VALUE;
9000a90e:	4806      	ldr	r0, [pc, #24]	; (9000a928 <UART_SetConfig+0x398>)
9000a910:	e7d4      	b.n	9000a8bc <UART_SetConfig+0x32c>
    switch (clocksource)
9000a912:	f44f 4000 	mov.w	r0, #32768	; 0x8000
9000a916:	e7d1      	b.n	9000a8bc <UART_SetConfig+0x32c>
          pclk = (uint32_t) HSI_VALUE;
9000a918:	4618      	mov	r0, r3
9000a91a:	e7cf      	b.n	9000a8bc <UART_SetConfig+0x32c>
9000a91c:	58024400 	.word	0x58024400
9000a920:	03d09000 	.word	0x03d09000
9000a924:	9002196a 	.word	0x9002196a
9000a928:	003d0900 	.word	0x003d0900

9000a92c <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9000a92c:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000a92e:	07da      	lsls	r2, r3, #31
{
9000a930:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9000a932:	d506      	bpl.n	9000a942 <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
9000a934:	6801      	ldr	r1, [r0, #0]
9000a936:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
9000a938:	684a      	ldr	r2, [r1, #4]
9000a93a:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
9000a93e:	4322      	orrs	r2, r4
9000a940:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
9000a942:	079c      	lsls	r4, r3, #30
9000a944:	d506      	bpl.n	9000a954 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
9000a946:	6801      	ldr	r1, [r0, #0]
9000a948:	6b04      	ldr	r4, [r0, #48]	; 0x30
9000a94a:	684a      	ldr	r2, [r1, #4]
9000a94c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000a950:	4322      	orrs	r2, r4
9000a952:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
9000a954:	0759      	lsls	r1, r3, #29
9000a956:	d506      	bpl.n	9000a966 <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
9000a958:	6801      	ldr	r1, [r0, #0]
9000a95a:	6b44      	ldr	r4, [r0, #52]	; 0x34
9000a95c:	684a      	ldr	r2, [r1, #4]
9000a95e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000a962:	4322      	orrs	r2, r4
9000a964:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000a966:	071a      	lsls	r2, r3, #28
9000a968:	d506      	bpl.n	9000a978 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
9000a96a:	6801      	ldr	r1, [r0, #0]
9000a96c:	6b84      	ldr	r4, [r0, #56]	; 0x38
9000a96e:	684a      	ldr	r2, [r1, #4]
9000a970:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
9000a974:	4322      	orrs	r2, r4
9000a976:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
9000a978:	06dc      	lsls	r4, r3, #27
9000a97a:	d506      	bpl.n	9000a98a <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
9000a97c:	6801      	ldr	r1, [r0, #0]
9000a97e:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
9000a980:	688a      	ldr	r2, [r1, #8]
9000a982:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
9000a986:	4322      	orrs	r2, r4
9000a988:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
9000a98a:	0699      	lsls	r1, r3, #26
9000a98c:	d506      	bpl.n	9000a99c <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
9000a98e:	6801      	ldr	r1, [r0, #0]
9000a990:	6c04      	ldr	r4, [r0, #64]	; 0x40
9000a992:	688a      	ldr	r2, [r1, #8]
9000a994:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
9000a998:	4322      	orrs	r2, r4
9000a99a:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
9000a99c:	065a      	lsls	r2, r3, #25
9000a99e:	d510      	bpl.n	9000a9c2 <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000a9a0:	6801      	ldr	r1, [r0, #0]
9000a9a2:	6c44      	ldr	r4, [r0, #68]	; 0x44
9000a9a4:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000a9a6:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000a9aa:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
9000a9ae:	ea42 0204 	orr.w	r2, r2, r4
9000a9b2:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000a9b4:	d105      	bne.n	9000a9c2 <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
9000a9b6:	684a      	ldr	r2, [r1, #4]
9000a9b8:	6c84      	ldr	r4, [r0, #72]	; 0x48
9000a9ba:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
9000a9be:	4322      	orrs	r2, r4
9000a9c0:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
9000a9c2:	061b      	lsls	r3, r3, #24
9000a9c4:	d506      	bpl.n	9000a9d4 <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
9000a9c6:	6802      	ldr	r2, [r0, #0]
9000a9c8:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000a9ca:	6853      	ldr	r3, [r2, #4]
9000a9cc:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
9000a9d0:	430b      	orrs	r3, r1
9000a9d2:	6053      	str	r3, [r2, #4]
}
9000a9d4:	bd10      	pop	{r4, pc}

9000a9d6 <UART_WaitOnFlagUntilTimeout>:
{
9000a9d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000a9da:	f8dd 8018 	ldr.w	r8, [sp, #24]
9000a9de:	4604      	mov	r4, r0
9000a9e0:	460e      	mov	r6, r1
9000a9e2:	4615      	mov	r5, r2
9000a9e4:	461f      	mov	r7, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000a9e6:	6822      	ldr	r2, [r4, #0]
9000a9e8:	69d3      	ldr	r3, [r2, #28]
9000a9ea:	ea36 0303 	bics.w	r3, r6, r3
9000a9ee:	bf0c      	ite	eq
9000a9f0:	2301      	moveq	r3, #1
9000a9f2:	2300      	movne	r3, #0
9000a9f4:	42ab      	cmp	r3, r5
9000a9f6:	d001      	beq.n	9000a9fc <UART_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
9000a9f8:	2000      	movs	r0, #0
9000a9fa:	e01c      	b.n	9000aa36 <UART_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
9000a9fc:	f1b8 3fff 	cmp.w	r8, #4294967295
9000aa00:	d0f2      	beq.n	9000a9e8 <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000aa02:	f7fc f8bb 	bl	90006b7c <HAL_GetTick>
9000aa06:	1bc0      	subs	r0, r0, r7
9000aa08:	4540      	cmp	r0, r8
9000aa0a:	6820      	ldr	r0, [r4, #0]
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
9000aa0c:	6803      	ldr	r3, [r0, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000aa0e:	d802      	bhi.n	9000aa16 <UART_WaitOnFlagUntilTimeout+0x40>
9000aa10:	f1b8 0f00 	cmp.w	r8, #0
9000aa14:	d111      	bne.n	9000aa3a <UART_WaitOnFlagUntilTimeout+0x64>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
9000aa16:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
9000aa1a:	6003      	str	r3, [r0, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000aa1c:	6883      	ldr	r3, [r0, #8]
9000aa1e:	f023 0301 	bic.w	r3, r3, #1
9000aa22:	6083      	str	r3, [r0, #8]
        huart->gState = HAL_UART_STATE_READY;
9000aa24:	2320      	movs	r3, #32
9000aa26:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
        huart->RxState = HAL_UART_STATE_READY;
9000aa2a:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
          __HAL_UNLOCK(huart);
9000aa2e:	2300      	movs	r3, #0
          return HAL_TIMEOUT;
9000aa30:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
9000aa32:	f884 3080 	strb.w	r3, [r4, #128]	; 0x80
}
9000aa36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
9000aa3a:	075a      	lsls	r2, r3, #29
9000aa3c:	d5d3      	bpl.n	9000a9e6 <UART_WaitOnFlagUntilTimeout+0x10>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000aa3e:	69c3      	ldr	r3, [r0, #28]
9000aa40:	051b      	lsls	r3, r3, #20
9000aa42:	d5d0      	bpl.n	9000a9e6 <UART_WaitOnFlagUntilTimeout+0x10>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000aa44:	f44f 6300 	mov.w	r3, #2048	; 0x800
9000aa48:	6203      	str	r3, [r0, #32]
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
9000aa4a:	6803      	ldr	r3, [r0, #0]
9000aa4c:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
9000aa50:	6003      	str	r3, [r0, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000aa52:	6883      	ldr	r3, [r0, #8]
9000aa54:	f023 0301 	bic.w	r3, r3, #1
9000aa58:	6083      	str	r3, [r0, #8]
          huart->gState = HAL_UART_STATE_READY;
9000aa5a:	2320      	movs	r3, #32
9000aa5c:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
          huart->RxState = HAL_UART_STATE_READY;
9000aa60:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000aa64:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
9000aa68:	e7e1      	b.n	9000aa2e <UART_WaitOnFlagUntilTimeout+0x58>

9000aa6a <HAL_UART_Transmit>:
{
9000aa6a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9000aa6e:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
9000aa70:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
{
9000aa74:	4604      	mov	r4, r0
9000aa76:	460e      	mov	r6, r1
  if (huart->gState == HAL_UART_STATE_READY)
9000aa78:	2b20      	cmp	r3, #32
{
9000aa7a:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
9000aa7c:	d150      	bne.n	9000ab20 <HAL_UART_Transmit+0xb6>
    if ((pData == NULL) || (Size == 0U))
9000aa7e:	2900      	cmp	r1, #0
9000aa80:	d04c      	beq.n	9000ab1c <HAL_UART_Transmit+0xb2>
9000aa82:	2a00      	cmp	r2, #0
9000aa84:	d04a      	beq.n	9000ab1c <HAL_UART_Transmit+0xb2>
    __HAL_LOCK(huart);
9000aa86:	f890 3080 	ldrb.w	r3, [r0, #128]	; 0x80
9000aa8a:	2b01      	cmp	r3, #1
9000aa8c:	d048      	beq.n	9000ab20 <HAL_UART_Transmit+0xb6>
9000aa8e:	2301      	movs	r3, #1
    huart->ErrorCode = HAL_UART_ERROR_NONE;
9000aa90:	2500      	movs	r5, #0
    __HAL_LOCK(huart);
9000aa92:	f880 3080 	strb.w	r3, [r0, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000aa96:	2321      	movs	r3, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
9000aa98:	f8c0 508c 	str.w	r5, [r0, #140]	; 0x8c
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000aa9c:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
    tickstart = HAL_GetTick();
9000aaa0:	f7fc f86c 	bl	90006b7c <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000aaa4:	68a2      	ldr	r2, [r4, #8]
    tickstart = HAL_GetTick();
9000aaa6:	4603      	mov	r3, r0
    huart->TxXferSize  = Size;
9000aaa8:	f8a4 7054 	strh.w	r7, [r4, #84]	; 0x54
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000aaac:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
    huart->TxXferCount = Size;
9000aab0:	f8a4 7056 	strh.w	r7, [r4, #86]	; 0x56
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000aab4:	d103      	bne.n	9000aabe <HAL_UART_Transmit+0x54>
9000aab6:	6922      	ldr	r2, [r4, #16]
9000aab8:	b90a      	cbnz	r2, 9000aabe <HAL_UART_Transmit+0x54>
9000aaba:	4635      	mov	r5, r6
      pdata8bits  = NULL;
9000aabc:	4616      	mov	r6, r2
    __HAL_UNLOCK(huart);
9000aabe:	2200      	movs	r2, #0
9000aac0:	f884 2080 	strb.w	r2, [r4, #128]	; 0x80
    while (huart->TxXferCount > 0U)
9000aac4:	f8b4 2056 	ldrh.w	r2, [r4, #86]	; 0x56
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
9000aac8:	f8cd 8000 	str.w	r8, [sp]
    while (huart->TxXferCount > 0U)
9000aacc:	b292      	uxth	r2, r2
9000aace:	b942      	cbnz	r2, 9000aae2 <HAL_UART_Transmit+0x78>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
9000aad0:	2140      	movs	r1, #64	; 0x40
9000aad2:	4620      	mov	r0, r4
9000aad4:	f7ff ff7f 	bl	9000a9d6 <UART_WaitOnFlagUntilTimeout>
9000aad8:	b958      	cbnz	r0, 9000aaf2 <HAL_UART_Transmit+0x88>
    huart->gState = HAL_UART_STATE_READY;
9000aada:	2320      	movs	r3, #32
9000aadc:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
    return HAL_OK;
9000aae0:	e008      	b.n	9000aaf4 <HAL_UART_Transmit+0x8a>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
9000aae2:	2200      	movs	r2, #0
9000aae4:	2180      	movs	r1, #128	; 0x80
9000aae6:	4620      	mov	r0, r4
9000aae8:	9303      	str	r3, [sp, #12]
9000aaea:	f7ff ff74 	bl	9000a9d6 <UART_WaitOnFlagUntilTimeout>
9000aaee:	9b03      	ldr	r3, [sp, #12]
9000aaf0:	b118      	cbz	r0, 9000aafa <HAL_UART_Transmit+0x90>
        return HAL_TIMEOUT;
9000aaf2:	2003      	movs	r0, #3
}
9000aaf4:	b004      	add	sp, #16
9000aaf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (pdata8bits == NULL)
9000aafa:	6821      	ldr	r1, [r4, #0]
9000aafc:	b95e      	cbnz	r6, 9000ab16 <HAL_UART_Transmit+0xac>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
9000aafe:	f835 2b02 	ldrh.w	r2, [r5], #2
9000ab02:	f3c2 0208 	ubfx	r2, r2, #0, #9
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
9000ab06:	628a      	str	r2, [r1, #40]	; 0x28
      huart->TxXferCount--;
9000ab08:	f8b4 2056 	ldrh.w	r2, [r4, #86]	; 0x56
9000ab0c:	3a01      	subs	r2, #1
9000ab0e:	b292      	uxth	r2, r2
9000ab10:	f8a4 2056 	strh.w	r2, [r4, #86]	; 0x56
9000ab14:	e7d6      	b.n	9000aac4 <HAL_UART_Transmit+0x5a>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
9000ab16:	f816 2b01 	ldrb.w	r2, [r6], #1
9000ab1a:	e7f4      	b.n	9000ab06 <HAL_UART_Transmit+0x9c>
      return  HAL_ERROR;
9000ab1c:	2001      	movs	r0, #1
9000ab1e:	e7e9      	b.n	9000aaf4 <HAL_UART_Transmit+0x8a>
    return HAL_BUSY;
9000ab20:	2002      	movs	r0, #2
9000ab22:	e7e7      	b.n	9000aaf4 <HAL_UART_Transmit+0x8a>

9000ab24 <UART_CheckIdleState>:
{
9000ab24:	b530      	push	{r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000ab26:	2500      	movs	r5, #0
{
9000ab28:	4604      	mov	r4, r0
9000ab2a:	b085      	sub	sp, #20
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000ab2c:	f8c0 508c 	str.w	r5, [r0, #140]	; 0x8c
  tickstart = HAL_GetTick();
9000ab30:	f7fc f824 	bl	90006b7c <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000ab34:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
9000ab36:	4603      	mov	r3, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000ab38:	6812      	ldr	r2, [r2, #0]
9000ab3a:	0711      	lsls	r1, r2, #28
9000ab3c:	d417      	bmi.n	9000ab6e <UART_CheckIdleState+0x4a>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
9000ab3e:	6822      	ldr	r2, [r4, #0]
9000ab40:	6812      	ldr	r2, [r2, #0]
9000ab42:	0752      	lsls	r2, r2, #29
9000ab44:	d509      	bpl.n	9000ab5a <UART_CheckIdleState+0x36>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
9000ab46:	f06f 427e 	mvn.w	r2, #4261412864	; 0xfe000000
9000ab4a:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
9000ab4e:	4620      	mov	r0, r4
9000ab50:	9200      	str	r2, [sp, #0]
9000ab52:	2200      	movs	r2, #0
9000ab54:	f7ff ff3f 	bl	9000a9d6 <UART_WaitOnFlagUntilTimeout>
9000ab58:	b9b0      	cbnz	r0, 9000ab88 <UART_CheckIdleState+0x64>
  huart->gState = HAL_UART_STATE_READY;
9000ab5a:	2320      	movs	r3, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ab5c:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
9000ab5e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
  __HAL_UNLOCK(huart);
9000ab62:	f884 0080 	strb.w	r0, [r4, #128]	; 0x80
  huart->RxState = HAL_UART_STATE_READY;
9000ab66:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ab6a:	66e0      	str	r0, [r4, #108]	; 0x6c
  return HAL_OK;
9000ab6c:	e00d      	b.n	9000ab8a <UART_CheckIdleState+0x66>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
9000ab6e:	f06f 427e 	mvn.w	r2, #4261412864	; 0xfe000000
9000ab72:	9003      	str	r0, [sp, #12]
9000ab74:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
9000ab78:	4620      	mov	r0, r4
9000ab7a:	9200      	str	r2, [sp, #0]
9000ab7c:	462a      	mov	r2, r5
9000ab7e:	f7ff ff2a 	bl	9000a9d6 <UART_WaitOnFlagUntilTimeout>
9000ab82:	9b03      	ldr	r3, [sp, #12]
9000ab84:	2800      	cmp	r0, #0
9000ab86:	d0da      	beq.n	9000ab3e <UART_CheckIdleState+0x1a>
      return HAL_TIMEOUT;
9000ab88:	2003      	movs	r0, #3
}
9000ab8a:	b005      	add	sp, #20
9000ab8c:	bd30      	pop	{r4, r5, pc}

9000ab8e <HAL_UART_Init>:
{
9000ab8e:	b510      	push	{r4, lr}
  if (huart == NULL)
9000ab90:	4604      	mov	r4, r0
9000ab92:	b350      	cbz	r0, 9000abea <HAL_UART_Init+0x5c>
  if (huart->gState == HAL_UART_STATE_RESET)
9000ab94:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
9000ab98:	b91b      	cbnz	r3, 9000aba2 <HAL_UART_Init+0x14>
    huart->Lock = HAL_UNLOCKED;
9000ab9a:	f880 3080 	strb.w	r3, [r0, #128]	; 0x80
    HAL_UART_MspInit(huart);
9000ab9e:	f7f8 fd4d 	bl	9000363c <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
9000aba2:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
9000aba4:	2324      	movs	r3, #36	; 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
9000aba6:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
9000aba8:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
  __HAL_UART_DISABLE(huart);
9000abac:	6813      	ldr	r3, [r2, #0]
9000abae:	f023 0301 	bic.w	r3, r3, #1
9000abb2:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
9000abb4:	f7ff fcec 	bl	9000a590 <UART_SetConfig>
9000abb8:	2801      	cmp	r0, #1
9000abba:	d016      	beq.n	9000abea <HAL_UART_Init+0x5c>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000abbc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000abbe:	b113      	cbz	r3, 9000abc6 <HAL_UART_Init+0x38>
    UART_AdvFeatureConfig(huart);
9000abc0:	4620      	mov	r0, r4
9000abc2:	f7ff feb3 	bl	9000a92c <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000abc6:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
9000abc8:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000abca:	685a      	ldr	r2, [r3, #4]
9000abcc:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
9000abd0:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
9000abd2:	689a      	ldr	r2, [r3, #8]
9000abd4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
9000abd8:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
9000abda:	681a      	ldr	r2, [r3, #0]
9000abdc:	f042 0201 	orr.w	r2, r2, #1
}
9000abe0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
9000abe4:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
9000abe6:	f7ff bf9d 	b.w	9000ab24 <UART_CheckIdleState>
}
9000abea:	2001      	movs	r0, #1
9000abec:	bd10      	pop	{r4, pc}
	...

9000abf0 <UART_Start_Receive_IT>:
{
9000abf0:	b510      	push	{r4, lr}
  huart->pRxBuffPtr  = pData;
9000abf2:	6581      	str	r1, [r0, #88]	; 0x58
  huart->RxISR       = NULL;
9000abf4:	2300      	movs	r3, #0
  UART_MASK_COMPUTATION(huart);
9000abf6:	6881      	ldr	r1, [r0, #8]
  huart->RxXferSize  = Size;
9000abf8:	f8a0 205c 	strh.w	r2, [r0, #92]	; 0x5c
  UART_MASK_COMPUTATION(huart);
9000abfc:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
  huart->RxXferCount = Size;
9000ac00:	f8a0 205e 	strh.w	r2, [r0, #94]	; 0x5e
  huart->RxISR       = NULL;
9000ac04:	6703      	str	r3, [r0, #112]	; 0x70
  UART_MASK_COMPUTATION(huart);
9000ac06:	d131      	bne.n	9000ac6c <UART_Start_Receive_IT+0x7c>
9000ac08:	6903      	ldr	r3, [r0, #16]
9000ac0a:	bb6b      	cbnz	r3, 9000ac68 <UART_Start_Receive_IT+0x78>
9000ac0c:	f240 13ff 	movw	r3, #511	; 0x1ff
9000ac10:	f8a0 3060 	strh.w	r3, [r0, #96]	; 0x60
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000ac14:	2300      	movs	r3, #0
9000ac16:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
  huart->RxState = HAL_UART_STATE_BUSY_RX;
9000ac1a:	2322      	movs	r3, #34	; 0x22
9000ac1c:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
  SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000ac20:	6803      	ldr	r3, [r0, #0]
9000ac22:	689c      	ldr	r4, [r3, #8]
9000ac24:	f044 0401 	orr.w	r4, r4, #1
9000ac28:	609c      	str	r4, [r3, #8]
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000ac2a:	6e44      	ldr	r4, [r0, #100]	; 0x64
9000ac2c:	f1b4 5f00 	cmp.w	r4, #536870912	; 0x20000000
9000ac30:	d12c      	bne.n	9000ac8c <UART_Start_Receive_IT+0x9c>
9000ac32:	f8b0 4068 	ldrh.w	r4, [r0, #104]	; 0x68
9000ac36:	4294      	cmp	r4, r2
9000ac38:	d828      	bhi.n	9000ac8c <UART_Start_Receive_IT+0x9c>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000ac3a:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000ac3e:	d123      	bne.n	9000ac88 <UART_Start_Receive_IT+0x98>
9000ac40:	6904      	ldr	r4, [r0, #16]
      huart->RxISR = UART_RxISR_16BIT_FIFOEN;
9000ac42:	4a1c      	ldr	r2, [pc, #112]	; (9000acb4 <UART_Start_Receive_IT+0xc4>)
9000ac44:	491c      	ldr	r1, [pc, #112]	; (9000acb8 <UART_Start_Receive_IT+0xc8>)
9000ac46:	2c00      	cmp	r4, #0
9000ac48:	bf08      	it	eq
9000ac4a:	460a      	moveq	r2, r1
9000ac4c:	6702      	str	r2, [r0, #112]	; 0x70
    __HAL_UNLOCK(huart);
9000ac4e:	2200      	movs	r2, #0
9000ac50:	f880 2080 	strb.w	r2, [r0, #128]	; 0x80
    SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000ac54:	681a      	ldr	r2, [r3, #0]
9000ac56:	f442 7280 	orr.w	r2, r2, #256	; 0x100
9000ac5a:	601a      	str	r2, [r3, #0]
    SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000ac5c:	689a      	ldr	r2, [r3, #8]
9000ac5e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
9000ac62:	609a      	str	r2, [r3, #8]
}
9000ac64:	2000      	movs	r0, #0
9000ac66:	bd10      	pop	{r4, pc}
  UART_MASK_COMPUTATION(huart);
9000ac68:	23ff      	movs	r3, #255	; 0xff
9000ac6a:	e7d1      	b.n	9000ac10 <UART_Start_Receive_IT+0x20>
9000ac6c:	b921      	cbnz	r1, 9000ac78 <UART_Start_Receive_IT+0x88>
9000ac6e:	6903      	ldr	r3, [r0, #16]
9000ac70:	2b00      	cmp	r3, #0
9000ac72:	d0f9      	beq.n	9000ac68 <UART_Start_Receive_IT+0x78>
9000ac74:	237f      	movs	r3, #127	; 0x7f
9000ac76:	e7cb      	b.n	9000ac10 <UART_Start_Receive_IT+0x20>
9000ac78:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000ac7c:	d1c8      	bne.n	9000ac10 <UART_Start_Receive_IT+0x20>
9000ac7e:	6903      	ldr	r3, [r0, #16]
9000ac80:	2b00      	cmp	r3, #0
9000ac82:	d0f7      	beq.n	9000ac74 <UART_Start_Receive_IT+0x84>
9000ac84:	233f      	movs	r3, #63	; 0x3f
9000ac86:	e7c3      	b.n	9000ac10 <UART_Start_Receive_IT+0x20>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
9000ac88:	4a0a      	ldr	r2, [pc, #40]	; (9000acb4 <UART_Start_Receive_IT+0xc4>)
9000ac8a:	e7df      	b.n	9000ac4c <UART_Start_Receive_IT+0x5c>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000ac8c:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000ac90:	d10e      	bne.n	9000acb0 <UART_Start_Receive_IT+0xc0>
9000ac92:	6904      	ldr	r4, [r0, #16]
      huart->RxISR = UART_RxISR_16BIT;
9000ac94:	4a09      	ldr	r2, [pc, #36]	; (9000acbc <UART_Start_Receive_IT+0xcc>)
9000ac96:	490a      	ldr	r1, [pc, #40]	; (9000acc0 <UART_Start_Receive_IT+0xd0>)
9000ac98:	2c00      	cmp	r4, #0
9000ac9a:	bf08      	it	eq
9000ac9c:	460a      	moveq	r2, r1
9000ac9e:	6702      	str	r2, [r0, #112]	; 0x70
    __HAL_UNLOCK(huart);
9000aca0:	2200      	movs	r2, #0
9000aca2:	f880 2080 	strb.w	r2, [r0, #128]	; 0x80
    SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
9000aca6:	681a      	ldr	r2, [r3, #0]
9000aca8:	f442 7290 	orr.w	r2, r2, #288	; 0x120
9000acac:	601a      	str	r2, [r3, #0]
9000acae:	e7d9      	b.n	9000ac64 <UART_Start_Receive_IT+0x74>
      huart->RxISR = UART_RxISR_8BIT;
9000acb0:	4a02      	ldr	r2, [pc, #8]	; (9000acbc <UART_Start_Receive_IT+0xcc>)
9000acb2:	e7f4      	b.n	9000ac9e <UART_Start_Receive_IT+0xae>
9000acb4:	9000a325 	.word	0x9000a325
9000acb8:	9000a45d 	.word	0x9000a45d
9000acbc:	9000a235 	.word	0x9000a235
9000acc0:	9000a2af 	.word	0x9000a2af

9000acc4 <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
9000acc4:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
9000acc8:	2b20      	cmp	r3, #32
{
9000acca:	b410      	push	{r4}
  if (huart->RxState == HAL_UART_STATE_READY)
9000accc:	d11d      	bne.n	9000ad0a <HAL_UART_Receive_IT+0x46>
    if ((pData == NULL) || (Size == 0U))
9000acce:	b1c1      	cbz	r1, 9000ad02 <HAL_UART_Receive_IT+0x3e>
9000acd0:	b1ba      	cbz	r2, 9000ad02 <HAL_UART_Receive_IT+0x3e>
    __HAL_LOCK(huart);
9000acd2:	f890 3080 	ldrb.w	r3, [r0, #128]	; 0x80
9000acd6:	2b01      	cmp	r3, #1
9000acd8:	d017      	beq.n	9000ad0a <HAL_UART_Receive_IT+0x46>
9000acda:	2301      	movs	r3, #1
    if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000acdc:	4c0c      	ldr	r4, [pc, #48]	; (9000ad10 <HAL_UART_Receive_IT+0x4c>)
    __HAL_LOCK(huart);
9000acde:	f880 3080 	strb.w	r3, [r0, #128]	; 0x80
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ace2:	2300      	movs	r3, #0
9000ace4:	66c3      	str	r3, [r0, #108]	; 0x6c
    if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000ace6:	6803      	ldr	r3, [r0, #0]
9000ace8:	42a3      	cmp	r3, r4
9000acea:	d006      	beq.n	9000acfa <HAL_UART_Receive_IT+0x36>
      if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000acec:	685c      	ldr	r4, [r3, #4]
9000acee:	0224      	lsls	r4, r4, #8
9000acf0:	d503      	bpl.n	9000acfa <HAL_UART_Receive_IT+0x36>
        SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000acf2:	681c      	ldr	r4, [r3, #0]
9000acf4:	f044 6480 	orr.w	r4, r4, #67108864	; 0x4000000
9000acf8:	601c      	str	r4, [r3, #0]
}
9000acfa:	f85d 4b04 	ldr.w	r4, [sp], #4
    return (UART_Start_Receive_IT(huart, pData, Size));
9000acfe:	f7ff bf77 	b.w	9000abf0 <UART_Start_Receive_IT>
      return HAL_ERROR;
9000ad02:	2001      	movs	r0, #1
}
9000ad04:	f85d 4b04 	ldr.w	r4, [sp], #4
9000ad08:	4770      	bx	lr
    return HAL_BUSY;
9000ad0a:	2002      	movs	r0, #2
9000ad0c:	e7fa      	b.n	9000ad04 <HAL_UART_Receive_IT+0x40>
9000ad0e:	bf00      	nop
9000ad10:	58000c00 	.word	0x58000c00

9000ad14 <UARTEx_SetNbDataToProcess>:
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000ad14:	6e43      	ldr	r3, [r0, #100]	; 0x64
{
9000ad16:	b530      	push	{r4, r5, lr}
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000ad18:	b91b      	cbnz	r3, 9000ad22 <UARTEx_SetNbDataToProcess+0xe>
  {
    huart->NbTxDataToProcess = 1U;
    huart->NbRxDataToProcess = 1U;
9000ad1a:	f04f 1301 	mov.w	r3, #65537	; 0x10001
9000ad1e:	6683      	str	r3, [r0, #104]	; 0x68
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
                               (uint16_t)denominator[rx_fifo_threshold];
  }
}
9000ad20:	bd30      	pop	{r4, r5, pc}
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000ad22:	6803      	ldr	r3, [r0, #0]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000ad24:	4d0a      	ldr	r5, [pc, #40]	; (9000ad50 <UARTEx_SetNbDataToProcess+0x3c>)
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000ad26:	689a      	ldr	r2, [r3, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000ad28:	6899      	ldr	r1, [r3, #8]
                               (uint16_t)denominator[tx_fifo_threshold];
9000ad2a:	4c0a      	ldr	r4, [pc, #40]	; (9000ad54 <UARTEx_SetNbDataToProcess+0x40>)
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000ad2c:	f3c2 6242 	ubfx	r2, r2, #25, #3
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000ad30:	0f49      	lsrs	r1, r1, #29
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000ad32:	5c6b      	ldrb	r3, [r5, r1]
                               (uint16_t)denominator[tx_fifo_threshold];
9000ad34:	5c61      	ldrb	r1, [r4, r1]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000ad36:	011b      	lsls	r3, r3, #4
9000ad38:	fbb3 f3f1 	udiv	r3, r3, r1
9000ad3c:	f8a0 306a 	strh.w	r3, [r0, #106]	; 0x6a
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000ad40:	5cab      	ldrb	r3, [r5, r2]
                               (uint16_t)denominator[rx_fifo_threshold];
9000ad42:	5ca2      	ldrb	r2, [r4, r2]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000ad44:	011b      	lsls	r3, r3, #4
9000ad46:	fbb3 f3f2 	udiv	r3, r3, r2
9000ad4a:	f8a0 3068 	strh.w	r3, [r0, #104]	; 0x68
}
9000ad4e:	e7e7      	b.n	9000ad20 <UARTEx_SetNbDataToProcess+0xc>
9000ad50:	9002198a 	.word	0x9002198a
9000ad54:	90021982 	.word	0x90021982

9000ad58 <HAL_UARTEx_WakeupCallback>:
}
9000ad58:	4770      	bx	lr

9000ad5a <HAL_UARTEx_RxFifoFullCallback>:
9000ad5a:	4770      	bx	lr

9000ad5c <HAL_UARTEx_TxFifoEmptyCallback>:
9000ad5c:	4770      	bx	lr

9000ad5e <HAL_UARTEx_DisableFifoMode>:
  __HAL_LOCK(huart);
9000ad5e:	f890 3080 	ldrb.w	r3, [r0, #128]	; 0x80
9000ad62:	2b01      	cmp	r3, #1
9000ad64:	d014      	beq.n	9000ad90 <HAL_UARTEx_DisableFifoMode+0x32>
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000ad66:	6802      	ldr	r2, [r0, #0]
  huart->gState = HAL_UART_STATE_BUSY;
9000ad68:	2324      	movs	r3, #36	; 0x24
9000ad6a:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000ad6e:	6811      	ldr	r1, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000ad70:	6813      	ldr	r3, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
9000ad72:	f021 5100 	bic.w	r1, r1, #536870912	; 0x20000000
  __HAL_UART_DISABLE(huart);
9000ad76:	f023 0301 	bic.w	r3, r3, #1
9000ad7a:	6013      	str	r3, [r2, #0]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000ad7c:	2300      	movs	r3, #0
9000ad7e:	6643      	str	r3, [r0, #100]	; 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000ad80:	6011      	str	r1, [r2, #0]
  huart->gState = HAL_UART_STATE_READY;
9000ad82:	2220      	movs	r2, #32
  __HAL_UNLOCK(huart);
9000ad84:	f880 3080 	strb.w	r3, [r0, #128]	; 0x80
  huart->gState = HAL_UART_STATE_READY;
9000ad88:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
  return HAL_OK;
9000ad8c:	4618      	mov	r0, r3
9000ad8e:	4770      	bx	lr
  __HAL_LOCK(huart);
9000ad90:	2002      	movs	r0, #2
}
9000ad92:	4770      	bx	lr

9000ad94 <HAL_UARTEx_SetTxFifoThreshold>:
{
9000ad94:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(huart);
9000ad96:	f890 3080 	ldrb.w	r3, [r0, #128]	; 0x80
{
9000ad9a:	4604      	mov	r4, r0
  __HAL_LOCK(huart);
9000ad9c:	2b01      	cmp	r3, #1
9000ad9e:	d01b      	beq.n	9000add8 <HAL_UARTEx_SetTxFifoThreshold+0x44>
9000ada0:	2301      	movs	r3, #1
9000ada2:	f880 3080 	strb.w	r3, [r0, #128]	; 0x80
  huart->gState = HAL_UART_STATE_BUSY;
9000ada6:	2324      	movs	r3, #36	; 0x24
9000ada8:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000adac:	6803      	ldr	r3, [r0, #0]
9000adae:	681d      	ldr	r5, [r3, #0]
  __HAL_UART_DISABLE(huart);
9000adb0:	681a      	ldr	r2, [r3, #0]
9000adb2:	f022 0201 	bic.w	r2, r2, #1
9000adb6:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000adb8:	689a      	ldr	r2, [r3, #8]
9000adba:	f022 4260 	bic.w	r2, r2, #3758096384	; 0xe0000000
9000adbe:	4311      	orrs	r1, r2
9000adc0:	6099      	str	r1, [r3, #8]
  UARTEx_SetNbDataToProcess(huart);
9000adc2:	f7ff ffa7 	bl	9000ad14 <UARTEx_SetNbDataToProcess>
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000adc6:	6803      	ldr	r3, [r0, #0]
9000adc8:	601d      	str	r5, [r3, #0]
  huart->gState = HAL_UART_STATE_READY;
9000adca:	2320      	movs	r3, #32
9000adcc:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __HAL_UNLOCK(huart);
9000add0:	2000      	movs	r0, #0
9000add2:	f884 0080 	strb.w	r0, [r4, #128]	; 0x80
}
9000add6:	bd38      	pop	{r3, r4, r5, pc}
  __HAL_LOCK(huart);
9000add8:	2002      	movs	r0, #2
9000adda:	e7fc      	b.n	9000add6 <HAL_UARTEx_SetTxFifoThreshold+0x42>

9000addc <HAL_UARTEx_SetRxFifoThreshold>:
{
9000addc:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(huart);
9000adde:	f890 3080 	ldrb.w	r3, [r0, #128]	; 0x80
{
9000ade2:	4604      	mov	r4, r0
  __HAL_LOCK(huart);
9000ade4:	2b01      	cmp	r3, #1
9000ade6:	d01b      	beq.n	9000ae20 <HAL_UARTEx_SetRxFifoThreshold+0x44>
9000ade8:	2301      	movs	r3, #1
9000adea:	f880 3080 	strb.w	r3, [r0, #128]	; 0x80
  huart->gState = HAL_UART_STATE_BUSY;
9000adee:	2324      	movs	r3, #36	; 0x24
9000adf0:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000adf4:	6803      	ldr	r3, [r0, #0]
9000adf6:	681d      	ldr	r5, [r3, #0]
  __HAL_UART_DISABLE(huart);
9000adf8:	681a      	ldr	r2, [r3, #0]
9000adfa:	f022 0201 	bic.w	r2, r2, #1
9000adfe:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000ae00:	689a      	ldr	r2, [r3, #8]
9000ae02:	f022 6260 	bic.w	r2, r2, #234881024	; 0xe000000
9000ae06:	4311      	orrs	r1, r2
9000ae08:	6099      	str	r1, [r3, #8]
  UARTEx_SetNbDataToProcess(huart);
9000ae0a:	f7ff ff83 	bl	9000ad14 <UARTEx_SetNbDataToProcess>
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000ae0e:	6803      	ldr	r3, [r0, #0]
9000ae10:	601d      	str	r5, [r3, #0]
  huart->gState = HAL_UART_STATE_READY;
9000ae12:	2320      	movs	r3, #32
9000ae14:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __HAL_UNLOCK(huart);
9000ae18:	2000      	movs	r0, #0
9000ae1a:	f884 0080 	strb.w	r0, [r4, #128]	; 0x80
}
9000ae1e:	bd38      	pop	{r3, r4, r5, pc}
  __HAL_LOCK(huart);
9000ae20:	2002      	movs	r0, #2
9000ae22:	e7fc      	b.n	9000ae1e <HAL_UARTEx_SetRxFifoThreshold+0x42>

9000ae24 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
9000ae24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000ae28:	680a      	ldr	r2, [r1, #0]
9000ae2a:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
9000ae2e:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
9000ae32:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
9000ae36:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
9000ae3a:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
9000ae3e:	4323      	orrs	r3, r4
9000ae40:	b9a2      	cbnz	r2, 9000ae6c <FMC_SDRAM_Init+0x48>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ae42:	ea43 0209 	orr.w	r2, r3, r9
9000ae46:	6801      	ldr	r1, [r0, #0]
9000ae48:	432a      	orrs	r2, r5
9000ae4a:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
9000ae4e:	ea42 0308 	orr.w	r3, r2, r8
9000ae52:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
9000ae56:	ea43 030e 	orr.w	r3, r3, lr
9000ae5a:	ea43 030c 	orr.w	r3, r3, ip
9000ae5e:	433b      	orrs	r3, r7
9000ae60:	4333      	orrs	r3, r6
9000ae62:	430b      	orrs	r3, r1
9000ae64:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000ae66:	2000      	movs	r0, #0
9000ae68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ae6c:	6802      	ldr	r2, [r0, #0]
9000ae6e:	ea43 0309 	orr.w	r3, r3, r9
9000ae72:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
9000ae76:	4313      	orrs	r3, r2
9000ae78:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000ae7a:	ea45 0308 	orr.w	r3, r5, r8
9000ae7e:	6842      	ldr	r2, [r0, #4]
9000ae80:	ea43 030e 	orr.w	r3, r3, lr
9000ae84:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
9000ae88:	ea43 030c 	orr.w	r3, r3, ip
9000ae8c:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
9000ae90:	433b      	orrs	r3, r7
9000ae92:	4333      	orrs	r3, r6
9000ae94:	4313      	orrs	r3, r2
9000ae96:	6043      	str	r3, [r0, #4]
9000ae98:	e7e5      	b.n	9000ae66 <FMC_SDRAM_Init+0x42>

9000ae9a <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
9000ae9a:	68cb      	ldr	r3, [r1, #12]
9000ae9c:	f103 3cff 	add.w	ip, r3, #4294967295
9000aea0:	694b      	ldr	r3, [r1, #20]
{
9000aea2:	b5f0      	push	{r4, r5, r6, r7, lr}
9000aea4:	3b01      	subs	r3, #1
9000aea6:	680f      	ldr	r7, [r1, #0]
9000aea8:	684c      	ldr	r4, [r1, #4]
9000aeaa:	688e      	ldr	r6, [r1, #8]
9000aeac:	051b      	lsls	r3, r3, #20
9000aeae:	690d      	ldr	r5, [r1, #16]
9000aeb0:	3c01      	subs	r4, #1
9000aeb2:	6989      	ldr	r1, [r1, #24]
9000aeb4:	3e01      	subs	r6, #1
9000aeb6:	3d01      	subs	r5, #1
9000aeb8:	3f01      	subs	r7, #1
9000aeba:	3901      	subs	r1, #1
9000aebc:	0124      	lsls	r4, r4, #4
9000aebe:	0236      	lsls	r6, r6, #8
9000aec0:	042d      	lsls	r5, r5, #16
9000aec2:	0609      	lsls	r1, r1, #24
9000aec4:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
9000aec8:	b95a      	cbnz	r2, 9000aee2 <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000aeca:	433b      	orrs	r3, r7
9000aecc:	6882      	ldr	r2, [r0, #8]
9000aece:	4323      	orrs	r3, r4
9000aed0:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
9000aed4:	4333      	orrs	r3, r6
9000aed6:	432b      	orrs	r3, r5
9000aed8:	430b      	orrs	r3, r1
9000aeda:	4313      	orrs	r3, r2
9000aedc:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000aede:	2000      	movs	r0, #0
9000aee0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000aee2:	6882      	ldr	r2, [r0, #8]
9000aee4:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
9000aee8:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
9000aeec:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000aeee:	ea44 0306 	orr.w	r3, r4, r6
9000aef2:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000aef4:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000aef6:	68c2      	ldr	r2, [r0, #12]
9000aef8:	432b      	orrs	r3, r5
9000aefa:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
9000aefe:	430b      	orrs	r3, r1
9000af00:	4313      	orrs	r3, r2
9000af02:	60c3      	str	r3, [r0, #12]
9000af04:	e7eb      	b.n	9000aede <FMC_SDRAM_Timing_Init+0x44>

9000af06 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
9000af06:	f44f 7234 	mov.w	r2, #720	; 0x2d0
9000af0a:	eb00 0381 	add.w	r3, r0, r1, lsl #2
9000af0e:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000af12:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
9000af16:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
9000af18:	2300      	movs	r3, #0
9000af1a:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
9000af1c:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
9000af1e:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
9000af20:	4618      	mov	r0, r3
9000af22:	4770      	bx	lr

9000af24 <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | 
9000af24:	6902      	ldr	r2, [r0, #16]
{
9000af26:	b510      	push	{r4, lr}
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | 
9000af28:	e9d1 3400 	ldrd	r3, r4, [r1]
9000af2c:	0d92      	lsrs	r2, r2, #22
9000af2e:	4323      	orrs	r3, r4
9000af30:	68cc      	ldr	r4, [r1, #12]
9000af32:	0592      	lsls	r2, r2, #22
9000af34:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000af38:	4313      	orrs	r3, r2
9000af3a:	688a      	ldr	r2, [r1, #8]
9000af3c:	3a01      	subs	r2, #1
9000af3e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
9000af42:	6103      	str	r3, [r0, #16]
             (Command->CommandTarget) | (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
             ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000af44:	2000      	movs	r0, #0
9000af46:	bd10      	pop	{r4, pc}

9000af48 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000af48:	6943      	ldr	r3, [r0, #20]
9000af4a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
9000af4e:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
9000af52:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
9000af56:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
9000af58:	2000      	movs	r0, #0
9000af5a:	4770      	bx	lr

9000af5c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000af5c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000af5e:	4b05      	ldr	r3, [pc, #20]	; (9000af74 <SysTick_Handler+0x18>)
9000af60:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000af62:	f001 fe43 	bl	9000cbec <xTaskGetSchedulerState>
9000af66:	2801      	cmp	r0, #1
9000af68:	d003      	beq.n	9000af72 <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000af6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000af6e:	f000 bbd9 	b.w	9000b724 <xPortSysTickHandler>
}
9000af72:	bd08      	pop	{r3, pc}
9000af74:	e000e010 	.word	0xe000e010

9000af78 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000af78:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000af7c:	b92b      	cbnz	r3, 9000af8a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000af7e:	4b06      	ldr	r3, [pc, #24]	; (9000af98 <osKernelInitialize+0x20>)
9000af80:	6818      	ldr	r0, [r3, #0]
9000af82:	b928      	cbnz	r0, 9000af90 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000af84:	2201      	movs	r2, #1
9000af86:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000af88:	4770      	bx	lr
    stat = osErrorISR;
9000af8a:	f06f 0005 	mvn.w	r0, #5
9000af8e:	4770      	bx	lr
    } else {
      stat = osError;
9000af90:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000af94:	4770      	bx	lr
9000af96:	bf00      	nop
9000af98:	24002020 	.word	0x24002020

9000af9c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000af9c:	b510      	push	{r4, lr}
9000af9e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000afa2:	b95c      	cbnz	r4, 9000afbc <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000afa4:	4b08      	ldr	r3, [pc, #32]	; (9000afc8 <osKernelStart+0x2c>)
9000afa6:	681a      	ldr	r2, [r3, #0]
9000afa8:	2a01      	cmp	r2, #1
9000afaa:	d10a      	bne.n	9000afc2 <osKernelStart+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000afac:	4a07      	ldr	r2, [pc, #28]	; (9000afcc <osKernelStart+0x30>)
9000afae:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000afb0:	2202      	movs	r2, #2
9000afb2:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000afb4:	f001 fcc0 	bl	9000c938 <vTaskStartScheduler>
      stat = osOK;
9000afb8:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000afba:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000afbc:	f06f 0005 	mvn.w	r0, #5
9000afc0:	e7fb      	b.n	9000afba <osKernelStart+0x1e>
      stat = osError;
9000afc2:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
9000afc6:	e7f8      	b.n	9000afba <osKernelStart+0x1e>
9000afc8:	24002020 	.word	0x24002020
9000afcc:	e000ed00 	.word	0xe000ed00

9000afd0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000afd0:	b5f0      	push	{r4, r5, r6, r7, lr}
9000afd2:	4614      	mov	r4, r2
9000afd4:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000afd6:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000afd8:	460b      	mov	r3, r1
  hTask = NULL;
9000afda:	9205      	str	r2, [sp, #20]
9000afdc:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000afe0:	b9d2      	cbnz	r2, 9000b018 <osThreadNew+0x48>
9000afe2:	b1c8      	cbz	r0, 9000b018 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000afe4:	2c00      	cmp	r4, #0
9000afe6:	d02f      	beq.n	9000b048 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000afe8:	69a5      	ldr	r5, [r4, #24]
9000afea:	2d00      	cmp	r5, #0
9000afec:	bf08      	it	eq
9000afee:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000aff0:	1e69      	subs	r1, r5, #1
9000aff2:	46ac      	mov	ip, r5
9000aff4:	2937      	cmp	r1, #55	; 0x37
9000aff6:	d82b      	bhi.n	9000b050 <osThreadNew+0x80>
9000aff8:	6861      	ldr	r1, [r4, #4]
9000affa:	07c9      	lsls	r1, r1, #31
9000affc:	d428      	bmi.n	9000b050 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000affe:	6966      	ldr	r6, [r4, #20]
9000b000:	b16e      	cbz	r6, 9000b01e <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000b002:	08b2      	lsrs	r2, r6, #2
      if (attr->name != NULL) {
9000b004:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000b006:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
9000b00a:	b157      	cbz	r7, 9000b022 <osThreadNew+0x52>
9000b00c:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
9000b010:	d902      	bls.n	9000b018 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000b012:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000b014:	b104      	cbz	r4, 9000b018 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000b016:	b9ee      	cbnz	r6, 9000b054 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
9000b018:	9805      	ldr	r0, [sp, #20]
}
9000b01a:	b007      	add	sp, #28
9000b01c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
9000b01e:	2280      	movs	r2, #128	; 0x80
9000b020:	e7f0      	b.n	9000b004 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000b022:	f1be 0f00 	cmp.w	lr, #0
9000b026:	d1f7      	bne.n	9000b018 <osThreadNew+0x48>
      if (mem == 0) {
9000b028:	6924      	ldr	r4, [r4, #16]
9000b02a:	2c00      	cmp	r4, #0
9000b02c:	d1f4      	bne.n	9000b018 <osThreadNew+0x48>
9000b02e:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000b030:	a905      	add	r1, sp, #20
9000b032:	b292      	uxth	r2, r2
9000b034:	e9cd c100 	strd	ip, r1, [sp]
9000b038:	4621      	mov	r1, r4
9000b03a:	f001 faf7 	bl	9000c62c <xTaskCreate>
9000b03e:	2801      	cmp	r0, #1
            hTask = NULL;
9000b040:	bf1c      	itt	ne
9000b042:	2300      	movne	r3, #0
9000b044:	9305      	strne	r3, [sp, #20]
9000b046:	e7e7      	b.n	9000b018 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
9000b048:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
9000b04c:	2280      	movs	r2, #128	; 0x80
9000b04e:	e7ef      	b.n	9000b030 <osThreadNew+0x60>
        return (NULL);
9000b050:	4610      	mov	r0, r2
9000b052:	e7e2      	b.n	9000b01a <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000b054:	e9cd 4701 	strd	r4, r7, [sp, #4]
9000b058:	9500      	str	r5, [sp, #0]
9000b05a:	f001 faaf 	bl	9000c5bc <xTaskCreateStatic>
9000b05e:	9005      	str	r0, [sp, #20]
9000b060:	e7da      	b.n	9000b018 <osThreadNew+0x48>

9000b062 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
9000b062:	b510      	push	{r4, lr}
9000b064:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000b068:	b924      	cbnz	r4, 9000b074 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000b06a:	b110      	cbz	r0, 9000b072 <osDelay+0x10>
      vTaskDelay(ticks);
9000b06c:	f001 fc24 	bl	9000c8b8 <vTaskDelay>
    stat = osOK;
9000b070:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
9000b072:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000b074:	f06f 0005 	mvn.w	r0, #5
9000b078:	e7fb      	b.n	9000b072 <osDelay+0x10>

9000b07a <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000b07a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9000b07c:	4604      	mov	r4, r0
9000b07e:	460e      	mov	r6, r1
9000b080:	4615      	mov	r5, r2
9000b082:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000b086:	b11a      	cbz	r2, 9000b090 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
9000b088:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000b08a:	4620      	mov	r0, r4
9000b08c:	b003      	add	sp, #12
9000b08e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000b090:	2800      	cmp	r0, #0
9000b092:	d0f9      	beq.n	9000b088 <osSemaphoreNew+0xe>
9000b094:	4288      	cmp	r0, r1
9000b096:	d3f7      	bcc.n	9000b088 <osSemaphoreNew+0xe>
    if (attr != NULL) {
9000b098:	b1e5      	cbz	r5, 9000b0d4 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000b09a:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
9000b09e:	b1bb      	cbz	r3, 9000b0d0 <osSemaphoreNew+0x56>
9000b0a0:	2f4f      	cmp	r7, #79	; 0x4f
9000b0a2:	d9f1      	bls.n	9000b088 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
9000b0a4:	2801      	cmp	r0, #1
9000b0a6:	d12a      	bne.n	9000b0fe <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000b0a8:	2103      	movs	r1, #3
9000b0aa:	9100      	str	r1, [sp, #0]
9000b0ac:	4611      	mov	r1, r2
9000b0ae:	f000 fce7 	bl	9000ba80 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
9000b0b2:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000b0b4:	2800      	cmp	r0, #0
9000b0b6:	d0e7      	beq.n	9000b088 <osSemaphoreNew+0xe>
9000b0b8:	b1de      	cbz	r6, 9000b0f2 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000b0ba:	2300      	movs	r3, #0
9000b0bc:	461a      	mov	r2, r3
9000b0be:	4619      	mov	r1, r3
9000b0c0:	f000 fd94 	bl	9000bbec <xQueueGenericSend>
9000b0c4:	2801      	cmp	r0, #1
9000b0c6:	d014      	beq.n	9000b0f2 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
9000b0c8:	4620      	mov	r0, r4
9000b0ca:	f001 f8d5 	bl	9000c278 <vQueueDelete>
9000b0ce:	e7db      	b.n	9000b088 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000b0d0:	2f00      	cmp	r7, #0
9000b0d2:	d1d9      	bne.n	9000b088 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
9000b0d4:	2c01      	cmp	r4, #1
9000b0d6:	d105      	bne.n	9000b0e4 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
9000b0d8:	2203      	movs	r2, #3
9000b0da:	2100      	movs	r1, #0
9000b0dc:	4620      	mov	r0, r4
9000b0de:	f000 fd1d 	bl	9000bb1c <xQueueGenericCreate>
9000b0e2:	e7e6      	b.n	9000b0b2 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000b0e4:	4620      	mov	r0, r4
9000b0e6:	4631      	mov	r1, r6
9000b0e8:	f000 fd61 	bl	9000bbae <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
9000b0ec:	4604      	mov	r4, r0
9000b0ee:	2800      	cmp	r0, #0
9000b0f0:	d0ca      	beq.n	9000b088 <osSemaphoreNew+0xe>
        if (attr != NULL) {
9000b0f2:	b955      	cbnz	r5, 9000b10a <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
9000b0f4:	4629      	mov	r1, r5
9000b0f6:	4620      	mov	r0, r4
9000b0f8:	f001 f894 	bl	9000c224 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
9000b0fc:	e7c5      	b.n	9000b08a <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000b0fe:	461a      	mov	r2, r3
9000b100:	f000 fd33 	bl	9000bb6a <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
9000b104:	4604      	mov	r4, r0
9000b106:	2800      	cmp	r0, #0
9000b108:	d0be      	beq.n	9000b088 <osSemaphoreNew+0xe>
          name = attr->name;
9000b10a:	682d      	ldr	r5, [r5, #0]
9000b10c:	e7f2      	b.n	9000b0f4 <osSemaphoreNew+0x7a>
	...

9000b110 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000b110:	b513      	push	{r0, r1, r4, lr}
9000b112:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000b114:	b1f8      	cbz	r0, 9000b156 <osSemaphoreAcquire+0x46>
9000b116:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000b11a:	b1a3      	cbz	r3, 9000b146 <osSemaphoreAcquire+0x36>
    if (timeout != 0U) {
9000b11c:	b9d9      	cbnz	r1, 9000b156 <osSemaphoreAcquire+0x46>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000b11e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000b120:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000b122:	f001 f82f 	bl	9000c184 <xQueueReceiveFromISR>
9000b126:	2801      	cmp	r0, #1
9000b128:	d112      	bne.n	9000b150 <osSemaphoreAcquire+0x40>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000b12a:	9b01      	ldr	r3, [sp, #4]
9000b12c:	b913      	cbnz	r3, 9000b134 <osSemaphoreAcquire+0x24>
  stat = osOK;
9000b12e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000b130:	b002      	add	sp, #8
9000b132:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000b134:	4b0b      	ldr	r3, [pc, #44]	; (9000b164 <osSemaphoreAcquire+0x54>)
9000b136:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000b13a:	601a      	str	r2, [r3, #0]
9000b13c:	f3bf 8f4f 	dsb	sy
9000b140:	f3bf 8f6f 	isb	sy
9000b144:	e7f3      	b.n	9000b12e <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000b146:	f000 ff59 	bl	9000bffc <xQueueSemaphoreTake>
9000b14a:	2801      	cmp	r0, #1
9000b14c:	d0ef      	beq.n	9000b12e <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
9000b14e:	b92c      	cbnz	r4, 9000b15c <osSemaphoreAcquire+0x4c>
        stat = osErrorResource;
9000b150:	f06f 0002 	mvn.w	r0, #2
9000b154:	e7ec      	b.n	9000b130 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
9000b156:	f06f 0003 	mvn.w	r0, #3
9000b15a:	e7e9      	b.n	9000b130 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
9000b15c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
9000b160:	e7e6      	b.n	9000b130 <osSemaphoreAcquire+0x20>
9000b162:	bf00      	nop
9000b164:	e000ed04 	.word	0xe000ed04

9000b168 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000b168:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000b16a:	b300      	cbz	r0, 9000b1ae <osSemaphoreRelease+0x46>
9000b16c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000b170:	b1a3      	cbz	r3, 9000b19c <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000b172:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000b174:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000b176:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000b178:	f000 fe4c 	bl	9000be14 <xQueueGiveFromISR>
9000b17c:	2801      	cmp	r0, #1
9000b17e:	d113      	bne.n	9000b1a8 <osSemaphoreRelease+0x40>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000b180:	9b01      	ldr	r3, [sp, #4]
9000b182:	b913      	cbnz	r3, 9000b18a <osSemaphoreRelease+0x22>
  stat = osOK;
9000b184:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000b186:	b002      	add	sp, #8
9000b188:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
9000b18a:	4b0a      	ldr	r3, [pc, #40]	; (9000b1b4 <osSemaphoreRelease+0x4c>)
9000b18c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000b190:	601a      	str	r2, [r3, #0]
9000b192:	f3bf 8f4f 	dsb	sy
9000b196:	f3bf 8f6f 	isb	sy
9000b19a:	e7f3      	b.n	9000b184 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000b19c:	461a      	mov	r2, r3
9000b19e:	4619      	mov	r1, r3
9000b1a0:	f000 fd24 	bl	9000bbec <xQueueGenericSend>
9000b1a4:	2801      	cmp	r0, #1
9000b1a6:	d0ed      	beq.n	9000b184 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
9000b1a8:	f06f 0002 	mvn.w	r0, #2
9000b1ac:	e7eb      	b.n	9000b186 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
9000b1ae:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000b1b2:	e7e8      	b.n	9000b186 <osSemaphoreRelease+0x1e>
9000b1b4:	e000ed04 	.word	0xe000ed04

9000b1b8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000b1b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9000b1ba:	4606      	mov	r6, r0
9000b1bc:	460d      	mov	r5, r1
9000b1be:	4614      	mov	r4, r2
9000b1c0:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000b1c4:	b11f      	cbz	r7, 9000b1ce <osMessageQueueNew+0x16>
  hQueue = NULL;
9000b1c6:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000b1c8:	4628      	mov	r0, r5
9000b1ca:	b003      	add	sp, #12
9000b1cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000b1ce:	2800      	cmp	r0, #0
9000b1d0:	d0f9      	beq.n	9000b1c6 <osMessageQueueNew+0xe>
9000b1d2:	2900      	cmp	r1, #0
9000b1d4:	d0f7      	beq.n	9000b1c6 <osMessageQueueNew+0xe>
    if (attr != NULL) {
9000b1d6:	b1da      	cbz	r2, 9000b210 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000b1d8:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000b1dc:	b183      	cbz	r3, 9000b200 <osMessageQueueNew+0x48>
9000b1de:	2a4f      	cmp	r2, #79	; 0x4f
9000b1e0:	d9f1      	bls.n	9000b1c6 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000b1e2:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000b1e4:	2a00      	cmp	r2, #0
9000b1e6:	d0ee      	beq.n	9000b1c6 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000b1e8:	4345      	muls	r5, r0
9000b1ea:	6966      	ldr	r6, [r4, #20]
9000b1ec:	42ae      	cmp	r6, r5
9000b1ee:	d3ea      	bcc.n	9000b1c6 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000b1f0:	9700      	str	r7, [sp, #0]
9000b1f2:	f000 fc45 	bl	9000ba80 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000b1f6:	4605      	mov	r5, r0
9000b1f8:	2800      	cmp	r0, #0
9000b1fa:	d0e4      	beq.n	9000b1c6 <osMessageQueueNew+0xe>
        name = attr->name;
9000b1fc:	6824      	ldr	r4, [r4, #0]
9000b1fe:	e011      	b.n	9000b224 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000b200:	2a00      	cmp	r2, #0
9000b202:	d1e0      	bne.n	9000b1c6 <osMessageQueueNew+0xe>
9000b204:	6923      	ldr	r3, [r4, #16]
9000b206:	2b00      	cmp	r3, #0
9000b208:	d1dd      	bne.n	9000b1c6 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000b20a:	6963      	ldr	r3, [r4, #20]
9000b20c:	2b00      	cmp	r3, #0
9000b20e:	d1da      	bne.n	9000b1c6 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
9000b210:	4629      	mov	r1, r5
9000b212:	2200      	movs	r2, #0
9000b214:	4630      	mov	r0, r6
9000b216:	f000 fc81 	bl	9000bb1c <xQueueGenericCreate>
    if (hQueue != NULL) {
9000b21a:	4605      	mov	r5, r0
9000b21c:	2800      	cmp	r0, #0
9000b21e:	d0d2      	beq.n	9000b1c6 <osMessageQueueNew+0xe>
      if (attr != NULL) {
9000b220:	2c00      	cmp	r4, #0
9000b222:	d1eb      	bne.n	9000b1fc <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
9000b224:	4621      	mov	r1, r4
9000b226:	4628      	mov	r0, r5
9000b228:	f000 fffc 	bl	9000c224 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
9000b22c:	e7cc      	b.n	9000b1c8 <osMessageQueueNew+0x10>
	...

9000b230 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000b230:	b573      	push	{r0, r1, r4, r5, r6, lr}
9000b232:	461c      	mov	r4, r3
9000b234:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000b238:	b1b6      	cbz	r6, 9000b268 <osMessageQueuePut+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000b23a:	b308      	cbz	r0, 9000b280 <osMessageQueuePut+0x50>
9000b23c:	b301      	cbz	r1, 9000b280 <osMessageQueuePut+0x50>
9000b23e:	b9fb      	cbnz	r3, 9000b280 <osMessageQueuePut+0x50>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000b240:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000b242:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000b244:	f000 fd84 	bl	9000bd50 <xQueueGenericSendFromISR>
9000b248:	2801      	cmp	r0, #1
9000b24a:	d116      	bne.n	9000b27a <osMessageQueuePut+0x4a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000b24c:	9b01      	ldr	r3, [sp, #4]
9000b24e:	b913      	cbnz	r3, 9000b256 <osMessageQueuePut+0x26>
  stat = osOK;
9000b250:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000b252:	b002      	add	sp, #8
9000b254:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
9000b256:	4b0d      	ldr	r3, [pc, #52]	; (9000b28c <osMessageQueuePut+0x5c>)
9000b258:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000b25c:	601a      	str	r2, [r3, #0]
9000b25e:	f3bf 8f4f 	dsb	sy
9000b262:	f3bf 8f6f 	isb	sy
9000b266:	e7f3      	b.n	9000b250 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000b268:	b150      	cbz	r0, 9000b280 <osMessageQueuePut+0x50>
9000b26a:	b149      	cbz	r1, 9000b280 <osMessageQueuePut+0x50>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000b26c:	4633      	mov	r3, r6
9000b26e:	4622      	mov	r2, r4
9000b270:	f000 fcbc 	bl	9000bbec <xQueueGenericSend>
9000b274:	2801      	cmp	r0, #1
9000b276:	d0eb      	beq.n	9000b250 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
9000b278:	b92c      	cbnz	r4, 9000b286 <osMessageQueuePut+0x56>
          stat = osErrorResource;
9000b27a:	f06f 0002 	mvn.w	r0, #2
9000b27e:	e7e8      	b.n	9000b252 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
9000b280:	f06f 0003 	mvn.w	r0, #3
9000b284:	e7e5      	b.n	9000b252 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
9000b286:	f06f 0001 	mvn.w	r0, #1
  return (stat);
9000b28a:	e7e2      	b.n	9000b252 <osMessageQueuePut+0x22>
9000b28c:	e000ed04 	.word	0xe000ed04

9000b290 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000b290:	b537      	push	{r0, r1, r2, r4, r5, lr}
9000b292:	461c      	mov	r4, r3
9000b294:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000b298:	b1b3      	cbz	r3, 9000b2c8 <osMessageQueueGet+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000b29a:	b300      	cbz	r0, 9000b2de <osMessageQueueGet+0x4e>
9000b29c:	b1f9      	cbz	r1, 9000b2de <osMessageQueueGet+0x4e>
9000b29e:	b9f4      	cbnz	r4, 9000b2de <osMessageQueueGet+0x4e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000b2a0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000b2a2:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000b2a4:	f000 ff6e 	bl	9000c184 <xQueueReceiveFromISR>
9000b2a8:	2801      	cmp	r0, #1
9000b2aa:	d115      	bne.n	9000b2d8 <osMessageQueueGet+0x48>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000b2ac:	9b01      	ldr	r3, [sp, #4]
9000b2ae:	b913      	cbnz	r3, 9000b2b6 <osMessageQueueGet+0x26>
  stat = osOK;
9000b2b0:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000b2b2:	b003      	add	sp, #12
9000b2b4:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
9000b2b6:	4b0d      	ldr	r3, [pc, #52]	; (9000b2ec <osMessageQueueGet+0x5c>)
9000b2b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000b2bc:	601a      	str	r2, [r3, #0]
9000b2be:	f3bf 8f4f 	dsb	sy
9000b2c2:	f3bf 8f6f 	isb	sy
9000b2c6:	e7f3      	b.n	9000b2b0 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000b2c8:	b148      	cbz	r0, 9000b2de <osMessageQueueGet+0x4e>
9000b2ca:	b141      	cbz	r1, 9000b2de <osMessageQueueGet+0x4e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000b2cc:	4622      	mov	r2, r4
9000b2ce:	f000 fdf5 	bl	9000bebc <xQueueReceive>
9000b2d2:	2801      	cmp	r0, #1
9000b2d4:	d0ec      	beq.n	9000b2b0 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
9000b2d6:	b92c      	cbnz	r4, 9000b2e4 <osMessageQueueGet+0x54>
          stat = osErrorResource;
9000b2d8:	f06f 0002 	mvn.w	r0, #2
9000b2dc:	e7e9      	b.n	9000b2b2 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
9000b2de:	f06f 0003 	mvn.w	r0, #3
9000b2e2:	e7e6      	b.n	9000b2b2 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
9000b2e4:	f06f 0001 	mvn.w	r0, #1
  return (stat);
9000b2e8:	e7e3      	b.n	9000b2b2 <osMessageQueueGet+0x22>
9000b2ea:	bf00      	nop
9000b2ec:	e000ed04 	.word	0xe000ed04

9000b2f0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000b2f0:	4b03      	ldr	r3, [pc, #12]	; (9000b300 <vApplicationGetIdleTaskMemory+0x10>)
9000b2f2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000b2f4:	4b03      	ldr	r3, [pc, #12]	; (9000b304 <vApplicationGetIdleTaskMemory+0x14>)
9000b2f6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000b2f8:	2380      	movs	r3, #128	; 0x80
9000b2fa:	6013      	str	r3, [r2, #0]
}
9000b2fc:	4770      	bx	lr
9000b2fe:	bf00      	nop
9000b300:	24001fc0 	.word	0x24001fc0
9000b304:	24001dc0 	.word	0x24001dc0

9000b308 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000b308:	4b03      	ldr	r3, [pc, #12]	; (9000b318 <vApplicationGetTimerTaskMemory+0x10>)
9000b30a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000b30c:	4b03      	ldr	r3, [pc, #12]	; (9000b31c <vApplicationGetTimerTaskMemory+0x14>)
9000b30e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000b310:	f44f 7380 	mov.w	r3, #256	; 0x100
9000b314:	6013      	str	r3, [r2, #0]
}
9000b316:	4770      	bx	lr
9000b318:	24002424 	.word	0x24002424
9000b31c:	24002024 	.word	0x24002024

9000b320 <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000b320:	4b0f      	ldr	r3, [pc, #60]	; (9000b360 <prvInsertBlockIntoFreeList+0x40>)
{
9000b322:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000b324:	461a      	mov	r2, r3
9000b326:	681b      	ldr	r3, [r3, #0]
9000b328:	4283      	cmp	r3, r0
9000b32a:	d3fb      	bcc.n	9000b324 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000b32c:	6854      	ldr	r4, [r2, #4]
9000b32e:	1911      	adds	r1, r2, r4
9000b330:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000b332:	bf01      	itttt	eq
9000b334:	6841      	ldreq	r1, [r0, #4]
9000b336:	4610      	moveq	r0, r2
9000b338:	1909      	addeq	r1, r1, r4
9000b33a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000b33c:	6844      	ldr	r4, [r0, #4]
9000b33e:	1901      	adds	r1, r0, r4
9000b340:	428b      	cmp	r3, r1
9000b342:	d107      	bne.n	9000b354 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000b344:	4907      	ldr	r1, [pc, #28]	; (9000b364 <prvInsertBlockIntoFreeList+0x44>)
9000b346:	6809      	ldr	r1, [r1, #0]
9000b348:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000b34a:	bf1f      	itttt	ne
9000b34c:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000b34e:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000b350:	1909      	addne	r1, r1, r4
9000b352:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000b354:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000b356:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000b358:	bf18      	it	ne
9000b35a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000b35c:	bd10      	pop	{r4, pc}
9000b35e:	bf00      	nop
9000b360:	2401249c 	.word	0x2401249c
9000b364:	24002484 	.word	0x24002484

9000b368 <pvPortMalloc>:
{
9000b368:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000b36c:	4604      	mov	r4, r0
	vTaskSuspendAll();
9000b36e:	f001 f98b 	bl	9000c688 <vTaskSuspendAll>
		if( pxEnd == NULL )
9000b372:	4b3e      	ldr	r3, [pc, #248]	; (9000b46c <pvPortMalloc+0x104>)
9000b374:	483e      	ldr	r0, [pc, #248]	; (9000b470 <pvPortMalloc+0x108>)
9000b376:	681a      	ldr	r2, [r3, #0]
9000b378:	469c      	mov	ip, r3
9000b37a:	b9d2      	cbnz	r2, 9000b3b2 <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
9000b37c:	4a3d      	ldr	r2, [pc, #244]	; (9000b474 <pvPortMalloc+0x10c>)
	xStart.xBlockSize = ( size_t ) 0;
9000b37e:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000b380:	4b3d      	ldr	r3, [pc, #244]	; (9000b478 <pvPortMalloc+0x110>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000b382:	0755      	lsls	r5, r2, #29
	xStart.xBlockSize = ( size_t ) 0;
9000b384:	6059      	str	r1, [r3, #4]
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000b386:	bf1c      	itt	ne
9000b388:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000b38a:	f022 0207 	bicne.w	r2, r2, #7
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000b38e:	601a      	str	r2, [r3, #0]
	uxAddress -= xHeapStructSize;
9000b390:	4b3a      	ldr	r3, [pc, #232]	; (9000b47c <pvPortMalloc+0x114>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000b392:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
9000b396:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000b39a:	1a99      	subs	r1, r3, r2
	pxEnd = ( void * ) uxAddress;
9000b39c:	f8cc 3000 	str.w	r3, [ip]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000b3a0:	e9c2 3100 	strd	r3, r1, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000b3a4:	4b36      	ldr	r3, [pc, #216]	; (9000b480 <pvPortMalloc+0x118>)
9000b3a6:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000b3a8:	4b36      	ldr	r3, [pc, #216]	; (9000b484 <pvPortMalloc+0x11c>)
9000b3aa:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000b3ac:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
9000b3b0:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000b3b2:	6807      	ldr	r7, [r0, #0]
9000b3b4:	4227      	tst	r7, r4
9000b3b6:	d153      	bne.n	9000b460 <pvPortMalloc+0xf8>
			if( xWantedSize > 0 )
9000b3b8:	2c00      	cmp	r4, #0
9000b3ba:	d044      	beq.n	9000b446 <pvPortMalloc+0xde>
				xWantedSize += xHeapStructSize;
9000b3bc:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000b3c0:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000b3c2:	bf1c      	itt	ne
9000b3c4:	f023 0307 	bicne.w	r3, r3, #7
9000b3c8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000b3ca:	2b00      	cmp	r3, #0
9000b3cc:	d048      	beq.n	9000b460 <pvPortMalloc+0xf8>
9000b3ce:	4a2d      	ldr	r2, [pc, #180]	; (9000b484 <pvPortMalloc+0x11c>)
9000b3d0:	6816      	ldr	r6, [r2, #0]
9000b3d2:	4690      	mov	r8, r2
9000b3d4:	429e      	cmp	r6, r3
9000b3d6:	d343      	bcc.n	9000b460 <pvPortMalloc+0xf8>
				pxBlock = xStart.pxNextFreeBlock;
9000b3d8:	4a27      	ldr	r2, [pc, #156]	; (9000b478 <pvPortMalloc+0x110>)
9000b3da:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000b3dc:	6869      	ldr	r1, [r5, #4]
9000b3de:	4299      	cmp	r1, r3
9000b3e0:	d201      	bcs.n	9000b3e6 <pvPortMalloc+0x7e>
9000b3e2:	6828      	ldr	r0, [r5, #0]
9000b3e4:	b9a8      	cbnz	r0, 9000b412 <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
9000b3e6:	f8dc 0000 	ldr.w	r0, [ip]
9000b3ea:	42a8      	cmp	r0, r5
9000b3ec:	d038      	beq.n	9000b460 <pvPortMalloc+0xf8>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000b3ee:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000b3f0:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000b3f2:	6814      	ldr	r4, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000b3f4:	2910      	cmp	r1, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000b3f6:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000b3f8:	d912      	bls.n	9000b420 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000b3fa:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000b3fc:	0742      	lsls	r2, r0, #29
9000b3fe:	d00b      	beq.n	9000b418 <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000b400:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b404:	f383 8811 	msr	BASEPRI, r3
9000b408:	f3bf 8f6f 	isb	sy
9000b40c:	f3bf 8f4f 	dsb	sy
9000b410:	e7fe      	b.n	9000b410 <pvPortMalloc+0xa8>
9000b412:	462a      	mov	r2, r5
9000b414:	4605      	mov	r5, r0
9000b416:	e7e1      	b.n	9000b3dc <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000b418:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
9000b41a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
9000b41c:	f7ff ff80 	bl	9000b320 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000b420:	686b      	ldr	r3, [r5, #4]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000b422:	3408      	adds	r4, #8
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000b424:	4916      	ldr	r1, [pc, #88]	; (9000b480 <pvPortMalloc+0x118>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000b426:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000b428:	431f      	orrs	r7, r3
					xNumberOfSuccessfulAllocations++;
9000b42a:	4a17      	ldr	r2, [pc, #92]	; (9000b488 <pvPortMalloc+0x120>)
					pxBlock->pxNextFreeBlock = NULL;
9000b42c:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000b42e:	6808      	ldr	r0, [r1, #0]
					pxBlock->pxNextFreeBlock = NULL;
9000b430:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
9000b432:	6813      	ldr	r3, [r2, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000b434:	4286      	cmp	r6, r0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000b436:	f8c8 6000 	str.w	r6, [r8]
					xNumberOfSuccessfulAllocations++;
9000b43a:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000b43e:	bf38      	it	cc
9000b440:	600e      	strcc	r6, [r1, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000b442:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
9000b444:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
9000b446:	f001 f9c3 	bl	9000c7d0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000b44a:	0763      	lsls	r3, r4, #29
9000b44c:	d00a      	beq.n	9000b464 <pvPortMalloc+0xfc>
9000b44e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b452:	f383 8811 	msr	BASEPRI, r3
9000b456:	f3bf 8f6f 	isb	sy
9000b45a:	f3bf 8f4f 	dsb	sy
9000b45e:	e7fe      	b.n	9000b45e <pvPortMalloc+0xf6>
void *pvReturn = NULL;
9000b460:	2400      	movs	r4, #0
9000b462:	e7f0      	b.n	9000b446 <pvPortMalloc+0xde>
}
9000b464:	4620      	mov	r0, r4
9000b466:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000b46a:	bf00      	nop
9000b46c:	24002484 	.word	0x24002484
9000b470:	24012488 	.word	0x24012488
9000b474:	24002488 	.word	0x24002488
9000b478:	2401249c 	.word	0x2401249c
9000b47c:	24012480 	.word	0x24012480
9000b480:	24012490 	.word	0x24012490
9000b484:	2401248c 	.word	0x2401248c
9000b488:	24012494 	.word	0x24012494

9000b48c <vPortFree>:
{
9000b48c:	b510      	push	{r4, lr}
	if( pv != NULL )
9000b48e:	4604      	mov	r4, r0
9000b490:	b390      	cbz	r0, 9000b4f8 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000b492:	4a1a      	ldr	r2, [pc, #104]	; (9000b4fc <vPortFree+0x70>)
9000b494:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000b498:	6812      	ldr	r2, [r2, #0]
9000b49a:	4213      	tst	r3, r2
9000b49c:	d108      	bne.n	9000b4b0 <vPortFree+0x24>
9000b49e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b4a2:	f383 8811 	msr	BASEPRI, r3
9000b4a6:	f3bf 8f6f 	isb	sy
9000b4aa:	f3bf 8f4f 	dsb	sy
9000b4ae:	e7fe      	b.n	9000b4ae <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000b4b0:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000b4b4:	b141      	cbz	r1, 9000b4c8 <vPortFree+0x3c>
9000b4b6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b4ba:	f383 8811 	msr	BASEPRI, r3
9000b4be:	f3bf 8f6f 	isb	sy
9000b4c2:	f3bf 8f4f 	dsb	sy
9000b4c6:	e7fe      	b.n	9000b4c6 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000b4c8:	ea23 0302 	bic.w	r3, r3, r2
9000b4cc:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
9000b4d0:	f001 f8da 	bl	9000c688 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000b4d4:	4a0a      	ldr	r2, [pc, #40]	; (9000b500 <vPortFree+0x74>)
9000b4d6:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
9000b4da:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
9000b4de:	6811      	ldr	r1, [r2, #0]
9000b4e0:	440b      	add	r3, r1
9000b4e2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
9000b4e4:	f7ff ff1c 	bl	9000b320 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
9000b4e8:	4a06      	ldr	r2, [pc, #24]	; (9000b504 <vPortFree+0x78>)
9000b4ea:	6813      	ldr	r3, [r2, #0]
9000b4ec:	3301      	adds	r3, #1
}
9000b4ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
9000b4f2:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
9000b4f4:	f001 b96c 	b.w	9000c7d0 <xTaskResumeAll>
}
9000b4f8:	bd10      	pop	{r4, pc}
9000b4fa:	bf00      	nop
9000b4fc:	24012488 	.word	0x24012488
9000b500:	2401248c 	.word	0x2401248c
9000b504:	24012498 	.word	0x24012498

9000b508 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000b508:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000b50c:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000b510:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000b512:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000b514:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000b518:	2300      	movs	r3, #0
9000b51a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000b51c:	4770      	bx	lr

9000b51e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000b51e:	2300      	movs	r3, #0
9000b520:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000b522:	4770      	bx	lr

9000b524 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
9000b524:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000b526:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
9000b528:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000b52a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000b52c:	689a      	ldr	r2, [r3, #8]
9000b52e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000b530:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000b532:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
9000b534:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000b536:	3301      	adds	r3, #1
9000b538:	6003      	str	r3, [r0, #0]
}
9000b53a:	4770      	bx	lr

9000b53c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000b53c:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000b53e:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000b540:	1c63      	adds	r3, r4, #1
9000b542:	d10a      	bne.n	9000b55a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
9000b544:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
9000b546:	685a      	ldr	r2, [r3, #4]
9000b548:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000b54a:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000b54c:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000b54e:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000b550:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
9000b552:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000b554:	3301      	adds	r3, #1
9000b556:	6003      	str	r3, [r0, #0]
}
9000b558:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000b55a:	f100 0208 	add.w	r2, r0, #8
9000b55e:	4613      	mov	r3, r2
9000b560:	6852      	ldr	r2, [r2, #4]
9000b562:	6815      	ldr	r5, [r2, #0]
9000b564:	42a5      	cmp	r5, r4
9000b566:	d9fa      	bls.n	9000b55e <vListInsert+0x22>
9000b568:	e7ed      	b.n	9000b546 <vListInsert+0xa>

9000b56a <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000b56a:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000b56c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
9000b570:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000b572:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000b574:	6859      	ldr	r1, [r3, #4]
9000b576:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000b578:	bf08      	it	eq
9000b57a:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
9000b57c:	2200      	movs	r2, #0
9000b57e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000b580:	681a      	ldr	r2, [r3, #0]
9000b582:	3a01      	subs	r2, #1
9000b584:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
9000b586:	6818      	ldr	r0, [r3, #0]
}
9000b588:	4770      	bx	lr
	...

9000b58c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000b58c:	4808      	ldr	r0, [pc, #32]	; (9000b5b0 <prvPortStartFirstTask+0x24>)
9000b58e:	6800      	ldr	r0, [r0, #0]
9000b590:	6800      	ldr	r0, [r0, #0]
9000b592:	f380 8808 	msr	MSP, r0
9000b596:	f04f 0000 	mov.w	r0, #0
9000b59a:	f380 8814 	msr	CONTROL, r0
9000b59e:	b662      	cpsie	i
9000b5a0:	b661      	cpsie	f
9000b5a2:	f3bf 8f4f 	dsb	sy
9000b5a6:	f3bf 8f6f 	isb	sy
9000b5aa:	df00      	svc	0
9000b5ac:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000b5ae:	0000      	.short	0x0000
9000b5b0:	e000ed08 	.word	0xe000ed08

9000b5b4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000b5b4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 9000b5c4 <vPortEnableVFP+0x10>
9000b5b8:	6801      	ldr	r1, [r0, #0]
9000b5ba:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9000b5be:	6001      	str	r1, [r0, #0]
9000b5c0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000b5c2:	0000      	.short	0x0000
9000b5c4:	e000ed88 	.word	0xe000ed88

9000b5c8 <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
9000b5c8:	2300      	movs	r3, #0
{
9000b5ca:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000b5cc:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000b5ce:	4b0d      	ldr	r3, [pc, #52]	; (9000b604 <prvTaskExitError+0x3c>)
9000b5d0:	681b      	ldr	r3, [r3, #0]
9000b5d2:	3301      	adds	r3, #1
9000b5d4:	d008      	beq.n	9000b5e8 <prvTaskExitError+0x20>
9000b5d6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b5da:	f383 8811 	msr	BASEPRI, r3
9000b5de:	f3bf 8f6f 	isb	sy
9000b5e2:	f3bf 8f4f 	dsb	sy
9000b5e6:	e7fe      	b.n	9000b5e6 <prvTaskExitError+0x1e>
9000b5e8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b5ec:	f383 8811 	msr	BASEPRI, r3
9000b5f0:	f3bf 8f6f 	isb	sy
9000b5f4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000b5f8:	9b01      	ldr	r3, [sp, #4]
9000b5fa:	2b00      	cmp	r3, #0
9000b5fc:	d0fc      	beq.n	9000b5f8 <prvTaskExitError+0x30>
}
9000b5fe:	b002      	add	sp, #8
9000b600:	4770      	bx	lr
9000b602:	bf00      	nop
9000b604:	2400004c 	.word	0x2400004c

9000b608 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000b608:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000b60c:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000b610:	f840 2c20 	str.w	r2, [r0, #-32]
}
9000b614:	3844      	subs	r0, #68	; 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000b616:	6403      	str	r3, [r0, #64]	; 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000b618:	4b03      	ldr	r3, [pc, #12]	; (9000b628 <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000b61a:	63c1      	str	r1, [r0, #60]	; 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000b61c:	6383      	str	r3, [r0, #56]	; 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000b61e:	f06f 0302 	mvn.w	r3, #2
9000b622:	6203      	str	r3, [r0, #32]
}
9000b624:	4770      	bx	lr
9000b626:	bf00      	nop
9000b628:	9000b5c9 	.word	0x9000b5c9
9000b62c:	00000000 	.word	0x00000000

9000b630 <SVC_Handler>:
	__asm volatile (
9000b630:	4b07      	ldr	r3, [pc, #28]	; (9000b650 <pxCurrentTCBConst2>)
9000b632:	6819      	ldr	r1, [r3, #0]
9000b634:	6808      	ldr	r0, [r1, #0]
9000b636:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000b63a:	f380 8809 	msr	PSP, r0
9000b63e:	f3bf 8f6f 	isb	sy
9000b642:	f04f 0000 	mov.w	r0, #0
9000b646:	f380 8811 	msr	BASEPRI, r0
9000b64a:	4770      	bx	lr
9000b64c:	f3af 8000 	nop.w

9000b650 <pxCurrentTCBConst2>:
9000b650:	240124ac 	.word	0x240124ac

9000b654 <vPortEnterCritical>:
9000b654:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b658:	f383 8811 	msr	BASEPRI, r3
9000b65c:	f3bf 8f6f 	isb	sy
9000b660:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000b664:	4a0a      	ldr	r2, [pc, #40]	; (9000b690 <vPortEnterCritical+0x3c>)
9000b666:	6813      	ldr	r3, [r2, #0]
9000b668:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000b66a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000b66c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000b66e:	d10d      	bne.n	9000b68c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000b670:	4b08      	ldr	r3, [pc, #32]	; (9000b694 <vPortEnterCritical+0x40>)
9000b672:	681b      	ldr	r3, [r3, #0]
9000b674:	f013 0fff 	tst.w	r3, #255	; 0xff
9000b678:	d008      	beq.n	9000b68c <vPortEnterCritical+0x38>
9000b67a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b67e:	f383 8811 	msr	BASEPRI, r3
9000b682:	f3bf 8f6f 	isb	sy
9000b686:	f3bf 8f4f 	dsb	sy
9000b68a:	e7fe      	b.n	9000b68a <vPortEnterCritical+0x36>
}
9000b68c:	4770      	bx	lr
9000b68e:	bf00      	nop
9000b690:	2400004c 	.word	0x2400004c
9000b694:	e000ed04 	.word	0xe000ed04

9000b698 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000b698:	4a08      	ldr	r2, [pc, #32]	; (9000b6bc <vPortExitCritical+0x24>)
9000b69a:	6813      	ldr	r3, [r2, #0]
9000b69c:	b943      	cbnz	r3, 9000b6b0 <vPortExitCritical+0x18>
9000b69e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b6a2:	f383 8811 	msr	BASEPRI, r3
9000b6a6:	f3bf 8f6f 	isb	sy
9000b6aa:	f3bf 8f4f 	dsb	sy
9000b6ae:	e7fe      	b.n	9000b6ae <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000b6b0:	3b01      	subs	r3, #1
9000b6b2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000b6b4:	b90b      	cbnz	r3, 9000b6ba <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000b6b6:	f383 8811 	msr	BASEPRI, r3
}
9000b6ba:	4770      	bx	lr
9000b6bc:	2400004c 	.word	0x2400004c

9000b6c0 <PendSV_Handler>:
	__asm volatile
9000b6c0:	f3ef 8009 	mrs	r0, PSP
9000b6c4:	f3bf 8f6f 	isb	sy
9000b6c8:	4b15      	ldr	r3, [pc, #84]	; (9000b720 <pxCurrentTCBConst>)
9000b6ca:	681a      	ldr	r2, [r3, #0]
9000b6cc:	f01e 0f10 	tst.w	lr, #16
9000b6d0:	bf08      	it	eq
9000b6d2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000b6d6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000b6da:	6010      	str	r0, [r2, #0]
9000b6dc:	e92d 0009 	stmdb	sp!, {r0, r3}
9000b6e0:	f04f 0050 	mov.w	r0, #80	; 0x50
9000b6e4:	f380 8811 	msr	BASEPRI, r0
9000b6e8:	f3bf 8f4f 	dsb	sy
9000b6ec:	f3bf 8f6f 	isb	sy
9000b6f0:	f001 f96c 	bl	9000c9cc <vTaskSwitchContext>
9000b6f4:	f04f 0000 	mov.w	r0, #0
9000b6f8:	f380 8811 	msr	BASEPRI, r0
9000b6fc:	bc09      	pop	{r0, r3}
9000b6fe:	6819      	ldr	r1, [r3, #0]
9000b700:	6808      	ldr	r0, [r1, #0]
9000b702:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000b706:	f01e 0f10 	tst.w	lr, #16
9000b70a:	bf08      	it	eq
9000b70c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000b710:	f380 8809 	msr	PSP, r0
9000b714:	f3bf 8f6f 	isb	sy
9000b718:	4770      	bx	lr
9000b71a:	bf00      	nop
9000b71c:	f3af 8000 	nop.w

9000b720 <pxCurrentTCBConst>:
9000b720:	240124ac 	.word	0x240124ac

9000b724 <xPortSysTickHandler>:
{
9000b724:	b508      	push	{r3, lr}
	__asm volatile
9000b726:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b72a:	f383 8811 	msr	BASEPRI, r3
9000b72e:	f3bf 8f6f 	isb	sy
9000b732:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000b736:	f000 ffb5 	bl	9000c6a4 <xTaskIncrementTick>
9000b73a:	b118      	cbz	r0, 9000b744 <xPortSysTickHandler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000b73c:	4b03      	ldr	r3, [pc, #12]	; (9000b74c <xPortSysTickHandler+0x28>)
9000b73e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000b742:	601a      	str	r2, [r3, #0]
	__asm volatile
9000b744:	2300      	movs	r3, #0
9000b746:	f383 8811 	msr	BASEPRI, r3
}
9000b74a:	bd08      	pop	{r3, pc}
9000b74c:	e000ed04 	.word	0xe000ed04

9000b750 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000b750:	2300      	movs	r3, #0
9000b752:	4a08      	ldr	r2, [pc, #32]	; (9000b774 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000b754:	4908      	ldr	r1, [pc, #32]	; (9000b778 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000b756:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000b758:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000b75a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
9000b75e:	4b07      	ldr	r3, [pc, #28]	; (9000b77c <vPortSetupTimerInterrupt+0x2c>)
9000b760:	681b      	ldr	r3, [r3, #0]
9000b762:	fbb3 f3f1 	udiv	r3, r3, r1
9000b766:	4906      	ldr	r1, [pc, #24]	; (9000b780 <vPortSetupTimerInterrupt+0x30>)
9000b768:	3b01      	subs	r3, #1
9000b76a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000b76c:	2307      	movs	r3, #7
9000b76e:	6013      	str	r3, [r2, #0]
}
9000b770:	4770      	bx	lr
9000b772:	bf00      	nop
9000b774:	e000e010 	.word	0xe000e010
9000b778:	e000e018 	.word	0xe000e018
9000b77c:	2400003c 	.word	0x2400003c
9000b780:	e000e014 	.word	0xe000e014

9000b784 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000b784:	4b37      	ldr	r3, [pc, #220]	; (9000b864 <xPortStartScheduler+0xe0>)
9000b786:	4a38      	ldr	r2, [pc, #224]	; (9000b868 <xPortStartScheduler+0xe4>)
{
9000b788:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000b78a:	6819      	ldr	r1, [r3, #0]
9000b78c:	4291      	cmp	r1, r2
9000b78e:	d108      	bne.n	9000b7a2 <xPortStartScheduler+0x1e>
	__asm volatile
9000b790:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b794:	f383 8811 	msr	BASEPRI, r3
9000b798:	f3bf 8f6f 	isb	sy
9000b79c:	f3bf 8f4f 	dsb	sy
9000b7a0:	e7fe      	b.n	9000b7a0 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000b7a2:	681a      	ldr	r2, [r3, #0]
9000b7a4:	4b31      	ldr	r3, [pc, #196]	; (9000b86c <xPortStartScheduler+0xe8>)
9000b7a6:	429a      	cmp	r2, r3
9000b7a8:	d108      	bne.n	9000b7bc <xPortStartScheduler+0x38>
9000b7aa:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b7ae:	f383 8811 	msr	BASEPRI, r3
9000b7b2:	f3bf 8f6f 	isb	sy
9000b7b6:	f3bf 8f4f 	dsb	sy
9000b7ba:	e7fe      	b.n	9000b7ba <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000b7bc:	4b2c      	ldr	r3, [pc, #176]	; (9000b870 <xPortStartScheduler+0xec>)
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000b7be:	2100      	movs	r1, #0
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000b7c0:	781a      	ldrb	r2, [r3, #0]
9000b7c2:	b2d2      	uxtb	r2, r2
9000b7c4:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000b7c6:	22ff      	movs	r2, #255	; 0xff
9000b7c8:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000b7ca:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000b7cc:	4a29      	ldr	r2, [pc, #164]	; (9000b874 <xPortStartScheduler+0xf0>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000b7ce:	b2db      	uxtb	r3, r3
9000b7d0:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000b7d4:	f89d 3003 	ldrb.w	r3, [sp, #3]
9000b7d8:	f003 0350 	and.w	r3, r3, #80	; 0x50
9000b7dc:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000b7de:	2307      	movs	r3, #7
9000b7e0:	4a25      	ldr	r2, [pc, #148]	; (9000b878 <xPortStartScheduler+0xf4>)
9000b7e2:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000b7e4:	f89d 0003 	ldrb.w	r0, [sp, #3]
9000b7e8:	1e5c      	subs	r4, r3, #1
9000b7ea:	0600      	lsls	r0, r0, #24
9000b7ec:	d40c      	bmi.n	9000b808 <xPortStartScheduler+0x84>
9000b7ee:	b111      	cbz	r1, 9000b7f6 <xPortStartScheduler+0x72>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000b7f0:	2b03      	cmp	r3, #3
9000b7f2:	6013      	str	r3, [r2, #0]
9000b7f4:	d011      	beq.n	9000b81a <xPortStartScheduler+0x96>
9000b7f6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b7fa:	f383 8811 	msr	BASEPRI, r3
9000b7fe:	f3bf 8f6f 	isb	sy
9000b802:	f3bf 8f4f 	dsb	sy
9000b806:	e7fe      	b.n	9000b806 <xPortStartScheduler+0x82>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000b808:	f89d 3003 	ldrb.w	r3, [sp, #3]
9000b80c:	2101      	movs	r1, #1
9000b80e:	005b      	lsls	r3, r3, #1
9000b810:	b2db      	uxtb	r3, r3
9000b812:	f88d 3003 	strb.w	r3, [sp, #3]
9000b816:	4623      	mov	r3, r4
9000b818:	e7e4      	b.n	9000b7e4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000b81a:	f44f 7340 	mov.w	r3, #768	; 0x300
	uxCriticalNesting = 0;
9000b81e:	2400      	movs	r4, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000b820:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000b822:	9b01      	ldr	r3, [sp, #4]
9000b824:	4a12      	ldr	r2, [pc, #72]	; (9000b870 <xPortStartScheduler+0xec>)
9000b826:	b2db      	uxtb	r3, r3
9000b828:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000b82a:	4b14      	ldr	r3, [pc, #80]	; (9000b87c <xPortStartScheduler+0xf8>)
9000b82c:	681a      	ldr	r2, [r3, #0]
9000b82e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
9000b832:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000b834:	681a      	ldr	r2, [r3, #0]
9000b836:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
9000b83a:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
9000b83c:	f7ff ff88 	bl	9000b750 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000b840:	4b0f      	ldr	r3, [pc, #60]	; (9000b880 <xPortStartScheduler+0xfc>)
9000b842:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
9000b844:	f7ff feb6 	bl	9000b5b4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000b848:	4a0e      	ldr	r2, [pc, #56]	; (9000b884 <xPortStartScheduler+0x100>)
9000b84a:	6813      	ldr	r3, [r2, #0]
9000b84c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9000b850:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
9000b852:	f7ff fe9b 	bl	9000b58c <prvPortStartFirstTask>
	vTaskSwitchContext();
9000b856:	f001 f8b9 	bl	9000c9cc <vTaskSwitchContext>
	prvTaskExitError();
9000b85a:	f7ff feb5 	bl	9000b5c8 <prvTaskExitError>
}
9000b85e:	4620      	mov	r0, r4
9000b860:	b002      	add	sp, #8
9000b862:	bd10      	pop	{r4, pc}
9000b864:	e000ed00 	.word	0xe000ed00
9000b868:	410fc271 	.word	0x410fc271
9000b86c:	410fc270 	.word	0x410fc270
9000b870:	e000e400 	.word	0xe000e400
9000b874:	240124a4 	.word	0x240124a4
9000b878:	240124a8 	.word	0x240124a8
9000b87c:	e000ed20 	.word	0xe000ed20
9000b880:	2400004c 	.word	0x2400004c
9000b884:	e000ef34 	.word	0xe000ef34

9000b888 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000b888:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000b88c:	2b0f      	cmp	r3, #15
9000b88e:	d90e      	bls.n	9000b8ae <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000b890:	4a10      	ldr	r2, [pc, #64]	; (9000b8d4 <vPortValidateInterruptPriority+0x4c>)
9000b892:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000b894:	4a10      	ldr	r2, [pc, #64]	; (9000b8d8 <vPortValidateInterruptPriority+0x50>)
9000b896:	7812      	ldrb	r2, [r2, #0]
9000b898:	429a      	cmp	r2, r3
9000b89a:	d908      	bls.n	9000b8ae <vPortValidateInterruptPriority+0x26>
9000b89c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b8a0:	f383 8811 	msr	BASEPRI, r3
9000b8a4:	f3bf 8f6f 	isb	sy
9000b8a8:	f3bf 8f4f 	dsb	sy
9000b8ac:	e7fe      	b.n	9000b8ac <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000b8ae:	4b0b      	ldr	r3, [pc, #44]	; (9000b8dc <vPortValidateInterruptPriority+0x54>)
9000b8b0:	4a0b      	ldr	r2, [pc, #44]	; (9000b8e0 <vPortValidateInterruptPriority+0x58>)
9000b8b2:	681b      	ldr	r3, [r3, #0]
9000b8b4:	6812      	ldr	r2, [r2, #0]
9000b8b6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9000b8ba:	4293      	cmp	r3, r2
9000b8bc:	d908      	bls.n	9000b8d0 <vPortValidateInterruptPriority+0x48>
9000b8be:	f04f 0350 	mov.w	r3, #80	; 0x50
9000b8c2:	f383 8811 	msr	BASEPRI, r3
9000b8c6:	f3bf 8f6f 	isb	sy
9000b8ca:	f3bf 8f4f 	dsb	sy
9000b8ce:	e7fe      	b.n	9000b8ce <vPortValidateInterruptPriority+0x46>
	}
9000b8d0:	4770      	bx	lr
9000b8d2:	bf00      	nop
9000b8d4:	e000e3f0 	.word	0xe000e3f0
9000b8d8:	240124a4 	.word	0x240124a4
9000b8dc:	e000ed0c 	.word	0xe000ed0c
9000b8e0:	240124a8 	.word	0x240124a8

9000b8e4 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
9000b8e4:	b510      	push	{r4, lr}
9000b8e6:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000b8e8:	f7ff feb4 	bl	9000b654 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000b8ec:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000b8ee:	f7ff fed3 	bl	9000b698 <vPortExitCritical>

	return xReturn;
}
9000b8f2:	fab4 f084 	clz	r0, r4
9000b8f6:	0940      	lsrs	r0, r0, #5
9000b8f8:	bd10      	pop	{r4, pc}

9000b8fa <prvCopyDataToQueue>:
{
9000b8fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000b8fc:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000b8fe:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
9000b900:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000b902:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000b904:	b952      	cbnz	r2, 9000b91c <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000b906:	6807      	ldr	r7, [r0, #0]
9000b908:	bb47      	cbnz	r7, 9000b95c <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000b90a:	6880      	ldr	r0, [r0, #8]
9000b90c:	f001 f9c0 	bl	9000cc90 <xTaskPriorityDisinherit>
9000b910:	4605      	mov	r5, r0
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000b912:	60a7      	str	r7, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000b914:	3601      	adds	r6, #1
}
9000b916:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000b918:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000b91a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000b91c:	b965      	cbnz	r5, 9000b938 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000b91e:	6840      	ldr	r0, [r0, #4]
9000b920:	f013 fd3e 	bl	9001f3a0 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000b924:	6863      	ldr	r3, [r4, #4]
9000b926:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000b928:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000b92a:	68a2      	ldr	r2, [r4, #8]
9000b92c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000b92e:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000b930:	d3f0      	bcc.n	9000b914 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000b932:	6823      	ldr	r3, [r4, #0]
9000b934:	6063      	str	r3, [r4, #4]
9000b936:	e7ed      	b.n	9000b914 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000b938:	68c0      	ldr	r0, [r0, #12]
9000b93a:	f013 fd31 	bl	9001f3a0 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000b93e:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000b940:	68e3      	ldr	r3, [r4, #12]
9000b942:	4251      	negs	r1, r2
9000b944:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000b946:	6822      	ldr	r2, [r4, #0]
9000b948:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000b94a:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000b94c:	bf3e      	ittt	cc
9000b94e:	68a3      	ldrcc	r3, [r4, #8]
9000b950:	185b      	addcc	r3, r3, r1
9000b952:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000b954:	2d02      	cmp	r5, #2
9000b956:	d101      	bne.n	9000b95c <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000b958:	b116      	cbz	r6, 9000b960 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
9000b95a:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
9000b95c:	2500      	movs	r5, #0
9000b95e:	e7d9      	b.n	9000b914 <prvCopyDataToQueue+0x1a>
9000b960:	4635      	mov	r5, r6
9000b962:	e7d7      	b.n	9000b914 <prvCopyDataToQueue+0x1a>

9000b964 <prvCopyDataFromQueue>:
{
9000b964:	4603      	mov	r3, r0
9000b966:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000b968:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
9000b96a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000b96c:	b162      	cbz	r2, 9000b988 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000b96e:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000b970:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000b972:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000b974:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000b976:	60dc      	str	r4, [r3, #12]
}
9000b978:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000b97c:	bf24      	itt	cs
9000b97e:	6819      	ldrcs	r1, [r3, #0]
9000b980:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000b982:	68d9      	ldr	r1, [r3, #12]
9000b984:	f013 bd0c 	b.w	9001f3a0 <memcpy>
}
9000b988:	f85d 4b04 	ldr.w	r4, [sp], #4
9000b98c:	4770      	bx	lr

9000b98e <prvUnlockQueue>:
{
9000b98e:	b570      	push	{r4, r5, r6, lr}
9000b990:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9000b992:	f7ff fe5f 	bl	9000b654 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000b996:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000b99a:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
9000b99e:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000b9a0:	2d00      	cmp	r5, #0
9000b9a2:	dc14      	bgt.n	9000b9ce <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
9000b9a4:	23ff      	movs	r3, #255	; 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000b9a6:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
9000b9aa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000b9ae:	f7ff fe73 	bl	9000b698 <vPortExitCritical>
	taskENTER_CRITICAL();
9000b9b2:	f7ff fe4f 	bl	9000b654 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000b9b6:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
9000b9ba:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000b9bc:	2d00      	cmp	r5, #0
9000b9be:	dc12      	bgt.n	9000b9e6 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
9000b9c0:	23ff      	movs	r3, #255	; 0xff
9000b9c2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
9000b9c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000b9ca:	f7ff be65 	b.w	9000b698 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000b9ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b9d0:	2b00      	cmp	r3, #0
9000b9d2:	d0e7      	beq.n	9000b9a4 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000b9d4:	4630      	mov	r0, r6
9000b9d6:	f001 f877 	bl	9000cac8 <xTaskRemoveFromEventList>
9000b9da:	b108      	cbz	r0, 9000b9e0 <prvUnlockQueue+0x52>
						vTaskMissedYield();
9000b9dc:	f001 f900 	bl	9000cbe0 <vTaskMissedYield>
			--cTxLock;
9000b9e0:	3d01      	subs	r5, #1
9000b9e2:	b26d      	sxtb	r5, r5
9000b9e4:	e7dc      	b.n	9000b9a0 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000b9e6:	6923      	ldr	r3, [r4, #16]
9000b9e8:	2b00      	cmp	r3, #0
9000b9ea:	d0e9      	beq.n	9000b9c0 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000b9ec:	4630      	mov	r0, r6
9000b9ee:	f001 f86b 	bl	9000cac8 <xTaskRemoveFromEventList>
9000b9f2:	b108      	cbz	r0, 9000b9f8 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
9000b9f4:	f001 f8f4 	bl	9000cbe0 <vTaskMissedYield>
				--cRxLock;
9000b9f8:	3d01      	subs	r5, #1
9000b9fa:	b26d      	sxtb	r5, r5
9000b9fc:	e7de      	b.n	9000b9bc <prvUnlockQueue+0x2e>
	...

9000ba00 <xQueueGenericReset>:
{
9000ba00:	b538      	push	{r3, r4, r5, lr}
9000ba02:	460d      	mov	r5, r1
	configASSERT( pxQueue );
9000ba04:	4604      	mov	r4, r0
9000ba06:	b940      	cbnz	r0, 9000ba1a <xQueueGenericReset+0x1a>
9000ba08:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ba0c:	f383 8811 	msr	BASEPRI, r3
9000ba10:	f3bf 8f6f 	isb	sy
9000ba14:	f3bf 8f4f 	dsb	sy
9000ba18:	e7fe      	b.n	9000ba18 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
9000ba1a:	f7ff fe1b 	bl	9000b654 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ba1e:	6822      	ldr	r2, [r4, #0]
9000ba20:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ba24:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ba26:	434b      	muls	r3, r1
9000ba28:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ba2a:	1a5b      	subs	r3, r3, r1
9000ba2c:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ba2e:	60a0      	str	r0, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ba30:	2000      	movs	r0, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ba32:	60e3      	str	r3, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000ba34:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ba36:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000ba38:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ba3c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
9000ba40:	b995      	cbnz	r5, 9000ba68 <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ba42:	6923      	ldr	r3, [r4, #16]
9000ba44:	b163      	cbz	r3, 9000ba60 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ba46:	f104 0010 	add.w	r0, r4, #16
9000ba4a:	f001 f83d 	bl	9000cac8 <xTaskRemoveFromEventList>
9000ba4e:	b138      	cbz	r0, 9000ba60 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
9000ba50:	4b0a      	ldr	r3, [pc, #40]	; (9000ba7c <xQueueGenericReset+0x7c>)
9000ba52:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ba56:	601a      	str	r2, [r3, #0]
9000ba58:	f3bf 8f4f 	dsb	sy
9000ba5c:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
9000ba60:	f7ff fe1a 	bl	9000b698 <vPortExitCritical>
}
9000ba64:	2001      	movs	r0, #1
9000ba66:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ba68:	f104 0010 	add.w	r0, r4, #16
9000ba6c:	f7ff fd4c 	bl	9000b508 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ba70:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000ba74:	f7ff fd48 	bl	9000b508 <vListInitialise>
9000ba78:	e7f2      	b.n	9000ba60 <xQueueGenericReset+0x60>
9000ba7a:	bf00      	nop
9000ba7c:	e000ed04 	.word	0xe000ed04

9000ba80 <xQueueGenericCreateStatic>:
	{
9000ba80:	b513      	push	{r0, r1, r4, lr}
9000ba82:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000ba84:	b940      	cbnz	r0, 9000ba98 <xQueueGenericCreateStatic+0x18>
9000ba86:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ba8a:	f383 8811 	msr	BASEPRI, r3
9000ba8e:	f3bf 8f6f 	isb	sy
9000ba92:	f3bf 8f4f 	dsb	sy
9000ba96:	e7fe      	b.n	9000ba96 <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
9000ba98:	b943      	cbnz	r3, 9000baac <xQueueGenericCreateStatic+0x2c>
9000ba9a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ba9e:	f383 8811 	msr	BASEPRI, r3
9000baa2:	f3bf 8f6f 	isb	sy
9000baa6:	f3bf 8f4f 	dsb	sy
9000baaa:	e7fe      	b.n	9000baaa <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000baac:	b14a      	cbz	r2, 9000bac2 <xQueueGenericCreateStatic+0x42>
9000baae:	b991      	cbnz	r1, 9000bad6 <xQueueGenericCreateStatic+0x56>
9000bab0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bab4:	f383 8811 	msr	BASEPRI, r3
9000bab8:	f3bf 8f6f 	isb	sy
9000babc:	f3bf 8f4f 	dsb	sy
9000bac0:	e7fe      	b.n	9000bac0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000bac2:	b141      	cbz	r1, 9000bad6 <xQueueGenericCreateStatic+0x56>
9000bac4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bac8:	f383 8811 	msr	BASEPRI, r3
9000bacc:	f3bf 8f6f 	isb	sy
9000bad0:	f3bf 8f4f 	dsb	sy
9000bad4:	e7fe      	b.n	9000bad4 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000bad6:	2350      	movs	r3, #80	; 0x50
9000bad8:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000bada:	9b01      	ldr	r3, [sp, #4]
9000badc:	2b50      	cmp	r3, #80	; 0x50
9000bade:	d008      	beq.n	9000baf2 <xQueueGenericCreateStatic+0x72>
9000bae0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bae4:	f383 8811 	msr	BASEPRI, r3
9000bae8:	f3bf 8f6f 	isb	sy
9000baec:	f3bf 8f4f 	dsb	sy
9000baf0:	e7fe      	b.n	9000baf0 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
9000baf2:	2900      	cmp	r1, #0
9000baf4:	bf08      	it	eq
9000baf6:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000baf8:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000bafa:	2301      	movs	r3, #1
9000bafc:	6022      	str	r2, [r4, #0]
9000bafe:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000bb02:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
9000bb06:	4619      	mov	r1, r3
9000bb08:	4620      	mov	r0, r4
9000bb0a:	f7ff ff79 	bl	9000ba00 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
9000bb0e:	f89d 3010 	ldrb.w	r3, [sp, #16]
	}
9000bb12:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000bb14:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
9000bb18:	b002      	add	sp, #8
9000bb1a:	bd10      	pop	{r4, pc}

9000bb1c <xQueueGenericCreate>:
	{
9000bb1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000bb1e:	460d      	mov	r5, r1
9000bb20:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000bb22:	4606      	mov	r6, r0
9000bb24:	b940      	cbnz	r0, 9000bb38 <xQueueGenericCreate+0x1c>
9000bb26:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bb2a:	f383 8811 	msr	BASEPRI, r3
9000bb2e:	f3bf 8f6f 	isb	sy
9000bb32:	f3bf 8f4f 	dsb	sy
9000bb36:	e7fe      	b.n	9000bb36 <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000bb38:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000bb3a:	3050      	adds	r0, #80	; 0x50
9000bb3c:	f7ff fc14 	bl	9000b368 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000bb40:	4604      	mov	r4, r0
9000bb42:	b170      	cbz	r0, 9000bb62 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000bb44:	2300      	movs	r3, #0
9000bb46:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000bb4a:	b165      	cbz	r5, 9000bb66 <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000bb4c:	f100 0350 	add.w	r3, r0, #80	; 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
9000bb50:	2101      	movs	r1, #1
9000bb52:	4620      	mov	r0, r4
9000bb54:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000bb56:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
9000bb5a:	f7ff ff51 	bl	9000ba00 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
9000bb5e:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
9000bb62:	4620      	mov	r0, r4
9000bb64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000bb66:	4603      	mov	r3, r0
9000bb68:	e7f2      	b.n	9000bb50 <xQueueGenericCreate+0x34>

9000bb6a <xQueueCreateCountingSemaphoreStatic>:
	{
9000bb6a:	b513      	push	{r0, r1, r4, lr}
9000bb6c:	4613      	mov	r3, r2
9000bb6e:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
9000bb70:	b940      	cbnz	r0, 9000bb84 <xQueueCreateCountingSemaphoreStatic+0x1a>
9000bb72:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bb76:	f383 8811 	msr	BASEPRI, r3
9000bb7a:	f3bf 8f6f 	isb	sy
9000bb7e:	f3bf 8f4f 	dsb	sy
9000bb82:	e7fe      	b.n	9000bb82 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
9000bb84:	4288      	cmp	r0, r1
9000bb86:	d208      	bcs.n	9000bb9a <xQueueCreateCountingSemaphoreStatic+0x30>
9000bb88:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bb8c:	f383 8811 	msr	BASEPRI, r3
9000bb90:	f3bf 8f6f 	isb	sy
9000bb94:	f3bf 8f4f 	dsb	sy
9000bb98:	e7fe      	b.n	9000bb98 <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
9000bb9a:	2202      	movs	r2, #2
9000bb9c:	9200      	str	r2, [sp, #0]
9000bb9e:	2200      	movs	r2, #0
9000bba0:	4611      	mov	r1, r2
9000bba2:	f7ff ff6d 	bl	9000ba80 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
9000bba6:	b100      	cbz	r0, 9000bbaa <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000bba8:	6384      	str	r4, [r0, #56]	; 0x38
	}
9000bbaa:	b002      	add	sp, #8
9000bbac:	bd10      	pop	{r4, pc}

9000bbae <xQueueCreateCountingSemaphore>:
	{
9000bbae:	b510      	push	{r4, lr}
9000bbb0:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
9000bbb2:	b940      	cbnz	r0, 9000bbc6 <xQueueCreateCountingSemaphore+0x18>
9000bbb4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bbb8:	f383 8811 	msr	BASEPRI, r3
9000bbbc:	f3bf 8f6f 	isb	sy
9000bbc0:	f3bf 8f4f 	dsb	sy
9000bbc4:	e7fe      	b.n	9000bbc4 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
9000bbc6:	4288      	cmp	r0, r1
9000bbc8:	d208      	bcs.n	9000bbdc <xQueueCreateCountingSemaphore+0x2e>
9000bbca:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bbce:	f383 8811 	msr	BASEPRI, r3
9000bbd2:	f3bf 8f6f 	isb	sy
9000bbd6:	f3bf 8f4f 	dsb	sy
9000bbda:	e7fe      	b.n	9000bbda <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
9000bbdc:	2202      	movs	r2, #2
9000bbde:	2100      	movs	r1, #0
9000bbe0:	f7ff ff9c 	bl	9000bb1c <xQueueGenericCreate>
		if( xHandle != NULL )
9000bbe4:	b100      	cbz	r0, 9000bbe8 <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000bbe6:	6384      	str	r4, [r0, #56]	; 0x38
	}
9000bbe8:	bd10      	pop	{r4, pc}
	...

9000bbec <xQueueGenericSend>:
{
9000bbec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9000bbf0:	4688      	mov	r8, r1
9000bbf2:	461f      	mov	r7, r3
	configASSERT( pxQueue );
9000bbf4:	4604      	mov	r4, r0
{
9000bbf6:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000bbf8:	b940      	cbnz	r0, 9000bc0c <xQueueGenericSend+0x20>
9000bbfa:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bbfe:	f383 8811 	msr	BASEPRI, r3
9000bc02:	f3bf 8f6f 	isb	sy
9000bc06:	f3bf 8f4f 	dsb	sy
9000bc0a:	e7fe      	b.n	9000bc0a <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000bc0c:	b951      	cbnz	r1, 9000bc24 <xQueueGenericSend+0x38>
9000bc0e:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000bc10:	b143      	cbz	r3, 9000bc24 <xQueueGenericSend+0x38>
9000bc12:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bc16:	f383 8811 	msr	BASEPRI, r3
9000bc1a:	f3bf 8f6f 	isb	sy
9000bc1e:	f3bf 8f4f 	dsb	sy
9000bc22:	e7fe      	b.n	9000bc22 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000bc24:	2f02      	cmp	r7, #2
9000bc26:	d10b      	bne.n	9000bc40 <xQueueGenericSend+0x54>
9000bc28:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000bc2a:	2b01      	cmp	r3, #1
9000bc2c:	d008      	beq.n	9000bc40 <xQueueGenericSend+0x54>
9000bc2e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bc32:	f383 8811 	msr	BASEPRI, r3
9000bc36:	f3bf 8f6f 	isb	sy
9000bc3a:	f3bf 8f4f 	dsb	sy
9000bc3e:	e7fe      	b.n	9000bc3e <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000bc40:	f000 ffd4 	bl	9000cbec <xTaskGetSchedulerState>
9000bc44:	4606      	mov	r6, r0
9000bc46:	b950      	cbnz	r0, 9000bc5e <xQueueGenericSend+0x72>
9000bc48:	9b01      	ldr	r3, [sp, #4]
9000bc4a:	b14b      	cbz	r3, 9000bc60 <xQueueGenericSend+0x74>
9000bc4c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bc50:	f383 8811 	msr	BASEPRI, r3
9000bc54:	f3bf 8f6f 	isb	sy
9000bc58:	f3bf 8f4f 	dsb	sy
9000bc5c:	e7fe      	b.n	9000bc5c <xQueueGenericSend+0x70>
9000bc5e:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
9000bc60:	f04f 0900 	mov.w	r9, #0
					portYIELD_WITHIN_API();
9000bc64:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 9000bd4c <xQueueGenericSend+0x160>
9000bc68:	e037      	b.n	9000bcda <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
9000bc6a:	9d01      	ldr	r5, [sp, #4]
9000bc6c:	b91d      	cbnz	r5, 9000bc76 <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
9000bc6e:	f7ff fd13 	bl	9000b698 <vPortExitCritical>
			return errQUEUE_FULL;
9000bc72:	2000      	movs	r0, #0
9000bc74:	e050      	b.n	9000bd18 <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
9000bc76:	b916      	cbnz	r6, 9000bc7e <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000bc78:	a802      	add	r0, sp, #8
9000bc7a:	f000 ff69 	bl	9000cb50 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000bc7e:	f7ff fd0b 	bl	9000b698 <vPortExitCritical>
		vTaskSuspendAll();
9000bc82:	f000 fd01 	bl	9000c688 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000bc86:	f7ff fce5 	bl	9000b654 <vPortEnterCritical>
9000bc8a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000bc8e:	2bff      	cmp	r3, #255	; 0xff
9000bc90:	d101      	bne.n	9000bc96 <xQueueGenericSend+0xaa>
9000bc92:	f884 9044 	strb.w	r9, [r4, #68]	; 0x44
9000bc96:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000bc9a:	2bff      	cmp	r3, #255	; 0xff
9000bc9c:	d101      	bne.n	9000bca2 <xQueueGenericSend+0xb6>
9000bc9e:	f884 9045 	strb.w	r9, [r4, #69]	; 0x45
9000bca2:	f7ff fcf9 	bl	9000b698 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000bca6:	a901      	add	r1, sp, #4
9000bca8:	a802      	add	r0, sp, #8
9000bcaa:	f000 ff5d 	bl	9000cb68 <xTaskCheckForTimeOut>
9000bcae:	2800      	cmp	r0, #0
9000bcb0:	d146      	bne.n	9000bd40 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000bcb2:	f7ff fccf 	bl	9000b654 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000bcb6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000bcb8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000bcba:	429a      	cmp	r2, r3
9000bcbc:	d12f      	bne.n	9000bd1e <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000bcbe:	f7ff fceb 	bl	9000b698 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000bcc2:	9901      	ldr	r1, [sp, #4]
9000bcc4:	f104 0010 	add.w	r0, r4, #16
9000bcc8:	f000 fec6 	bl	9000ca58 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
9000bccc:	4620      	mov	r0, r4
9000bcce:	f7ff fe5e 	bl	9000b98e <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
9000bcd2:	f000 fd7d 	bl	9000c7d0 <xTaskResumeAll>
9000bcd6:	b350      	cbz	r0, 9000bd2e <xQueueGenericSend+0x142>
9000bcd8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
9000bcda:	f7ff fcbb 	bl	9000b654 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000bcde:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000bce0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000bce2:	429a      	cmp	r2, r3
9000bce4:	d301      	bcc.n	9000bcea <xQueueGenericSend+0xfe>
9000bce6:	2f02      	cmp	r7, #2
9000bce8:	d1bf      	bne.n	9000bc6a <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000bcea:	463a      	mov	r2, r7
9000bcec:	4641      	mov	r1, r8
9000bcee:	4620      	mov	r0, r4
9000bcf0:	f7ff fe03 	bl	9000b8fa <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000bcf4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000bcf6:	b11b      	cbz	r3, 9000bd00 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000bcf8:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000bcfc:	f000 fee4 	bl	9000cac8 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
9000bd00:	b138      	cbz	r0, 9000bd12 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
9000bd02:	4b12      	ldr	r3, [pc, #72]	; (9000bd4c <xQueueGenericSend+0x160>)
9000bd04:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000bd08:	601a      	str	r2, [r3, #0]
9000bd0a:	f3bf 8f4f 	dsb	sy
9000bd0e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000bd12:	f7ff fcc1 	bl	9000b698 <vPortExitCritical>
				return pdPASS;
9000bd16:	2001      	movs	r0, #1
}
9000bd18:	b004      	add	sp, #16
9000bd1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
9000bd1e:	f7ff fcbb 	bl	9000b698 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
9000bd22:	4620      	mov	r0, r4
9000bd24:	f7ff fe33 	bl	9000b98e <prvUnlockQueue>
				( void ) xTaskResumeAll();
9000bd28:	f000 fd52 	bl	9000c7d0 <xTaskResumeAll>
9000bd2c:	e7d4      	b.n	9000bcd8 <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
9000bd2e:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
9000bd32:	f8ca 3000 	str.w	r3, [sl]
9000bd36:	f3bf 8f4f 	dsb	sy
9000bd3a:	f3bf 8f6f 	isb	sy
9000bd3e:	e7cb      	b.n	9000bcd8 <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
9000bd40:	4620      	mov	r0, r4
9000bd42:	f7ff fe24 	bl	9000b98e <prvUnlockQueue>
			( void ) xTaskResumeAll();
9000bd46:	f000 fd43 	bl	9000c7d0 <xTaskResumeAll>
9000bd4a:	e792      	b.n	9000bc72 <xQueueGenericSend+0x86>
9000bd4c:	e000ed04 	.word	0xe000ed04

9000bd50 <xQueueGenericSendFromISR>:
{
9000bd50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000bd54:	4689      	mov	r9, r1
9000bd56:	4690      	mov	r8, r2
9000bd58:	461f      	mov	r7, r3
	configASSERT( pxQueue );
9000bd5a:	4604      	mov	r4, r0
9000bd5c:	b940      	cbnz	r0, 9000bd70 <xQueueGenericSendFromISR+0x20>
9000bd5e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bd62:	f383 8811 	msr	BASEPRI, r3
9000bd66:	f3bf 8f6f 	isb	sy
9000bd6a:	f3bf 8f4f 	dsb	sy
9000bd6e:	e7fe      	b.n	9000bd6e <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000bd70:	b951      	cbnz	r1, 9000bd88 <xQueueGenericSendFromISR+0x38>
9000bd72:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000bd74:	b143      	cbz	r3, 9000bd88 <xQueueGenericSendFromISR+0x38>
9000bd76:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bd7a:	f383 8811 	msr	BASEPRI, r3
9000bd7e:	f3bf 8f6f 	isb	sy
9000bd82:	f3bf 8f4f 	dsb	sy
9000bd86:	e7fe      	b.n	9000bd86 <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000bd88:	2f02      	cmp	r7, #2
9000bd8a:	d10b      	bne.n	9000bda4 <xQueueGenericSendFromISR+0x54>
9000bd8c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000bd8e:	2b01      	cmp	r3, #1
9000bd90:	d008      	beq.n	9000bda4 <xQueueGenericSendFromISR+0x54>
9000bd92:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bd96:	f383 8811 	msr	BASEPRI, r3
9000bd9a:	f3bf 8f6f 	isb	sy
9000bd9e:	f3bf 8f4f 	dsb	sy
9000bda2:	e7fe      	b.n	9000bda2 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000bda4:	f7ff fd70 	bl	9000b888 <vPortValidateInterruptPriority>
	__asm volatile
9000bda8:	f3ef 8611 	mrs	r6, BASEPRI
9000bdac:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bdb0:	f383 8811 	msr	BASEPRI, r3
9000bdb4:	f3bf 8f6f 	isb	sy
9000bdb8:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000bdbc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000bdbe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000bdc0:	429a      	cmp	r2, r3
9000bdc2:	d301      	bcc.n	9000bdc8 <xQueueGenericSendFromISR+0x78>
9000bdc4:	2f02      	cmp	r7, #2
9000bdc6:	d123      	bne.n	9000be10 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
9000bdc8:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000bdcc:	463a      	mov	r2, r7
9000bdce:	4649      	mov	r1, r9
9000bdd0:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000bdd2:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000bdd4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000bdd6:	f7ff fd90 	bl	9000b8fa <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000bdda:	1c6b      	adds	r3, r5, #1
9000bddc:	d113      	bne.n	9000be06 <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000bdde:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000bde0:	b90b      	cbnz	r3, 9000bde6 <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
9000bde2:	2001      	movs	r0, #1
9000bde4:	e00b      	b.n	9000bdfe <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000bde6:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000bdea:	f000 fe6d 	bl	9000cac8 <xTaskRemoveFromEventList>
9000bdee:	2800      	cmp	r0, #0
9000bdf0:	d0f7      	beq.n	9000bde2 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
9000bdf2:	f1b8 0f00 	cmp.w	r8, #0
9000bdf6:	d0f4      	beq.n	9000bde2 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000bdf8:	2001      	movs	r0, #1
9000bdfa:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
9000bdfe:	f386 8811 	msr	BASEPRI, r6
}
9000be02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000be06:	3501      	adds	r5, #1
9000be08:	b26d      	sxtb	r5, r5
9000be0a:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
9000be0e:	e7e8      	b.n	9000bde2 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
9000be10:	2000      	movs	r0, #0
9000be12:	e7f4      	b.n	9000bdfe <xQueueGenericSendFromISR+0xae>

9000be14 <xQueueGiveFromISR>:
{
9000be14:	b570      	push	{r4, r5, r6, lr}
9000be16:	460d      	mov	r5, r1
	configASSERT( pxQueue );
9000be18:	4604      	mov	r4, r0
9000be1a:	b940      	cbnz	r0, 9000be2e <xQueueGiveFromISR+0x1a>
	__asm volatile
9000be1c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000be20:	f383 8811 	msr	BASEPRI, r3
9000be24:	f3bf 8f6f 	isb	sy
9000be28:	f3bf 8f4f 	dsb	sy
9000be2c:	e7fe      	b.n	9000be2c <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
9000be2e:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000be30:	b143      	cbz	r3, 9000be44 <xQueueGiveFromISR+0x30>
9000be32:	f04f 0350 	mov.w	r3, #80	; 0x50
9000be36:	f383 8811 	msr	BASEPRI, r3
9000be3a:	f3bf 8f6f 	isb	sy
9000be3e:	f3bf 8f4f 	dsb	sy
9000be42:	e7fe      	b.n	9000be42 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000be44:	6803      	ldr	r3, [r0, #0]
9000be46:	b953      	cbnz	r3, 9000be5e <xQueueGiveFromISR+0x4a>
9000be48:	6883      	ldr	r3, [r0, #8]
9000be4a:	b143      	cbz	r3, 9000be5e <xQueueGiveFromISR+0x4a>
9000be4c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000be50:	f383 8811 	msr	BASEPRI, r3
9000be54:	f3bf 8f6f 	isb	sy
9000be58:	f3bf 8f4f 	dsb	sy
9000be5c:	e7fe      	b.n	9000be5c <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000be5e:	f7ff fd13 	bl	9000b888 <vPortValidateInterruptPriority>
	__asm volatile
9000be62:	f3ef 8611 	mrs	r6, BASEPRI
9000be66:	f04f 0350 	mov.w	r3, #80	; 0x50
9000be6a:	f383 8811 	msr	BASEPRI, r3
9000be6e:	f3bf 8f6f 	isb	sy
9000be72:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000be76:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000be78:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000be7a:	4293      	cmp	r3, r2
9000be7c:	d91c      	bls.n	9000beb8 <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
9000be7e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000be82:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
9000be84:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
9000be86:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000be88:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
9000be8a:	d110      	bne.n	9000beae <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000be8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000be8e:	b90b      	cbnz	r3, 9000be94 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
9000be90:	2001      	movs	r0, #1
9000be92:	e009      	b.n	9000bea8 <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000be94:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000be98:	f000 fe16 	bl	9000cac8 <xTaskRemoveFromEventList>
9000be9c:	2800      	cmp	r0, #0
9000be9e:	d0f7      	beq.n	9000be90 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
9000bea0:	2d00      	cmp	r5, #0
9000bea2:	d0f5      	beq.n	9000be90 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000bea4:	2001      	movs	r0, #1
9000bea6:	6028      	str	r0, [r5, #0]
	__asm volatile
9000bea8:	f386 8811 	msr	BASEPRI, r6
}
9000beac:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000beae:	3301      	adds	r3, #1
9000beb0:	b25b      	sxtb	r3, r3
9000beb2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000beb6:	e7eb      	b.n	9000be90 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
9000beb8:	2000      	movs	r0, #0
9000beba:	e7f5      	b.n	9000bea8 <xQueueGiveFromISR+0x94>

9000bebc <xQueueReceive>:
{
9000bebc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000bec0:	b085      	sub	sp, #20
9000bec2:	460f      	mov	r7, r1
	configASSERT( ( pxQueue ) );
9000bec4:	4604      	mov	r4, r0
{
9000bec6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000bec8:	b940      	cbnz	r0, 9000bedc <xQueueReceive+0x20>
	__asm volatile
9000beca:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bece:	f383 8811 	msr	BASEPRI, r3
9000bed2:	f3bf 8f6f 	isb	sy
9000bed6:	f3bf 8f4f 	dsb	sy
9000beda:	e7fe      	b.n	9000beda <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000bedc:	b951      	cbnz	r1, 9000bef4 <xQueueReceive+0x38>
9000bede:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000bee0:	b143      	cbz	r3, 9000bef4 <xQueueReceive+0x38>
9000bee2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bee6:	f383 8811 	msr	BASEPRI, r3
9000beea:	f3bf 8f6f 	isb	sy
9000beee:	f3bf 8f4f 	dsb	sy
9000bef2:	e7fe      	b.n	9000bef2 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000bef4:	f000 fe7a 	bl	9000cbec <xTaskGetSchedulerState>
9000bef8:	4606      	mov	r6, r0
9000befa:	b950      	cbnz	r0, 9000bf12 <xQueueReceive+0x56>
9000befc:	9b01      	ldr	r3, [sp, #4]
9000befe:	b14b      	cbz	r3, 9000bf14 <xQueueReceive+0x58>
9000bf00:	f04f 0350 	mov.w	r3, #80	; 0x50
9000bf04:	f383 8811 	msr	BASEPRI, r3
9000bf08:	f3bf 8f6f 	isb	sy
9000bf0c:	f3bf 8f4f 	dsb	sy
9000bf10:	e7fe      	b.n	9000bf10 <xQueueReceive+0x54>
9000bf12:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
9000bf14:	f04f 0800 	mov.w	r8, #0
					portYIELD_WITHIN_API();
9000bf18:	f8df 90dc 	ldr.w	r9, [pc, #220]	; 9000bff8 <xQueueReceive+0x13c>
9000bf1c:	e03b      	b.n	9000bf96 <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
9000bf1e:	9d01      	ldr	r5, [sp, #4]
9000bf20:	b91d      	cbnz	r5, 9000bf2a <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
9000bf22:	f7ff fbb9 	bl	9000b698 <vPortExitCritical>
				return errQUEUE_EMPTY;
9000bf26:	2000      	movs	r0, #0
9000bf28:	e052      	b.n	9000bfd0 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
9000bf2a:	b916      	cbnz	r6, 9000bf32 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000bf2c:	a802      	add	r0, sp, #8
9000bf2e:	f000 fe0f 	bl	9000cb50 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000bf32:	f7ff fbb1 	bl	9000b698 <vPortExitCritical>
		vTaskSuspendAll();
9000bf36:	f000 fba7 	bl	9000c688 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000bf3a:	f7ff fb8b 	bl	9000b654 <vPortEnterCritical>
9000bf3e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000bf42:	2bff      	cmp	r3, #255	; 0xff
9000bf44:	d101      	bne.n	9000bf4a <xQueueReceive+0x8e>
9000bf46:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
9000bf4a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000bf4e:	2bff      	cmp	r3, #255	; 0xff
9000bf50:	d101      	bne.n	9000bf56 <xQueueReceive+0x9a>
9000bf52:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
9000bf56:	f7ff fb9f 	bl	9000b698 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000bf5a:	a901      	add	r1, sp, #4
9000bf5c:	a802      	add	r0, sp, #8
9000bf5e:	f000 fe03 	bl	9000cb68 <xTaskCheckForTimeOut>
9000bf62:	2800      	cmp	r0, #0
9000bf64:	d13d      	bne.n	9000bfe2 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
9000bf66:	4620      	mov	r0, r4
9000bf68:	f7ff fcbc 	bl	9000b8e4 <prvIsQueueEmpty>
9000bf6c:	b398      	cbz	r0, 9000bfd6 <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000bf6e:	9901      	ldr	r1, [sp, #4]
9000bf70:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000bf74:	f000 fd70 	bl	9000ca58 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
9000bf78:	4620      	mov	r0, r4
9000bf7a:	f7ff fd08 	bl	9000b98e <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
9000bf7e:	f000 fc27 	bl	9000c7d0 <xTaskResumeAll>
9000bf82:	b938      	cbnz	r0, 9000bf94 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
9000bf84:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
9000bf88:	f8c9 3000 	str.w	r3, [r9]
9000bf8c:	f3bf 8f4f 	dsb	sy
9000bf90:	f3bf 8f6f 	isb	sy
9000bf94:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
9000bf96:	f7ff fb5d 	bl	9000b654 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000bf9a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000bf9c:	2d00      	cmp	r5, #0
9000bf9e:	d0be      	beq.n	9000bf1e <xQueueReceive+0x62>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000bfa0:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
9000bfa2:	4639      	mov	r1, r7
9000bfa4:	4620      	mov	r0, r4
9000bfa6:	f7ff fcdd 	bl	9000b964 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000bfaa:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000bfac:	6923      	ldr	r3, [r4, #16]
9000bfae:	b163      	cbz	r3, 9000bfca <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000bfb0:	f104 0010 	add.w	r0, r4, #16
9000bfb4:	f000 fd88 	bl	9000cac8 <xTaskRemoveFromEventList>
9000bfb8:	b138      	cbz	r0, 9000bfca <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
9000bfba:	4b0f      	ldr	r3, [pc, #60]	; (9000bff8 <xQueueReceive+0x13c>)
9000bfbc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000bfc0:	601a      	str	r2, [r3, #0]
9000bfc2:	f3bf 8f4f 	dsb	sy
9000bfc6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000bfca:	f7ff fb65 	bl	9000b698 <vPortExitCritical>
				return pdPASS;
9000bfce:	2001      	movs	r0, #1
}
9000bfd0:	b005      	add	sp, #20
9000bfd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
9000bfd6:	4620      	mov	r0, r4
9000bfd8:	f7ff fcd9 	bl	9000b98e <prvUnlockQueue>
				( void ) xTaskResumeAll();
9000bfdc:	f000 fbf8 	bl	9000c7d0 <xTaskResumeAll>
9000bfe0:	e7d8      	b.n	9000bf94 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
9000bfe2:	4620      	mov	r0, r4
9000bfe4:	f7ff fcd3 	bl	9000b98e <prvUnlockQueue>
			( void ) xTaskResumeAll();
9000bfe8:	f000 fbf2 	bl	9000c7d0 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
9000bfec:	4620      	mov	r0, r4
9000bfee:	f7ff fc79 	bl	9000b8e4 <prvIsQueueEmpty>
9000bff2:	2800      	cmp	r0, #0
9000bff4:	d0ce      	beq.n	9000bf94 <xQueueReceive+0xd8>
9000bff6:	e796      	b.n	9000bf26 <xQueueReceive+0x6a>
9000bff8:	e000ed04 	.word	0xe000ed04

9000bffc <xQueueSemaphoreTake>:
{
9000bffc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
9000c000:	4604      	mov	r4, r0
{
9000c002:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000c004:	b940      	cbnz	r0, 9000c018 <xQueueSemaphoreTake+0x1c>
9000c006:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c00a:	f383 8811 	msr	BASEPRI, r3
9000c00e:	f3bf 8f6f 	isb	sy
9000c012:	f3bf 8f4f 	dsb	sy
9000c016:	e7fe      	b.n	9000c016 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
9000c018:	6c05      	ldr	r5, [r0, #64]	; 0x40
9000c01a:	b145      	cbz	r5, 9000c02e <xQueueSemaphoreTake+0x32>
9000c01c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c020:	f383 8811 	msr	BASEPRI, r3
9000c024:	f3bf 8f6f 	isb	sy
9000c028:	f3bf 8f4f 	dsb	sy
9000c02c:	e7fe      	b.n	9000c02c <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000c02e:	f000 fddd 	bl	9000cbec <xTaskGetSchedulerState>
9000c032:	4606      	mov	r6, r0
9000c034:	b950      	cbnz	r0, 9000c04c <xQueueSemaphoreTake+0x50>
9000c036:	9b01      	ldr	r3, [sp, #4]
9000c038:	b16b      	cbz	r3, 9000c056 <xQueueSemaphoreTake+0x5a>
9000c03a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c03e:	f383 8811 	msr	BASEPRI, r3
9000c042:	f3bf 8f6f 	isb	sy
9000c046:	f3bf 8f4f 	dsb	sy
9000c04a:	e7fe      	b.n	9000c04a <xQueueSemaphoreTake+0x4e>
9000c04c:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
9000c04e:	2700      	movs	r7, #0
					portYIELD_WITHIN_API();
9000c050:	f8df 812c 	ldr.w	r8, [pc, #300]	; 9000c180 <xQueueSemaphoreTake+0x184>
9000c054:	e051      	b.n	9000c0fa <xQueueSemaphoreTake+0xfe>
9000c056:	4605      	mov	r5, r0
9000c058:	e7f9      	b.n	9000c04e <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
9000c05a:	9b01      	ldr	r3, [sp, #4]
9000c05c:	b963      	cbnz	r3, 9000c078 <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000c05e:	b145      	cbz	r5, 9000c072 <xQueueSemaphoreTake+0x76>
9000c060:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c064:	f383 8811 	msr	BASEPRI, r3
9000c068:	f3bf 8f6f 	isb	sy
9000c06c:	f3bf 8f4f 	dsb	sy
9000c070:	e7fe      	b.n	9000c070 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
9000c072:	f7ff fb11 	bl	9000b698 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000c076:	e05e      	b.n	9000c136 <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
9000c078:	b916      	cbnz	r6, 9000c080 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000c07a:	a802      	add	r0, sp, #8
9000c07c:	f000 fd68 	bl	9000cb50 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000c080:	f7ff fb0a 	bl	9000b698 <vPortExitCritical>
		vTaskSuspendAll();
9000c084:	f000 fb00 	bl	9000c688 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000c088:	f7ff fae4 	bl	9000b654 <vPortEnterCritical>
9000c08c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000c090:	2bff      	cmp	r3, #255	; 0xff
9000c092:	d101      	bne.n	9000c098 <xQueueSemaphoreTake+0x9c>
9000c094:	f884 7044 	strb.w	r7, [r4, #68]	; 0x44
9000c098:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000c09c:	2bff      	cmp	r3, #255	; 0xff
9000c09e:	d101      	bne.n	9000c0a4 <xQueueSemaphoreTake+0xa8>
9000c0a0:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
9000c0a4:	f7ff faf8 	bl	9000b698 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000c0a8:	a901      	add	r1, sp, #4
9000c0aa:	a802      	add	r0, sp, #8
9000c0ac:	f000 fd5c 	bl	9000cb68 <xTaskCheckForTimeOut>
9000c0b0:	2800      	cmp	r0, #0
9000c0b2:	d14a      	bne.n	9000c14a <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
9000c0b4:	4620      	mov	r0, r4
9000c0b6:	f7ff fc15 	bl	9000b8e4 <prvIsQueueEmpty>
9000c0ba:	2800      	cmp	r0, #0
9000c0bc:	d03f      	beq.n	9000c13e <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000c0be:	6823      	ldr	r3, [r4, #0]
9000c0c0:	b93b      	cbnz	r3, 9000c0d2 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
9000c0c2:	f7ff fac7 	bl	9000b654 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000c0c6:	68a0      	ldr	r0, [r4, #8]
9000c0c8:	f000 fda0 	bl	9000cc0c <xTaskPriorityInherit>
9000c0cc:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
9000c0ce:	f7ff fae3 	bl	9000b698 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000c0d2:	9901      	ldr	r1, [sp, #4]
9000c0d4:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000c0d8:	f000 fcbe 	bl	9000ca58 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
9000c0dc:	4620      	mov	r0, r4
9000c0de:	f7ff fc56 	bl	9000b98e <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
9000c0e2:	f000 fb75 	bl	9000c7d0 <xTaskResumeAll>
9000c0e6:	b938      	cbnz	r0, 9000c0f8 <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
9000c0e8:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
9000c0ec:	f8c8 3000 	str.w	r3, [r8]
9000c0f0:	f3bf 8f4f 	dsb	sy
9000c0f4:	f3bf 8f6f 	isb	sy
9000c0f8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
9000c0fa:	f7ff faab 	bl	9000b654 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000c0fe:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000c100:	2b00      	cmp	r3, #0
9000c102:	d0aa      	beq.n	9000c05a <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000c104:	3b01      	subs	r3, #1
9000c106:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000c108:	6823      	ldr	r3, [r4, #0]
9000c10a:	b913      	cbnz	r3, 9000c112 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000c10c:	f000 fe56 	bl	9000cdbc <pvTaskIncrementMutexHeldCount>
9000c110:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000c112:	6923      	ldr	r3, [r4, #16]
9000c114:	b163      	cbz	r3, 9000c130 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000c116:	f104 0010 	add.w	r0, r4, #16
9000c11a:	f000 fcd5 	bl	9000cac8 <xTaskRemoveFromEventList>
9000c11e:	b138      	cbz	r0, 9000c130 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
9000c120:	4b17      	ldr	r3, [pc, #92]	; (9000c180 <xQueueSemaphoreTake+0x184>)
9000c122:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000c126:	601a      	str	r2, [r3, #0]
9000c128:	f3bf 8f4f 	dsb	sy
9000c12c:	f3bf 8f6f 	isb	sy
				return pdPASS;
9000c130:	2501      	movs	r5, #1
				taskEXIT_CRITICAL();
9000c132:	f7ff fab1 	bl	9000b698 <vPortExitCritical>
}
9000c136:	4628      	mov	r0, r5
9000c138:	b004      	add	sp, #16
9000c13a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
9000c13e:	4620      	mov	r0, r4
9000c140:	f7ff fc25 	bl	9000b98e <prvUnlockQueue>
				( void ) xTaskResumeAll();
9000c144:	f000 fb44 	bl	9000c7d0 <xTaskResumeAll>
9000c148:	e7d6      	b.n	9000c0f8 <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
9000c14a:	4620      	mov	r0, r4
9000c14c:	f7ff fc1f 	bl	9000b98e <prvUnlockQueue>
			( void ) xTaskResumeAll();
9000c150:	f000 fb3e 	bl	9000c7d0 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
9000c154:	4620      	mov	r0, r4
9000c156:	f7ff fbc5 	bl	9000b8e4 <prvIsQueueEmpty>
9000c15a:	2800      	cmp	r0, #0
9000c15c:	d0cc      	beq.n	9000c0f8 <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
9000c15e:	2d00      	cmp	r5, #0
9000c160:	d0e9      	beq.n	9000c136 <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
9000c162:	f7ff fa77 	bl	9000b654 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000c166:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c168:	b119      	cbz	r1, 9000c172 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000c16a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000c16c:	6819      	ldr	r1, [r3, #0]
9000c16e:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000c172:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
9000c174:	2500      	movs	r5, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000c176:	f000 fdcf 	bl	9000cd18 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000c17a:	f7ff fa8d 	bl	9000b698 <vPortExitCritical>
9000c17e:	e7da      	b.n	9000c136 <xQueueSemaphoreTake+0x13a>
9000c180:	e000ed04 	.word	0xe000ed04

9000c184 <xQueueReceiveFromISR>:
{
9000c184:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000c188:	4689      	mov	r9, r1
9000c18a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
9000c18c:	4605      	mov	r5, r0
9000c18e:	b940      	cbnz	r0, 9000c1a2 <xQueueReceiveFromISR+0x1e>
9000c190:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c194:	f383 8811 	msr	BASEPRI, r3
9000c198:	f3bf 8f6f 	isb	sy
9000c19c:	f3bf 8f4f 	dsb	sy
9000c1a0:	e7fe      	b.n	9000c1a0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000c1a2:	b951      	cbnz	r1, 9000c1ba <xQueueReceiveFromISR+0x36>
9000c1a4:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000c1a6:	b143      	cbz	r3, 9000c1ba <xQueueReceiveFromISR+0x36>
9000c1a8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c1ac:	f383 8811 	msr	BASEPRI, r3
9000c1b0:	f3bf 8f6f 	isb	sy
9000c1b4:	f3bf 8f4f 	dsb	sy
9000c1b8:	e7fe      	b.n	9000c1b8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000c1ba:	f7ff fb65 	bl	9000b888 <vPortValidateInterruptPriority>
	__asm volatile
9000c1be:	f3ef 8711 	mrs	r7, BASEPRI
9000c1c2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c1c6:	f383 8811 	msr	BASEPRI, r3
9000c1ca:	f3bf 8f6f 	isb	sy
9000c1ce:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000c1d2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000c1d4:	b31c      	cbz	r4, 9000c21e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
9000c1d6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
9000c1da:	4649      	mov	r1, r9
9000c1dc:	4628      	mov	r0, r5
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000c1de:	3c01      	subs	r4, #1
			const int8_t cRxLock = pxQueue->cRxLock;
9000c1e0:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
9000c1e2:	f7ff fbbf 	bl	9000b964 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000c1e6:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
9000c1e8:	1c73      	adds	r3, r6, #1
9000c1ea:	d113      	bne.n	9000c214 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000c1ec:	692b      	ldr	r3, [r5, #16]
9000c1ee:	b90b      	cbnz	r3, 9000c1f4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
9000c1f0:	2001      	movs	r0, #1
9000c1f2:	e00b      	b.n	9000c20c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000c1f4:	f105 0010 	add.w	r0, r5, #16
9000c1f8:	f000 fc66 	bl	9000cac8 <xTaskRemoveFromEventList>
9000c1fc:	2800      	cmp	r0, #0
9000c1fe:	d0f7      	beq.n	9000c1f0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
9000c200:	f1b8 0f00 	cmp.w	r8, #0
9000c204:	d0f4      	beq.n	9000c1f0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000c206:	2001      	movs	r0, #1
9000c208:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
9000c20c:	f387 8811 	msr	BASEPRI, r7
}
9000c210:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000c214:	3601      	adds	r6, #1
9000c216:	b276      	sxtb	r6, r6
9000c218:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
9000c21c:	e7e8      	b.n	9000c1f0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
9000c21e:	4620      	mov	r0, r4
9000c220:	e7f4      	b.n	9000c20c <xQueueReceiveFromISR+0x88>
	...

9000c224 <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000c224:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000c226:	4a07      	ldr	r2, [pc, #28]	; (9000c244 <vQueueAddToRegistry+0x20>)
	{
9000c228:	b530      	push	{r4, r5, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000c22a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
9000c22e:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
9000c232:	b91d      	cbnz	r5, 9000c23c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000c234:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000c238:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
9000c23a:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000c23c:	3301      	adds	r3, #1
9000c23e:	2b08      	cmp	r3, #8
9000c240:	d1f3      	bne.n	9000c22a <vQueueAddToRegistry+0x6>
9000c242:	e7fa      	b.n	9000c23a <vQueueAddToRegistry+0x16>
9000c244:	2401309c 	.word	0x2401309c

9000c248 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000c248:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000c24a:	4909      	ldr	r1, [pc, #36]	; (9000c270 <vQueueUnregisterQueue+0x28>)
	{
9000c24c:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000c24e:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
9000c252:	00dc      	lsls	r4, r3, #3
9000c254:	4282      	cmp	r2, r0
9000c256:	d106      	bne.n	9000c266 <vQueueUnregisterQueue+0x1e>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000c258:	4a06      	ldr	r2, [pc, #24]	; (9000c274 <vQueueUnregisterQueue+0x2c>)
9000c25a:	2100      	movs	r1, #0
9000c25c:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
9000c260:	4422      	add	r2, r4
9000c262:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
9000c264:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000c266:	3301      	adds	r3, #1
9000c268:	2b08      	cmp	r3, #8
9000c26a:	d1f0      	bne.n	9000c24e <vQueueUnregisterQueue+0x6>
9000c26c:	e7fa      	b.n	9000c264 <vQueueUnregisterQueue+0x1c>
9000c26e:	bf00      	nop
9000c270:	240130a0 	.word	0x240130a0
9000c274:	2401309c 	.word	0x2401309c

9000c278 <vQueueDelete>:
{
9000c278:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
9000c27a:	b940      	cbnz	r0, 9000c28e <vQueueDelete+0x16>
	__asm volatile
9000c27c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c280:	f383 8811 	msr	BASEPRI, r3
9000c284:	f3bf 8f6f 	isb	sy
9000c288:	f3bf 8f4f 	dsb	sy
9000c28c:	e7fe      	b.n	9000c28c <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
9000c28e:	f7ff ffdb 	bl	9000c248 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000c292:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
9000c296:	b91b      	cbnz	r3, 9000c2a0 <vQueueDelete+0x28>
}
9000c298:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
9000c29c:	f7ff b8f6 	b.w	9000b48c <vPortFree>
}
9000c2a0:	bd10      	pop	{r4, pc}

9000c2a2 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000c2a2:	b570      	push	{r4, r5, r6, lr}
9000c2a4:	4604      	mov	r4, r0
9000c2a6:	460d      	mov	r5, r1
9000c2a8:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000c2aa:	f7ff f9d3 	bl	9000b654 <vPortEnterCritical>
9000c2ae:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000c2b2:	2bff      	cmp	r3, #255	; 0xff
9000c2b4:	d102      	bne.n	9000c2bc <vQueueWaitForMessageRestricted+0x1a>
9000c2b6:	2300      	movs	r3, #0
9000c2b8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000c2bc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000c2c0:	2bff      	cmp	r3, #255	; 0xff
9000c2c2:	d102      	bne.n	9000c2ca <vQueueWaitForMessageRestricted+0x28>
9000c2c4:	2300      	movs	r3, #0
9000c2c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000c2ca:	f7ff f9e5 	bl	9000b698 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000c2ce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000c2d0:	b92b      	cbnz	r3, 9000c2de <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000c2d2:	4632      	mov	r2, r6
9000c2d4:	4629      	mov	r1, r5
9000c2d6:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000c2da:	f000 fbd7 	bl	9000ca8c <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
9000c2de:	4620      	mov	r0, r4
	}
9000c2e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
9000c2e4:	f7ff bb53 	b.w	9000b98e <prvUnlockQueue>

9000c2e8 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000c2e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000c2ec:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000c2ee:	f7ff f9b1 	bl	9000b654 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000c2f2:	4b2e      	ldr	r3, [pc, #184]	; (9000c3ac <prvAddNewTaskToReadyList+0xc4>)
		if( pxCurrentTCB == NULL )
9000c2f4:	4d2e      	ldr	r5, [pc, #184]	; (9000c3b0 <prvAddNewTaskToReadyList+0xc8>)
		uxCurrentNumberOfTasks++;
9000c2f6:	681a      	ldr	r2, [r3, #0]
9000c2f8:	4f2e      	ldr	r7, [pc, #184]	; (9000c3b4 <prvAddNewTaskToReadyList+0xcc>)
9000c2fa:	3201      	adds	r2, #1
9000c2fc:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
9000c2fe:	682e      	ldr	r6, [r5, #0]
9000c300:	2e00      	cmp	r6, #0
9000c302:	d148      	bne.n	9000c396 <prvAddNewTaskToReadyList+0xae>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
9000c304:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000c306:	681b      	ldr	r3, [r3, #0]
9000c308:	2b01      	cmp	r3, #1
9000c30a:	d11f      	bne.n	9000c34c <prvAddNewTaskToReadyList+0x64>
9000c30c:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000c30e:	3601      	adds	r6, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000c310:	4640      	mov	r0, r8
9000c312:	f7ff f8f9 	bl	9000b508 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000c316:	f108 0814 	add.w	r8, r8, #20
9000c31a:	2e38      	cmp	r6, #56	; 0x38
9000c31c:	d1f7      	bne.n	9000c30e <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
9000c31e:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 9000c3e0 <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
9000c322:	4e25      	ldr	r6, [pc, #148]	; (9000c3b8 <prvAddNewTaskToReadyList+0xd0>)
	vListInitialise( &xDelayedTaskList1 );
9000c324:	4640      	mov	r0, r8
9000c326:	f7ff f8ef 	bl	9000b508 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000c32a:	4630      	mov	r0, r6
9000c32c:	f7ff f8ec 	bl	9000b508 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000c330:	4822      	ldr	r0, [pc, #136]	; (9000c3bc <prvAddNewTaskToReadyList+0xd4>)
9000c332:	f7ff f8e9 	bl	9000b508 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000c336:	4822      	ldr	r0, [pc, #136]	; (9000c3c0 <prvAddNewTaskToReadyList+0xd8>)
9000c338:	f7ff f8e6 	bl	9000b508 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000c33c:	4821      	ldr	r0, [pc, #132]	; (9000c3c4 <prvAddNewTaskToReadyList+0xdc>)
9000c33e:	f7ff f8e3 	bl	9000b508 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000c342:	4b21      	ldr	r3, [pc, #132]	; (9000c3c8 <prvAddNewTaskToReadyList+0xe0>)
9000c344:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000c348:	4b20      	ldr	r3, [pc, #128]	; (9000c3cc <prvAddNewTaskToReadyList+0xe4>)
9000c34a:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
9000c34c:	4a20      	ldr	r2, [pc, #128]	; (9000c3d0 <prvAddNewTaskToReadyList+0xe8>)
9000c34e:	6813      	ldr	r3, [r2, #0]
9000c350:	3301      	adds	r3, #1
9000c352:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
9000c354:	4a1f      	ldr	r2, [pc, #124]	; (9000c3d4 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000c356:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000c358:	6811      	ldr	r1, [r2, #0]
9000c35a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c35c:	428b      	cmp	r3, r1
9000c35e:	d900      	bls.n	9000c362 <prvAddNewTaskToReadyList+0x7a>
9000c360:	6013      	str	r3, [r2, #0]
9000c362:	2014      	movs	r0, #20
9000c364:	1d21      	adds	r1, r4, #4
9000c366:	fb00 7003 	mla	r0, r0, r3, r7
9000c36a:	f7ff f8db 	bl	9000b524 <vListInsertEnd>
	taskEXIT_CRITICAL();
9000c36e:	f7ff f993 	bl	9000b698 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
9000c372:	4b19      	ldr	r3, [pc, #100]	; (9000c3d8 <prvAddNewTaskToReadyList+0xf0>)
9000c374:	681b      	ldr	r3, [r3, #0]
9000c376:	b163      	cbz	r3, 9000c392 <prvAddNewTaskToReadyList+0xaa>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000c378:	682b      	ldr	r3, [r5, #0]
9000c37a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000c37c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c37e:	429a      	cmp	r2, r3
9000c380:	d207      	bcs.n	9000c392 <prvAddNewTaskToReadyList+0xaa>
			taskYIELD_IF_USING_PREEMPTION();
9000c382:	4b16      	ldr	r3, [pc, #88]	; (9000c3dc <prvAddNewTaskToReadyList+0xf4>)
9000c384:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000c388:	601a      	str	r2, [r3, #0]
9000c38a:	f3bf 8f4f 	dsb	sy
9000c38e:	f3bf 8f6f 	isb	sy
}
9000c392:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
9000c396:	4b10      	ldr	r3, [pc, #64]	; (9000c3d8 <prvAddNewTaskToReadyList+0xf0>)
9000c398:	681b      	ldr	r3, [r3, #0]
9000c39a:	2b00      	cmp	r3, #0
9000c39c:	d1d6      	bne.n	9000c34c <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000c39e:	682b      	ldr	r3, [r5, #0]
9000c3a0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000c3a2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c3a4:	429a      	cmp	r2, r3
9000c3a6:	d8d1      	bhi.n	9000c34c <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
9000c3a8:	602c      	str	r4, [r5, #0]
9000c3aa:	e7cf      	b.n	9000c34c <prvAddNewTaskToReadyList+0x64>
9000c3ac:	24012918 	.word	0x24012918
9000c3b0:	240124ac 	.word	0x240124ac
9000c3b4:	240124b8 	.word	0x240124b8
9000c3b8:	24012940 	.word	0x24012940
9000c3bc:	24012960 	.word	0x24012960
9000c3c0:	2401298c 	.word	0x2401298c
9000c3c4:	24012978 	.word	0x24012978
9000c3c8:	240124b0 	.word	0x240124b0
9000c3cc:	240124b4 	.word	0x240124b4
9000c3d0:	24012924 	.word	0x24012924
9000c3d4:	24012928 	.word	0x24012928
9000c3d8:	24012974 	.word	0x24012974
9000c3dc:	e000ed04 	.word	0xe000ed04
9000c3e0:	2401292c 	.word	0x2401292c

9000c3e4 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000c3e4:	4a06      	ldr	r2, [pc, #24]	; (9000c400 <prvResetNextTaskUnblockTime+0x1c>)
9000c3e6:	6813      	ldr	r3, [r2, #0]
9000c3e8:	6819      	ldr	r1, [r3, #0]
9000c3ea:	4b06      	ldr	r3, [pc, #24]	; (9000c404 <prvResetNextTaskUnblockTime+0x20>)
9000c3ec:	b919      	cbnz	r1, 9000c3f6 <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000c3ee:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000c3f2:	601a      	str	r2, [r3, #0]
	}
}
9000c3f4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000c3f6:	6812      	ldr	r2, [r2, #0]
9000c3f8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000c3fa:	68d2      	ldr	r2, [r2, #12]
9000c3fc:	6852      	ldr	r2, [r2, #4]
9000c3fe:	e7f8      	b.n	9000c3f2 <prvResetNextTaskUnblockTime+0xe>
9000c400:	240124b0 	.word	0x240124b0
9000c404:	24012954 	.word	0x24012954

9000c408 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000c408:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000c40c:	ea4f 0982 	mov.w	r9, r2, lsl #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000c410:	4606      	mov	r6, r0
9000c412:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000c414:	21a5      	movs	r1, #165	; 0xa5
9000c416:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000c418:	461f      	mov	r7, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000c41a:	f1a9 0904 	sub.w	r9, r9, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000c41e:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000c422:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000c424:	f012 ffca 	bl	9001f3bc <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000c428:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000c42a:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000c42c:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
9000c430:	2d00      	cmp	r5, #0
9000c432:	d037      	beq.n	9000c4a4 <prvInitialiseNewTask.isra.0+0x9c>
9000c434:	1e6b      	subs	r3, r5, #1
9000c436:	f104 0234 	add.w	r2, r4, #52	; 0x34
9000c43a:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000c43c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
9000c440:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
9000c444:	7819      	ldrb	r1, [r3, #0]
9000c446:	b109      	cbz	r1, 9000c44c <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
9000c448:	42ab      	cmp	r3, r5
9000c44a:	d1f7      	bne.n	9000c43c <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000c44c:	2300      	movs	r3, #0
9000c44e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000c452:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000c454:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000c458:	1d20      	adds	r0, r4, #4
9000c45a:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000c45c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
9000c460:	bf28      	it	cs
9000c462:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
9000c464:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000c466:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000c468:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000c46c:	f7ff f857 	bl	9000b51e <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000c470:	f104 0018 	add.w	r0, r4, #24
9000c474:	f7ff f853 	bl	9000b51e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
9000c478:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000c47c:	463a      	mov	r2, r7
9000c47e:	4631      	mov	r1, r6
9000c480:	4648      	mov	r0, r9
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000c482:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000c484:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000c486:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000c488:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000c48c:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000c490:	f7ff f8ba 	bl	9000b608 <pxPortInitialiseStack>
9000c494:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000c496:	f1b8 0f00 	cmp.w	r8, #0
9000c49a:	d001      	beq.n	9000c4a0 <prvInitialiseNewTask.isra.0+0x98>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000c49c:	f8c8 4000 	str.w	r4, [r8]
}
9000c4a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000c4a4:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9000c4a8:	e7d3      	b.n	9000c452 <prvInitialiseNewTask.isra.0+0x4a>

9000c4aa <prvDeleteTCB>:
	{
9000c4aa:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000c4ac:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
9000c4b0:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000c4b2:	b93b      	cbnz	r3, 9000c4c4 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
9000c4b4:	6b00      	ldr	r0, [r0, #48]	; 0x30
9000c4b6:	f7fe ffe9 	bl	9000b48c <vPortFree>
				vPortFree( pxTCB );
9000c4ba:	4620      	mov	r0, r4
	}
9000c4bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
9000c4c0:	f7fe bfe4 	b.w	9000b48c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000c4c4:	2b01      	cmp	r3, #1
9000c4c6:	d0f9      	beq.n	9000c4bc <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000c4c8:	2b02      	cmp	r3, #2
9000c4ca:	d008      	beq.n	9000c4de <prvDeleteTCB+0x34>
9000c4cc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c4d0:	f383 8811 	msr	BASEPRI, r3
9000c4d4:	f3bf 8f6f 	isb	sy
9000c4d8:	f3bf 8f4f 	dsb	sy
9000c4dc:	e7fe      	b.n	9000c4dc <prvDeleteTCB+0x32>
	}
9000c4de:	bd10      	pop	{r4, pc}

9000c4e0 <prvIdleTask>:
{
9000c4e0:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000c4e2:	4e14      	ldr	r6, [pc, #80]	; (9000c534 <prvIdleTask+0x54>)
				taskYIELD();
9000c4e4:	4f14      	ldr	r7, [pc, #80]	; (9000c538 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000c4e6:	4c15      	ldr	r4, [pc, #84]	; (9000c53c <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
9000c4e8:	4d15      	ldr	r5, [pc, #84]	; (9000c540 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000c4ea:	6823      	ldr	r3, [r4, #0]
9000c4ec:	b96b      	cbnz	r3, 9000c50a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000c4ee:	4b15      	ldr	r3, [pc, #84]	; (9000c544 <prvIdleTask+0x64>)
9000c4f0:	681b      	ldr	r3, [r3, #0]
9000c4f2:	2b01      	cmp	r3, #1
9000c4f4:	d906      	bls.n	9000c504 <prvIdleTask+0x24>
				taskYIELD();
9000c4f6:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
9000c4fa:	603b      	str	r3, [r7, #0]
9000c4fc:	f3bf 8f4f 	dsb	sy
9000c500:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000c504:	f7f6 fc5a 	bl	90002dbc <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000c508:	e7ed      	b.n	9000c4e6 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
9000c50a:	f7ff f8a3 	bl	9000b654 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000c50e:	68f3      	ldr	r3, [r6, #12]
9000c510:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000c514:	f108 0004 	add.w	r0, r8, #4
9000c518:	f7ff f827 	bl	9000b56a <uxListRemove>
				--uxCurrentNumberOfTasks;
9000c51c:	682b      	ldr	r3, [r5, #0]
9000c51e:	3b01      	subs	r3, #1
9000c520:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000c522:	6823      	ldr	r3, [r4, #0]
9000c524:	3b01      	subs	r3, #1
9000c526:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
9000c528:	f7ff f8b6 	bl	9000b698 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
9000c52c:	4640      	mov	r0, r8
9000c52e:	f7ff ffbc 	bl	9000c4aa <prvDeleteTCB>
9000c532:	e7da      	b.n	9000c4ea <prvIdleTask+0xa>
9000c534:	2401298c 	.word	0x2401298c
9000c538:	e000ed04 	.word	0xe000ed04
9000c53c:	2401291c 	.word	0x2401291c
9000c540:	24012918 	.word	0x24012918
9000c544:	240124b8 	.word	0x240124b8

9000c548 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
9000c548:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000c54a:	4b16      	ldr	r3, [pc, #88]	; (9000c5a4 <prvAddCurrentTaskToDelayedList+0x5c>)
{
9000c54c:	4604      	mov	r4, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000c54e:	4e16      	ldr	r6, [pc, #88]	; (9000c5a8 <prvAddCurrentTaskToDelayedList+0x60>)
{
9000c550:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
9000c552:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000c554:	6830      	ldr	r0, [r6, #0]
9000c556:	3004      	adds	r0, #4
9000c558:	f7ff f807 	bl	9000b56a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9000c55c:	1c63      	adds	r3, r4, #1
9000c55e:	4633      	mov	r3, r6
9000c560:	d107      	bne.n	9000c572 <prvAddCurrentTaskToDelayedList+0x2a>
9000c562:	b137      	cbz	r7, 9000c572 <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000c564:	6831      	ldr	r1, [r6, #0]
9000c566:	4811      	ldr	r0, [pc, #68]	; (9000c5ac <prvAddCurrentTaskToDelayedList+0x64>)
9000c568:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
9000c56a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000c56e:	f7fe bfd9 	b.w	9000b524 <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000c572:	192c      	adds	r4, r5, r4
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000c574:	681a      	ldr	r2, [r3, #0]
9000c576:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
9000c578:	d307      	bcc.n	9000c58a <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000c57a:	4a0d      	ldr	r2, [pc, #52]	; (9000c5b0 <prvAddCurrentTaskToDelayedList+0x68>)
9000c57c:	6810      	ldr	r0, [r2, #0]
9000c57e:	6819      	ldr	r1, [r3, #0]
}
9000c580:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000c584:	3104      	adds	r1, #4
9000c586:	f7fe bfd9 	b.w	9000b53c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000c58a:	4a0a      	ldr	r2, [pc, #40]	; (9000c5b4 <prvAddCurrentTaskToDelayedList+0x6c>)
9000c58c:	6810      	ldr	r0, [r2, #0]
9000c58e:	6819      	ldr	r1, [r3, #0]
9000c590:	3104      	adds	r1, #4
9000c592:	f7fe ffd3 	bl	9000b53c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000c596:	4b08      	ldr	r3, [pc, #32]	; (9000c5b8 <prvAddCurrentTaskToDelayedList+0x70>)
9000c598:	681a      	ldr	r2, [r3, #0]
9000c59a:	42a2      	cmp	r2, r4
9000c59c:	d900      	bls.n	9000c5a0 <prvAddCurrentTaskToDelayedList+0x58>
					xNextTaskUnblockTime = xTimeToWake;
9000c59e:	601c      	str	r4, [r3, #0]
}
9000c5a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000c5a2:	bf00      	nop
9000c5a4:	240129a0 	.word	0x240129a0
9000c5a8:	240124ac 	.word	0x240124ac
9000c5ac:	24012978 	.word	0x24012978
9000c5b0:	240124b4 	.word	0x240124b4
9000c5b4:	240124b0 	.word	0x240124b0
9000c5b8:	24012954 	.word	0x24012954

9000c5bc <xTaskCreateStatic>:
	{
9000c5bc:	b570      	push	{r4, r5, r6, lr}
9000c5be:	b086      	sub	sp, #24
9000c5c0:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
9000c5c4:	b945      	cbnz	r5, 9000c5d8 <xTaskCreateStatic+0x1c>
9000c5c6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c5ca:	f383 8811 	msr	BASEPRI, r3
9000c5ce:	f3bf 8f6f 	isb	sy
9000c5d2:	f3bf 8f4f 	dsb	sy
9000c5d6:	e7fe      	b.n	9000c5d6 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
9000c5d8:	b944      	cbnz	r4, 9000c5ec <xTaskCreateStatic+0x30>
9000c5da:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c5de:	f383 8811 	msr	BASEPRI, r3
9000c5e2:	f3bf 8f6f 	isb	sy
9000c5e6:	f3bf 8f4f 	dsb	sy
9000c5ea:	e7fe      	b.n	9000c5ea <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
9000c5ec:	2660      	movs	r6, #96	; 0x60
9000c5ee:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
9000c5f0:	9e05      	ldr	r6, [sp, #20]
9000c5f2:	2e60      	cmp	r6, #96	; 0x60
9000c5f4:	d008      	beq.n	9000c608 <xTaskCreateStatic+0x4c>
9000c5f6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c5fa:	f383 8811 	msr	BASEPRI, r3
9000c5fe:	f3bf 8f6f 	isb	sy
9000c602:	f3bf 8f4f 	dsb	sy
9000c606:	e7fe      	b.n	9000c606 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000c608:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000c60a:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000c60c:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000c60e:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9000c612:	ad04      	add	r5, sp, #16
9000c614:	9402      	str	r4, [sp, #8]
9000c616:	9501      	str	r5, [sp, #4]
9000c618:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9000c61a:	9500      	str	r5, [sp, #0]
9000c61c:	f7ff fef4 	bl	9000c408 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
9000c620:	4620      	mov	r0, r4
9000c622:	f7ff fe61 	bl	9000c2e8 <prvAddNewTaskToReadyList>
	}
9000c626:	9804      	ldr	r0, [sp, #16]
9000c628:	b006      	add	sp, #24
9000c62a:	bd70      	pop	{r4, r5, r6, pc}

9000c62c <xTaskCreate>:
	{
9000c62c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000c630:	4607      	mov	r7, r0
9000c632:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000c634:	0090      	lsls	r0, r2, #2
	{
9000c636:	4688      	mov	r8, r1
9000c638:	4616      	mov	r6, r2
9000c63a:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000c63c:	f7fe fe94 	bl	9000b368 <pvPortMalloc>
			if( pxStack != NULL )
9000c640:	4605      	mov	r5, r0
9000c642:	b1e8      	cbz	r0, 9000c680 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000c644:	2060      	movs	r0, #96	; 0x60
9000c646:	f7fe fe8f 	bl	9000b368 <pvPortMalloc>
				if( pxNewTCB != NULL )
9000c64a:	4604      	mov	r4, r0
9000c64c:	b1a8      	cbz	r0, 9000c67a <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000c64e:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000c650:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
9000c652:	4632      	mov	r2, r6
9000c654:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000c656:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
9000c65a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000c65c:	9002      	str	r0, [sp, #8]
9000c65e:	4638      	mov	r0, r7
9000c660:	9301      	str	r3, [sp, #4]
9000c662:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000c664:	9300      	str	r3, [sp, #0]
9000c666:	464b      	mov	r3, r9
9000c668:	f7ff fece 	bl	9000c408 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
9000c66c:	4620      	mov	r0, r4
9000c66e:	f7ff fe3b 	bl	9000c2e8 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000c672:	2001      	movs	r0, #1
	}
9000c674:	b005      	add	sp, #20
9000c676:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
9000c67a:	4628      	mov	r0, r5
9000c67c:	f7fe ff06 	bl	9000b48c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000c680:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
9000c684:	e7f6      	b.n	9000c674 <xTaskCreate+0x48>
	...

9000c688 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9000c688:	4a02      	ldr	r2, [pc, #8]	; (9000c694 <vTaskSuspendAll+0xc>)
9000c68a:	6813      	ldr	r3, [r2, #0]
9000c68c:	3301      	adds	r3, #1
9000c68e:	6013      	str	r3, [r2, #0]
}
9000c690:	4770      	bx	lr
9000c692:	bf00      	nop
9000c694:	24012920 	.word	0x24012920

9000c698 <xTaskGetTickCount>:
		xTicks = xTickCount;
9000c698:	4b01      	ldr	r3, [pc, #4]	; (9000c6a0 <xTaskGetTickCount+0x8>)
9000c69a:	6818      	ldr	r0, [r3, #0]
}
9000c69c:	4770      	bx	lr
9000c69e:	bf00      	nop
9000c6a0:	240129a0 	.word	0x240129a0

9000c6a4 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000c6a4:	4b3f      	ldr	r3, [pc, #252]	; (9000c7a4 <xTaskIncrementTick+0x100>)
9000c6a6:	681b      	ldr	r3, [r3, #0]
{
9000c6a8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000c6ac:	2b00      	cmp	r3, #0
9000c6ae:	d172      	bne.n	9000c796 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000c6b0:	4b3d      	ldr	r3, [pc, #244]	; (9000c7a8 <xTaskIncrementTick+0x104>)
9000c6b2:	681d      	ldr	r5, [r3, #0]
9000c6b4:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
9000c6b6:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000c6b8:	b9bd      	cbnz	r5, 9000c6ea <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
9000c6ba:	4b3c      	ldr	r3, [pc, #240]	; (9000c7ac <xTaskIncrementTick+0x108>)
9000c6bc:	681a      	ldr	r2, [r3, #0]
9000c6be:	6812      	ldr	r2, [r2, #0]
9000c6c0:	b142      	cbz	r2, 9000c6d4 <xTaskIncrementTick+0x30>
9000c6c2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c6c6:	f383 8811 	msr	BASEPRI, r3
9000c6ca:	f3bf 8f6f 	isb	sy
9000c6ce:	f3bf 8f4f 	dsb	sy
9000c6d2:	e7fe      	b.n	9000c6d2 <xTaskIncrementTick+0x2e>
9000c6d4:	4a36      	ldr	r2, [pc, #216]	; (9000c7b0 <xTaskIncrementTick+0x10c>)
9000c6d6:	6819      	ldr	r1, [r3, #0]
9000c6d8:	6810      	ldr	r0, [r2, #0]
9000c6da:	6018      	str	r0, [r3, #0]
9000c6dc:	6011      	str	r1, [r2, #0]
9000c6de:	4a35      	ldr	r2, [pc, #212]	; (9000c7b4 <xTaskIncrementTick+0x110>)
9000c6e0:	6813      	ldr	r3, [r2, #0]
9000c6e2:	3301      	adds	r3, #1
9000c6e4:	6013      	str	r3, [r2, #0]
9000c6e6:	f7ff fe7d 	bl	9000c3e4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
9000c6ea:	4e33      	ldr	r6, [pc, #204]	; (9000c7b8 <xTaskIncrementTick+0x114>)
BaseType_t xSwitchRequired = pdFALSE;
9000c6ec:	2400      	movs	r4, #0
9000c6ee:	4f33      	ldr	r7, [pc, #204]	; (9000c7bc <xTaskIncrementTick+0x118>)
		if( xConstTickCount >= xNextTaskUnblockTime )
9000c6f0:	6833      	ldr	r3, [r6, #0]
9000c6f2:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 9000c7c8 <xTaskIncrementTick+0x124>
9000c6f6:	429d      	cmp	r5, r3
9000c6f8:	d211      	bcs.n	9000c71e <xTaskIncrementTick+0x7a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000c6fa:	f8d8 3000 	ldr.w	r3, [r8]
9000c6fe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000c700:	2314      	movs	r3, #20
9000c702:	4353      	muls	r3, r2
9000c704:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
9000c706:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
9000c708:	4b2d      	ldr	r3, [pc, #180]	; (9000c7c0 <xTaskIncrementTick+0x11c>)
9000c70a:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
9000c70c:	bf28      	it	cs
9000c70e:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
9000c710:	2b00      	cmp	r3, #0
9000c712:	bf18      	it	ne
9000c714:	2401      	movne	r4, #1
}
9000c716:	4620      	mov	r0, r4
9000c718:	b003      	add	sp, #12
9000c71a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000c71e:	f8df 908c 	ldr.w	r9, [pc, #140]	; 9000c7ac <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
9000c722:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 9000c7cc <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000c726:	f8d9 3000 	ldr.w	r3, [r9]
9000c72a:	681b      	ldr	r3, [r3, #0]
9000c72c:	b91b      	cbnz	r3, 9000c736 <xTaskIncrementTick+0x92>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000c72e:	f04f 33ff 	mov.w	r3, #4294967295
9000c732:	6033      	str	r3, [r6, #0]
					break;
9000c734:	e7e1      	b.n	9000c6fa <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000c736:	f8d9 3000 	ldr.w	r3, [r9]
9000c73a:	68db      	ldr	r3, [r3, #12]
9000c73c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000c740:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
9000c744:	4295      	cmp	r5, r2
9000c746:	d201      	bcs.n	9000c74c <xTaskIncrementTick+0xa8>
						xNextTaskUnblockTime = xItemValue;
9000c748:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000c74a:	e7d6      	b.n	9000c6fa <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000c74c:	f10b 0104 	add.w	r1, fp, #4
9000c750:	4608      	mov	r0, r1
9000c752:	9101      	str	r1, [sp, #4]
9000c754:	f7fe ff09 	bl	9000b56a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000c758:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
9000c75c:	9901      	ldr	r1, [sp, #4]
9000c75e:	b122      	cbz	r2, 9000c76a <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000c760:	f10b 0018 	add.w	r0, fp, #24
9000c764:	f7fe ff01 	bl	9000b56a <uxListRemove>
9000c768:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
9000c76a:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
9000c76e:	f8da 2000 	ldr.w	r2, [sl]
9000c772:	4290      	cmp	r0, r2
9000c774:	d901      	bls.n	9000c77a <xTaskIncrementTick+0xd6>
9000c776:	f8ca 0000 	str.w	r0, [sl]
9000c77a:	2314      	movs	r3, #20
9000c77c:	fb03 7000 	mla	r0, r3, r0, r7
9000c780:	f7fe fed0 	bl	9000b524 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000c784:	f8d8 1000 	ldr.w	r1, [r8]
9000c788:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
9000c78c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
9000c78e:	429a      	cmp	r2, r3
9000c790:	bf28      	it	cs
9000c792:	2401      	movcs	r4, #1
9000c794:	e7c7      	b.n	9000c726 <xTaskIncrementTick+0x82>
		++xPendedTicks;
9000c796:	4a0b      	ldr	r2, [pc, #44]	; (9000c7c4 <xTaskIncrementTick+0x120>)
BaseType_t xSwitchRequired = pdFALSE;
9000c798:	2400      	movs	r4, #0
		++xPendedTicks;
9000c79a:	6813      	ldr	r3, [r2, #0]
9000c79c:	3301      	adds	r3, #1
9000c79e:	6013      	str	r3, [r2, #0]
	return xSwitchRequired;
9000c7a0:	e7b9      	b.n	9000c716 <xTaskIncrementTick+0x72>
9000c7a2:	bf00      	nop
9000c7a4:	24012920 	.word	0x24012920
9000c7a8:	240129a0 	.word	0x240129a0
9000c7ac:	240124b0 	.word	0x240124b0
9000c7b0:	240124b4 	.word	0x240124b4
9000c7b4:	24012958 	.word	0x24012958
9000c7b8:	24012954 	.word	0x24012954
9000c7bc:	240124b8 	.word	0x240124b8
9000c7c0:	240129a4 	.word	0x240129a4
9000c7c4:	2401295c 	.word	0x2401295c
9000c7c8:	240124ac 	.word	0x240124ac
9000c7cc:	24012928 	.word	0x24012928

9000c7d0 <xTaskResumeAll>:
{
9000c7d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
9000c7d2:	4c30      	ldr	r4, [pc, #192]	; (9000c894 <xTaskResumeAll+0xc4>)
9000c7d4:	6823      	ldr	r3, [r4, #0]
9000c7d6:	b943      	cbnz	r3, 9000c7ea <xTaskResumeAll+0x1a>
9000c7d8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c7dc:	f383 8811 	msr	BASEPRI, r3
9000c7e0:	f3bf 8f6f 	isb	sy
9000c7e4:	f3bf 8f4f 	dsb	sy
9000c7e8:	e7fe      	b.n	9000c7e8 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
9000c7ea:	f7fe ff33 	bl	9000b654 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000c7ee:	6823      	ldr	r3, [r4, #0]
9000c7f0:	3b01      	subs	r3, #1
9000c7f2:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000c7f4:	6824      	ldr	r4, [r4, #0]
9000c7f6:	b12c      	cbz	r4, 9000c804 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
9000c7f8:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
9000c7fa:	f7fe ff4d 	bl	9000b698 <vPortExitCritical>
}
9000c7fe:	4620      	mov	r0, r4
9000c800:	b003      	add	sp, #12
9000c802:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000c804:	4b24      	ldr	r3, [pc, #144]	; (9000c898 <xTaskResumeAll+0xc8>)
9000c806:	681b      	ldr	r3, [r3, #0]
9000c808:	2b00      	cmp	r3, #0
9000c80a:	d0f5      	beq.n	9000c7f8 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000c80c:	4d23      	ldr	r5, [pc, #140]	; (9000c89c <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
9000c80e:	4e24      	ldr	r6, [pc, #144]	; (9000c8a0 <xTaskResumeAll+0xd0>)
9000c810:	4f24      	ldr	r7, [pc, #144]	; (9000c8a4 <xTaskResumeAll+0xd4>)
9000c812:	e01e      	b.n	9000c852 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000c814:	68eb      	ldr	r3, [r5, #12]
9000c816:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000c818:	f104 0018 	add.w	r0, r4, #24
9000c81c:	f7fe fea5 	bl	9000b56a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000c820:	1d21      	adds	r1, r4, #4
9000c822:	4608      	mov	r0, r1
9000c824:	9101      	str	r1, [sp, #4]
9000c826:	f7fe fea0 	bl	9000b56a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000c82a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c82c:	6832      	ldr	r2, [r6, #0]
9000c82e:	9901      	ldr	r1, [sp, #4]
9000c830:	4293      	cmp	r3, r2
9000c832:	d900      	bls.n	9000c836 <xTaskResumeAll+0x66>
9000c834:	6033      	str	r3, [r6, #0]
9000c836:	2014      	movs	r0, #20
9000c838:	fb00 7003 	mla	r0, r0, r3, r7
9000c83c:	f7fe fe72 	bl	9000b524 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000c840:	4b19      	ldr	r3, [pc, #100]	; (9000c8a8 <xTaskResumeAll+0xd8>)
9000c842:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c844:	681b      	ldr	r3, [r3, #0]
9000c846:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000c848:	429a      	cmp	r2, r3
9000c84a:	d302      	bcc.n	9000c852 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
9000c84c:	4b17      	ldr	r3, [pc, #92]	; (9000c8ac <xTaskResumeAll+0xdc>)
9000c84e:	2201      	movs	r2, #1
9000c850:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000c852:	682b      	ldr	r3, [r5, #0]
9000c854:	2b00      	cmp	r3, #0
9000c856:	d1dd      	bne.n	9000c814 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
9000c858:	b10c      	cbz	r4, 9000c85e <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
9000c85a:	f7ff fdc3 	bl	9000c3e4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000c85e:	4d14      	ldr	r5, [pc, #80]	; (9000c8b0 <xTaskResumeAll+0xe0>)
9000c860:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000c862:	b144      	cbz	r4, 9000c876 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
9000c864:	4e11      	ldr	r6, [pc, #68]	; (9000c8ac <xTaskResumeAll+0xdc>)
9000c866:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
9000c868:	f7ff ff1c 	bl	9000c6a4 <xTaskIncrementTick>
9000c86c:	b100      	cbz	r0, 9000c870 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
9000c86e:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000c870:	3c01      	subs	r4, #1
9000c872:	d1f9      	bne.n	9000c868 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
9000c874:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
9000c876:	4b0d      	ldr	r3, [pc, #52]	; (9000c8ac <xTaskResumeAll+0xdc>)
9000c878:	681b      	ldr	r3, [r3, #0]
9000c87a:	2b00      	cmp	r3, #0
9000c87c:	d0bc      	beq.n	9000c7f8 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
9000c87e:	4b0d      	ldr	r3, [pc, #52]	; (9000c8b4 <xTaskResumeAll+0xe4>)
9000c880:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000c884:	601a      	str	r2, [r3, #0]
9000c886:	f3bf 8f4f 	dsb	sy
9000c88a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000c88e:	2401      	movs	r4, #1
9000c890:	e7b3      	b.n	9000c7fa <xTaskResumeAll+0x2a>
9000c892:	bf00      	nop
9000c894:	24012920 	.word	0x24012920
9000c898:	24012918 	.word	0x24012918
9000c89c:	24012960 	.word	0x24012960
9000c8a0:	24012928 	.word	0x24012928
9000c8a4:	240124b8 	.word	0x240124b8
9000c8a8:	240124ac 	.word	0x240124ac
9000c8ac:	240129a4 	.word	0x240129a4
9000c8b0:	2401295c 	.word	0x2401295c
9000c8b4:	e000ed04 	.word	0xe000ed04

9000c8b8 <vTaskDelay>:
	{
9000c8b8:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000c8ba:	b940      	cbnz	r0, 9000c8ce <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
9000c8bc:	4b0e      	ldr	r3, [pc, #56]	; (9000c8f8 <vTaskDelay+0x40>)
9000c8be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000c8c2:	601a      	str	r2, [r3, #0]
9000c8c4:	f3bf 8f4f 	dsb	sy
9000c8c8:	f3bf 8f6f 	isb	sy
	}
9000c8cc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000c8ce:	4b0b      	ldr	r3, [pc, #44]	; (9000c8fc <vTaskDelay+0x44>)
9000c8d0:	6819      	ldr	r1, [r3, #0]
9000c8d2:	b141      	cbz	r1, 9000c8e6 <vTaskDelay+0x2e>
9000c8d4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c8d8:	f383 8811 	msr	BASEPRI, r3
9000c8dc:	f3bf 8f6f 	isb	sy
9000c8e0:	f3bf 8f4f 	dsb	sy
9000c8e4:	e7fe      	b.n	9000c8e4 <vTaskDelay+0x2c>
			vTaskSuspendAll();
9000c8e6:	f7ff fecf 	bl	9000c688 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
9000c8ea:	f7ff fe2d 	bl	9000c548 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
9000c8ee:	f7ff ff6f 	bl	9000c7d0 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
9000c8f2:	2800      	cmp	r0, #0
9000c8f4:	d0e2      	beq.n	9000c8bc <vTaskDelay+0x4>
9000c8f6:	e7e9      	b.n	9000c8cc <vTaskDelay+0x14>
9000c8f8:	e000ed04 	.word	0xe000ed04
9000c8fc:	24012920 	.word	0x24012920

9000c900 <vTaskSetApplicationTaskTag>:
	{
9000c900:	b538      	push	{r3, r4, r5, lr}
9000c902:	460d      	mov	r5, r1
		if( xTask == NULL )
9000c904:	4604      	mov	r4, r0
9000c906:	b908      	cbnz	r0, 9000c90c <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9000c908:	4b04      	ldr	r3, [pc, #16]	; (9000c91c <vTaskSetApplicationTaskTag+0x1c>)
9000c90a:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
9000c90c:	f7fe fea2 	bl	9000b654 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000c910:	6565      	str	r5, [r4, #84]	; 0x54
	}
9000c912:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000c916:	f7fe bebf 	b.w	9000b698 <vPortExitCritical>
9000c91a:	bf00      	nop
9000c91c:	240124ac 	.word	0x240124ac

9000c920 <xTaskCallApplicationTaskHook>:
	{
9000c920:	4603      	mov	r3, r0
9000c922:	4608      	mov	r0, r1
		if( xTask == NULL )
9000c924:	b90b      	cbnz	r3, 9000c92a <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
9000c926:	4b03      	ldr	r3, [pc, #12]	; (9000c934 <xTaskCallApplicationTaskHook+0x14>)
9000c928:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
9000c92a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000c92c:	b103      	cbz	r3, 9000c930 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000c92e:	4718      	bx	r3
	}
9000c930:	4618      	mov	r0, r3
9000c932:	4770      	bx	lr
9000c934:	240124ac 	.word	0x240124ac

9000c938 <vTaskStartScheduler>:
{
9000c938:	b510      	push	{r4, lr}
9000c93a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9000c93c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000c93e:	aa07      	add	r2, sp, #28
9000c940:	a906      	add	r1, sp, #24
9000c942:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
9000c944:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000c948:	f7fe fcd2 	bl	9000b2f0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9000c94c:	9b05      	ldr	r3, [sp, #20]
9000c94e:	9a07      	ldr	r2, [sp, #28]
9000c950:	9302      	str	r3, [sp, #8]
9000c952:	9b06      	ldr	r3, [sp, #24]
9000c954:	4917      	ldr	r1, [pc, #92]	; (9000c9b4 <vTaskStartScheduler+0x7c>)
9000c956:	4818      	ldr	r0, [pc, #96]	; (9000c9b8 <vTaskStartScheduler+0x80>)
9000c958:	e9cd 4300 	strd	r4, r3, [sp]
9000c95c:	4623      	mov	r3, r4
9000c95e:	f7ff fe2d 	bl	9000c5bc <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
9000c962:	b1d0      	cbz	r0, 9000c99a <vTaskStartScheduler+0x62>
			xReturn = xTimerCreateTimerTask();
9000c964:	f000 fa88 	bl	9000ce78 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9000c968:	2801      	cmp	r0, #1
9000c96a:	d118      	bne.n	9000c99e <vTaskStartScheduler+0x66>
9000c96c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c970:	f383 8811 	msr	BASEPRI, r3
9000c974:	f3bf 8f6f 	isb	sy
9000c978:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
9000c97c:	4b0f      	ldr	r3, [pc, #60]	; (9000c9bc <vTaskStartScheduler+0x84>)
9000c97e:	f04f 32ff 	mov.w	r2, #4294967295
		traceTASK_SWITCHED_IN();
9000c982:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
9000c984:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
9000c986:	4b0e      	ldr	r3, [pc, #56]	; (9000c9c0 <vTaskStartScheduler+0x88>)
9000c988:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000c98a:	4b0e      	ldr	r3, [pc, #56]	; (9000c9c4 <vTaskStartScheduler+0x8c>)
9000c98c:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9000c98e:	4b0e      	ldr	r3, [pc, #56]	; (9000c9c8 <vTaskStartScheduler+0x90>)
9000c990:	6818      	ldr	r0, [r3, #0]
9000c992:	f7ff ffc5 	bl	9000c920 <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
9000c996:	f7fe fef5 	bl	9000b784 <xPortStartScheduler>
}
9000c99a:	b008      	add	sp, #32
9000c99c:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000c99e:	3001      	adds	r0, #1
9000c9a0:	d1fb      	bne.n	9000c99a <vTaskStartScheduler+0x62>
9000c9a2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000c9a6:	f383 8811 	msr	BASEPRI, r3
9000c9aa:	f3bf 8f6f 	isb	sy
9000c9ae:	f3bf 8f4f 	dsb	sy
9000c9b2:	e7fe      	b.n	9000c9b2 <vTaskStartScheduler+0x7a>
9000c9b4:	90021992 	.word	0x90021992
9000c9b8:	9000c4e1 	.word	0x9000c4e1
9000c9bc:	24012954 	.word	0x24012954
9000c9c0:	24012974 	.word	0x24012974
9000c9c4:	240129a0 	.word	0x240129a0
9000c9c8:	240124ac 	.word	0x240124ac

9000c9cc <vTaskSwitchContext>:
{
9000c9cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9000c9ce:	4b1d      	ldr	r3, [pc, #116]	; (9000ca44 <vTaskSwitchContext+0x78>)
9000c9d0:	681a      	ldr	r2, [r3, #0]
9000c9d2:	4b1d      	ldr	r3, [pc, #116]	; (9000ca48 <vTaskSwitchContext+0x7c>)
9000c9d4:	b112      	cbz	r2, 9000c9dc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
9000c9d6:	2201      	movs	r2, #1
9000c9d8:	601a      	str	r2, [r3, #0]
}
9000c9da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
9000c9dc:	4e1b      	ldr	r6, [pc, #108]	; (9000ca4c <vTaskSwitchContext+0x80>)
9000c9de:	2101      	movs	r1, #1
		xYieldPending = pdFALSE;
9000c9e0:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
9000c9e2:	6830      	ldr	r0, [r6, #0]
9000c9e4:	f7ff ff9c 	bl	9000c920 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000c9e8:	4d19      	ldr	r5, [pc, #100]	; (9000ca50 <vTaskSwitchContext+0x84>)
9000c9ea:	4a1a      	ldr	r2, [pc, #104]	; (9000ca54 <vTaskSwitchContext+0x88>)
9000c9ec:	f04f 0c14 	mov.w	ip, #20
9000c9f0:	682b      	ldr	r3, [r5, #0]
9000c9f2:	4617      	mov	r7, r2
9000c9f4:	fb0c f103 	mul.w	r1, ip, r3
9000c9f8:	5854      	ldr	r4, [r2, r1]
9000c9fa:	1850      	adds	r0, r2, r1
9000c9fc:	b1ac      	cbz	r4, 9000ca2a <vTaskSwitchContext+0x5e>
9000c9fe:	6844      	ldr	r4, [r0, #4]
9000ca00:	3108      	adds	r1, #8
9000ca02:	6864      	ldr	r4, [r4, #4]
9000ca04:	440a      	add	r2, r1
		traceTASK_SWITCHED_IN();
9000ca06:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ca08:	4294      	cmp	r4, r2
9000ca0a:	6044      	str	r4, [r0, #4]
9000ca0c:	bf04      	itt	eq
9000ca0e:	6862      	ldreq	r2, [r4, #4]
9000ca10:	6042      	streq	r2, [r0, #4]
9000ca12:	2214      	movs	r2, #20
9000ca14:	fb02 7203 	mla	r2, r2, r3, r7
9000ca18:	6852      	ldr	r2, [r2, #4]
9000ca1a:	68d2      	ldr	r2, [r2, #12]
9000ca1c:	6032      	str	r2, [r6, #0]
9000ca1e:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9000ca20:	6830      	ldr	r0, [r6, #0]
}
9000ca22:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
9000ca26:	f7ff bf7b 	b.w	9000c920 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ca2a:	b943      	cbnz	r3, 9000ca3e <vTaskSwitchContext+0x72>
9000ca2c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ca30:	f383 8811 	msr	BASEPRI, r3
9000ca34:	f3bf 8f6f 	isb	sy
9000ca38:	f3bf 8f4f 	dsb	sy
9000ca3c:	e7fe      	b.n	9000ca3c <vTaskSwitchContext+0x70>
9000ca3e:	3b01      	subs	r3, #1
9000ca40:	e7d8      	b.n	9000c9f4 <vTaskSwitchContext+0x28>
9000ca42:	bf00      	nop
9000ca44:	24012920 	.word	0x24012920
9000ca48:	240129a4 	.word	0x240129a4
9000ca4c:	240124ac 	.word	0x240124ac
9000ca50:	24012928 	.word	0x24012928
9000ca54:	240124b8 	.word	0x240124b8

9000ca58 <vTaskPlaceOnEventList>:
{
9000ca58:	b510      	push	{r4, lr}
9000ca5a:	460c      	mov	r4, r1
	configASSERT( pxEventList );
9000ca5c:	b940      	cbnz	r0, 9000ca70 <vTaskPlaceOnEventList+0x18>
9000ca5e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ca62:	f383 8811 	msr	BASEPRI, r3
9000ca66:	f3bf 8f6f 	isb	sy
9000ca6a:	f3bf 8f4f 	dsb	sy
9000ca6e:	e7fe      	b.n	9000ca6e <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000ca70:	4b05      	ldr	r3, [pc, #20]	; (9000ca88 <vTaskPlaceOnEventList+0x30>)
9000ca72:	6819      	ldr	r1, [r3, #0]
9000ca74:	3118      	adds	r1, #24
9000ca76:	f7fe fd61 	bl	9000b53c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
9000ca7a:	4620      	mov	r0, r4
9000ca7c:	2101      	movs	r1, #1
}
9000ca7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
9000ca82:	f7ff bd61 	b.w	9000c548 <prvAddCurrentTaskToDelayedList>
9000ca86:	bf00      	nop
9000ca88:	240124ac 	.word	0x240124ac

9000ca8c <vTaskPlaceOnEventListRestricted>:
	{
9000ca8c:	b538      	push	{r3, r4, r5, lr}
9000ca8e:	460d      	mov	r5, r1
9000ca90:	4614      	mov	r4, r2
		configASSERT( pxEventList );
9000ca92:	b940      	cbnz	r0, 9000caa6 <vTaskPlaceOnEventListRestricted+0x1a>
9000ca94:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ca98:	f383 8811 	msr	BASEPRI, r3
9000ca9c:	f3bf 8f6f 	isb	sy
9000caa0:	f3bf 8f4f 	dsb	sy
9000caa4:	e7fe      	b.n	9000caa4 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000caa6:	4b07      	ldr	r3, [pc, #28]	; (9000cac4 <vTaskPlaceOnEventListRestricted+0x38>)
9000caa8:	6819      	ldr	r1, [r3, #0]
9000caaa:	3118      	adds	r1, #24
9000caac:	f7fe fd3a 	bl	9000b524 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
9000cab0:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
9000cab2:	4621      	mov	r1, r4
9000cab4:	bf0c      	ite	eq
9000cab6:	4628      	moveq	r0, r5
9000cab8:	f04f 30ff 	movne.w	r0, #4294967295
	}
9000cabc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
9000cac0:	f7ff bd42 	b.w	9000c548 <prvAddCurrentTaskToDelayedList>
9000cac4:	240124ac 	.word	0x240124ac

9000cac8 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000cac8:	68c3      	ldr	r3, [r0, #12]
{
9000caca:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000cacc:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
9000cace:	b944      	cbnz	r4, 9000cae2 <xTaskRemoveFromEventList+0x1a>
9000cad0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000cad4:	f383 8811 	msr	BASEPRI, r3
9000cad8:	f3bf 8f6f 	isb	sy
9000cadc:	f3bf 8f4f 	dsb	sy
9000cae0:	e7fe      	b.n	9000cae0 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9000cae2:	f104 0118 	add.w	r1, r4, #24
9000cae6:	4608      	mov	r0, r1
9000cae8:	9101      	str	r1, [sp, #4]
9000caea:	f7fe fd3e 	bl	9000b56a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000caee:	4b12      	ldr	r3, [pc, #72]	; (9000cb38 <xTaskRemoveFromEventList+0x70>)
9000caf0:	9901      	ldr	r1, [sp, #4]
9000caf2:	681b      	ldr	r3, [r3, #0]
9000caf4:	b9e3      	cbnz	r3, 9000cb30 <xTaskRemoveFromEventList+0x68>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9000caf6:	1d21      	adds	r1, r4, #4
9000caf8:	4608      	mov	r0, r1
9000cafa:	9101      	str	r1, [sp, #4]
9000cafc:	f7fe fd35 	bl	9000b56a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9000cb00:	4a0e      	ldr	r2, [pc, #56]	; (9000cb3c <xTaskRemoveFromEventList+0x74>)
9000cb02:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000cb04:	6810      	ldr	r0, [r2, #0]
9000cb06:	9901      	ldr	r1, [sp, #4]
9000cb08:	4283      	cmp	r3, r0
9000cb0a:	d900      	bls.n	9000cb0e <xTaskRemoveFromEventList+0x46>
9000cb0c:	6013      	str	r3, [r2, #0]
9000cb0e:	4a0c      	ldr	r2, [pc, #48]	; (9000cb40 <xTaskRemoveFromEventList+0x78>)
9000cb10:	2014      	movs	r0, #20
9000cb12:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9000cb16:	f7fe fd05 	bl	9000b524 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9000cb1a:	4b0a      	ldr	r3, [pc, #40]	; (9000cb44 <xTaskRemoveFromEventList+0x7c>)
9000cb1c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000cb1e:	681b      	ldr	r3, [r3, #0]
9000cb20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000cb22:	429a      	cmp	r2, r3
9000cb24:	d906      	bls.n	9000cb34 <xTaskRemoveFromEventList+0x6c>
		xYieldPending = pdTRUE;
9000cb26:	2001      	movs	r0, #1
9000cb28:	4b07      	ldr	r3, [pc, #28]	; (9000cb48 <xTaskRemoveFromEventList+0x80>)
9000cb2a:	6018      	str	r0, [r3, #0]
}
9000cb2c:	b002      	add	sp, #8
9000cb2e:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9000cb30:	4806      	ldr	r0, [pc, #24]	; (9000cb4c <xTaskRemoveFromEventList+0x84>)
9000cb32:	e7f0      	b.n	9000cb16 <xTaskRemoveFromEventList+0x4e>
		xReturn = pdFALSE;
9000cb34:	2000      	movs	r0, #0
	return xReturn;
9000cb36:	e7f9      	b.n	9000cb2c <xTaskRemoveFromEventList+0x64>
9000cb38:	24012920 	.word	0x24012920
9000cb3c:	24012928 	.word	0x24012928
9000cb40:	240124b8 	.word	0x240124b8
9000cb44:	240124ac 	.word	0x240124ac
9000cb48:	240129a4 	.word	0x240129a4
9000cb4c:	24012960 	.word	0x24012960

9000cb50 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000cb50:	4b03      	ldr	r3, [pc, #12]	; (9000cb60 <vTaskInternalSetTimeOutState+0x10>)
9000cb52:	681b      	ldr	r3, [r3, #0]
9000cb54:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000cb56:	4b03      	ldr	r3, [pc, #12]	; (9000cb64 <vTaskInternalSetTimeOutState+0x14>)
9000cb58:	681b      	ldr	r3, [r3, #0]
9000cb5a:	6043      	str	r3, [r0, #4]
}
9000cb5c:	4770      	bx	lr
9000cb5e:	bf00      	nop
9000cb60:	24012958 	.word	0x24012958
9000cb64:	240129a0 	.word	0x240129a0

9000cb68 <xTaskCheckForTimeOut>:
{
9000cb68:	b570      	push	{r4, r5, r6, lr}
9000cb6a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
9000cb6c:	4605      	mov	r5, r0
9000cb6e:	b940      	cbnz	r0, 9000cb82 <xTaskCheckForTimeOut+0x1a>
9000cb70:	f04f 0350 	mov.w	r3, #80	; 0x50
9000cb74:	f383 8811 	msr	BASEPRI, r3
9000cb78:	f3bf 8f6f 	isb	sy
9000cb7c:	f3bf 8f4f 	dsb	sy
9000cb80:	e7fe      	b.n	9000cb80 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
9000cb82:	b941      	cbnz	r1, 9000cb96 <xTaskCheckForTimeOut+0x2e>
9000cb84:	f04f 0350 	mov.w	r3, #80	; 0x50
9000cb88:	f383 8811 	msr	BASEPRI, r3
9000cb8c:	f3bf 8f6f 	isb	sy
9000cb90:	f3bf 8f4f 	dsb	sy
9000cb94:	e7fe      	b.n	9000cb94 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
9000cb96:	f7fe fd5d 	bl	9000b654 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
9000cb9a:	4b0f      	ldr	r3, [pc, #60]	; (9000cbd8 <xTaskCheckForTimeOut+0x70>)
9000cb9c:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9000cb9e:	6823      	ldr	r3, [r4, #0]
9000cba0:	1c5a      	adds	r2, r3, #1
9000cba2:	d010      	beq.n	9000cbc6 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000cba4:	480d      	ldr	r0, [pc, #52]	; (9000cbdc <xTaskCheckForTimeOut+0x74>)
9000cba6:	682e      	ldr	r6, [r5, #0]
9000cba8:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000cbaa:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000cbac:	4286      	cmp	r6, r0
9000cbae:	d001      	beq.n	9000cbb4 <xTaskCheckForTimeOut+0x4c>
9000cbb0:	428a      	cmp	r2, r1
9000cbb2:	d90f      	bls.n	9000cbd4 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000cbb4:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9000cbb6:	4283      	cmp	r3, r0
9000cbb8:	d90a      	bls.n	9000cbd0 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
9000cbba:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
9000cbbc:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
9000cbbe:	4413      	add	r3, r2
9000cbc0:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
9000cbc2:	f7ff ffc5 	bl	9000cb50 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
9000cbc6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
9000cbc8:	f7fe fd66 	bl	9000b698 <vPortExitCritical>
}
9000cbcc:	4620      	mov	r0, r4
9000cbce:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
9000cbd0:	2300      	movs	r3, #0
9000cbd2:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
9000cbd4:	2401      	movs	r4, #1
9000cbd6:	e7f7      	b.n	9000cbc8 <xTaskCheckForTimeOut+0x60>
9000cbd8:	240129a0 	.word	0x240129a0
9000cbdc:	24012958 	.word	0x24012958

9000cbe0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9000cbe0:	4b01      	ldr	r3, [pc, #4]	; (9000cbe8 <vTaskMissedYield+0x8>)
9000cbe2:	2201      	movs	r2, #1
9000cbe4:	601a      	str	r2, [r3, #0]
}
9000cbe6:	4770      	bx	lr
9000cbe8:	240129a4 	.word	0x240129a4

9000cbec <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
9000cbec:	4b05      	ldr	r3, [pc, #20]	; (9000cc04 <xTaskGetSchedulerState+0x18>)
9000cbee:	681b      	ldr	r3, [r3, #0]
9000cbf0:	b133      	cbz	r3, 9000cc00 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000cbf2:	4b05      	ldr	r3, [pc, #20]	; (9000cc08 <xTaskGetSchedulerState+0x1c>)
9000cbf4:	681b      	ldr	r3, [r3, #0]
9000cbf6:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
9000cbf8:	bf0c      	ite	eq
9000cbfa:	2002      	moveq	r0, #2
9000cbfc:	2000      	movne	r0, #0
9000cbfe:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9000cc00:	2001      	movs	r0, #1
	}
9000cc02:	4770      	bx	lr
9000cc04:	24012974 	.word	0x24012974
9000cc08:	24012920 	.word	0x24012920

9000cc0c <xTaskPriorityInherit>:
	{
9000cc0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
9000cc0e:	4604      	mov	r4, r0
9000cc10:	b348      	cbz	r0, 9000cc66 <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9000cc12:	4a1c      	ldr	r2, [pc, #112]	; (9000cc84 <xTaskPriorityInherit+0x78>)
9000cc14:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9000cc16:	6811      	ldr	r1, [r2, #0]
9000cc18:	4616      	mov	r6, r2
9000cc1a:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
9000cc1c:	428b      	cmp	r3, r1
9000cc1e:	d228      	bcs.n	9000cc72 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000cc20:	6982      	ldr	r2, [r0, #24]
9000cc22:	2a00      	cmp	r2, #0
9000cc24:	db04      	blt.n	9000cc30 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000cc26:	6832      	ldr	r2, [r6, #0]
9000cc28:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000cc2a:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
9000cc2e:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9000cc30:	2214      	movs	r2, #20
9000cc32:	4d15      	ldr	r5, [pc, #84]	; (9000cc88 <xTaskPriorityInherit+0x7c>)
9000cc34:	fb02 5303 	mla	r3, r2, r3, r5
9000cc38:	6962      	ldr	r2, [r4, #20]
9000cc3a:	429a      	cmp	r2, r3
9000cc3c:	d115      	bne.n	9000cc6a <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000cc3e:	1d21      	adds	r1, r4, #4
9000cc40:	4608      	mov	r0, r1
9000cc42:	9101      	str	r1, [sp, #4]
9000cc44:	f7fe fc91 	bl	9000b56a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000cc48:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000cc4a:	4a10      	ldr	r2, [pc, #64]	; (9000cc8c <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000cc4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000cc4e:	6810      	ldr	r0, [r2, #0]
9000cc50:	9901      	ldr	r1, [sp, #4]
9000cc52:	4283      	cmp	r3, r0
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000cc54:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000cc56:	d900      	bls.n	9000cc5a <xTaskPriorityInherit+0x4e>
9000cc58:	6013      	str	r3, [r2, #0]
9000cc5a:	2014      	movs	r0, #20
9000cc5c:	fb00 5003 	mla	r0, r0, r3, r5
9000cc60:	f7fe fc60 	bl	9000b524 <vListInsertEnd>
				xReturn = pdTRUE;
9000cc64:	2001      	movs	r0, #1
	}
9000cc66:	b002      	add	sp, #8
9000cc68:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000cc6a:	6833      	ldr	r3, [r6, #0]
9000cc6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000cc6e:	62e3      	str	r3, [r4, #44]	; 0x2c
9000cc70:	e7f8      	b.n	9000cc64 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9000cc72:	6813      	ldr	r3, [r2, #0]
9000cc74:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9000cc76:	6adc      	ldr	r4, [r3, #44]	; 0x2c
9000cc78:	42a0      	cmp	r0, r4
9000cc7a:	bf2c      	ite	cs
9000cc7c:	2000      	movcs	r0, #0
9000cc7e:	2001      	movcc	r0, #1
9000cc80:	e7f1      	b.n	9000cc66 <xTaskPriorityInherit+0x5a>
9000cc82:	bf00      	nop
9000cc84:	240124ac 	.word	0x240124ac
9000cc88:	240124b8 	.word	0x240124b8
9000cc8c:	24012928 	.word	0x24012928

9000cc90 <xTaskPriorityDisinherit>:
	{
9000cc90:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
9000cc92:	b910      	cbnz	r0, 9000cc9a <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
9000cc94:	2000      	movs	r0, #0
	}
9000cc96:	b002      	add	sp, #8
9000cc98:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
9000cc9a:	4b1c      	ldr	r3, [pc, #112]	; (9000cd0c <xTaskPriorityDisinherit+0x7c>)
9000cc9c:	681c      	ldr	r4, [r3, #0]
9000cc9e:	4284      	cmp	r4, r0
9000cca0:	d008      	beq.n	9000ccb4 <xTaskPriorityDisinherit+0x24>
9000cca2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000cca6:	f383 8811 	msr	BASEPRI, r3
9000ccaa:	f3bf 8f6f 	isb	sy
9000ccae:	f3bf 8f4f 	dsb	sy
9000ccb2:	e7fe      	b.n	9000ccb2 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
9000ccb4:	6d23      	ldr	r3, [r4, #80]	; 0x50
9000ccb6:	b943      	cbnz	r3, 9000ccca <xTaskPriorityDisinherit+0x3a>
9000ccb8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ccbc:	f383 8811 	msr	BASEPRI, r3
9000ccc0:	f3bf 8f6f 	isb	sy
9000ccc4:	f3bf 8f4f 	dsb	sy
9000ccc8:	e7fe      	b.n	9000ccc8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000ccca:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
9000cccc:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000ccce:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
9000ccd0:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000ccd2:	4291      	cmp	r1, r2
9000ccd4:	d0de      	beq.n	9000cc94 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9000ccd6:	2b00      	cmp	r3, #0
9000ccd8:	d1dc      	bne.n	9000cc94 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000ccda:	1d21      	adds	r1, r4, #4
9000ccdc:	4608      	mov	r0, r1
9000ccde:	9101      	str	r1, [sp, #4]
9000cce0:	f7fe fc43 	bl	9000b56a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000cce4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
9000cce6:	9901      	ldr	r1, [sp, #4]
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000cce8:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000ccec:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ccee:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9000ccf0:	4a07      	ldr	r2, [pc, #28]	; (9000cd10 <xTaskPriorityDisinherit+0x80>)
9000ccf2:	6810      	ldr	r0, [r2, #0]
9000ccf4:	4283      	cmp	r3, r0
9000ccf6:	d900      	bls.n	9000ccfa <xTaskPriorityDisinherit+0x6a>
9000ccf8:	6013      	str	r3, [r2, #0]
9000ccfa:	4a06      	ldr	r2, [pc, #24]	; (9000cd14 <xTaskPriorityDisinherit+0x84>)
9000ccfc:	2014      	movs	r0, #20
9000ccfe:	fb00 2003 	mla	r0, r0, r3, r2
9000cd02:	f7fe fc0f 	bl	9000b524 <vListInsertEnd>
					xReturn = pdTRUE;
9000cd06:	2001      	movs	r0, #1
		return xReturn;
9000cd08:	e7c5      	b.n	9000cc96 <xTaskPriorityDisinherit+0x6>
9000cd0a:	bf00      	nop
9000cd0c:	240124ac 	.word	0x240124ac
9000cd10:	24012928 	.word	0x24012928
9000cd14:	240124b8 	.word	0x240124b8

9000cd18 <vTaskPriorityDisinheritAfterTimeout>:
	{
9000cd18:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
9000cd1a:	4604      	mov	r4, r0
9000cd1c:	2800      	cmp	r0, #0
9000cd1e:	d044      	beq.n	9000cdaa <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
9000cd20:	6d02      	ldr	r2, [r0, #80]	; 0x50
9000cd22:	b942      	cbnz	r2, 9000cd36 <vTaskPriorityDisinheritAfterTimeout+0x1e>
9000cd24:	f04f 0350 	mov.w	r3, #80	; 0x50
9000cd28:	f383 8811 	msr	BASEPRI, r3
9000cd2c:	f3bf 8f6f 	isb	sy
9000cd30:	f3bf 8f4f 	dsb	sy
9000cd34:	e7fe      	b.n	9000cd34 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000cd36:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
9000cd38:	4299      	cmp	r1, r3
9000cd3a:	bf38      	it	cc
9000cd3c:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
9000cd3e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9000cd40:	428b      	cmp	r3, r1
9000cd42:	d032      	beq.n	9000cdaa <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9000cd44:	2a01      	cmp	r2, #1
9000cd46:	d130      	bne.n	9000cdaa <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
9000cd48:	4a19      	ldr	r2, [pc, #100]	; (9000cdb0 <vTaskPriorityDisinheritAfterTimeout+0x98>)
9000cd4a:	6812      	ldr	r2, [r2, #0]
9000cd4c:	4282      	cmp	r2, r0
9000cd4e:	d108      	bne.n	9000cd62 <vTaskPriorityDisinheritAfterTimeout+0x4a>
9000cd50:	f04f 0350 	mov.w	r3, #80	; 0x50
9000cd54:	f383 8811 	msr	BASEPRI, r3
9000cd58:	f3bf 8f6f 	isb	sy
9000cd5c:	f3bf 8f4f 	dsb	sy
9000cd60:	e7fe      	b.n	9000cd60 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000cd62:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000cd64:	4d13      	ldr	r5, [pc, #76]	; (9000cdb4 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000cd66:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000cd68:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
9000cd6c:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000cd6e:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000cd72:	bfa8      	it	ge
9000cd74:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000cd78:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000cd7a:	bfa8      	it	ge
9000cd7c:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000cd7e:	429a      	cmp	r2, r3
9000cd80:	d113      	bne.n	9000cdaa <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000cd82:	1d01      	adds	r1, r0, #4
9000cd84:	4608      	mov	r0, r1
9000cd86:	9101      	str	r1, [sp, #4]
9000cd88:	f7fe fbef 	bl	9000b56a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9000cd8c:	4a0a      	ldr	r2, [pc, #40]	; (9000cdb8 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
9000cd8e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000cd90:	6810      	ldr	r0, [r2, #0]
9000cd92:	9901      	ldr	r1, [sp, #4]
9000cd94:	4283      	cmp	r3, r0
9000cd96:	d900      	bls.n	9000cd9a <vTaskPriorityDisinheritAfterTimeout+0x82>
9000cd98:	6013      	str	r3, [r2, #0]
9000cd9a:	2014      	movs	r0, #20
9000cd9c:	fb00 5003 	mla	r0, r0, r3, r5
	}
9000cda0:	b003      	add	sp, #12
9000cda2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
9000cda6:	f7fe bbbd 	b.w	9000b524 <vListInsertEnd>
	}
9000cdaa:	b003      	add	sp, #12
9000cdac:	bd30      	pop	{r4, r5, pc}
9000cdae:	bf00      	nop
9000cdb0:	240124ac 	.word	0x240124ac
9000cdb4:	240124b8 	.word	0x240124b8
9000cdb8:	24012928 	.word	0x24012928

9000cdbc <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9000cdbc:	4b04      	ldr	r3, [pc, #16]	; (9000cdd0 <pvTaskIncrementMutexHeldCount+0x14>)
9000cdbe:	681a      	ldr	r2, [r3, #0]
9000cdc0:	b11a      	cbz	r2, 9000cdca <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9000cdc2:	6819      	ldr	r1, [r3, #0]
9000cdc4:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9000cdc6:	3201      	adds	r2, #1
9000cdc8:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
9000cdca:	6818      	ldr	r0, [r3, #0]
	}
9000cdcc:	4770      	bx	lr
9000cdce:	bf00      	nop
9000cdd0:	240124ac 	.word	0x240124ac

9000cdd4 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
9000cdd4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
9000cdd6:	4c11      	ldr	r4, [pc, #68]	; (9000ce1c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
9000cdd8:	f7fe fc3c 	bl	9000b654 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9000cddc:	6825      	ldr	r5, [r4, #0]
9000cdde:	b9bd      	cbnz	r5, 9000ce10 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
9000cde0:	4f0f      	ldr	r7, [pc, #60]	; (9000ce20 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
9000cde2:	4e10      	ldr	r6, [pc, #64]	; (9000ce24 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
9000cde4:	4638      	mov	r0, r7
9000cde6:	f7fe fb8f 	bl	9000b508 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9000cdea:	4630      	mov	r0, r6
9000cdec:	f7fe fb8c 	bl	9000b508 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9000cdf0:	4b0d      	ldr	r3, [pc, #52]	; (9000ce28 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000cdf2:	4a0e      	ldr	r2, [pc, #56]	; (9000ce2c <prvCheckForValidListAndQueue+0x58>)
9000cdf4:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
9000cdf6:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000cdf8:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9000cdfa:	4b0d      	ldr	r3, [pc, #52]	; (9000ce30 <prvCheckForValidListAndQueue+0x5c>)
9000cdfc:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000cdfe:	4b0d      	ldr	r3, [pc, #52]	; (9000ce34 <prvCheckForValidListAndQueue+0x60>)
9000ce00:	9500      	str	r5, [sp, #0]
9000ce02:	f7fe fe3d 	bl	9000ba80 <xQueueGenericCreateStatic>
9000ce06:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
9000ce08:	b110      	cbz	r0, 9000ce10 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9000ce0a:	490b      	ldr	r1, [pc, #44]	; (9000ce38 <prvCheckForValidListAndQueue+0x64>)
9000ce0c:	f7ff fa0a 	bl	9000c224 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
9000ce10:	b003      	add	sp, #12
9000ce12:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
9000ce16:	f7fe bc3f 	b.w	9000b698 <vPortExitCritical>
9000ce1a:	bf00      	nop
9000ce1c:	24012acc 	.word	0x24012acc
9000ce20:	24012a50 	.word	0x24012a50
9000ce24:	24012a64 	.word	0x24012a64
9000ce28:	240129a8 	.word	0x240129a8
9000ce2c:	240129b0 	.word	0x240129b0
9000ce30:	240129ac 	.word	0x240129ac
9000ce34:	24012a7c 	.word	0x24012a7c
9000ce38:	90021997 	.word	0x90021997

9000ce3c <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
9000ce3c:	4291      	cmp	r1, r2
{
9000ce3e:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000ce40:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000ce42:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
9000ce44:	d80a      	bhi.n	9000ce5c <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ce46:	1ad2      	subs	r2, r2, r3
9000ce48:	6983      	ldr	r3, [r0, #24]
9000ce4a:	429a      	cmp	r2, r3
9000ce4c:	d20d      	bcs.n	9000ce6a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000ce4e:	1d01      	adds	r1, r0, #4
9000ce50:	4b07      	ldr	r3, [pc, #28]	; (9000ce70 <prvInsertTimerInActiveList+0x34>)
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000ce52:	6818      	ldr	r0, [r3, #0]
9000ce54:	f7fe fb72 	bl	9000b53c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
9000ce58:	2000      	movs	r0, #0
}
9000ce5a:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9000ce5c:	429a      	cmp	r2, r3
9000ce5e:	d201      	bcs.n	9000ce64 <prvInsertTimerInActiveList+0x28>
9000ce60:	4299      	cmp	r1, r3
9000ce62:	d202      	bcs.n	9000ce6a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000ce64:	1d01      	adds	r1, r0, #4
9000ce66:	4b03      	ldr	r3, [pc, #12]	; (9000ce74 <prvInsertTimerInActiveList+0x38>)
9000ce68:	e7f3      	b.n	9000ce52 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
9000ce6a:	2001      	movs	r0, #1
	return xProcessTimerNow;
9000ce6c:	e7f5      	b.n	9000ce5a <prvInsertTimerInActiveList+0x1e>
9000ce6e:	bf00      	nop
9000ce70:	240129ac 	.word	0x240129ac
9000ce74:	240129a8 	.word	0x240129a8

9000ce78 <xTimerCreateTimerTask>:
{
9000ce78:	b510      	push	{r4, lr}
9000ce7a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
9000ce7c:	f7ff ffaa 	bl	9000cdd4 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
9000ce80:	4b12      	ldr	r3, [pc, #72]	; (9000cecc <xTimerCreateTimerTask+0x54>)
9000ce82:	681b      	ldr	r3, [r3, #0]
9000ce84:	b1b3      	cbz	r3, 9000ceb4 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9000ce86:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000ce88:	aa07      	add	r2, sp, #28
9000ce8a:	a906      	add	r1, sp, #24
9000ce8c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
9000ce8e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000ce92:	f7fe fa39 	bl	9000b308 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000ce96:	9b05      	ldr	r3, [sp, #20]
9000ce98:	9a07      	ldr	r2, [sp, #28]
9000ce9a:	9302      	str	r3, [sp, #8]
9000ce9c:	9b06      	ldr	r3, [sp, #24]
9000ce9e:	490c      	ldr	r1, [pc, #48]	; (9000ced0 <xTimerCreateTimerTask+0x58>)
9000cea0:	9301      	str	r3, [sp, #4]
9000cea2:	2302      	movs	r3, #2
9000cea4:	480b      	ldr	r0, [pc, #44]	; (9000ced4 <xTimerCreateTimerTask+0x5c>)
9000cea6:	9300      	str	r3, [sp, #0]
9000cea8:	4623      	mov	r3, r4
9000ceaa:	f7ff fb87 	bl	9000c5bc <xTaskCreateStatic>
9000ceae:	4b0a      	ldr	r3, [pc, #40]	; (9000ced8 <xTimerCreateTimerTask+0x60>)
9000ceb0:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9000ceb2:	b940      	cbnz	r0, 9000cec6 <xTimerCreateTimerTask+0x4e>
9000ceb4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ceb8:	f383 8811 	msr	BASEPRI, r3
9000cebc:	f3bf 8f6f 	isb	sy
9000cec0:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9000cec4:	e7fe      	b.n	9000cec4 <xTimerCreateTimerTask+0x4c>
}
9000cec6:	2001      	movs	r0, #1
9000cec8:	b008      	add	sp, #32
9000ceca:	bd10      	pop	{r4, pc}
9000cecc:	24012acc 	.word	0x24012acc
9000ced0:	9002199c 	.word	0x9002199c
9000ced4:	9000cfad 	.word	0x9000cfad
9000ced8:	24012ad0 	.word	0x24012ad0

9000cedc <xTimerGenericCommand>:
{
9000cedc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9000cede:	4616      	mov	r6, r2
	configASSERT( xTimer );
9000cee0:	4604      	mov	r4, r0
{
9000cee2:	461a      	mov	r2, r3
	configASSERT( xTimer );
9000cee4:	b940      	cbnz	r0, 9000cef8 <xTimerGenericCommand+0x1c>
9000cee6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ceea:	f383 8811 	msr	BASEPRI, r3
9000ceee:	f3bf 8f6f 	isb	sy
9000cef2:	f3bf 8f4f 	dsb	sy
9000cef6:	e7fe      	b.n	9000cef6 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
9000cef8:	4d0c      	ldr	r5, [pc, #48]	; (9000cf2c <xTimerGenericCommand+0x50>)
9000cefa:	6828      	ldr	r0, [r5, #0]
9000cefc:	b178      	cbz	r0, 9000cf1e <xTimerGenericCommand+0x42>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
9000cefe:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000cf00:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000cf02:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
9000cf06:	dc0c      	bgt.n	9000cf22 <xTimerGenericCommand+0x46>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000cf08:	f7ff fe70 	bl	9000cbec <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000cf0c:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000cf0e:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
9000cf10:	4669      	mov	r1, sp
9000cf12:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000cf14:	bf0c      	ite	eq
9000cf16:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
9000cf18:	461a      	movne	r2, r3
9000cf1a:	f7fe fe67 	bl	9000bbec <xQueueGenericSend>
}
9000cf1e:	b004      	add	sp, #16
9000cf20:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
9000cf22:	2300      	movs	r3, #0
9000cf24:	4669      	mov	r1, sp
9000cf26:	f7fe ff13 	bl	9000bd50 <xQueueGenericSendFromISR>
9000cf2a:	e7f8      	b.n	9000cf1e <xTimerGenericCommand+0x42>
9000cf2c:	24012acc 	.word	0x24012acc

9000cf30 <prvSwitchTimerLists>:
{
9000cf30:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000cf32:	4d1c      	ldr	r5, [pc, #112]	; (9000cfa4 <prvSwitchTimerLists+0x74>)
{
9000cf34:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
9000cf36:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000cf38:	682b      	ldr	r3, [r5, #0]
9000cf3a:	681a      	ldr	r2, [r3, #0]
9000cf3c:	b92a      	cbnz	r2, 9000cf4a <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
9000cf3e:	4a1a      	ldr	r2, [pc, #104]	; (9000cfa8 <prvSwitchTimerLists+0x78>)
9000cf40:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9000cf42:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9000cf44:	6029      	str	r1, [r5, #0]
}
9000cf46:	b005      	add	sp, #20
9000cf48:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000cf4a:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000cf4c:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000cf4e:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000cf50:	1d21      	adds	r1, r4, #4
9000cf52:	4608      	mov	r0, r1
9000cf54:	9103      	str	r1, [sp, #12]
9000cf56:	f7fe fb08 	bl	9000b56a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000cf5a:	6a23      	ldr	r3, [r4, #32]
9000cf5c:	4620      	mov	r0, r4
9000cf5e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000cf60:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9000cf64:	9903      	ldr	r1, [sp, #12]
9000cf66:	f013 0f04 	tst.w	r3, #4
9000cf6a:	d0e5      	beq.n	9000cf38 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000cf6c:	69a3      	ldr	r3, [r4, #24]
9000cf6e:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
9000cf70:	429e      	cmp	r6, r3
9000cf72:	d205      	bcs.n	9000cf80 <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000cf74:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9000cf76:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000cf78:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000cf7a:	f7fe fadf 	bl	9000b53c <vListInsert>
9000cf7e:	e7db      	b.n	9000cf38 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
9000cf80:	2300      	movs	r3, #0
9000cf82:	4632      	mov	r2, r6
9000cf84:	4620      	mov	r0, r4
9000cf86:	9700      	str	r7, [sp, #0]
9000cf88:	4619      	mov	r1, r3
9000cf8a:	f7ff ffa7 	bl	9000cedc <xTimerGenericCommand>
				configASSERT( xResult );
9000cf8e:	2800      	cmp	r0, #0
9000cf90:	d1d2      	bne.n	9000cf38 <prvSwitchTimerLists+0x8>
9000cf92:	f04f 0350 	mov.w	r3, #80	; 0x50
9000cf96:	f383 8811 	msr	BASEPRI, r3
9000cf9a:	f3bf 8f6f 	isb	sy
9000cf9e:	f3bf 8f4f 	dsb	sy
9000cfa2:	e7fe      	b.n	9000cfa2 <prvSwitchTimerLists+0x72>
9000cfa4:	240129a8 	.word	0x240129a8
9000cfa8:	240129ac 	.word	0x240129ac

9000cfac <prvTimerTask>:
{
9000cfac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000cfb0:	4f77      	ldr	r7, [pc, #476]	; (9000d190 <prvTimerTask+0x1e4>)
{
9000cfb2:	b087      	sub	sp, #28
					portYIELD_WITHIN_API();
9000cfb4:	f8df a1e8 	ldr.w	sl, [pc, #488]	; 9000d1a0 <prvTimerTask+0x1f4>
9000cfb8:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000cfba:	683b      	ldr	r3, [r7, #0]
9000cfbc:	f8d3 b000 	ldr.w	fp, [r3]
9000cfc0:	f1bb 0f00 	cmp.w	fp, #0
9000cfc4:	d028      	beq.n	9000d018 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000cfc6:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000cfc8:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000cfca:	f8d3 b000 	ldr.w	fp, [r3]
	if( xTimeNow < xLastTime )
9000cfce:	4e71      	ldr	r6, [pc, #452]	; (9000d194 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
9000cfd0:	f7ff fb5a 	bl	9000c688 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000cfd4:	f7ff fb60 	bl	9000c698 <xTaskGetTickCount>
9000cfd8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
9000cfda:	6833      	ldr	r3, [r6, #0]
9000cfdc:	46b0      	mov	r8, r6
9000cfde:	4298      	cmp	r0, r3
9000cfe0:	d31c      	bcc.n	9000d01c <prvTimerTask+0x70>
	xLastTime = xTimeNow;
9000cfe2:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000cfe4:	b31c      	cbz	r4, 9000d02e <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000cfe6:	4b6c      	ldr	r3, [pc, #432]	; (9000d198 <prvTimerTask+0x1ec>)
9000cfe8:	681b      	ldr	r3, [r3, #0]
9000cfea:	681c      	ldr	r4, [r3, #0]
9000cfec:	fab4 f484 	clz	r4, r4
9000cff0:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9000cff2:	4b6a      	ldr	r3, [pc, #424]	; (9000d19c <prvTimerTask+0x1f0>)
9000cff4:	4622      	mov	r2, r4
9000cff6:	ebab 0105 	sub.w	r1, fp, r5
9000cffa:	6818      	ldr	r0, [r3, #0]
9000cffc:	f7ff f951 	bl	9000c2a2 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9000d000:	f7ff fbe6 	bl	9000c7d0 <xTaskResumeAll>
9000d004:	b978      	cbnz	r0, 9000d026 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
9000d006:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
9000d00a:	f8ca 3000 	str.w	r3, [sl]
9000d00e:	f3bf 8f4f 	dsb	sy
9000d012:	f3bf 8f6f 	isb	sy
9000d016:	e006      	b.n	9000d026 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000d018:	2401      	movs	r4, #1
9000d01a:	e7d8      	b.n	9000cfce <prvTimerTask+0x22>
		prvSwitchTimerLists();
9000d01c:	f7ff ff88 	bl	9000cf30 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9000d020:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
9000d022:	f7ff fbd5 	bl	9000c7d0 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
9000d026:	4e5d      	ldr	r6, [pc, #372]	; (9000d19c <prvTimerTask+0x1f0>)
9000d028:	f04f 0b00 	mov.w	fp, #0
9000d02c:	e035      	b.n	9000d09a <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000d02e:	4583      	cmp	fp, r0
9000d030:	d8df      	bhi.n	9000cff2 <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
9000d032:	f7ff fbcd 	bl	9000c7d0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000d036:	f8d9 3000 	ldr.w	r3, [r9]
9000d03a:	68db      	ldr	r3, [r3, #12]
9000d03c:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000d03e:	1d30      	adds	r0, r6, #4
9000d040:	f7fe fa93 	bl	9000b56a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000d044:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
9000d048:	0758      	lsls	r0, r3, #29
9000d04a:	d518      	bpl.n	9000d07e <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000d04c:	69b1      	ldr	r1, [r6, #24]
9000d04e:	465b      	mov	r3, fp
9000d050:	462a      	mov	r2, r5
9000d052:	4630      	mov	r0, r6
9000d054:	4459      	add	r1, fp
9000d056:	f7ff fef1 	bl	9000ce3c <prvInsertTimerInActiveList>
9000d05a:	b1a0      	cbz	r0, 9000d086 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
9000d05c:	4623      	mov	r3, r4
9000d05e:	465a      	mov	r2, fp
9000d060:	4621      	mov	r1, r4
9000d062:	4630      	mov	r0, r6
9000d064:	9400      	str	r4, [sp, #0]
9000d066:	f7ff ff39 	bl	9000cedc <xTimerGenericCommand>
			configASSERT( xResult );
9000d06a:	b960      	cbnz	r0, 9000d086 <prvTimerTask+0xda>
9000d06c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d070:	f383 8811 	msr	BASEPRI, r3
9000d074:	f3bf 8f6f 	isb	sy
9000d078:	f3bf 8f4f 	dsb	sy
9000d07c:	e7fe      	b.n	9000d07c <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000d07e:	f023 0301 	bic.w	r3, r3, #1
9000d082:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000d086:	6a33      	ldr	r3, [r6, #32]
9000d088:	4630      	mov	r0, r6
9000d08a:	4798      	blx	r3
}
9000d08c:	e7cb      	b.n	9000d026 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000d08e:	9b03      	ldr	r3, [sp, #12]
9000d090:	9905      	ldr	r1, [sp, #20]
9000d092:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
9000d094:	9b02      	ldr	r3, [sp, #8]
9000d096:	2b00      	cmp	r3, #0
9000d098:	da0a      	bge.n	9000d0b0 <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
9000d09a:	2200      	movs	r2, #0
9000d09c:	a902      	add	r1, sp, #8
9000d09e:	6830      	ldr	r0, [r6, #0]
9000d0a0:	f7fe ff0c 	bl	9000bebc <xQueueReceive>
9000d0a4:	2800      	cmp	r0, #0
9000d0a6:	d088      	beq.n	9000cfba <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000d0a8:	9b02      	ldr	r3, [sp, #8]
9000d0aa:	9804      	ldr	r0, [sp, #16]
9000d0ac:	2b00      	cmp	r3, #0
9000d0ae:	dbee      	blt.n	9000d08e <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9000d0b0:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9000d0b2:	6963      	ldr	r3, [r4, #20]
9000d0b4:	b9a3      	cbnz	r3, 9000d0e0 <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
9000d0b6:	f7ff faef 	bl	9000c698 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000d0ba:	f8d8 3000 	ldr.w	r3, [r8]
	xTimeNow = xTaskGetTickCount();
9000d0be:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
9000d0c0:	4298      	cmp	r0, r3
9000d0c2:	d201      	bcs.n	9000d0c8 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
9000d0c4:	f7ff ff34 	bl	9000cf30 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9000d0c8:	9b02      	ldr	r3, [sp, #8]
9000d0ca:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
9000d0ce:	2b09      	cmp	r3, #9
9000d0d0:	d8e3      	bhi.n	9000d09a <prvTimerTask+0xee>
9000d0d2:	e8df f003 	tbb	[pc, r3]
9000d0d6:	0909      	.short	0x0909
9000d0d8:	543b3409 	.word	0x543b3409
9000d0dc:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000d0e0:	1d20      	adds	r0, r4, #4
9000d0e2:	f7fe fa42 	bl	9000b56a <uxListRemove>
9000d0e6:	e7e6      	b.n	9000d0b6 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000d0e8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000d0ec:	462a      	mov	r2, r5
9000d0ee:	69a1      	ldr	r1, [r4, #24]
9000d0f0:	4620      	mov	r0, r4
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000d0f2:	f043 0301 	orr.w	r3, r3, #1
9000d0f6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000d0fa:	9b03      	ldr	r3, [sp, #12]
9000d0fc:	4419      	add	r1, r3
9000d0fe:	f7ff fe9d 	bl	9000ce3c <prvInsertTimerInActiveList>
9000d102:	2800      	cmp	r0, #0
9000d104:	d0c9      	beq.n	9000d09a <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000d106:	6a23      	ldr	r3, [r4, #32]
9000d108:	4620      	mov	r0, r4
9000d10a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000d10c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9000d110:	0759      	lsls	r1, r3, #29
9000d112:	d5c2      	bpl.n	9000d09a <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000d114:	69a2      	ldr	r2, [r4, #24]
9000d116:	2300      	movs	r3, #0
9000d118:	9903      	ldr	r1, [sp, #12]
9000d11a:	4620      	mov	r0, r4
9000d11c:	f8cd b000 	str.w	fp, [sp]
9000d120:	440a      	add	r2, r1
9000d122:	4619      	mov	r1, r3
9000d124:	f7ff feda 	bl	9000cedc <xTimerGenericCommand>
							configASSERT( xResult );
9000d128:	2800      	cmp	r0, #0
9000d12a:	d1b6      	bne.n	9000d09a <prvTimerTask+0xee>
9000d12c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d130:	f383 8811 	msr	BASEPRI, r3
9000d134:	f3bf 8f6f 	isb	sy
9000d138:	f3bf 8f4f 	dsb	sy
9000d13c:	e7fe      	b.n	9000d13c <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000d13e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000d142:	f023 0301 	bic.w	r3, r3, #1
9000d146:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
9000d14a:	e7a6      	b.n	9000d09a <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000d14c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000d150:	9903      	ldr	r1, [sp, #12]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000d152:	f043 0301 	orr.w	r3, r3, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000d156:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000d158:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000d15c:	b941      	cbnz	r1, 9000d170 <prvTimerTask+0x1c4>
9000d15e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d162:	f383 8811 	msr	BASEPRI, r3
9000d166:	f3bf 8f6f 	isb	sy
9000d16a:	f3bf 8f4f 	dsb	sy
9000d16e:	e7fe      	b.n	9000d16e <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
9000d170:	462b      	mov	r3, r5
9000d172:	462a      	mov	r2, r5
9000d174:	4429      	add	r1, r5
9000d176:	4620      	mov	r0, r4
9000d178:	f7ff fe60 	bl	9000ce3c <prvInsertTimerInActiveList>
					break;
9000d17c:	e78d      	b.n	9000d09a <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
9000d17e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9000d182:	079a      	lsls	r2, r3, #30
9000d184:	d4dd      	bmi.n	9000d142 <prvTimerTask+0x196>
							vPortFree( pxTimer );
9000d186:	4620      	mov	r0, r4
9000d188:	f7fe f980 	bl	9000b48c <vPortFree>
9000d18c:	e785      	b.n	9000d09a <prvTimerTask+0xee>
9000d18e:	bf00      	nop
9000d190:	240129a8 	.word	0x240129a8
9000d194:	24012a78 	.word	0x24012a78
9000d198:	240129ac 	.word	0x240129ac
9000d19c:	24012acc 	.word	0x24012acc
9000d1a0:	e000ed04 	.word	0xe000ed04

9000d1a4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9000d1a4:	8880      	ldrh	r0, [r0, #4]
9000d1a6:	4770      	bx	lr

9000d1a8 <_ZN8touchgfx17AbstractPartition5clearEv>:
9000d1a8:	2300      	movs	r3, #0
9000d1aa:	8083      	strh	r3, [r0, #4]
9000d1ac:	4770      	bx	lr
	...

9000d1b0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
9000d1b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000d1b2:	6803      	ldr	r3, [r0, #0]
9000d1b4:	460e      	mov	r6, r1
9000d1b6:	2100      	movs	r1, #0
9000d1b8:	4605      	mov	r5, r0
9000d1ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000d1bc:	4798      	blx	r3
9000d1be:	4604      	mov	r4, r0
9000d1c0:	682b      	ldr	r3, [r5, #0]
9000d1c2:	4628      	mov	r0, r5
9000d1c4:	1b34      	subs	r4, r6, r4
9000d1c6:	6a1b      	ldr	r3, [r3, #32]
9000d1c8:	b2a4      	uxth	r4, r4
9000d1ca:	4798      	blx	r3
9000d1cc:	88ab      	ldrh	r3, [r5, #4]
9000d1ce:	fbb4 f4f0 	udiv	r4, r4, r0
9000d1d2:	42a3      	cmp	r3, r4
9000d1d4:	d805      	bhi.n	9000d1e2 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
9000d1d6:	4b0e      	ldr	r3, [pc, #56]	; (9000d210 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
9000d1d8:	2120      	movs	r1, #32
9000d1da:	4a0e      	ldr	r2, [pc, #56]	; (9000d214 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
9000d1dc:	480e      	ldr	r0, [pc, #56]	; (9000d218 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
9000d1de:	f012 f861 	bl	9001f2a4 <__assert_func>
9000d1e2:	682b      	ldr	r3, [r5, #0]
9000d1e4:	2100      	movs	r1, #0
9000d1e6:	4628      	mov	r0, r5
9000d1e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000d1ea:	4798      	blx	r3
9000d1ec:	682b      	ldr	r3, [r5, #0]
9000d1ee:	4607      	mov	r7, r0
9000d1f0:	4628      	mov	r0, r5
9000d1f2:	6a1b      	ldr	r3, [r3, #32]
9000d1f4:	4798      	blx	r3
9000d1f6:	1bf3      	subs	r3, r6, r7
9000d1f8:	b29b      	uxth	r3, r3
9000d1fa:	fbb3 f2f0 	udiv	r2, r3, r0
9000d1fe:	fb02 3010 	mls	r0, r2, r0, r3
9000d202:	b118      	cbz	r0, 9000d20c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
9000d204:	4b05      	ldr	r3, [pc, #20]	; (9000d21c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
9000d206:	2121      	movs	r1, #33	; 0x21
9000d208:	4a02      	ldr	r2, [pc, #8]	; (9000d214 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
9000d20a:	e7e7      	b.n	9000d1dc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
9000d20c:	4620      	mov	r0, r4
9000d20e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000d210:	900219a4 	.word	0x900219a4
9000d214:	90021b12 	.word	0x90021b12
9000d218:	900219b9 	.word	0x900219b9
9000d21c:	900219e7 	.word	0x900219e7

9000d220 <_ZN8touchgfx17AbstractPartition8allocateEt>:
9000d220:	b538      	push	{r3, r4, r5, lr}
9000d222:	6803      	ldr	r3, [r0, #0]
9000d224:	460d      	mov	r5, r1
9000d226:	4604      	mov	r4, r0
9000d228:	6a1b      	ldr	r3, [r3, #32]
9000d22a:	4798      	blx	r3
9000d22c:	4285      	cmp	r5, r0
9000d22e:	d905      	bls.n	9000d23c <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
9000d230:	4b0c      	ldr	r3, [pc, #48]	; (9000d264 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
9000d232:	2132      	movs	r1, #50	; 0x32
9000d234:	4a0c      	ldr	r2, [pc, #48]	; (9000d268 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
9000d236:	480d      	ldr	r0, [pc, #52]	; (9000d26c <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
9000d238:	f012 f834 	bl	9001f2a4 <__assert_func>
9000d23c:	6823      	ldr	r3, [r4, #0]
9000d23e:	4620      	mov	r0, r4
9000d240:	88a5      	ldrh	r5, [r4, #4]
9000d242:	69db      	ldr	r3, [r3, #28]
9000d244:	4798      	blx	r3
9000d246:	4285      	cmp	r5, r0
9000d248:	d303      	bcc.n	9000d252 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
9000d24a:	4b09      	ldr	r3, [pc, #36]	; (9000d270 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
9000d24c:	2133      	movs	r1, #51	; 0x33
9000d24e:	4a06      	ldr	r2, [pc, #24]	; (9000d268 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
9000d250:	e7f1      	b.n	9000d236 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
9000d252:	6823      	ldr	r3, [r4, #0]
9000d254:	4620      	mov	r0, r4
9000d256:	88a1      	ldrh	r1, [r4, #4]
9000d258:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000d25a:	4798      	blx	r3
9000d25c:	88a3      	ldrh	r3, [r4, #4]
9000d25e:	3301      	adds	r3, #1
9000d260:	80a3      	strh	r3, [r4, #4]
9000d262:	bd38      	pop	{r3, r4, r5, pc}
9000d264:	90021a61 	.word	0x90021a61
9000d268:	90021b55 	.word	0x90021b55
9000d26c:	900219b9 	.word	0x900219b9
9000d270:	90021a78 	.word	0x90021a78

9000d274 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9000d274:	b570      	push	{r4, r5, r6, lr}
9000d276:	6803      	ldr	r3, [r0, #0]
9000d278:	4616      	mov	r6, r2
9000d27a:	4604      	mov	r4, r0
9000d27c:	460d      	mov	r5, r1
9000d27e:	6a1b      	ldr	r3, [r3, #32]
9000d280:	4798      	blx	r3
9000d282:	4286      	cmp	r6, r0
9000d284:	d905      	bls.n	9000d292 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
9000d286:	4b06      	ldr	r3, [pc, #24]	; (9000d2a0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
9000d288:	213c      	movs	r1, #60	; 0x3c
9000d28a:	4a06      	ldr	r2, [pc, #24]	; (9000d2a4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
9000d28c:	4806      	ldr	r0, [pc, #24]	; (9000d2a8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
9000d28e:	f012 f809 	bl	9001f2a4 <__assert_func>
9000d292:	6823      	ldr	r3, [r4, #0]
9000d294:	4629      	mov	r1, r5
9000d296:	4620      	mov	r0, r4
9000d298:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000d29a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000d29e:	4718      	bx	r3
9000d2a0:	90021a61 	.word	0x90021a61
9000d2a4:	90021ac8 	.word	0x90021ac8
9000d2a8:	900219b9 	.word	0x900219b9

9000d2ac <_ZN8touchgfx17AbstractPartitionD1Ev>:
9000d2ac:	4770      	bx	lr
	...

9000d2b0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
9000d2b0:	4a02      	ldr	r2, [pc, #8]	; (9000d2bc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9000d2b2:	6002      	str	r2, [r0, #0]
9000d2b4:	2200      	movs	r2, #0
9000d2b6:	8082      	strh	r2, [r0, #4]
9000d2b8:	4770      	bx	lr
9000d2ba:	bf00      	nop
9000d2bc:	90021a9c 	.word	0x90021a9c

9000d2c0 <_ZN8touchgfx9Container13getFirstChildEv>:
9000d2c0:	6a80      	ldr	r0, [r0, #40]	; 0x28
9000d2c2:	4770      	bx	lr

9000d2c4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
9000d2c4:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000d2c6:	2000      	movs	r0, #0
9000d2c8:	b12b      	cbz	r3, 9000d2d6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000d2ca:	b920      	cbnz	r0, 9000d2d6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000d2cc:	1a5a      	subs	r2, r3, r1
9000d2ce:	699b      	ldr	r3, [r3, #24]
9000d2d0:	4250      	negs	r0, r2
9000d2d2:	4150      	adcs	r0, r2
9000d2d4:	e7f8      	b.n	9000d2c8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9000d2d6:	4770      	bx	lr

9000d2d8 <_ZN8touchgfx9Container9removeAllEv>:
9000d2d8:	2200      	movs	r2, #0
9000d2da:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000d2dc:	b123      	cbz	r3, 9000d2e8 <_ZN8touchgfx9Container9removeAllEv+0x10>
9000d2de:	6999      	ldr	r1, [r3, #24]
9000d2e0:	6281      	str	r1, [r0, #40]	; 0x28
9000d2e2:	e9c3 2205 	strd	r2, r2, [r3, #20]
9000d2e6:	e7f8      	b.n	9000d2da <_ZN8touchgfx9Container9removeAllEv+0x2>
9000d2e8:	4770      	bx	lr

9000d2ea <_ZN8touchgfx9Container6unlinkEv>:
9000d2ea:	2300      	movs	r3, #0
9000d2ec:	6283      	str	r3, [r0, #40]	; 0x28
9000d2ee:	4770      	bx	lr

9000d2f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
9000d2f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000d2f4:	461f      	mov	r7, r3
9000d2f6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
9000d2fa:	460d      	mov	r5, r1
9000d2fc:	4616      	mov	r6, r2
9000d2fe:	b103      	cbz	r3, 9000d302 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
9000d300:	6038      	str	r0, [r7, #0]
9000d302:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000d304:	b314      	cbz	r4, 9000d34c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9000d306:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9000d30a:	b1eb      	cbz	r3, 9000d348 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000d30c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9000d310:	428d      	cmp	r5, r1
9000d312:	db19      	blt.n	9000d348 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000d314:	b289      	uxth	r1, r1
9000d316:	8923      	ldrh	r3, [r4, #8]
9000d318:	440b      	add	r3, r1
9000d31a:	b21b      	sxth	r3, r3
9000d31c:	429d      	cmp	r5, r3
9000d31e:	da13      	bge.n	9000d348 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000d320:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9000d324:	4296      	cmp	r6, r2
9000d326:	db0f      	blt.n	9000d348 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000d328:	b292      	uxth	r2, r2
9000d32a:	8963      	ldrh	r3, [r4, #10]
9000d32c:	4413      	add	r3, r2
9000d32e:	b21b      	sxth	r3, r3
9000d330:	429e      	cmp	r6, r3
9000d332:	da09      	bge.n	9000d348 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000d334:	6823      	ldr	r3, [r4, #0]
9000d336:	1ab2      	subs	r2, r6, r2
9000d338:	1a69      	subs	r1, r5, r1
9000d33a:	4620      	mov	r0, r4
9000d33c:	f8d3 8020 	ldr.w	r8, [r3, #32]
9000d340:	b212      	sxth	r2, r2
9000d342:	463b      	mov	r3, r7
9000d344:	b209      	sxth	r1, r1
9000d346:	47c0      	blx	r8
9000d348:	69a4      	ldr	r4, [r4, #24]
9000d34a:	e7db      	b.n	9000d304 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
9000d34c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000d350 <_ZNK8touchgfx9Container12getSolidRectEv>:
9000d350:	2200      	movs	r2, #0
9000d352:	8002      	strh	r2, [r0, #0]
9000d354:	8042      	strh	r2, [r0, #2]
9000d356:	8082      	strh	r2, [r0, #4]
9000d358:	80c2      	strh	r2, [r0, #6]
9000d35a:	4770      	bx	lr

9000d35c <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9000d35c:	b570      	push	{r4, r5, r6, lr}
9000d35e:	460d      	mov	r5, r1
9000d360:	4616      	mov	r6, r2
9000d362:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000d364:	b13c      	cbz	r4, 9000d376 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
9000d366:	6823      	ldr	r3, [r4, #0]
9000d368:	4620      	mov	r0, r4
9000d36a:	4632      	mov	r2, r6
9000d36c:	4629      	mov	r1, r5
9000d36e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9000d370:	4798      	blx	r3
9000d372:	69a4      	ldr	r4, [r4, #24]
9000d374:	e7f6      	b.n	9000d364 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
9000d376:	bd70      	pop	{r4, r5, r6, pc}

9000d378 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
9000d378:	b538      	push	{r3, r4, r5, lr}
9000d37a:	460d      	mov	r5, r1
9000d37c:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000d37e:	b134      	cbz	r4, 9000d38e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9000d380:	682b      	ldr	r3, [r5, #0]
9000d382:	4621      	mov	r1, r4
9000d384:	4628      	mov	r0, r5
9000d386:	689b      	ldr	r3, [r3, #8]
9000d388:	4798      	blx	r3
9000d38a:	69a4      	ldr	r4, [r4, #24]
9000d38c:	e7f7      	b.n	9000d37e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
9000d38e:	bd38      	pop	{r3, r4, r5, pc}

9000d390 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9000d390:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000d392:	b19b      	cbz	r3, 9000d3bc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000d394:	428b      	cmp	r3, r1
9000d396:	d109      	bne.n	9000d3ac <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
9000d398:	699a      	ldr	r2, [r3, #24]
9000d39a:	2100      	movs	r1, #0
9000d39c:	6159      	str	r1, [r3, #20]
9000d39e:	6282      	str	r2, [r0, #40]	; 0x28
9000d3a0:	b902      	cbnz	r2, 9000d3a4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
9000d3a2:	4770      	bx	lr
9000d3a4:	6199      	str	r1, [r3, #24]
9000d3a6:	4770      	bx	lr
9000d3a8:	4613      	mov	r3, r2
9000d3aa:	b13a      	cbz	r2, 9000d3bc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000d3ac:	699a      	ldr	r2, [r3, #24]
9000d3ae:	428a      	cmp	r2, r1
9000d3b0:	d1fa      	bne.n	9000d3a8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
9000d3b2:	698a      	ldr	r2, [r1, #24]
9000d3b4:	619a      	str	r2, [r3, #24]
9000d3b6:	2300      	movs	r3, #0
9000d3b8:	e9c1 3305 	strd	r3, r3, [r1, #20]
9000d3bc:	4770      	bx	lr

9000d3be <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
9000d3be:	b410      	push	{r4}
9000d3c0:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000d3c2:	4604      	mov	r4, r0
9000d3c4:	b92b      	cbnz	r3, 9000d3d2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
9000d3c6:	6803      	ldr	r3, [r0, #0]
9000d3c8:	4611      	mov	r1, r2
9000d3ca:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d3ce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9000d3d0:	4718      	bx	r3
9000d3d2:	b941      	cbnz	r1, 9000d3e6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
9000d3d4:	6193      	str	r3, [r2, #24]
9000d3d6:	6282      	str	r2, [r0, #40]	; 0x28
9000d3d8:	6154      	str	r4, [r2, #20]
9000d3da:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d3de:	4770      	bx	lr
9000d3e0:	4603      	mov	r3, r0
9000d3e2:	2800      	cmp	r0, #0
9000d3e4:	d0f9      	beq.n	9000d3da <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
9000d3e6:	4299      	cmp	r1, r3
9000d3e8:	6998      	ldr	r0, [r3, #24]
9000d3ea:	d1f9      	bne.n	9000d3e0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9000d3ec:	6190      	str	r0, [r2, #24]
9000d3ee:	618a      	str	r2, [r1, #24]
9000d3f0:	e7f2      	b.n	9000d3d8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

9000d3f4 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9000d3f4:	4288      	cmp	r0, r1
9000d3f6:	b508      	push	{r3, lr}
9000d3f8:	d105      	bne.n	9000d406 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
9000d3fa:	4b11      	ldr	r3, [pc, #68]	; (9000d440 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
9000d3fc:	2123      	movs	r1, #35	; 0x23
9000d3fe:	4a11      	ldr	r2, [pc, #68]	; (9000d444 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
9000d400:	4811      	ldr	r0, [pc, #68]	; (9000d448 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
9000d402:	f011 ff4f 	bl	9001f2a4 <__assert_func>
9000d406:	694b      	ldr	r3, [r1, #20]
9000d408:	b11b      	cbz	r3, 9000d412 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
9000d40a:	4b10      	ldr	r3, [pc, #64]	; (9000d44c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
9000d40c:	2124      	movs	r1, #36	; 0x24
9000d40e:	4a0d      	ldr	r2, [pc, #52]	; (9000d444 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
9000d410:	e7f6      	b.n	9000d400 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
9000d412:	e9c1 0305 	strd	r0, r3, [r1, #20]
9000d416:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000d418:	b913      	cbnz	r3, 9000d420 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
9000d41a:	6281      	str	r1, [r0, #40]	; 0x28
9000d41c:	bd08      	pop	{r3, pc}
9000d41e:	4613      	mov	r3, r2
9000d420:	699a      	ldr	r2, [r3, #24]
9000d422:	b12a      	cbz	r2, 9000d430 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
9000d424:	428b      	cmp	r3, r1
9000d426:	d1fa      	bne.n	9000d41e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
9000d428:	4b09      	ldr	r3, [pc, #36]	; (9000d450 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
9000d42a:	2135      	movs	r1, #53	; 0x35
9000d42c:	4a05      	ldr	r2, [pc, #20]	; (9000d444 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
9000d42e:	e7e7      	b.n	9000d400 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
9000d430:	428b      	cmp	r3, r1
9000d432:	d103      	bne.n	9000d43c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
9000d434:	4b06      	ldr	r3, [pc, #24]	; (9000d450 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
9000d436:	2138      	movs	r1, #56	; 0x38
9000d438:	4a02      	ldr	r2, [pc, #8]	; (9000d444 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
9000d43a:	e7e1      	b.n	9000d400 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
9000d43c:	6199      	str	r1, [r3, #24]
9000d43e:	e7ed      	b.n	9000d41c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
9000d440:	90021b93 	.word	0x90021b93
9000d444:	90021ce4 	.word	0x90021ce4
9000d448:	90021bbf 	.word	0x90021bbf
9000d44c:	90021bf2 	.word	0x90021bf2
9000d450:	90021c28 	.word	0x90021c28

9000d454 <_ZN8touchgfx4RectaNERKS0_>:
9000d454:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000d458:	f9b1 7000 	ldrsh.w	r7, [r1]
9000d45c:	888c      	ldrh	r4, [r1, #4]
9000d45e:	f9b0 9000 	ldrsh.w	r9, [r0]
9000d462:	443c      	add	r4, r7
9000d464:	b2a4      	uxth	r4, r4
9000d466:	fa0f f884 	sxth.w	r8, r4
9000d46a:	45c1      	cmp	r9, r8
9000d46c:	da2f      	bge.n	9000d4ce <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000d46e:	8882      	ldrh	r2, [r0, #4]
9000d470:	444a      	add	r2, r9
9000d472:	b292      	uxth	r2, r2
9000d474:	fa0f fe82 	sxth.w	lr, r2
9000d478:	4577      	cmp	r7, lr
9000d47a:	da28      	bge.n	9000d4ce <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000d47c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
9000d480:	88cb      	ldrh	r3, [r1, #6]
9000d482:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9000d486:	442b      	add	r3, r5
9000d488:	b21b      	sxth	r3, r3
9000d48a:	429e      	cmp	r6, r3
9000d48c:	da1f      	bge.n	9000d4ce <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000d48e:	88c3      	ldrh	r3, [r0, #6]
9000d490:	4433      	add	r3, r6
9000d492:	b29b      	uxth	r3, r3
9000d494:	fa0f fc83 	sxth.w	ip, r3
9000d498:	4565      	cmp	r5, ip
9000d49a:	da18      	bge.n	9000d4ce <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000d49c:	454f      	cmp	r7, r9
9000d49e:	bfb8      	it	lt
9000d4a0:	464f      	movlt	r7, r9
9000d4a2:	42b5      	cmp	r5, r6
9000d4a4:	bfb8      	it	lt
9000d4a6:	4635      	movlt	r5, r6
9000d4a8:	45f0      	cmp	r8, lr
9000d4aa:	bfd8      	it	le
9000d4ac:	4622      	movle	r2, r4
9000d4ae:	1bd2      	subs	r2, r2, r7
9000d4b0:	8082      	strh	r2, [r0, #4]
9000d4b2:	884a      	ldrh	r2, [r1, #2]
9000d4b4:	88c9      	ldrh	r1, [r1, #6]
9000d4b6:	8007      	strh	r7, [r0, #0]
9000d4b8:	440a      	add	r2, r1
9000d4ba:	8045      	strh	r5, [r0, #2]
9000d4bc:	b292      	uxth	r2, r2
9000d4be:	b211      	sxth	r1, r2
9000d4c0:	458c      	cmp	ip, r1
9000d4c2:	bfa8      	it	ge
9000d4c4:	4613      	movge	r3, r2
9000d4c6:	1b5b      	subs	r3, r3, r5
9000d4c8:	80c3      	strh	r3, [r0, #6]
9000d4ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000d4ce:	2300      	movs	r3, #0
9000d4d0:	8003      	strh	r3, [r0, #0]
9000d4d2:	8043      	strh	r3, [r0, #2]
9000d4d4:	8083      	strh	r3, [r0, #4]
9000d4d6:	80c3      	strh	r3, [r0, #6]
9000d4d8:	e7f7      	b.n	9000d4ca <_ZN8touchgfx4RectaNERKS0_+0x76>

9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>:
9000d4da:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9000d4de:	2b00      	cmp	r3, #0
9000d4e0:	dd06      	ble.n	9000d4f0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
9000d4e2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9000d4e6:	2800      	cmp	r0, #0
9000d4e8:	bfcc      	ite	gt
9000d4ea:	2000      	movgt	r0, #0
9000d4ec:	2001      	movle	r0, #1
9000d4ee:	4770      	bx	lr
9000d4f0:	2001      	movs	r0, #1
9000d4f2:	4770      	bx	lr

9000d4f4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
9000d4f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000d4f8:	2300      	movs	r3, #0
9000d4fa:	4604      	mov	r4, r0
9000d4fc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
9000d4fe:	8003      	strh	r3, [r0, #0]
9000d500:	8043      	strh	r3, [r0, #2]
9000d502:	8083      	strh	r3, [r0, #4]
9000d504:	80c3      	strh	r3, [r0, #6]
9000d506:	2d00      	cmp	r5, #0
9000d508:	d040      	beq.n	9000d58c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9000d50a:	1d28      	adds	r0, r5, #4
9000d50c:	f7ff ffe5 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
9000d510:	b988      	cbnz	r0, 9000d536 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9000d512:	4620      	mov	r0, r4
9000d514:	f7ff ffe1 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
9000d518:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9000d51c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
9000d520:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
9000d524:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
9000d528:	b138      	cbz	r0, 9000d53a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
9000d52a:	8022      	strh	r2, [r4, #0]
9000d52c:	8063      	strh	r3, [r4, #2]
9000d52e:	f8a4 e004 	strh.w	lr, [r4, #4]
9000d532:	f8a4 c006 	strh.w	ip, [r4, #6]
9000d536:	69ad      	ldr	r5, [r5, #24]
9000d538:	e7e5      	b.n	9000d506 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9000d53a:	f9b4 0000 	ldrsh.w	r0, [r4]
9000d53e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9000d542:	4290      	cmp	r0, r2
9000d544:	4607      	mov	r7, r0
9000d546:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9000d54a:	460e      	mov	r6, r1
9000d54c:	bfa8      	it	ge
9000d54e:	4617      	movge	r7, r2
9000d550:	4299      	cmp	r1, r3
9000d552:	4472      	add	r2, lr
9000d554:	f8b4 e006 	ldrh.w	lr, [r4, #6]
9000d558:	bfa8      	it	ge
9000d55a:	461e      	movge	r6, r3
9000d55c:	4440      	add	r0, r8
9000d55e:	4471      	add	r1, lr
9000d560:	4463      	add	r3, ip
9000d562:	b200      	sxth	r0, r0
9000d564:	8027      	strh	r7, [r4, #0]
9000d566:	b212      	sxth	r2, r2
9000d568:	8066      	strh	r6, [r4, #2]
9000d56a:	b209      	sxth	r1, r1
9000d56c:	b21b      	sxth	r3, r3
9000d56e:	4290      	cmp	r0, r2
9000d570:	bfac      	ite	ge
9000d572:	ebc7 0200 	rsbge	r2, r7, r0
9000d576:	ebc7 0202 	rsblt	r2, r7, r2
9000d57a:	4299      	cmp	r1, r3
9000d57c:	bfac      	ite	ge
9000d57e:	ebc6 0301 	rsbge	r3, r6, r1
9000d582:	ebc6 0303 	rsblt	r3, r6, r3
9000d586:	80a2      	strh	r2, [r4, #4]
9000d588:	80e3      	strh	r3, [r4, #6]
9000d58a:	e7d4      	b.n	9000d536 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9000d58c:	4620      	mov	r0, r4
9000d58e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000d592 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
9000d592:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9000d596:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
9000d59a:	b383      	cbz	r3, 9000d5fe <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9000d59c:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000d59e:	b374      	cbz	r4, 9000d5fe <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9000d5a0:	f9b1 5000 	ldrsh.w	r5, [r1]
9000d5a4:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
9000d5a8:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
9000d5ac:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
9000d5b0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9000d5b4:	b303      	cbz	r3, 9000d5f8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9000d5b6:	4668      	mov	r0, sp
9000d5b8:	1d21      	adds	r1, r4, #4
9000d5ba:	f8ad 5000 	strh.w	r5, [sp]
9000d5be:	f8ad 6002 	strh.w	r6, [sp, #2]
9000d5c2:	f8ad 7004 	strh.w	r7, [sp, #4]
9000d5c6:	f8ad 8006 	strh.w	r8, [sp, #6]
9000d5ca:	f7ff ff43 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
9000d5ce:	4668      	mov	r0, sp
9000d5d0:	f7ff ff83 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
9000d5d4:	b980      	cbnz	r0, 9000d5f8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9000d5d6:	f8bd 3000 	ldrh.w	r3, [sp]
9000d5da:	4669      	mov	r1, sp
9000d5dc:	88a2      	ldrh	r2, [r4, #4]
9000d5de:	4620      	mov	r0, r4
9000d5e0:	1a9b      	subs	r3, r3, r2
9000d5e2:	88e2      	ldrh	r2, [r4, #6]
9000d5e4:	f8ad 3000 	strh.w	r3, [sp]
9000d5e8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9000d5ec:	1a9b      	subs	r3, r3, r2
9000d5ee:	f8ad 3002 	strh.w	r3, [sp, #2]
9000d5f2:	6823      	ldr	r3, [r4, #0]
9000d5f4:	689b      	ldr	r3, [r3, #8]
9000d5f6:	4798      	blx	r3
9000d5f8:	69a4      	ldr	r4, [r4, #24]
9000d5fa:	2c00      	cmp	r4, #0
9000d5fc:	d1d8      	bne.n	9000d5b0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
9000d5fe:	b002      	add	sp, #8
9000d600:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000d604 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
9000d604:	b573      	push	{r0, r1, r4, r5, r6, lr}
9000d606:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
9000d60a:	460d      	mov	r5, r1
9000d60c:	4616      	mov	r6, r2
9000d60e:	b323      	cbz	r3, 9000d65a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9000d610:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000d612:	b314      	cbz	r4, 9000d65a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9000d614:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9000d618:	b1eb      	cbz	r3, 9000d656 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9000d61a:	6828      	ldr	r0, [r5, #0]
9000d61c:	466b      	mov	r3, sp
9000d61e:	6869      	ldr	r1, [r5, #4]
9000d620:	c303      	stmia	r3!, {r0, r1}
9000d622:	4668      	mov	r0, sp
9000d624:	1d21      	adds	r1, r4, #4
9000d626:	f7ff ff15 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
9000d62a:	4668      	mov	r0, sp
9000d62c:	f7ff ff55 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
9000d630:	b988      	cbnz	r0, 9000d656 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9000d632:	f8bd 3000 	ldrh.w	r3, [sp]
9000d636:	4669      	mov	r1, sp
9000d638:	88a2      	ldrh	r2, [r4, #4]
9000d63a:	4620      	mov	r0, r4
9000d63c:	1a9b      	subs	r3, r3, r2
9000d63e:	88e2      	ldrh	r2, [r4, #6]
9000d640:	f8ad 3000 	strh.w	r3, [sp]
9000d644:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9000d648:	1a9b      	subs	r3, r3, r2
9000d64a:	4632      	mov	r2, r6
9000d64c:	f8ad 3002 	strh.w	r3, [sp, #2]
9000d650:	6823      	ldr	r3, [r4, #0]
9000d652:	6d9b      	ldr	r3, [r3, #88]	; 0x58
9000d654:	4798      	blx	r3
9000d656:	69a4      	ldr	r4, [r4, #24]
9000d658:	e7db      	b.n	9000d612 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
9000d65a:	b002      	add	sp, #8
9000d65c:	bd70      	pop	{r4, r5, r6, pc}

9000d65e <_ZN8touchgfx3HAL15InvalidateCacheEv>:
9000d65e:	4770      	bx	lr

9000d660 <_ZN8touchgfx3HAL10FlushCacheEv>:
9000d660:	4770      	bx	lr

9000d662 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
9000d662:	6803      	ldr	r3, [r0, #0]
9000d664:	b513      	push	{r0, r1, r4, lr}
9000d666:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
9000d66a:	2300      	movs	r3, #0
9000d66c:	e9cd 3300 	strd	r3, r3, [sp]
9000d670:	466b      	mov	r3, sp
9000d672:	47a0      	blx	r4
9000d674:	b002      	add	sp, #8
9000d676:	bd10      	pop	{r4, pc}

9000d678 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
9000d678:	2301      	movs	r3, #1
9000d67a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
9000d67e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
9000d682:	4770      	bx	lr

9000d684 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
9000d684:	2301      	movs	r3, #1
9000d686:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
9000d68a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
9000d68e:	4770      	bx	lr

9000d690 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
9000d690:	6843      	ldr	r3, [r0, #4]
9000d692:	2201      	movs	r2, #1
9000d694:	725a      	strb	r2, [r3, #9]
9000d696:	6840      	ldr	r0, [r0, #4]
9000d698:	6803      	ldr	r3, [r0, #0]
9000d69a:	691b      	ldr	r3, [r3, #16]
9000d69c:	4718      	bx	r3

9000d69e <_ZN8touchgfx3HAL8flushDMAEv>:
9000d69e:	6840      	ldr	r0, [r0, #4]
9000d6a0:	6803      	ldr	r3, [r0, #0]
9000d6a2:	689b      	ldr	r3, [r3, #8]
9000d6a4:	4718      	bx	r3
	...

9000d6a8 <_ZN8touchgfx3HAL10beginFrameEv>:
9000d6a8:	4b04      	ldr	r3, [pc, #16]	; (9000d6bc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
9000d6aa:	781b      	ldrb	r3, [r3, #0]
9000d6ac:	b123      	cbz	r3, 9000d6b8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
9000d6ae:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
9000d6b2:	f080 0001 	eor.w	r0, r0, #1
9000d6b6:	4770      	bx	lr
9000d6b8:	2001      	movs	r0, #1
9000d6ba:	4770      	bx	lr
9000d6bc:	24012ade 	.word	0x24012ade

9000d6c0 <_ZN8touchgfx3HAL8endFrameEv>:
9000d6c0:	b510      	push	{r4, lr}
9000d6c2:	4604      	mov	r4, r0
9000d6c4:	6840      	ldr	r0, [r0, #4]
9000d6c6:	6803      	ldr	r3, [r0, #0]
9000d6c8:	689b      	ldr	r3, [r3, #8]
9000d6ca:	4798      	blx	r3
9000d6cc:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
9000d6d0:	b113      	cbz	r3, 9000d6d8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
9000d6d2:	2301      	movs	r3, #1
9000d6d4:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
9000d6d8:	bd10      	pop	{r4, pc}

9000d6da <_ZN8touchgfx3HAL9taskEntryEv>:
9000d6da:	b508      	push	{r3, lr}
9000d6dc:	6803      	ldr	r3, [r0, #0]
9000d6de:	4604      	mov	r4, r0
9000d6e0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
9000d6e2:	4798      	blx	r3
9000d6e4:	6823      	ldr	r3, [r4, #0]
9000d6e6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
9000d6e8:	4620      	mov	r0, r4
9000d6ea:	4798      	blx	r3
9000d6ec:	f7f3 fd40 	bl	90001170 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
9000d6f0:	6823      	ldr	r3, [r4, #0]
9000d6f2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
9000d6f4:	e7f8      	b.n	9000d6e8 <_ZN8touchgfx3HAL9taskEntryEv+0xe>
	...

9000d6f8 <_ZN8touchgfx3HAL4tickEv>:
9000d6f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9000d6fa:	6803      	ldr	r3, [r0, #0]
9000d6fc:	4604      	mov	r4, r0
9000d6fe:	4d5c      	ldr	r5, [pc, #368]	; (9000d870 <_ZN8touchgfx3HAL4tickEv+0x178>)
9000d700:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
9000d704:	4798      	blx	r3
9000d706:	2800      	cmp	r0, #0
9000d708:	f000 8097 	beq.w	9000d83a <_ZN8touchgfx3HAL4tickEv+0x142>
9000d70c:	2001      	movs	r0, #1
9000d70e:	2600      	movs	r6, #0
9000d710:	f7f3 f952 	bl	900009b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
9000d714:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
9000d718:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
9000d71c:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
9000d720:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
9000d724:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
9000d728:	b133      	cbz	r3, 9000d738 <_ZN8touchgfx3HAL4tickEv+0x40>
9000d72a:	6823      	ldr	r3, [r4, #0]
9000d72c:	4620      	mov	r0, r4
9000d72e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
9000d732:	4798      	blx	r3
9000d734:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
9000d738:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
9000d73c:	2601      	movs	r6, #1
9000d73e:	6862      	ldr	r2, [r4, #4]
9000d740:	f083 0301 	eor.w	r3, r3, #1
9000d744:	702e      	strb	r6, [r5, #0]
9000d746:	7253      	strb	r3, [r2, #9]
9000d748:	f002 ff76 	bl	90010638 <_ZN8touchgfx11Application11getInstanceEv>
9000d74c:	6803      	ldr	r3, [r0, #0]
9000d74e:	4631      	mov	r1, r6
9000d750:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000d752:	4798      	blx	r3
9000d754:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
9000d758:	b90b      	cbnz	r3, 9000d75e <_ZN8touchgfx3HAL4tickEv+0x66>
9000d75a:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
9000d75e:	f002 ff6b 	bl	90010638 <_ZN8touchgfx11Application11getInstanceEv>
9000d762:	6803      	ldr	r3, [r0, #0]
9000d764:	695b      	ldr	r3, [r3, #20]
9000d766:	4798      	blx	r3
9000d768:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000d76a:	6803      	ldr	r3, [r0, #0]
9000d76c:	691b      	ldr	r3, [r3, #16]
9000d76e:	4798      	blx	r3
9000d770:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
9000d774:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
9000d778:	3b01      	subs	r3, #1
9000d77a:	b2db      	uxtb	r3, r3
9000d77c:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
9000d780:	b10a      	cbz	r2, 9000d786 <_ZN8touchgfx3HAL4tickEv+0x8e>
9000d782:	2b00      	cmp	r3, #0
9000d784:	d1eb      	bne.n	9000d75e <_ZN8touchgfx3HAL4tickEv+0x66>
9000d786:	4a3b      	ldr	r2, [pc, #236]	; (9000d874 <_ZN8touchgfx3HAL4tickEv+0x17c>)
9000d788:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
9000d78c:	7813      	ldrb	r3, [r2, #0]
9000d78e:	3301      	adds	r3, #1
9000d790:	b25b      	sxtb	r3, r3
9000d792:	4299      	cmp	r1, r3
9000d794:	7013      	strb	r3, [r2, #0]
9000d796:	dc10      	bgt.n	9000d7ba <_ZN8touchgfx3HAL4tickEv+0xc2>
9000d798:	2300      	movs	r3, #0
9000d79a:	68e0      	ldr	r0, [r4, #12]
9000d79c:	a902      	add	r1, sp, #8
9000d79e:	7013      	strb	r3, [r2, #0]
9000d7a0:	aa03      	add	r2, sp, #12
9000d7a2:	6803      	ldr	r3, [r0, #0]
9000d7a4:	68db      	ldr	r3, [r3, #12]
9000d7a6:	4798      	blx	r3
9000d7a8:	6823      	ldr	r3, [r4, #0]
9000d7aa:	2800      	cmp	r0, #0
9000d7ac:	d051      	beq.n	9000d852 <_ZN8touchgfx3HAL4tickEv+0x15a>
9000d7ae:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
9000d7b2:	4620      	mov	r0, r4
9000d7b4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
9000d7b8:	4798      	blx	r3
9000d7ba:	2300      	movs	r3, #0
9000d7bc:	6960      	ldr	r0, [r4, #20]
9000d7be:	f88d 3007 	strb.w	r3, [sp, #7]
9000d7c2:	b158      	cbz	r0, 9000d7dc <_ZN8touchgfx3HAL4tickEv+0xe4>
9000d7c4:	6803      	ldr	r3, [r0, #0]
9000d7c6:	f10d 0107 	add.w	r1, sp, #7
9000d7ca:	68db      	ldr	r3, [r3, #12]
9000d7cc:	4798      	blx	r3
9000d7ce:	b128      	cbz	r0, 9000d7dc <_ZN8touchgfx3HAL4tickEv+0xe4>
9000d7d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000d7d2:	f89d 1007 	ldrb.w	r1, [sp, #7]
9000d7d6:	6803      	ldr	r3, [r0, #0]
9000d7d8:	68db      	ldr	r3, [r3, #12]
9000d7da:	4798      	blx	r3
9000d7dc:	f104 001c 	add.w	r0, r4, #28
9000d7e0:	f011 fc78 	bl	9001f0d4 <_ZN8touchgfx8Gestures4tickEv>
9000d7e4:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
9000d7e8:	b30b      	cbz	r3, 9000d82e <_ZN8touchgfx3HAL4tickEv+0x136>
9000d7ea:	6920      	ldr	r0, [r4, #16]
9000d7ec:	6803      	ldr	r3, [r0, #0]
9000d7ee:	691b      	ldr	r3, [r3, #16]
9000d7f0:	4798      	blx	r3
9000d7f2:	6f23      	ldr	r3, [r4, #112]	; 0x70
9000d7f4:	4606      	mov	r6, r0
9000d7f6:	b903      	cbnz	r3, 9000d7fa <_ZN8touchgfx3HAL4tickEv+0x102>
9000d7f8:	6720      	str	r0, [r4, #112]	; 0x70
9000d7fa:	6f23      	ldr	r3, [r4, #112]	; 0x70
9000d7fc:	4a1e      	ldr	r2, [pc, #120]	; (9000d878 <_ZN8touchgfx3HAL4tickEv+0x180>)
9000d7fe:	1af3      	subs	r3, r6, r3
9000d800:	4293      	cmp	r3, r2
9000d802:	d914      	bls.n	9000d82e <_ZN8touchgfx3HAL4tickEv+0x136>
9000d804:	6920      	ldr	r0, [r4, #16]
9000d806:	6803      	ldr	r3, [r0, #0]
9000d808:	699b      	ldr	r3, [r3, #24]
9000d80a:	4798      	blx	r3
9000d80c:	6f23      	ldr	r3, [r4, #112]	; 0x70
9000d80e:	2264      	movs	r2, #100	; 0x64
9000d810:	1af3      	subs	r3, r6, r3
9000d812:	fbb3 f3f2 	udiv	r3, r3, r2
9000d816:	fbb0 f0f3 	udiv	r0, r0, r3
9000d81a:	2800      	cmp	r0, #0
9000d81c:	dc1e      	bgt.n	9000d85c <_ZN8touchgfx3HAL4tickEv+0x164>
9000d81e:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
9000d822:	6920      	ldr	r0, [r4, #16]
9000d824:	2100      	movs	r1, #0
9000d826:	6803      	ldr	r3, [r0, #0]
9000d828:	69db      	ldr	r3, [r3, #28]
9000d82a:	4798      	blx	r3
9000d82c:	6726      	str	r6, [r4, #112]	; 0x70
9000d82e:	f002 ff03 	bl	90010638 <_ZN8touchgfx11Application11getInstanceEv>
9000d832:	6803      	ldr	r3, [r0, #0]
9000d834:	2100      	movs	r1, #0
9000d836:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000d838:	4798      	blx	r3
9000d83a:	6823      	ldr	r3, [r4, #0]
9000d83c:	4620      	mov	r0, r4
9000d83e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
9000d842:	4798      	blx	r3
9000d844:	2001      	movs	r0, #1
9000d846:	f7f3 f8f5 	bl	90000a34 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
9000d84a:	2300      	movs	r3, #0
9000d84c:	702b      	strb	r3, [r5, #0]
9000d84e:	b004      	add	sp, #16
9000d850:	bd70      	pop	{r4, r5, r6, pc}
9000d852:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
9000d856:	4620      	mov	r0, r4
9000d858:	4798      	blx	r3
9000d85a:	e7ae      	b.n	9000d7ba <_ZN8touchgfx3HAL4tickEv+0xc2>
9000d85c:	2863      	cmp	r0, #99	; 0x63
9000d85e:	bfcb      	itete	gt
9000d860:	2300      	movgt	r3, #0
9000d862:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
9000d866:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
9000d86a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
9000d86e:	e7d8      	b.n	9000d822 <_ZN8touchgfx3HAL4tickEv+0x12a>
9000d870:	24012ae4 	.word	0x24012ae4
9000d874:	24012ae5 	.word	0x24012ae5
9000d878:	05f5e100 	.word	0x05f5e100

9000d87c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
9000d87c:	f7f3 bc44 	b.w	90001108 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

9000d880 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
9000d880:	6581      	str	r1, [r0, #88]	; 0x58
9000d882:	301c      	adds	r0, #28
9000d884:	f011 bc24 	b.w	9001f0d0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

9000d888 <_ZN8touchgfx3HAL5touchEll>:
9000d888:	b530      	push	{r4, r5, lr}
9000d88a:	b087      	sub	sp, #28
9000d88c:	4604      	mov	r4, r0
9000d88e:	a804      	add	r0, sp, #16
9000d890:	e9cd 1204 	strd	r1, r2, [sp, #16]
9000d894:	f002 fc9a 	bl	900101cc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
9000d898:	9b04      	ldr	r3, [sp, #16]
9000d89a:	a906      	add	r1, sp, #24
9000d89c:	a803      	add	r0, sp, #12
9000d89e:	f8ad 300c 	strh.w	r3, [sp, #12]
9000d8a2:	9b05      	ldr	r3, [sp, #20]
9000d8a4:	f821 3d0a 	strh.w	r3, [r1, #-10]!
9000d8a8:	f002 fcce 	bl	90010248 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
9000d8ac:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
9000d8b0:	f104 001c 	add.w	r0, r4, #28
9000d8b4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
9000d8b8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
9000d8bc:	b189      	cbz	r1, 9000d8e2 <_ZN8touchgfx3HAL5touchEll+0x5a>
9000d8be:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
9000d8c2:	9300      	str	r3, [sp, #0]
9000d8c4:	4613      	mov	r3, r2
9000d8c6:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
9000d8ca:	462a      	mov	r2, r5
9000d8cc:	f011 fc10 	bl	9001f0f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
9000d8d0:	b128      	cbz	r0, 9000d8de <_ZN8touchgfx3HAL5touchEll+0x56>
9000d8d2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9000d8d6:	65e3      	str	r3, [r4, #92]	; 0x5c
9000d8d8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9000d8dc:	6623      	str	r3, [r4, #96]	; 0x60
9000d8de:	b007      	add	sp, #28
9000d8e0:	bd30      	pop	{r4, r5, pc}
9000d8e2:	f011 fc49 	bl	9001f178 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9000d8e6:	2301      	movs	r3, #1
9000d8e8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
9000d8ec:	e7f1      	b.n	9000d8d2 <_ZN8touchgfx3HAL5touchEll+0x4a>

9000d8ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
9000d8ee:	b570      	push	{r4, r5, r6, lr}
9000d8f0:	2b00      	cmp	r3, #0
9000d8f2:	d050      	beq.n	9000d996 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
9000d8f4:	ea81 0002 	eor.w	r0, r1, r2
9000d8f8:	07c6      	lsls	r6, r0, #31
9000d8fa:	d508      	bpl.n	9000d90e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
9000d8fc:	3a01      	subs	r2, #1
9000d8fe:	18cc      	adds	r4, r1, r3
9000d900:	42a1      	cmp	r1, r4
9000d902:	d048      	beq.n	9000d996 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
9000d904:	f812 0f01 	ldrb.w	r0, [r2, #1]!
9000d908:	f801 0b01 	strb.w	r0, [r1], #1
9000d90c:	e7f8      	b.n	9000d900 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
9000d90e:	07d5      	lsls	r5, r2, #31
9000d910:	bf42      	ittt	mi
9000d912:	f812 0b01 	ldrbmi.w	r0, [r2], #1
9000d916:	f103 33ff 	addmi.w	r3, r3, #4294967295
9000d91a:	f801 0b01 	strbmi.w	r0, [r1], #1
9000d91e:	2b01      	cmp	r3, #1
9000d920:	d915      	bls.n	9000d94e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
9000d922:	ea82 0001 	eor.w	r0, r2, r1
9000d926:	0784      	lsls	r4, r0, #30
9000d928:	d02d      	beq.n	9000d986 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
9000d92a:	1e94      	subs	r4, r2, #2
9000d92c:	4608      	mov	r0, r1
9000d92e:	18ce      	adds	r6, r1, r3
9000d930:	f834 5f02 	ldrh.w	r5, [r4, #2]!
9000d934:	f820 5b02 	strh.w	r5, [r0], #2
9000d938:	1a35      	subs	r5, r6, r0
9000d93a:	2d01      	cmp	r5, #1
9000d93c:	d8f8      	bhi.n	9000d930 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
9000d93e:	1e98      	subs	r0, r3, #2
9000d940:	f003 0301 	and.w	r3, r3, #1
9000d944:	f020 0001 	bic.w	r0, r0, #1
9000d948:	3002      	adds	r0, #2
9000d94a:	4401      	add	r1, r0
9000d94c:	4402      	add	r2, r0
9000d94e:	1f14      	subs	r4, r2, #4
9000d950:	4608      	mov	r0, r1
9000d952:	18ce      	adds	r6, r1, r3
9000d954:	1a35      	subs	r5, r6, r0
9000d956:	2d03      	cmp	r5, #3
9000d958:	d810      	bhi.n	9000d97c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
9000d95a:	089c      	lsrs	r4, r3, #2
9000d95c:	00a0      	lsls	r0, r4, #2
9000d95e:	4401      	add	r1, r0
9000d960:	3801      	subs	r0, #1
9000d962:	4402      	add	r2, r0
9000d964:	f06f 0003 	mvn.w	r0, #3
9000d968:	fb00 3404 	mla	r4, r0, r4, r3
9000d96c:	440c      	add	r4, r1
9000d96e:	42a1      	cmp	r1, r4
9000d970:	d011      	beq.n	9000d996 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
9000d972:	f812 3f01 	ldrb.w	r3, [r2, #1]!
9000d976:	f801 3b01 	strb.w	r3, [r1], #1
9000d97a:	e7f8      	b.n	9000d96e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
9000d97c:	f854 5f04 	ldr.w	r5, [r4, #4]!
9000d980:	f840 5b04 	str.w	r5, [r0], #4
9000d984:	e7e6      	b.n	9000d954 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
9000d986:	0790      	lsls	r0, r2, #30
9000d988:	d0e1      	beq.n	9000d94e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
9000d98a:	f832 0b02 	ldrh.w	r0, [r2], #2
9000d98e:	3b02      	subs	r3, #2
9000d990:	f821 0b02 	strh.w	r0, [r1], #2
9000d994:	e7db      	b.n	9000d94e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
9000d996:	2001      	movs	r0, #1
9000d998:	bd70      	pop	{r4, r5, r6, pc}

9000d99a <_ZN8touchgfx3HAL7noTouchEv>:
9000d99a:	b510      	push	{r4, lr}
9000d99c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
9000d9a0:	4604      	mov	r4, r0
9000d9a2:	b153      	cbz	r3, 9000d9ba <_ZN8touchgfx3HAL7noTouchEv+0x20>
9000d9a4:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
9000d9a8:	2101      	movs	r1, #1
9000d9aa:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
9000d9ae:	301c      	adds	r0, #28
9000d9b0:	f011 fbe2 	bl	9001f178 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9000d9b4:	2300      	movs	r3, #0
9000d9b6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
9000d9ba:	bd10      	pop	{r4, pc}

9000d9bc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
9000d9bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000d9c0:	4604      	mov	r4, r0
9000d9c2:	6980      	ldr	r0, [r0, #24]
9000d9c4:	b085      	sub	sp, #20
9000d9c6:	460f      	mov	r7, r1
9000d9c8:	4690      	mov	r8, r2
9000d9ca:	4699      	mov	r9, r3
9000d9cc:	b930      	cbnz	r0, 9000d9dc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
9000d9ce:	4b1c      	ldr	r3, [pc, #112]	; (9000da40 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
9000d9d0:	f44f 71a1 	mov.w	r1, #322	; 0x142
9000d9d4:	4a1b      	ldr	r2, [pc, #108]	; (9000da44 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
9000d9d6:	481c      	ldr	r0, [pc, #112]	; (9000da48 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
9000d9d8:	f011 fc64 	bl	9001f2a4 <__assert_func>
9000d9dc:	ad04      	add	r5, sp, #16
9000d9de:	2600      	movs	r6, #0
9000d9e0:	f845 6d04 	str.w	r6, [r5, #-4]!
9000d9e4:	6806      	ldr	r6, [r0, #0]
9000d9e6:	9501      	str	r5, [sp, #4]
9000d9e8:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
9000d9ec:	9500      	str	r5, [sp, #0]
9000d9ee:	6835      	ldr	r5, [r6, #0]
9000d9f0:	47a8      	blx	r5
9000d9f2:	4d16      	ldr	r5, [pc, #88]	; (9000da4c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
9000d9f4:	4606      	mov	r6, r0
9000d9f6:	f8a5 9000 	strh.w	r9, [r5]
9000d9fa:	f7f6 f8ff 	bl	90003bfc <_ZN8touchgfx3HAL3lcdEv>
9000d9fe:	6803      	ldr	r3, [r0, #0]
9000da00:	6a1b      	ldr	r3, [r3, #32]
9000da02:	4798      	blx	r3
9000da04:	2801      	cmp	r0, #1
9000da06:	d012      	beq.n	9000da2e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
9000da08:	d306      	bcc.n	9000da18 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
9000da0a:	280d      	cmp	r0, #13
9000da0c:	d80b      	bhi.n	9000da26 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
9000da0e:	4b10      	ldr	r3, [pc, #64]	; (9000da50 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
9000da10:	f44f 71b0 	mov.w	r1, #352	; 0x160
9000da14:	4a0b      	ldr	r2, [pc, #44]	; (9000da44 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
9000da16:	e7de      	b.n	9000d9d6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
9000da18:	882b      	ldrh	r3, [r5, #0]
9000da1a:	fb08 7203 	mla	r2, r8, r3, r7
9000da1e:	9b03      	ldr	r3, [sp, #12]
9000da20:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
9000da24:	63e3      	str	r3, [r4, #60]	; 0x3c
9000da26:	4630      	mov	r0, r6
9000da28:	b005      	add	sp, #20
9000da2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000da2e:	882a      	ldrh	r2, [r5, #0]
9000da30:	9b03      	ldr	r3, [sp, #12]
9000da32:	fb08 7202 	mla	r2, r8, r2, r7
9000da36:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9000da3a:	1a9a      	subs	r2, r3, r2
9000da3c:	63e2      	str	r2, [r4, #60]	; 0x3c
9000da3e:	e7f2      	b.n	9000da26 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
9000da40:	90021d8d 	.word	0x90021d8d
9000da44:	900220a6 	.word	0x900220a6
9000da48:	90021dd2 	.word	0x90021dd2
9000da4c:	24012ada 	.word	0x24012ada
9000da50:	90021df8 	.word	0x90021df8

9000da54 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
9000da54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000da58:	4698      	mov	r8, r3
9000da5a:	6803      	ldr	r3, [r0, #0]
9000da5c:	b087      	sub	sp, #28
9000da5e:	460e      	mov	r6, r1
9000da60:	6c5d      	ldr	r5, [r3, #68]	; 0x44
9000da62:	4617      	mov	r7, r2
9000da64:	4b0d      	ldr	r3, [pc, #52]	; (9000da9c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
9000da66:	4604      	mov	r4, r0
9000da68:	f8b3 9000 	ldrh.w	r9, [r3]
9000da6c:	f7f6 f8c6 	bl	90003bfc <_ZN8touchgfx3HAL3lcdEv>
9000da70:	6803      	ldr	r3, [r0, #0]
9000da72:	6a1b      	ldr	r3, [r3, #32]
9000da74:	4798      	blx	r3
9000da76:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
9000da7a:	463a      	mov	r2, r7
9000da7c:	4631      	mov	r1, r6
9000da7e:	9302      	str	r3, [sp, #8]
9000da80:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
9000da84:	9301      	str	r3, [sp, #4]
9000da86:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9000da8a:	e9cd 9003 	strd	r9, r0, [sp, #12]
9000da8e:	9300      	str	r3, [sp, #0]
9000da90:	4620      	mov	r0, r4
9000da92:	4643      	mov	r3, r8
9000da94:	47a8      	blx	r5
9000da96:	b007      	add	sp, #28
9000da98:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000da9c:	24012ada 	.word	0x24012ada

9000daa0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
9000daa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000daa4:	4604      	mov	r4, r0
9000daa6:	b08b      	sub	sp, #44	; 0x2c
9000daa8:	4610      	mov	r0, r2
9000daaa:	460d      	mov	r5, r1
9000daac:	4691      	mov	r9, r2
9000daae:	461e      	mov	r6, r3
9000dab0:	f005 fd14 	bl	900134dc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
9000dab4:	2800      	cmp	r0, #0
9000dab6:	f000 80a0 	beq.w	9000dbfa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
9000daba:	6823      	ldr	r3, [r4, #0]
9000dabc:	4620      	mov	r0, r4
9000dabe:	f8df b170 	ldr.w	fp, [pc, #368]	; 9000dc30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>
9000dac2:	af0a      	add	r7, sp, #40	; 0x28
9000dac4:	6a1b      	ldr	r3, [r3, #32]
9000dac6:	4798      	blx	r3
9000dac8:	6823      	ldr	r3, [r4, #0]
9000daca:	4620      	mov	r0, r4
9000dacc:	f8df a164 	ldr.w	sl, [pc, #356]	; 9000dc34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>
9000dad0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000dad2:	4798      	blx	r3
9000dad4:	f8bb 3000 	ldrh.w	r3, [fp]
9000dad8:	f827 9d0c 	strh.w	r9, [r7, #-12]!
9000dadc:	4638      	mov	r0, r7
9000dade:	9301      	str	r3, [sp, #4]
9000dae0:	f8ba 3000 	ldrh.w	r3, [sl]
9000dae4:	9302      	str	r3, [sp, #8]
9000dae6:	4b4f      	ldr	r3, [pc, #316]	; (9000dc24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
9000dae8:	881a      	ldrh	r2, [r3, #0]
9000daea:	4698      	mov	r8, r3
9000daec:	9203      	str	r2, [sp, #12]
9000daee:	4a4e      	ldr	r2, [pc, #312]	; (9000dc28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
9000daf0:	8812      	ldrh	r2, [r2, #0]
9000daf2:	9204      	str	r2, [sp, #16]
9000daf4:	4a4d      	ldr	r2, [pc, #308]	; (9000dc2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x18c>)
9000daf6:	7812      	ldrb	r2, [r2, #0]
9000daf8:	2a00      	cmp	r2, #0
9000dafa:	f040 8081 	bne.w	9000dc00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x160>
9000dafe:	f005 fda7 	bl	90013650 <_ZNK8touchgfx6Bitmap8getWidthEv>
9000db02:	f8ab 0000 	strh.w	r0, [fp]
9000db06:	4638      	mov	r0, r7
9000db08:	f005 fddc 	bl	900136c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9000db0c:	f8aa 0000 	strh.w	r0, [sl]
9000db10:	4638      	mov	r0, r7
9000db12:	f005 fd9d 	bl	90013650 <_ZNK8touchgfx6Bitmap8getWidthEv>
9000db16:	f8a8 0000 	strh.w	r0, [r8]
9000db1a:	4638      	mov	r0, r7
9000db1c:	f005 fdd2 	bl	900136c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9000db20:	4b41      	ldr	r3, [pc, #260]	; (9000dc28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
9000db22:	8018      	strh	r0, [r3, #0]
9000db24:	4648      	mov	r0, r9
9000db26:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
9000db2a:	f005 fcd7 	bl	900134dc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
9000db2e:	2200      	movs	r2, #0
9000db30:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
9000db34:	4611      	mov	r1, r2
9000db36:	4628      	mov	r0, r5
9000db38:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
9000db3c:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
9000db40:	f7f6 fd34 	bl	900045ac <_ZN8touchgfx8Drawable5setXYEss>
9000db44:	2301      	movs	r3, #1
9000db46:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
9000db4a:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
9000db4e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
9000db52:	2b00      	cmp	r3, #0
9000db54:	dd5c      	ble.n	9000dc10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
9000db56:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
9000db5a:	2b00      	cmp	r3, #0
9000db5c:	dd58      	ble.n	9000dc10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
9000db5e:	462a      	mov	r2, r5
9000db60:	ab08      	add	r3, sp, #32
9000db62:	f852 0f04 	ldr.w	r0, [r2, #4]!
9000db66:	6851      	ldr	r1, [r2, #4]
9000db68:	c303      	stmia	r3!, {r0, r1}
9000db6a:	4631      	mov	r1, r6
9000db6c:	a808      	add	r0, sp, #32
9000db6e:	f7ff fc71 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
9000db72:	a807      	add	r0, sp, #28
9000db74:	f005 fefe 	bl	90013974 <_ZNK8touchgfx6Bitmap9getFormatEv>
9000db78:	4606      	mov	r6, r0
9000db7a:	f7f6 f83f 	bl	90003bfc <_ZN8touchgfx3HAL3lcdEv>
9000db7e:	6803      	ldr	r3, [r0, #0]
9000db80:	6a1b      	ldr	r3, [r3, #32]
9000db82:	4798      	blx	r3
9000db84:	4286      	cmp	r6, r0
9000db86:	d04a      	beq.n	9000dc1e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x17e>
9000db88:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000db8a:	b150      	cbz	r0, 9000dba2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
9000db8c:	a807      	add	r0, sp, #28
9000db8e:	f005 fef1 	bl	90013974 <_ZNK8touchgfx6Bitmap9getFormatEv>
9000db92:	4606      	mov	r6, r0
9000db94:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000db96:	6803      	ldr	r3, [r0, #0]
9000db98:	6a1b      	ldr	r3, [r3, #32]
9000db9a:	4798      	blx	r3
9000db9c:	1a33      	subs	r3, r6, r0
9000db9e:	4258      	negs	r0, r3
9000dba0:	4158      	adcs	r0, r3
9000dba2:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
9000dba6:	2600      	movs	r6, #0
9000dba8:	696b      	ldr	r3, [r5, #20]
9000dbaa:	a908      	add	r1, sp, #32
9000dbac:	682a      	ldr	r2, [r5, #0]
9000dbae:	4628      	mov	r0, r5
9000dbb0:	9305      	str	r3, [sp, #20]
9000dbb2:	616e      	str	r6, [r5, #20]
9000dbb4:	6892      	ldr	r2, [r2, #8]
9000dbb6:	4790      	blx	r2
9000dbb8:	9b05      	ldr	r3, [sp, #20]
9000dbba:	4652      	mov	r2, sl
9000dbbc:	4649      	mov	r1, r9
9000dbbe:	616b      	str	r3, [r5, #20]
9000dbc0:	4628      	mov	r0, r5
9000dbc2:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
9000dbc6:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
9000dbca:	f7f6 fcef 	bl	900045ac <_ZN8touchgfx8Drawable5setXYEss>
9000dbce:	9a01      	ldr	r2, [sp, #4]
9000dbd0:	4b17      	ldr	r3, [pc, #92]	; (9000dc30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>)
9000dbd2:	4620      	mov	r0, r4
9000dbd4:	801a      	strh	r2, [r3, #0]
9000dbd6:	9a02      	ldr	r2, [sp, #8]
9000dbd8:	4b16      	ldr	r3, [pc, #88]	; (9000dc34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>)
9000dbda:	801a      	strh	r2, [r3, #0]
9000dbdc:	9a03      	ldr	r2, [sp, #12]
9000dbde:	4b11      	ldr	r3, [pc, #68]	; (9000dc24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
9000dbe0:	801a      	strh	r2, [r3, #0]
9000dbe2:	4b11      	ldr	r3, [pc, #68]	; (9000dc28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
9000dbe4:	9a04      	ldr	r2, [sp, #16]
9000dbe6:	801a      	strh	r2, [r3, #0]
9000dbe8:	6823      	ldr	r3, [r4, #0]
9000dbea:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
9000dbee:	6a1b      	ldr	r3, [r3, #32]
9000dbf0:	4798      	blx	r3
9000dbf2:	6823      	ldr	r3, [r4, #0]
9000dbf4:	4620      	mov	r0, r4
9000dbf6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000dbf8:	4798      	blx	r3
9000dbfa:	b00b      	add	sp, #44	; 0x2c
9000dbfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000dc00:	f005 fd60 	bl	900136c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9000dc04:	f8ab 0000 	strh.w	r0, [fp]
9000dc08:	4638      	mov	r0, r7
9000dc0a:	f005 fd21 	bl	90013650 <_ZNK8touchgfx6Bitmap8getWidthEv>
9000dc0e:	e77d      	b.n	9000db0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x6c>
9000dc10:	462a      	mov	r2, r5
9000dc12:	ab08      	add	r3, sp, #32
9000dc14:	f852 0f04 	ldr.w	r0, [r2, #4]!
9000dc18:	6851      	ldr	r1, [r2, #4]
9000dc1a:	c303      	stmia	r3!, {r0, r1}
9000dc1c:	e7a9      	b.n	9000db72 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xd2>
9000dc1e:	2000      	movs	r0, #0
9000dc20:	e7bf      	b.n	9000dba2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
9000dc22:	bf00      	nop
9000dc24:	24012ad4 	.word	0x24012ad4
9000dc28:	24012ad6 	.word	0x24012ad6
9000dc2c:	24012ad8 	.word	0x24012ad8
9000dc30:	24012ada 	.word	0x24012ada
9000dc34:	24012adc 	.word	0x24012adc

9000dc38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
9000dc38:	4b07      	ldr	r3, [pc, #28]	; (9000dc58 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
9000dc3a:	b510      	push	{r4, lr}
9000dc3c:	781b      	ldrb	r3, [r3, #0]
9000dc3e:	4604      	mov	r4, r0
9000dc40:	b13b      	cbz	r3, 9000dc52 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9000dc42:	6803      	ldr	r3, [r0, #0]
9000dc44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9000dc46:	4798      	blx	r3
9000dc48:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000dc4a:	4283      	cmp	r3, r0
9000dc4c:	d101      	bne.n	9000dc52 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9000dc4e:	6c20      	ldr	r0, [r4, #64]	; 0x40
9000dc50:	bd10      	pop	{r4, pc}
9000dc52:	6be0      	ldr	r0, [r4, #60]	; 0x3c
9000dc54:	e7fc      	b.n	9000dc50 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
9000dc56:	bf00      	nop
9000dc58:	24012ade 	.word	0x24012ade

9000dc5c <_ZN8touchgfx3HAL10initializeEv>:
9000dc5c:	b510      	push	{r4, lr}
9000dc5e:	4604      	mov	r4, r0
9000dc60:	f7f3 fa10 	bl	90001084 <_ZN8touchgfx10OSWrappers10initializeEv>
9000dc64:	6860      	ldr	r0, [r4, #4]
9000dc66:	6803      	ldr	r3, [r0, #0]
9000dc68:	68db      	ldr	r3, [r3, #12]
9000dc6a:	4798      	blx	r3
9000dc6c:	68e0      	ldr	r0, [r4, #12]
9000dc6e:	6803      	ldr	r3, [r0, #0]
9000dc70:	689b      	ldr	r3, [r3, #8]
9000dc72:	4798      	blx	r3
9000dc74:	6823      	ldr	r3, [r4, #0]
9000dc76:	4620      	mov	r0, r4
9000dc78:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9000dc7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000dc7e:	4718      	bx	r3

9000dc80 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
9000dc80:	b508      	push	{r3, lr}
9000dc82:	290d      	cmp	r1, #13
9000dc84:	d817      	bhi.n	9000dcb6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
9000dc86:	e8df f001 	tbb	[pc, r1]
9000dc8a:	090b      	.short	0x090b
9000dc8c:	0d0d0d07 	.word	0x0d0d0d07
9000dc90:	1414140d 	.word	0x1414140d
9000dc94:	0d0d1414 	.word	0x0d0d1414
9000dc98:	2020      	movs	r0, #32
9000dc9a:	bd08      	pop	{r3, pc}
9000dc9c:	2018      	movs	r0, #24
9000dc9e:	e7fc      	b.n	9000dc9a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
9000dca0:	2010      	movs	r0, #16
9000dca2:	e7fa      	b.n	9000dc9a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
9000dca4:	4b05      	ldr	r3, [pc, #20]	; (9000dcbc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
9000dca6:	f44f 7111 	mov.w	r1, #580	; 0x244
9000dcaa:	4a05      	ldr	r2, [pc, #20]	; (9000dcc0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
9000dcac:	4805      	ldr	r0, [pc, #20]	; (9000dcc4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
9000dcae:	f011 faf9 	bl	9001f2a4 <__assert_func>
9000dcb2:	2008      	movs	r0, #8
9000dcb4:	e7f1      	b.n	9000dc9a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
9000dcb6:	2000      	movs	r0, #0
9000dcb8:	e7ef      	b.n	9000dc9a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
9000dcba:	bf00      	nop
9000dcbc:	90021ecb 	.word	0x90021ecb
9000dcc0:	90022268 	.word	0x90022268
9000dcc4:	90021dd2 	.word	0x90021dd2

9000dcc8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
9000dcc8:	b570      	push	{r4, r5, r6, lr}
9000dcca:	460d      	mov	r5, r1
9000dccc:	f89d 1014 	ldrb.w	r1, [sp, #20]
9000dcd0:	4616      	mov	r6, r2
9000dcd2:	461c      	mov	r4, r3
9000dcd4:	f7ff ffd4 	bl	9000dc80 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
9000dcd8:	f8bd 1010 	ldrh.w	r1, [sp, #16]
9000dcdc:	10c0      	asrs	r0, r0, #3
9000dcde:	fb06 5101 	mla	r1, r6, r1, r5
9000dce2:	fb00 4001 	mla	r0, r0, r1, r4
9000dce6:	bd70      	pop	{r4, r5, r6, pc}

9000dce8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
9000dce8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000dcec:	b08a      	sub	sp, #40	; 0x28
9000dcee:	f04f 0c00 	mov.w	ip, #0
9000dcf2:	4604      	mov	r4, r0
9000dcf4:	469a      	mov	sl, r3
9000dcf6:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
9000dcfa:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
9000dcfe:	f1b8 0f02 	cmp.w	r8, #2
9000dd02:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
9000dd06:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
9000dd0a:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
9000dd0e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9000dd12:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
9000dd16:	f8cd c020 	str.w	ip, [sp, #32]
9000dd1a:	d030      	beq.n	9000dd7e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
9000dd1c:	2bff      	cmp	r3, #255	; 0xff
9000dd1e:	d12c      	bne.n	9000dd7a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
9000dd20:	4560      	cmp	r0, ip
9000dd22:	bf14      	ite	ne
9000dd24:	2004      	movne	r0, #4
9000dd26:	2001      	moveq	r0, #1
9000dd28:	9204      	str	r2, [sp, #16]
9000dd2a:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
9000dd2e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
9000dd32:	f8ad 201c 	strh.w	r2, [sp, #28]
9000dd36:	f8ad 6018 	strh.w	r6, [sp, #24]
9000dd3a:	f8ad 501a 	strh.w	r5, [sp, #26]
9000dd3e:	e9cd 0102 	strd	r0, r1, [sp, #8]
9000dd42:	4620      	mov	r0, r4
9000dd44:	f7ff ff78 	bl	9000dc38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9000dd48:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
9000dd4c:	4603      	mov	r3, r0
9000dd4e:	4651      	mov	r1, sl
9000dd50:	4620      	mov	r0, r4
9000dd52:	e9cd 9700 	strd	r9, r7, [sp]
9000dd56:	f7ff ffb7 	bl	9000dcc8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
9000dd5a:	f8ad 901e 	strh.w	r9, [sp, #30]
9000dd5e:	9005      	str	r0, [sp, #20]
9000dd60:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
9000dd64:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
9000dd68:	b106      	cbz	r6, 9000dd6c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
9000dd6a:	b98d      	cbnz	r5, 9000dd90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
9000dd6c:	4b12      	ldr	r3, [pc, #72]	; (9000ddb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
9000dd6e:	f240 11c3 	movw	r1, #451	; 0x1c3
9000dd72:	4a12      	ldr	r2, [pc, #72]	; (9000ddbc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
9000dd74:	4812      	ldr	r0, [pc, #72]	; (9000ddc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
9000dd76:	f011 fa95 	bl	9001f2a4 <__assert_func>
9000dd7a:	2004      	movs	r0, #4
9000dd7c:	e7d4      	b.n	9000dd28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
9000dd7e:	2bff      	cmp	r3, #255	; 0xff
9000dd80:	d104      	bne.n	9000dd8c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
9000dd82:	2800      	cmp	r0, #0
9000dd84:	bf14      	ite	ne
9000dd86:	2040      	movne	r0, #64	; 0x40
9000dd88:	2020      	moveq	r0, #32
9000dd8a:	e7cd      	b.n	9000dd28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
9000dd8c:	2040      	movs	r0, #64	; 0x40
9000dd8e:	e7cb      	b.n	9000dd28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
9000dd90:	6823      	ldr	r3, [r4, #0]
9000dd92:	4620      	mov	r0, r4
9000dd94:	9d02      	ldr	r5, [sp, #8]
9000dd96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000dd98:	4798      	blx	r3
9000dd9a:	4228      	tst	r0, r5
9000dd9c:	d104      	bne.n	9000dda8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
9000dd9e:	4b09      	ldr	r3, [pc, #36]	; (9000ddc4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
9000dda0:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
9000dda4:	4a05      	ldr	r2, [pc, #20]	; (9000ddbc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
9000dda6:	e7e5      	b.n	9000dd74 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
9000dda8:	6860      	ldr	r0, [r4, #4]
9000ddaa:	a902      	add	r1, sp, #8
9000ddac:	6803      	ldr	r3, [r0, #0]
9000ddae:	685b      	ldr	r3, [r3, #4]
9000ddb0:	4798      	blx	r3
9000ddb2:	b00a      	add	sp, #40	; 0x28
9000ddb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000ddb8:	90021e4e 	.word	0x90021e4e
9000ddbc:	9002210a 	.word	0x9002210a
9000ddc0:	90021dd2 	.word	0x90021dd2
9000ddc4:	90021e86 	.word	0x90021e86

9000ddc8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
9000ddc8:	b510      	push	{r4, lr}
9000ddca:	b08a      	sub	sp, #40	; 0x28
9000ddcc:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
9000ddd0:	9408      	str	r4, [sp, #32]
9000ddd2:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
9000ddd6:	9407      	str	r4, [sp, #28]
9000ddd8:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
9000dddc:	9406      	str	r4, [sp, #24]
9000ddde:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
9000dde2:	9405      	str	r4, [sp, #20]
9000dde4:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
9000dde8:	9404      	str	r4, [sp, #16]
9000ddea:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
9000ddee:	9403      	str	r4, [sp, #12]
9000ddf0:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
9000ddf4:	9402      	str	r4, [sp, #8]
9000ddf6:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
9000ddfa:	e9cd 3400 	strd	r3, r4, [sp]
9000ddfe:	4613      	mov	r3, r2
9000de00:	2200      	movs	r2, #0
9000de02:	f7ff ff71 	bl	9000dce8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
9000de06:	b00a      	add	sp, #40	; 0x28
9000de08:	bd10      	pop	{r4, pc}
	...

9000de0c <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
9000de0c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000de0e:	b08b      	sub	sp, #44	; 0x2c
9000de10:	4616      	mov	r6, r2
9000de12:	460d      	mov	r5, r1
9000de14:	461f      	mov	r7, r3
9000de16:	4604      	mov	r4, r0
9000de18:	f7f5 fef0 	bl	90003bfc <_ZN8touchgfx3HAL3lcdEv>
9000de1c:	6803      	ldr	r3, [r0, #0]
9000de1e:	6a1b      	ldr	r3, [r3, #32]
9000de20:	4798      	blx	r3
9000de22:	4b0e      	ldr	r3, [pc, #56]	; (9000de5c <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
9000de24:	2200      	movs	r2, #0
9000de26:	4629      	mov	r1, r5
9000de28:	e9cd 0007 	strd	r0, r0, [sp, #28]
9000de2c:	881b      	ldrh	r3, [r3, #0]
9000de2e:	4620      	mov	r0, r4
9000de30:	9306      	str	r3, [sp, #24]
9000de32:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
9000de36:	9305      	str	r3, [sp, #20]
9000de38:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
9000de3c:	9304      	str	r3, [sp, #16]
9000de3e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
9000de42:	9303      	str	r3, [sp, #12]
9000de44:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9000de48:	9302      	str	r3, [sp, #8]
9000de4a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9000de4e:	e9cd 7300 	strd	r7, r3, [sp]
9000de52:	4633      	mov	r3, r6
9000de54:	f7ff ff48 	bl	9000dce8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
9000de58:	b00b      	add	sp, #44	; 0x2c
9000de5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000de5c:	24012ada 	.word	0x24012ada

9000de60 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
9000de60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000de64:	461f      	mov	r7, r3
9000de66:	4b14      	ldr	r3, [pc, #80]	; (9000deb8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
9000de68:	b08a      	sub	sp, #40	; 0x28
9000de6a:	4616      	mov	r6, r2
9000de6c:	f8b3 8000 	ldrh.w	r8, [r3]
9000de70:	460d      	mov	r5, r1
9000de72:	4604      	mov	r4, r0
9000de74:	f7f5 fec2 	bl	90003bfc <_ZN8touchgfx3HAL3lcdEv>
9000de78:	6803      	ldr	r3, [r0, #0]
9000de7a:	6a1b      	ldr	r3, [r3, #32]
9000de7c:	4798      	blx	r3
9000de7e:	2302      	movs	r3, #2
9000de80:	9008      	str	r0, [sp, #32]
9000de82:	2200      	movs	r2, #0
9000de84:	4629      	mov	r1, r5
9000de86:	4620      	mov	r0, r4
9000de88:	e9cd 8306 	strd	r8, r3, [sp, #24]
9000de8c:	2301      	movs	r3, #1
9000de8e:	9305      	str	r3, [sp, #20]
9000de90:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
9000de94:	9304      	str	r3, [sp, #16]
9000de96:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
9000de9a:	9303      	str	r3, [sp, #12]
9000de9c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9000dea0:	9302      	str	r3, [sp, #8]
9000dea2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9000dea6:	e9cd 7300 	strd	r7, r3, [sp]
9000deaa:	4633      	mov	r3, r6
9000deac:	f7ff ff1c 	bl	9000dce8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
9000deb0:	b00a      	add	sp, #40	; 0x28
9000deb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000deb6:	bf00      	nop
9000deb8:	24012ada 	.word	0x24012ada

9000debc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
9000debc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000dec0:	b08b      	sub	sp, #44	; 0x2c
9000dec2:	469b      	mov	fp, r3
9000dec4:	4604      	mov	r4, r0
9000dec6:	4692      	mov	sl, r2
9000dec8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
9000decc:	2600      	movs	r6, #0
9000dece:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
9000ded2:	4689      	mov	r9, r1
9000ded4:	2fff      	cmp	r7, #255	; 0xff
9000ded6:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
9000deda:	9608      	str	r6, [sp, #32]
9000dedc:	bf14      	ite	ne
9000dede:	2308      	movne	r3, #8
9000dee0:	2302      	moveq	r3, #2
9000dee2:	e9cd 3602 	strd	r3, r6, [sp, #8]
9000dee6:	f7ff fea7 	bl	9000dc38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9000deea:	465a      	mov	r2, fp
9000deec:	4603      	mov	r3, r0
9000deee:	4651      	mov	r1, sl
9000def0:	4620      	mov	r0, r4
9000def2:	e9cd 8500 	strd	r8, r5, [sp]
9000def6:	f7ff fee7 	bl	9000dcc8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
9000defa:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
9000defe:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
9000df02:	f8ad 3018 	strh.w	r3, [sp, #24]
9000df06:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9000df0a:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
9000df0e:	f8ad 301a 	strh.w	r3, [sp, #26]
9000df12:	6823      	ldr	r3, [r4, #0]
9000df14:	9d02      	ldr	r5, [sp, #8]
9000df16:	9005      	str	r0, [sp, #20]
9000df18:	4620      	mov	r0, r4
9000df1a:	f8ad 601c 	strh.w	r6, [sp, #28]
9000df1e:	f8ad 801e 	strh.w	r8, [sp, #30]
9000df22:	f8cd 9020 	str.w	r9, [sp, #32]
9000df26:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
9000df2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000df2c:	4798      	blx	r3
9000df2e:	4228      	tst	r0, r5
9000df30:	d106      	bne.n	9000df40 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
9000df32:	4b07      	ldr	r3, [pc, #28]	; (9000df50 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
9000df34:	f240 11fb 	movw	r1, #507	; 0x1fb
9000df38:	4a06      	ldr	r2, [pc, #24]	; (9000df54 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
9000df3a:	4807      	ldr	r0, [pc, #28]	; (9000df58 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
9000df3c:	f011 f9b2 	bl	9001f2a4 <__assert_func>
9000df40:	6860      	ldr	r0, [r4, #4]
9000df42:	a902      	add	r1, sp, #8
9000df44:	6803      	ldr	r3, [r0, #0]
9000df46:	685b      	ldr	r3, [r3, #4]
9000df48:	4798      	blx	r3
9000df4a:	b00b      	add	sp, #44	; 0x2c
9000df4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000df50:	90021e86 	.word	0x90021e86
9000df54:	900221d3 	.word	0x900221d3
9000df58:	90021dd2 	.word	0x90021dd2

9000df5c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
9000df5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9000df60:	461f      	mov	r7, r3
9000df62:	4b0b      	ldr	r3, [pc, #44]	; (9000df90 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
9000df64:	460d      	mov	r5, r1
9000df66:	4616      	mov	r6, r2
9000df68:	f8b3 8000 	ldrh.w	r8, [r3]
9000df6c:	4604      	mov	r4, r0
9000df6e:	f7f5 fe45 	bl	90003bfc <_ZN8touchgfx3HAL3lcdEv>
9000df72:	6803      	ldr	r3, [r0, #0]
9000df74:	6a1b      	ldr	r3, [r3, #32]
9000df76:	4798      	blx	r3
9000df78:	463b      	mov	r3, r7
9000df7a:	4632      	mov	r2, r6
9000df7c:	4629      	mov	r1, r5
9000df7e:	e9cd 8000 	strd	r8, r0, [sp]
9000df82:	4620      	mov	r0, r4
9000df84:	f7ff fea0 	bl	9000dcc8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
9000df88:	b002      	add	sp, #8
9000df8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000df8e:	bf00      	nop
9000df90:	24012ada 	.word	0x24012ada

9000df94 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
9000df94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000df98:	4698      	mov	r8, r3
9000df9a:	b088      	sub	sp, #32
9000df9c:	2300      	movs	r3, #0
9000df9e:	4617      	mov	r7, r2
9000dfa0:	4604      	mov	r4, r0
9000dfa2:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
9000dfa6:	9306      	str	r3, [sp, #24]
9000dfa8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
9000dfac:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
9000dfb0:	f8ad 6010 	strh.w	r6, [sp, #16]
9000dfb4:	f8ad 5012 	strh.w	r5, [sp, #18]
9000dfb8:	e9cd 3100 	strd	r3, r1, [sp]
9000dfbc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9000dfc0:	f8ad 3014 	strh.w	r3, [sp, #20]
9000dfc4:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
9000dfc8:	f88d 301c 	strb.w	r3, [sp, #28]
9000dfcc:	f7ff fe34 	bl	9000dc38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9000dfd0:	4642      	mov	r2, r8
9000dfd2:	4603      	mov	r3, r0
9000dfd4:	4639      	mov	r1, r7
9000dfd6:	4620      	mov	r0, r4
9000dfd8:	f7ff ffc0 	bl	9000df5c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9000dfdc:	4b16      	ldr	r3, [pc, #88]	; (9000e038 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
9000dfde:	9003      	str	r0, [sp, #12]
9000dfe0:	881b      	ldrh	r3, [r3, #0]
9000dfe2:	f8ad 3016 	strh.w	r3, [sp, #22]
9000dfe6:	f7f5 fe09 	bl	90003bfc <_ZN8touchgfx3HAL3lcdEv>
9000dfea:	6803      	ldr	r3, [r0, #0]
9000dfec:	6a1b      	ldr	r3, [r3, #32]
9000dfee:	4798      	blx	r3
9000dff0:	f88d 001e 	strb.w	r0, [sp, #30]
9000dff4:	f88d 001d 	strb.w	r0, [sp, #29]
9000dff8:	b106      	cbz	r6, 9000dffc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
9000dffa:	b935      	cbnz	r5, 9000e00a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
9000dffc:	4b0f      	ldr	r3, [pc, #60]	; (9000e03c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
9000dffe:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
9000e002:	4a0f      	ldr	r2, [pc, #60]	; (9000e040 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
9000e004:	480f      	ldr	r0, [pc, #60]	; (9000e044 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
9000e006:	f011 f94d 	bl	9001f2a4 <__assert_func>
9000e00a:	6823      	ldr	r3, [r4, #0]
9000e00c:	4620      	mov	r0, r4
9000e00e:	9d00      	ldr	r5, [sp, #0]
9000e010:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000e012:	4798      	blx	r3
9000e014:	4228      	tst	r0, r5
9000e016:	d104      	bne.n	9000e022 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
9000e018:	4b0b      	ldr	r3, [pc, #44]	; (9000e048 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
9000e01a:	f240 11e1 	movw	r1, #481	; 0x1e1
9000e01e:	4a08      	ldr	r2, [pc, #32]	; (9000e040 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
9000e020:	e7f0      	b.n	9000e004 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
9000e022:	9b11      	ldr	r3, [sp, #68]	; 0x44
9000e024:	4669      	mov	r1, sp
9000e026:	6860      	ldr	r0, [r4, #4]
9000e028:	9306      	str	r3, [sp, #24]
9000e02a:	6803      	ldr	r3, [r0, #0]
9000e02c:	685b      	ldr	r3, [r3, #4]
9000e02e:	4798      	blx	r3
9000e030:	b008      	add	sp, #32
9000e032:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000e036:	bf00      	nop
9000e038:	24012ada 	.word	0x24012ada
9000e03c:	90021e4e 	.word	0x90021e4e
9000e040:	90021fbc 	.word	0x90021fbc
9000e044:	90021dd2 	.word	0x90021dd2
9000e048:	90021e86 	.word	0x90021e86

9000e04c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
9000e04c:	b570      	push	{r4, r5, r6, lr}
9000e04e:	b08a      	sub	sp, #40	; 0x28
9000e050:	4604      	mov	r4, r0
9000e052:	466b      	mov	r3, sp
9000e054:	e883 0006 	stmia.w	r3, {r1, r2}
9000e058:	4b1f      	ldr	r3, [pc, #124]	; (9000e0d8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
9000e05a:	781b      	ldrb	r3, [r3, #0]
9000e05c:	b933      	cbnz	r3, 9000e06c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
9000e05e:	4b1f      	ldr	r3, [pc, #124]	; (9000e0dc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
9000e060:	f44f 7103 	mov.w	r1, #524	; 0x20c
9000e064:	4a1e      	ldr	r2, [pc, #120]	; (9000e0e0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
9000e066:	481f      	ldr	r0, [pc, #124]	; (9000e0e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
9000e068:	f011 f91c 	bl	9001f2a4 <__assert_func>
9000e06c:	2300      	movs	r3, #0
9000e06e:	f8bd 5000 	ldrh.w	r5, [sp]
9000e072:	f8bd 6002 	ldrh.w	r6, [sp, #2]
9000e076:	9308      	str	r3, [sp, #32]
9000e078:	2301      	movs	r3, #1
9000e07a:	9302      	str	r3, [sp, #8]
9000e07c:	6803      	ldr	r3, [r0, #0]
9000e07e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9000e080:	4798      	blx	r3
9000e082:	4632      	mov	r2, r6
9000e084:	4629      	mov	r1, r5
9000e086:	4603      	mov	r3, r0
9000e088:	4620      	mov	r0, r4
9000e08a:	f7ff ff67 	bl	9000df5c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9000e08e:	6c63      	ldr	r3, [r4, #68]	; 0x44
9000e090:	9003      	str	r0, [sp, #12]
9000e092:	9305      	str	r3, [sp, #20]
9000e094:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9000e098:	f8ad 3018 	strh.w	r3, [sp, #24]
9000e09c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
9000e0a0:	f8ad 301a 	strh.w	r3, [sp, #26]
9000e0a4:	4b10      	ldr	r3, [pc, #64]	; (9000e0e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
9000e0a6:	881b      	ldrh	r3, [r3, #0]
9000e0a8:	f8ad 301c 	strh.w	r3, [sp, #28]
9000e0ac:	f8ad 301e 	strh.w	r3, [sp, #30]
9000e0b0:	f7f5 fda4 	bl	90003bfc <_ZN8touchgfx3HAL3lcdEv>
9000e0b4:	6803      	ldr	r3, [r0, #0]
9000e0b6:	6a1b      	ldr	r3, [r3, #32]
9000e0b8:	4798      	blx	r3
9000e0ba:	23ff      	movs	r3, #255	; 0xff
9000e0bc:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
9000e0c0:	a902      	add	r1, sp, #8
9000e0c2:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
9000e0c6:	6860      	ldr	r0, [r4, #4]
9000e0c8:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
9000e0cc:	6803      	ldr	r3, [r0, #0]
9000e0ce:	685b      	ldr	r3, [r3, #4]
9000e0d0:	4798      	blx	r3
9000e0d2:	6c60      	ldr	r0, [r4, #68]	; 0x44
9000e0d4:	b00a      	add	sp, #40	; 0x28
9000e0d6:	bd70      	pop	{r4, r5, r6, pc}
9000e0d8:	24012adf 	.word	0x24012adf
9000e0dc:	90021d1f 	.word	0x90021d1f
9000e0e0:	90022060 	.word	0x90022060
9000e0e4:	90021dd2 	.word	0x90021dd2
9000e0e8:	24012ada 	.word	0x24012ada

9000e0ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
9000e0ec:	b5f0      	push	{r4, r5, r6, r7, lr}
9000e0ee:	b08b      	sub	sp, #44	; 0x2c
9000e0f0:	4604      	mov	r4, r0
9000e0f2:	466d      	mov	r5, sp
9000e0f4:	e885 0006 	stmia.w	r5, {r1, r2}
9000e0f8:	461d      	mov	r5, r3
9000e0fa:	2300      	movs	r3, #0
9000e0fc:	f8bd 6000 	ldrh.w	r6, [sp]
9000e100:	9308      	str	r3, [sp, #32]
9000e102:	2301      	movs	r3, #1
9000e104:	f8bd 7002 	ldrh.w	r7, [sp, #2]
9000e108:	9302      	str	r3, [sp, #8]
9000e10a:	6803      	ldr	r3, [r0, #0]
9000e10c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9000e10e:	4798      	blx	r3
9000e110:	463a      	mov	r2, r7
9000e112:	4631      	mov	r1, r6
9000e114:	4603      	mov	r3, r0
9000e116:	4620      	mov	r0, r4
9000e118:	f7ff ff20 	bl	9000df5c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9000e11c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9000e120:	9003      	str	r0, [sp, #12]
9000e122:	f8ad 3018 	strh.w	r3, [sp, #24]
9000e126:	f8bd 3006 	ldrh.w	r3, [sp, #6]
9000e12a:	9505      	str	r5, [sp, #20]
9000e12c:	f8ad 301a 	strh.w	r3, [sp, #26]
9000e130:	4b0d      	ldr	r3, [pc, #52]	; (9000e168 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
9000e132:	881b      	ldrh	r3, [r3, #0]
9000e134:	f8ad 301c 	strh.w	r3, [sp, #28]
9000e138:	9b10      	ldr	r3, [sp, #64]	; 0x40
9000e13a:	f8ad 301e 	strh.w	r3, [sp, #30]
9000e13e:	f7f5 fd5d 	bl	90003bfc <_ZN8touchgfx3HAL3lcdEv>
9000e142:	6803      	ldr	r3, [r0, #0]
9000e144:	6a1b      	ldr	r3, [r3, #32]
9000e146:	4798      	blx	r3
9000e148:	23ff      	movs	r3, #255	; 0xff
9000e14a:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
9000e14e:	a902      	add	r1, sp, #8
9000e150:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
9000e154:	6860      	ldr	r0, [r4, #4]
9000e156:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
9000e15a:	6803      	ldr	r3, [r0, #0]
9000e15c:	685b      	ldr	r3, [r3, #4]
9000e15e:	4798      	blx	r3
9000e160:	4628      	mov	r0, r5
9000e162:	b00b      	add	sp, #44	; 0x2c
9000e164:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000e166:	bf00      	nop
9000e168:	24012ada 	.word	0x24012ada

9000e16c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
9000e16c:	b570      	push	{r4, r5, r6, lr}
9000e16e:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
9000e172:	4604      	mov	r4, r0
9000e174:	b19b      	cbz	r3, 9000e19e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
9000e176:	2002      	movs	r0, #2
9000e178:	f7f2 fc9a 	bl	90000ab0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
9000e17c:	2300      	movs	r3, #0
9000e17e:	4620      	mov	r0, r4
9000e180:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
9000e184:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
9000e188:	6823      	ldr	r3, [r4, #0]
9000e18a:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
9000e18e:	f7ff fd53 	bl	9000dc38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9000e192:	4601      	mov	r1, r0
9000e194:	4620      	mov	r0, r4
9000e196:	462b      	mov	r3, r5
9000e198:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000e19c:	4718      	bx	r3
9000e19e:	bd70      	pop	{r4, r5, r6, pc}

9000e1a0 <_ZN8touchgfx3HAL12setMCUActiveEb>:
9000e1a0:	b570      	push	{r4, r5, r6, lr}
9000e1a2:	4605      	mov	r5, r0
9000e1a4:	460c      	mov	r4, r1
9000e1a6:	2003      	movs	r0, #3
9000e1a8:	b149      	cbz	r1, 9000e1be <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
9000e1aa:	f7f2 fc05 	bl	900009b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
9000e1ae:	6928      	ldr	r0, [r5, #16]
9000e1b0:	b168      	cbz	r0, 9000e1ce <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
9000e1b2:	6803      	ldr	r3, [r0, #0]
9000e1b4:	2101      	movs	r1, #1
9000e1b6:	695b      	ldr	r3, [r3, #20]
9000e1b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000e1bc:	4718      	bx	r3
9000e1be:	f7f2 fc39 	bl	90000a34 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
9000e1c2:	6928      	ldr	r0, [r5, #16]
9000e1c4:	b118      	cbz	r0, 9000e1ce <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
9000e1c6:	6803      	ldr	r3, [r0, #0]
9000e1c8:	4621      	mov	r1, r4
9000e1ca:	695b      	ldr	r3, [r3, #20]
9000e1cc:	e7f4      	b.n	9000e1b8 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
9000e1ce:	bd70      	pop	{r4, r5, r6, pc}

9000e1d0 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>:
9000e1d0:	b538      	push	{r3, r4, r5, lr}
9000e1d2:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
9000e1d6:	4604      	mov	r4, r0
9000e1d8:	460d      	mov	r5, r1
9000e1da:	428a      	cmp	r2, r1
9000e1dc:	d008      	beq.n	9000e1f0 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE+0x20>
9000e1de:	2a01      	cmp	r2, #1
9000e1e0:	6803      	ldr	r3, [r0, #0]
9000e1e2:	d106      	bne.n	9000e1f2 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE+0x22>
9000e1e4:	b929      	cbnz	r1, 9000e1f2 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE+0x22>
9000e1e6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
9000e1ea:	4798      	blx	r3
9000e1ec:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
9000e1f0:	bd38      	pop	{r3, r4, r5, pc}
9000e1f2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
9000e1f6:	4620      	mov	r0, r4
9000e1f8:	e7f7      	b.n	9000e1ea <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE+0x1a>
	...

9000e1fc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
9000e1fc:	4b0d      	ldr	r3, [pc, #52]	; (9000e234 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
9000e1fe:	b510      	push	{r4, lr}
9000e200:	781b      	ldrb	r3, [r3, #0]
9000e202:	4604      	mov	r4, r0
9000e204:	b95b      	cbnz	r3, 9000e21e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9000e206:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
9000e20a:	2b02      	cmp	r3, #2
9000e20c:	d007      	beq.n	9000e21e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9000e20e:	6840      	ldr	r0, [r0, #4]
9000e210:	f000 f930 	bl	9000e474 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
9000e214:	b118      	cbz	r0, 9000e21e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9000e216:	6862      	ldr	r2, [r4, #4]
9000e218:	7a53      	ldrb	r3, [r2, #9]
9000e21a:	2b00      	cmp	r3, #0
9000e21c:	d0fc      	beq.n	9000e218 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
9000e21e:	f7f2 ff65 	bl	900010ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9000e222:	4620      	mov	r0, r4
9000e224:	2100      	movs	r1, #0
9000e226:	f7ff ffd3 	bl	9000e1d0 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>
9000e22a:	4620      	mov	r0, r4
9000e22c:	f7ff fd04 	bl	9000dc38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9000e230:	bd10      	pop	{r4, pc}
9000e232:	bf00      	nop
9000e234:	24012ade 	.word	0x24012ade

9000e238 <_ZN8touchgfx13DMA_Interface10initializeEv>:
9000e238:	4770      	bx	lr

9000e23a <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
9000e23a:	2000      	movs	r0, #0
9000e23c:	4770      	bx	lr

9000e23e <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
9000e23e:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
9000e242:	1a13      	subs	r3, r2, r0
9000e244:	4258      	negs	r0, r3
9000e246:	4158      	adcs	r0, r3
9000e248:	4770      	bx	lr

9000e24a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
9000e24a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
9000e24e:	1a9b      	subs	r3, r3, r2
9000e250:	2b00      	cmp	r3, #0
9000e252:	bfdc      	itt	le
9000e254:	6882      	ldrle	r2, [r0, #8]
9000e256:	189b      	addle	r3, r3, r2
9000e258:	2b01      	cmp	r3, #1
9000e25a:	bfcc      	ite	gt
9000e25c:	2000      	movgt	r0, #0
9000e25e:	2001      	movle	r0, #1
9000e260:	4770      	bx	lr

9000e262 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
9000e262:	6902      	ldr	r2, [r0, #16]
9000e264:	6840      	ldr	r0, [r0, #4]
9000e266:	eb00 1042 	add.w	r0, r0, r2, lsl #5
9000e26a:	4770      	bx	lr

9000e26c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
9000e26c:	6803      	ldr	r3, [r0, #0]
9000e26e:	691b      	ldr	r3, [r3, #16]
9000e270:	4718      	bx	r3

9000e272 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
9000e272:	4770      	bx	lr

9000e274 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
9000e274:	4770      	bx	lr
	...

9000e278 <_ZN8touchgfx13DMA_Interface7executeEv>:
9000e278:	2301      	movs	r3, #1
9000e27a:	b570      	push	{r4, r5, r6, lr}
9000e27c:	7203      	strb	r3, [r0, #8]
9000e27e:	4604      	mov	r4, r0
9000e280:	6840      	ldr	r0, [r0, #4]
9000e282:	6803      	ldr	r3, [r0, #0]
9000e284:	699b      	ldr	r3, [r3, #24]
9000e286:	4798      	blx	r3
9000e288:	6803      	ldr	r3, [r0, #0]
9000e28a:	4605      	mov	r5, r0
9000e28c:	2b08      	cmp	r3, #8
9000e28e:	d01e      	beq.n	9000e2ce <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
9000e290:	d80b      	bhi.n	9000e2aa <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9000e292:	2b02      	cmp	r3, #2
9000e294:	d027      	beq.n	9000e2e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
9000e296:	2b04      	cmp	r3, #4
9000e298:	d011      	beq.n	9000e2be <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
9000e29a:	2b01      	cmp	r3, #1
9000e29c:	d028      	beq.n	9000e2f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
9000e29e:	4b17      	ldr	r3, [pc, #92]	; (9000e2fc <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
9000e2a0:	218c      	movs	r1, #140	; 0x8c
9000e2a2:	4a17      	ldr	r2, [pc, #92]	; (9000e300 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
9000e2a4:	4817      	ldr	r0, [pc, #92]	; (9000e304 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
9000e2a6:	f010 fffd 	bl	9001f2a4 <__assert_func>
9000e2aa:	2b40      	cmp	r3, #64	; 0x40
9000e2ac:	d020      	beq.n	9000e2f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
9000e2ae:	d801      	bhi.n	9000e2b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
9000e2b0:	2b20      	cmp	r3, #32
9000e2b2:	e7f3      	b.n	9000e29c <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
9000e2b4:	2b80      	cmp	r3, #128	; 0x80
9000e2b6:	d01b      	beq.n	9000e2f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
9000e2b8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000e2bc:	e7ee      	b.n	9000e29c <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
9000e2be:	6823      	ldr	r3, [r4, #0]
9000e2c0:	7f01      	ldrb	r1, [r0, #28]
9000e2c2:	4620      	mov	r0, r4
9000e2c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000e2c6:	4798      	blx	r3
9000e2c8:	6823      	ldr	r3, [r4, #0]
9000e2ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000e2cc:	e006      	b.n	9000e2dc <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
9000e2ce:	6823      	ldr	r3, [r4, #0]
9000e2d0:	7f01      	ldrb	r1, [r0, #28]
9000e2d2:	4620      	mov	r0, r4
9000e2d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000e2d6:	4798      	blx	r3
9000e2d8:	6823      	ldr	r3, [r4, #0]
9000e2da:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000e2dc:	4629      	mov	r1, r5
9000e2de:	4620      	mov	r0, r4
9000e2e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000e2e4:	4718      	bx	r3
9000e2e6:	6823      	ldr	r3, [r4, #0]
9000e2e8:	4620      	mov	r0, r4
9000e2ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000e2ec:	4798      	blx	r3
9000e2ee:	e7f3      	b.n	9000e2d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
9000e2f0:	6823      	ldr	r3, [r4, #0]
9000e2f2:	4620      	mov	r0, r4
9000e2f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000e2f6:	4798      	blx	r3
9000e2f8:	e7e6      	b.n	9000e2c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
9000e2fa:	bf00      	nop
9000e2fc:	900222b1 	.word	0x900222b1
9000e300:	900223c0 	.word	0x900223c0
9000e304:	900222d6 	.word	0x900222d6

9000e308 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
9000e308:	b570      	push	{r4, r5, r6, lr}
9000e30a:	4604      	mov	r4, r0
9000e30c:	460e      	mov	r6, r1
9000e30e:	6860      	ldr	r0, [r4, #4]
9000e310:	6803      	ldr	r3, [r0, #0]
9000e312:	685b      	ldr	r3, [r3, #4]
9000e314:	4798      	blx	r3
9000e316:	2800      	cmp	r0, #0
9000e318:	d1f9      	bne.n	9000e30e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
9000e31a:	4d0d      	ldr	r5, [pc, #52]	; (9000e350 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
9000e31c:	6828      	ldr	r0, [r5, #0]
9000e31e:	6803      	ldr	r3, [r0, #0]
9000e320:	6e5b      	ldr	r3, [r3, #100]	; 0x64
9000e322:	4798      	blx	r3
9000e324:	f7f2 fefc 	bl	90001120 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
9000e328:	6828      	ldr	r0, [r5, #0]
9000e32a:	2101      	movs	r1, #1
9000e32c:	f7ff ff50 	bl	9000e1d0 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>
9000e330:	6860      	ldr	r0, [r4, #4]
9000e332:	4631      	mov	r1, r6
9000e334:	6803      	ldr	r3, [r0, #0]
9000e336:	689b      	ldr	r3, [r3, #8]
9000e338:	4798      	blx	r3
9000e33a:	6823      	ldr	r3, [r4, #0]
9000e33c:	4620      	mov	r0, r4
9000e33e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000e340:	4798      	blx	r3
9000e342:	6828      	ldr	r0, [r5, #0]
9000e344:	6803      	ldr	r3, [r0, #0]
9000e346:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000e34a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
9000e34c:	4718      	bx	r3
9000e34e:	bf00      	nop
9000e350:	24012ae0 	.word	0x24012ae0

9000e354 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
9000e354:	b508      	push	{r3, lr}
9000e356:	f7f2 fec9 	bl	900010ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9000e35a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
9000e35e:	f7f2 bed3 	b.w	90001108 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

9000e362 <_ZN8touchgfx13DMA_Interface5startEv>:
9000e362:	b510      	push	{r4, lr}
9000e364:	4604      	mov	r4, r0
9000e366:	6840      	ldr	r0, [r0, #4]
9000e368:	6803      	ldr	r3, [r0, #0]
9000e36a:	681b      	ldr	r3, [r3, #0]
9000e36c:	4798      	blx	r3
9000e36e:	b948      	cbnz	r0, 9000e384 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
9000e370:	7a63      	ldrb	r3, [r4, #9]
9000e372:	b13b      	cbz	r3, 9000e384 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
9000e374:	7a23      	ldrb	r3, [r4, #8]
9000e376:	b92b      	cbnz	r3, 9000e384 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
9000e378:	6823      	ldr	r3, [r4, #0]
9000e37a:	4620      	mov	r0, r4
9000e37c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000e37e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000e382:	4718      	bx	r3
9000e384:	bd10      	pop	{r4, pc}
	...

9000e388 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
9000e388:	b510      	push	{r4, lr}
9000e38a:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
9000e38e:	1b12      	subs	r2, r2, r4
9000e390:	2a00      	cmp	r2, #0
9000e392:	bfdc      	itt	le
9000e394:	6883      	ldrle	r3, [r0, #8]
9000e396:	18d2      	addle	r2, r2, r3
9000e398:	2a01      	cmp	r2, #1
9000e39a:	dd18      	ble.n	9000e3ce <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
9000e39c:	6843      	ldr	r3, [r0, #4]
9000e39e:	f101 021c 	add.w	r2, r1, #28
9000e3a2:	eb03 1344 	add.w	r3, r3, r4, lsl #5
9000e3a6:	f851 4b04 	ldr.w	r4, [r1], #4
9000e3aa:	4291      	cmp	r1, r2
9000e3ac:	f843 4b04 	str.w	r4, [r3], #4
9000e3b0:	d1f9      	bne.n	9000e3a6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
9000e3b2:	880a      	ldrh	r2, [r1, #0]
9000e3b4:	801a      	strh	r2, [r3, #0]
9000e3b6:	788a      	ldrb	r2, [r1, #2]
9000e3b8:	709a      	strb	r2, [r3, #2]
9000e3ba:	68c3      	ldr	r3, [r0, #12]
9000e3bc:	6882      	ldr	r2, [r0, #8]
9000e3be:	f3bf 8f5b 	dmb	ish
9000e3c2:	3301      	adds	r3, #1
9000e3c4:	429a      	cmp	r2, r3
9000e3c6:	bfd8      	it	le
9000e3c8:	1a9b      	suble	r3, r3, r2
9000e3ca:	60c3      	str	r3, [r0, #12]
9000e3cc:	bd10      	pop	{r4, pc}
9000e3ce:	4b03      	ldr	r3, [pc, #12]	; (9000e3dc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
9000e3d0:	2139      	movs	r1, #57	; 0x39
9000e3d2:	4a03      	ldr	r2, [pc, #12]	; (9000e3e0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
9000e3d4:	4803      	ldr	r0, [pc, #12]	; (9000e3e4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
9000e3d6:	f010 ff65 	bl	9001f2a4 <__assert_func>
9000e3da:	bf00      	nop
9000e3dc:	900222fc 	.word	0x900222fc
9000e3e0:	900223f0 	.word	0x900223f0
9000e3e4:	900222d6 	.word	0x900222d6

9000e3e8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
9000e3e8:	b510      	push	{r4, lr}
9000e3ea:	6803      	ldr	r3, [r0, #0]
9000e3ec:	4604      	mov	r4, r0
9000e3ee:	681b      	ldr	r3, [r3, #0]
9000e3f0:	4798      	blx	r3
9000e3f2:	b128      	cbz	r0, 9000e400 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
9000e3f4:	4b07      	ldr	r3, [pc, #28]	; (9000e414 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
9000e3f6:	213f      	movs	r1, #63	; 0x3f
9000e3f8:	4a07      	ldr	r2, [pc, #28]	; (9000e418 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
9000e3fa:	4808      	ldr	r0, [pc, #32]	; (9000e41c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
9000e3fc:	f010 ff52 	bl	9001f2a4 <__assert_func>
9000e400:	6923      	ldr	r3, [r4, #16]
9000e402:	68a2      	ldr	r2, [r4, #8]
9000e404:	f3bf 8f5b 	dmb	ish
9000e408:	3301      	adds	r3, #1
9000e40a:	429a      	cmp	r2, r3
9000e40c:	bfd8      	it	le
9000e40e:	1a9b      	suble	r3, r3, r2
9000e410:	6123      	str	r3, [r4, #16]
9000e412:	bd10      	pop	{r4, pc}
9000e414:	9002231f 	.word	0x9002231f
9000e418:	9002243e 	.word	0x9002243e
9000e41c:	900222d6 	.word	0x900222d6

9000e420 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
9000e420:	b570      	push	{r4, r5, r6, lr}
9000e422:	4604      	mov	r4, r0
9000e424:	6840      	ldr	r0, [r0, #4]
9000e426:	6803      	ldr	r3, [r0, #0]
9000e428:	681b      	ldr	r3, [r3, #0]
9000e42a:	4798      	blx	r3
9000e42c:	4605      	mov	r5, r0
9000e42e:	b930      	cbnz	r0, 9000e43e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
9000e430:	7a23      	ldrb	r3, [r4, #8]
9000e432:	b123      	cbz	r3, 9000e43e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
9000e434:	6860      	ldr	r0, [r4, #4]
9000e436:	6803      	ldr	r3, [r0, #0]
9000e438:	695b      	ldr	r3, [r3, #20]
9000e43a:	4798      	blx	r3
9000e43c:	7225      	strb	r5, [r4, #8]
9000e43e:	6860      	ldr	r0, [r4, #4]
9000e440:	6803      	ldr	r3, [r0, #0]
9000e442:	681b      	ldr	r3, [r3, #0]
9000e444:	4798      	blx	r3
9000e446:	b928      	cbnz	r0, 9000e454 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
9000e448:	6823      	ldr	r3, [r4, #0]
9000e44a:	4620      	mov	r0, r4
9000e44c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000e44e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000e452:	4718      	bx	r3
9000e454:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000e458:	f7f2 be6e 	b.w	90001138 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

9000e45c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
9000e45c:	b510      	push	{r4, lr}
9000e45e:	6082      	str	r2, [r0, #8]
9000e460:	2200      	movs	r2, #0
9000e462:	4c03      	ldr	r4, [pc, #12]	; (9000e470 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
9000e464:	e9c0 2203 	strd	r2, r2, [r0, #12]
9000e468:	e9c0 4100 	strd	r4, r1, [r0]
9000e46c:	bd10      	pop	{r4, pc}
9000e46e:	bf00      	nop
9000e470:	900223a4 	.word	0x900223a4

9000e474 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
9000e474:	6840      	ldr	r0, [r0, #4]
9000e476:	6803      	ldr	r3, [r0, #0]
9000e478:	681b      	ldr	r3, [r3, #0]
9000e47a:	4718      	bx	r3

9000e47c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
9000e47c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
9000e480:	4770      	bx	lr

9000e482 <_ZN8touchgfx14AbstractButton13executeActionEv>:
9000e482:	b510      	push	{r4, lr}
9000e484:	4604      	mov	r4, r0
9000e486:	6a80      	ldr	r0, [r0, #40]	; 0x28
9000e488:	b150      	cbz	r0, 9000e4a0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9000e48a:	6803      	ldr	r3, [r0, #0]
9000e48c:	68db      	ldr	r3, [r3, #12]
9000e48e:	4798      	blx	r3
9000e490:	b130      	cbz	r0, 9000e4a0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9000e492:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000e494:	4621      	mov	r1, r4
9000e496:	6803      	ldr	r3, [r0, #0]
9000e498:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000e49c:	689b      	ldr	r3, [r3, #8]
9000e49e:	4718      	bx	r3
9000e4a0:	bd10      	pop	{r4, pc}

9000e4a2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
9000e4a2:	790b      	ldrb	r3, [r1, #4]
9000e4a4:	2b00      	cmp	r3, #0
9000e4a6:	bf0c      	ite	eq
9000e4a8:	2301      	moveq	r3, #1
9000e4aa:	2300      	movne	r3, #0
9000e4ac:	b570      	push	{r4, r5, r6, lr}
9000e4ae:	4604      	mov	r4, r0
9000e4b0:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
9000e4b4:	460e      	mov	r6, r1
9000e4b6:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
9000e4ba:	d109      	bne.n	9000e4d0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
9000e4bc:	b14d      	cbz	r5, 9000e4d2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
9000e4be:	7933      	ldrb	r3, [r6, #4]
9000e4c0:	2b01      	cmp	r3, #1
9000e4c2:	d10c      	bne.n	9000e4de <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9000e4c4:	6823      	ldr	r3, [r4, #0]
9000e4c6:	4620      	mov	r0, r4
9000e4c8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9000e4ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000e4ce:	4718      	bx	r3
9000e4d0:	b12d      	cbz	r5, 9000e4de <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9000e4d2:	6823      	ldr	r3, [r4, #0]
9000e4d4:	4620      	mov	r0, r4
9000e4d6:	695b      	ldr	r3, [r3, #20]
9000e4d8:	4798      	blx	r3
9000e4da:	2d00      	cmp	r5, #0
9000e4dc:	d1ef      	bne.n	9000e4be <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
9000e4de:	bd70      	pop	{r4, r5, r6, pc}

9000e4e0 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
9000e4e0:	2200      	movs	r2, #0
9000e4e2:	8002      	strh	r2, [r0, #0]
9000e4e4:	8042      	strh	r2, [r0, #2]
9000e4e6:	8082      	strh	r2, [r0, #4]
9000e4e8:	80c2      	strh	r2, [r0, #6]
9000e4ea:	4770      	bx	lr

9000e4ec <_ZN8touchgfx8TextArea13setXBaselineYEss>:
9000e4ec:	b570      	push	{r4, r5, r6, lr}
9000e4ee:	6803      	ldr	r3, [r0, #0]
9000e4f0:	4604      	mov	r4, r0
9000e4f2:	4615      	mov	r5, r2
9000e4f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000e4f6:	4798      	blx	r3
9000e4f8:	6823      	ldr	r3, [r4, #0]
9000e4fa:	4629      	mov	r1, r5
9000e4fc:	4620      	mov	r0, r4
9000e4fe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9000e500:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000e504:	4718      	bx	r3
	...

9000e508 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
9000e508:	b573      	push	{r0, r1, r4, r5, r6, lr}
9000e50a:	f64f 73ff 	movw	r3, #65535	; 0xffff
9000e50e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
9000e510:	4299      	cmp	r1, r3
9000e512:	d029      	beq.n	9000e568 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
9000e514:	4b15      	ldr	r3, [pc, #84]	; (9000e56c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
9000e516:	681b      	ldr	r3, [r3, #0]
9000e518:	b92b      	cbnz	r3, 9000e526 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
9000e51a:	4b15      	ldr	r3, [pc, #84]	; (9000e570 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
9000e51c:	21b1      	movs	r1, #177	; 0xb1
9000e51e:	4a15      	ldr	r2, [pc, #84]	; (9000e574 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
9000e520:	4815      	ldr	r0, [pc, #84]	; (9000e578 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
9000e522:	f010 febf 	bl	9001f2a4 <__assert_func>
9000e526:	4a15      	ldr	r2, [pc, #84]	; (9000e57c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
9000e528:	8812      	ldrh	r2, [r2, #0]
9000e52a:	428a      	cmp	r2, r1
9000e52c:	d803      	bhi.n	9000e536 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
9000e52e:	4b14      	ldr	r3, [pc, #80]	; (9000e580 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
9000e530:	21b2      	movs	r1, #178	; 0xb2
9000e532:	4a10      	ldr	r2, [pc, #64]	; (9000e574 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
9000e534:	e7f4      	b.n	9000e520 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
9000e536:	eb03 0241 	add.w	r2, r3, r1, lsl #1
9000e53a:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
9000e53e:	4b11      	ldr	r3, [pc, #68]	; (9000e584 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
9000e540:	7854      	ldrb	r4, [r2, #1]
9000e542:	681b      	ldr	r3, [r3, #0]
9000e544:	f3c4 0481 	ubfx	r4, r4, #2, #2
9000e548:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
9000e54c:	682b      	ldr	r3, [r5, #0]
9000e54e:	69de      	ldr	r6, [r3, #28]
9000e550:	4b0d      	ldr	r3, [pc, #52]	; (9000e588 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
9000e552:	6818      	ldr	r0, [r3, #0]
9000e554:	f7f7 f960 	bl	90005818 <_ZNK8touchgfx5Texts7getTextEt>
9000e558:	2300      	movs	r3, #0
9000e55a:	4602      	mov	r2, r0
9000e55c:	4621      	mov	r1, r4
9000e55e:	9300      	str	r3, [sp, #0]
9000e560:	4628      	mov	r0, r5
9000e562:	47b0      	blx	r6
9000e564:	b002      	add	sp, #8
9000e566:	bd70      	pop	{r4, r5, r6, pc}
9000e568:	2000      	movs	r0, #0
9000e56a:	e7fb      	b.n	9000e564 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
9000e56c:	24012b30 	.word	0x24012b30
9000e570:	900224dc 	.word	0x900224dc
9000e574:	90022614 	.word	0x90022614
9000e578:	9002251e 	.word	0x9002251e
9000e57c:	24012b34 	.word	0x24012b34
9000e580:	90022547 	.word	0x90022547
9000e584:	24012b38 	.word	0x24012b38
9000e588:	24012b3c 	.word	0x24012b3c

9000e58c <_ZN8touchgfx8TextArea12setBaselineYEs>:
9000e58c:	b570      	push	{r4, r5, r6, lr}
9000e58e:	6803      	ldr	r3, [r0, #0]
9000e590:	4604      	mov	r4, r0
9000e592:	b28d      	uxth	r5, r1
9000e594:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
9000e596:	6b1e      	ldr	r6, [r3, #48]	; 0x30
9000e598:	4b10      	ldr	r3, [pc, #64]	; (9000e5dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
9000e59a:	681b      	ldr	r3, [r3, #0]
9000e59c:	b92b      	cbnz	r3, 9000e5aa <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
9000e59e:	4b10      	ldr	r3, [pc, #64]	; (9000e5e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
9000e5a0:	21b1      	movs	r1, #177	; 0xb1
9000e5a2:	4a10      	ldr	r2, [pc, #64]	; (9000e5e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
9000e5a4:	4810      	ldr	r0, [pc, #64]	; (9000e5e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
9000e5a6:	f010 fe7d 	bl	9001f2a4 <__assert_func>
9000e5aa:	4910      	ldr	r1, [pc, #64]	; (9000e5ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
9000e5ac:	8809      	ldrh	r1, [r1, #0]
9000e5ae:	4291      	cmp	r1, r2
9000e5b0:	d803      	bhi.n	9000e5ba <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
9000e5b2:	4b0f      	ldr	r3, [pc, #60]	; (9000e5f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
9000e5b4:	21b2      	movs	r1, #178	; 0xb2
9000e5b6:	4a0b      	ldr	r2, [pc, #44]	; (9000e5e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
9000e5b8:	e7f4      	b.n	9000e5a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
9000e5ba:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9000e5be:	4b0d      	ldr	r3, [pc, #52]	; (9000e5f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
9000e5c0:	681b      	ldr	r3, [r3, #0]
9000e5c2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
9000e5c6:	6803      	ldr	r3, [r0, #0]
9000e5c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000e5ca:	4798      	blx	r3
9000e5cc:	1a29      	subs	r1, r5, r0
9000e5ce:	4633      	mov	r3, r6
9000e5d0:	4620      	mov	r0, r4
9000e5d2:	b209      	sxth	r1, r1
9000e5d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000e5d8:	4718      	bx	r3
9000e5da:	bf00      	nop
9000e5dc:	24012b30 	.word	0x24012b30
9000e5e0:	900224dc 	.word	0x900224dc
9000e5e4:	90022614 	.word	0x90022614
9000e5e8:	9002251e 	.word	0x9002251e
9000e5ec:	24012b34 	.word	0x24012b34
9000e5f0:	90022547 	.word	0x90022547
9000e5f4:	24012b38 	.word	0x24012b38

9000e5f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
9000e5f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000e5fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
9000e600:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
9000e602:	b08c      	sub	sp, #48	; 0x30
9000e604:	4604      	mov	r4, r0
9000e606:	4293      	cmp	r3, r2
9000e608:	4688      	mov	r8, r1
9000e60a:	d05f      	beq.n	9000e6cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
9000e60c:	4e31      	ldr	r6, [pc, #196]	; (9000e6d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
9000e60e:	6832      	ldr	r2, [r6, #0]
9000e610:	b92a      	cbnz	r2, 9000e61e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
9000e612:	4b31      	ldr	r3, [pc, #196]	; (9000e6d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
9000e614:	21b1      	movs	r1, #177	; 0xb1
9000e616:	4a31      	ldr	r2, [pc, #196]	; (9000e6dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
9000e618:	4831      	ldr	r0, [pc, #196]	; (9000e6e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
9000e61a:	f010 fe43 	bl	9001f2a4 <__assert_func>
9000e61e:	4d31      	ldr	r5, [pc, #196]	; (9000e6e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
9000e620:	8829      	ldrh	r1, [r5, #0]
9000e622:	4299      	cmp	r1, r3
9000e624:	d803      	bhi.n	9000e62e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
9000e626:	4b30      	ldr	r3, [pc, #192]	; (9000e6e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
9000e628:	21b2      	movs	r1, #178	; 0xb2
9000e62a:	4a2c      	ldr	r2, [pc, #176]	; (9000e6dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
9000e62c:	e7f4      	b.n	9000e618 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
9000e62e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9000e632:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
9000e636:	4b2d      	ldr	r3, [pc, #180]	; (9000e6ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
9000e638:	681b      	ldr	r3, [r3, #0]
9000e63a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9000e63e:	2a00      	cmp	r2, #0
9000e640:	d044      	beq.n	9000e6cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
9000e642:	784b      	ldrb	r3, [r1, #1]
9000e644:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
9000e648:	f3c3 0901 	ubfx	r9, r3, #0, #2
9000e64c:	f3c3 0381 	ubfx	r3, r3, #2, #2
9000e650:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
9000e654:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
9000e658:	4b25      	ldr	r3, [pc, #148]	; (9000e6f0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
9000e65a:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
9000e65e:	681b      	ldr	r3, [r3, #0]
9000e660:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
9000e664:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
9000e668:	9207      	str	r2, [sp, #28]
9000e66a:	6b00      	ldr	r0, [r0, #48]	; 0x30
9000e66c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
9000e670:	9009      	str	r0, [sp, #36]	; 0x24
9000e672:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
9000e676:	f88d 9020 	strb.w	r9, [sp, #32]
9000e67a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
9000e67e:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
9000e682:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
9000e686:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
9000e68a:	b10a      	cbz	r2, 9000e690 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
9000e68c:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
9000e68e:	b907      	cbnz	r7, 9000e692 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
9000e690:	689f      	ldr	r7, [r3, #8]
9000e692:	f10d 0914 	add.w	r9, sp, #20
9000e696:	4621      	mov	r1, r4
9000e698:	4648      	mov	r0, r9
9000e69a:	f002 ffd9 	bl	90011650 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000e69e:	6833      	ldr	r3, [r6, #0]
9000e6a0:	2b00      	cmp	r3, #0
9000e6a2:	d0b6      	beq.n	9000e612 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
9000e6a4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
9000e6a6:	882b      	ldrh	r3, [r5, #0]
9000e6a8:	428b      	cmp	r3, r1
9000e6aa:	d9bc      	bls.n	9000e626 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
9000e6ac:	4b11      	ldr	r3, [pc, #68]	; (9000e6f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
9000e6ae:	6818      	ldr	r0, [r3, #0]
9000e6b0:	f7f7 f8b2 	bl	90005818 <_ZNK8touchgfx5Texts7getTextEt>
9000e6b4:	2300      	movs	r3, #0
9000e6b6:	9001      	str	r0, [sp, #4]
9000e6b8:	4638      	mov	r0, r7
9000e6ba:	e9cd 3302 	strd	r3, r3, [sp, #8]
9000e6be:	ab07      	add	r3, sp, #28
9000e6c0:	9300      	str	r3, [sp, #0]
9000e6c2:	4643      	mov	r3, r8
9000e6c4:	e899 0006 	ldmia.w	r9, {r1, r2}
9000e6c8:	f7f7 f837 	bl	9000573a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9000e6cc:	b00c      	add	sp, #48	; 0x30
9000e6ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000e6d2:	bf00      	nop
9000e6d4:	24012b30 	.word	0x24012b30
9000e6d8:	900224dc 	.word	0x900224dc
9000e6dc:	90022614 	.word	0x90022614
9000e6e0:	9002251e 	.word	0x9002251e
9000e6e4:	24012b34 	.word	0x24012b34
9000e6e8:	90022547 	.word	0x90022547
9000e6ec:	24012b38 	.word	0x24012b38
9000e6f0:	24012ae0 	.word	0x24012ae0
9000e6f4:	24012b3c 	.word	0x24012b3c

9000e6f8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
9000e6f8:	b40e      	push	{r1, r2, r3}
9000e6fa:	f64f 72ff 	movw	r2, #65535	; 0xffff
9000e6fe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000e702:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
9000e704:	b09b      	sub	sp, #108	; 0x6c
9000e706:	4604      	mov	r4, r0
9000e708:	4293      	cmp	r3, r2
9000e70a:	d061      	beq.n	9000e7d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
9000e70c:	aa24      	add	r2, sp, #144	; 0x90
9000e70e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 9000e7e4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
9000e712:	9203      	str	r2, [sp, #12]
9000e714:	f8da 2000 	ldr.w	r2, [sl]
9000e718:	b92a      	cbnz	r2, 9000e726 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
9000e71a:	4b2e      	ldr	r3, [pc, #184]	; (9000e7d4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
9000e71c:	21b1      	movs	r1, #177	; 0xb1
9000e71e:	4a2e      	ldr	r2, [pc, #184]	; (9000e7d8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
9000e720:	482e      	ldr	r0, [pc, #184]	; (9000e7dc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
9000e722:	f010 fdbf 	bl	9001f2a4 <__assert_func>
9000e726:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 9000e7e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
9000e72a:	f8b8 1000 	ldrh.w	r1, [r8]
9000e72e:	4299      	cmp	r1, r3
9000e730:	d803      	bhi.n	9000e73a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
9000e732:	4b2b      	ldr	r3, [pc, #172]	; (9000e7e0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
9000e734:	21b2      	movs	r1, #178	; 0xb2
9000e736:	4a28      	ldr	r2, [pc, #160]	; (9000e7d8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
9000e738:	e7f2      	b.n	9000e720 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
9000e73a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 9000e7ec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
9000e73e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
9000e742:	f8d9 3000 	ldr.w	r3, [r9]
9000e746:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9000e74a:	683b      	ldr	r3, [r7, #0]
9000e74c:	4638      	mov	r0, r7
9000e74e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000e750:	4798      	blx	r3
9000e752:	4606      	mov	r6, r0
9000e754:	b205      	sxth	r5, r0
9000e756:	a804      	add	r0, sp, #16
9000e758:	f003 fb8f 	bl	90011e7a <_ZN8touchgfx12TextProviderC1Ev>
9000e75c:	683b      	ldr	r3, [r7, #0]
9000e75e:	4638      	mov	r0, r7
9000e760:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9000e762:	4798      	blx	r3
9000e764:	9923      	ldr	r1, [sp, #140]	; 0x8c
9000e766:	4603      	mov	r3, r0
9000e768:	9a03      	ldr	r2, [sp, #12]
9000e76a:	a804      	add	r0, sp, #16
9000e76c:	f003 fbca 	bl	90011f04 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
9000e770:	f8da 3000 	ldr.w	r3, [sl]
9000e774:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
9000e778:	2b00      	cmp	r3, #0
9000e77a:	d0ce      	beq.n	9000e71a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
9000e77c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
9000e77e:	f8b8 0000 	ldrh.w	r0, [r8]
9000e782:	4290      	cmp	r0, r2
9000e784:	d9d5      	bls.n	9000e732 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
9000e786:	eb03 0742 	add.w	r7, r3, r2, lsl #1
9000e78a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
9000e78e:	f8d9 3000 	ldr.w	r3, [r9]
9000e792:	787a      	ldrb	r2, [r7, #1]
9000e794:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
9000e798:	f3c2 0281 	ubfx	r2, r2, #2, #2
9000e79c:	9700      	str	r7, [sp, #0]
9000e79e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
9000e7a2:	a804      	add	r0, sp, #16
9000e7a4:	f001 fabd 	bl	9000fd22 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
9000e7a8:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
9000e7ac:	b203      	sxth	r3, r0
9000e7ae:	18a9      	adds	r1, r5, r2
9000e7b0:	2900      	cmp	r1, #0
9000e7b2:	dd0b      	ble.n	9000e7cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
9000e7b4:	3b01      	subs	r3, #1
9000e7b6:	fb13 f302 	smulbb	r3, r3, r2
9000e7ba:	fb16 3300 	smlabb	r3, r6, r0, r3
9000e7be:	b21d      	sxth	r5, r3
9000e7c0:	4628      	mov	r0, r5
9000e7c2:	b01b      	add	sp, #108	; 0x6c
9000e7c4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000e7c8:	b003      	add	sp, #12
9000e7ca:	4770      	bx	lr
9000e7cc:	2b00      	cmp	r3, #0
9000e7ce:	dcf7      	bgt.n	9000e7c0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
9000e7d0:	2500      	movs	r5, #0
9000e7d2:	e7f5      	b.n	9000e7c0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
9000e7d4:	900224dc 	.word	0x900224dc
9000e7d8:	90022614 	.word	0x90022614
9000e7dc:	9002251e 	.word	0x9002251e
9000e7e0:	90022547 	.word	0x90022547
9000e7e4:	24012b30 	.word	0x24012b30
9000e7e8:	24012b34 	.word	0x24012b34
9000e7ec:	24012b38 	.word	0x24012b38

9000e7f0 <_ZN8touchgfx8TextArea13getTextHeightEv>:
9000e7f0:	b570      	push	{r4, r5, r6, lr}
9000e7f2:	f64f 73ff 	movw	r3, #65535	; 0xffff
9000e7f6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
9000e7f8:	4604      	mov	r4, r0
9000e7fa:	4299      	cmp	r1, r3
9000e7fc:	d01e      	beq.n	9000e83c <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
9000e7fe:	6803      	ldr	r3, [r0, #0]
9000e800:	6edd      	ldr	r5, [r3, #108]	; 0x6c
9000e802:	4b0f      	ldr	r3, [pc, #60]	; (9000e840 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
9000e804:	681b      	ldr	r3, [r3, #0]
9000e806:	b92b      	cbnz	r3, 9000e814 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
9000e808:	4b0e      	ldr	r3, [pc, #56]	; (9000e844 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
9000e80a:	21b1      	movs	r1, #177	; 0xb1
9000e80c:	4a0e      	ldr	r2, [pc, #56]	; (9000e848 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
9000e80e:	480f      	ldr	r0, [pc, #60]	; (9000e84c <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
9000e810:	f010 fd48 	bl	9001f2a4 <__assert_func>
9000e814:	4b0e      	ldr	r3, [pc, #56]	; (9000e850 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
9000e816:	881b      	ldrh	r3, [r3, #0]
9000e818:	428b      	cmp	r3, r1
9000e81a:	d803      	bhi.n	9000e824 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
9000e81c:	4b0d      	ldr	r3, [pc, #52]	; (9000e854 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
9000e81e:	21b2      	movs	r1, #178	; 0xb2
9000e820:	4a09      	ldr	r2, [pc, #36]	; (9000e848 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
9000e822:	e7f4      	b.n	9000e80e <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
9000e824:	4b0c      	ldr	r3, [pc, #48]	; (9000e858 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
9000e826:	6818      	ldr	r0, [r3, #0]
9000e828:	f7f6 fff6 	bl	90005818 <_ZNK8touchgfx5Texts7getTextEt>
9000e82c:	2300      	movs	r3, #0
9000e82e:	4601      	mov	r1, r0
9000e830:	46ac      	mov	ip, r5
9000e832:	4620      	mov	r0, r4
9000e834:	461a      	mov	r2, r3
9000e836:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000e83a:	4760      	bx	ip
9000e83c:	2000      	movs	r0, #0
9000e83e:	bd70      	pop	{r4, r5, r6, pc}
9000e840:	24012b30 	.word	0x24012b30
9000e844:	900224dc 	.word	0x900224dc
9000e848:	90022614 	.word	0x90022614
9000e84c:	9002251e 	.word	0x9002251e
9000e850:	24012b34 	.word	0x24012b34
9000e854:	90022547 	.word	0x90022547
9000e858:	24012b3c 	.word	0x24012b3c

9000e85c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
9000e85c:	b538      	push	{r3, r4, r5, lr}
9000e85e:	f64f 73ff 	movw	r3, #65535	; 0xffff
9000e862:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
9000e864:	4604      	mov	r4, r0
9000e866:	429a      	cmp	r2, r3
9000e868:	d014      	beq.n	9000e894 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
9000e86a:	6803      	ldr	r3, [r0, #0]
9000e86c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
9000e86e:	4798      	blx	r3
9000e870:	6823      	ldr	r3, [r4, #0]
9000e872:	4605      	mov	r5, r0
9000e874:	4620      	mov	r0, r4
9000e876:	6e5b      	ldr	r3, [r3, #100]	; 0x64
9000e878:	4798      	blx	r3
9000e87a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
9000e87e:	b22d      	sxth	r5, r5
9000e880:	4601      	mov	r1, r0
9000e882:	f013 0ffd 	tst.w	r3, #253	; 0xfd
9000e886:	bf06      	itte	eq
9000e888:	4602      	moveq	r2, r0
9000e88a:	4629      	moveq	r1, r5
9000e88c:	462a      	movne	r2, r5
9000e88e:	4620      	mov	r0, r4
9000e890:	f7f5 fee8 	bl	90004664 <_ZN8touchgfx8Drawable14setWidthHeightEss>
9000e894:	bd38      	pop	{r3, r4, r5, pc}

9000e896 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
9000e896:	888a      	ldrh	r2, [r1, #4]
9000e898:	8582      	strh	r2, [r0, #44]	; 0x2c
9000e89a:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
9000e89e:	b922      	cbnz	r2, 9000e8aa <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
9000e8a0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9000e8a4:	b90b      	cbnz	r3, 9000e8aa <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
9000e8a6:	f7ff bfd9 	b.w	9000e85c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9000e8aa:	4770      	bx	lr

9000e8ac <_ZNK8touchgfx3Box12getSolidRectEv>:
9000e8ac:	2300      	movs	r3, #0
9000e8ae:	8083      	strh	r3, [r0, #4]
9000e8b0:	80c3      	strh	r3, [r0, #6]
9000e8b2:	8003      	strh	r3, [r0, #0]
9000e8b4:	8043      	strh	r3, [r0, #2]
9000e8b6:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
9000e8ba:	2bff      	cmp	r3, #255	; 0xff
9000e8bc:	bf01      	itttt	eq
9000e8be:	890b      	ldrheq	r3, [r1, #8]
9000e8c0:	8083      	strheq	r3, [r0, #4]
9000e8c2:	894b      	ldrheq	r3, [r1, #10]
9000e8c4:	80c3      	strheq	r3, [r0, #6]
9000e8c6:	4770      	bx	lr

9000e8c8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
9000e8c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
9000e8ca:	4604      	mov	r4, r0
9000e8cc:	466b      	mov	r3, sp
9000e8ce:	6808      	ldr	r0, [r1, #0]
9000e8d0:	6849      	ldr	r1, [r1, #4]
9000e8d2:	c303      	stmia	r3!, {r0, r1}
9000e8d4:	6823      	ldr	r3, [r4, #0]
9000e8d6:	4669      	mov	r1, sp
9000e8d8:	4620      	mov	r0, r4
9000e8da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9000e8dc:	4798      	blx	r3
9000e8de:	4b08      	ldr	r3, [pc, #32]	; (9000e900 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
9000e8e0:	681b      	ldr	r3, [r3, #0]
9000e8e2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
9000e8e6:	b10a      	cbz	r2, 9000e8ec <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
9000e8e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000e8ea:	b900      	cbnz	r0, 9000e8ee <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
9000e8ec:	6898      	ldr	r0, [r3, #8]
9000e8ee:	6803      	ldr	r3, [r0, #0]
9000e8f0:	4669      	mov	r1, sp
9000e8f2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000e8f4:	699d      	ldr	r5, [r3, #24]
9000e8f6:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
9000e8fa:	47a8      	blx	r5
9000e8fc:	b003      	add	sp, #12
9000e8fe:	bd30      	pop	{r4, r5, pc}
9000e900:	24012ae0 	.word	0x24012ae0

9000e904 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
9000e904:	b570      	push	{r4, r5, r6, lr}
9000e906:	880b      	ldrh	r3, [r1, #0]
9000e908:	4605      	mov	r5, r0
9000e90a:	4604      	mov	r4, r0
9000e90c:	85c3      	strh	r3, [r0, #46]	; 0x2e
9000e90e:	8813      	ldrh	r3, [r2, #0]
9000e910:	f825 3f30 	strh.w	r3, [r5, #48]!
9000e914:	4628      	mov	r0, r5
9000e916:	f004 fe9b 	bl	90013650 <_ZNK8touchgfx6Bitmap8getWidthEv>
9000e91a:	4606      	mov	r6, r0
9000e91c:	4628      	mov	r0, r5
9000e91e:	f004 fed1 	bl	900136c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9000e922:	6823      	ldr	r3, [r4, #0]
9000e924:	4605      	mov	r5, r0
9000e926:	b231      	sxth	r1, r6
9000e928:	4620      	mov	r0, r4
9000e92a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000e92c:	4798      	blx	r3
9000e92e:	6823      	ldr	r3, [r4, #0]
9000e930:	b229      	sxth	r1, r5
9000e932:	4620      	mov	r0, r4
9000e934:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000e936:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000e93a:	4718      	bx	r3

9000e93c <_ZNK8touchgfx6Button12getSolidRectEv>:
9000e93c:	b510      	push	{r4, lr}
9000e93e:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
9000e942:	4604      	mov	r4, r0
9000e944:	2bff      	cmp	r3, #255	; 0xff
9000e946:	d006      	beq.n	9000e956 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
9000e948:	2300      	movs	r3, #0
9000e94a:	8003      	strh	r3, [r0, #0]
9000e94c:	8043      	strh	r3, [r0, #2]
9000e94e:	8083      	strh	r3, [r0, #4]
9000e950:	80c3      	strh	r3, [r0, #6]
9000e952:	4620      	mov	r0, r4
9000e954:	bd10      	pop	{r4, pc}
9000e956:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
9000e95a:	b11b      	cbz	r3, 9000e964 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
9000e95c:	3130      	adds	r1, #48	; 0x30
9000e95e:	f004 feeb 	bl	90013738 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9000e962:	e7f6      	b.n	9000e952 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
9000e964:	312e      	adds	r1, #46	; 0x2e
9000e966:	e7fa      	b.n	9000e95e <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

9000e968 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
9000e968:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e96c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000e970:	b08a      	sub	sp, #40	; 0x28
9000e972:	4604      	mov	r4, r0
9000e974:	4688      	mov	r8, r1
9000e976:	2b00      	cmp	r3, #0
9000e978:	d044      	beq.n	9000ea04 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
9000e97a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
9000e97c:	a805      	add	r0, sp, #20
9000e97e:	f8ad 3014 	strh.w	r3, [sp, #20]
9000e982:	f004 fe65 	bl	90013650 <_ZNK8touchgfx6Bitmap8getWidthEv>
9000e986:	4605      	mov	r5, r0
9000e988:	b206      	sxth	r6, r0
9000e98a:	a805      	add	r0, sp, #20
9000e98c:	f004 fe9a 	bl	900136c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9000e990:	f9b8 2000 	ldrsh.w	r2, [r8]
9000e994:	f8b8 7004 	ldrh.w	r7, [r8, #4]
9000e998:	2300      	movs	r3, #0
9000e99a:	fa0f fc80 	sxth.w	ip, r0
9000e99e:	4417      	add	r7, r2
9000e9a0:	9306      	str	r3, [sp, #24]
9000e9a2:	b2bf      	uxth	r7, r7
9000e9a4:	fa0f fe87 	sxth.w	lr, r7
9000e9a8:	459e      	cmp	lr, r3
9000e9aa:	dd2d      	ble.n	9000ea08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
9000e9ac:	4296      	cmp	r6, r2
9000e9ae:	dd2b      	ble.n	9000ea08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
9000e9b0:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
9000e9b4:	f8b8 1006 	ldrh.w	r1, [r8, #6]
9000e9b8:	4419      	add	r1, r3
9000e9ba:	b289      	uxth	r1, r1
9000e9bc:	fa0f f881 	sxth.w	r8, r1
9000e9c0:	f1b8 0f00 	cmp.w	r8, #0
9000e9c4:	dd20      	ble.n	9000ea08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
9000e9c6:	459c      	cmp	ip, r3
9000e9c8:	dd1e      	ble.n	9000ea08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
9000e9ca:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
9000e9ce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9000e9d2:	4576      	cmp	r6, lr
9000e9d4:	bfa8      	it	ge
9000e9d6:	463d      	movge	r5, r7
9000e9d8:	45c4      	cmp	ip, r8
9000e9da:	bfa8      	it	ge
9000e9dc:	4608      	movge	r0, r1
9000e9de:	f8ad 2018 	strh.w	r2, [sp, #24]
9000e9e2:	1aad      	subs	r5, r5, r2
9000e9e4:	1ac0      	subs	r0, r0, r3
9000e9e6:	f8ad 301a 	strh.w	r3, [sp, #26]
9000e9ea:	f8ad 501c 	strh.w	r5, [sp, #28]
9000e9ee:	f8ad 001e 	strh.w	r0, [sp, #30]
9000e9f2:	4b1f      	ldr	r3, [pc, #124]	; (9000ea70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
9000e9f4:	681b      	ldr	r3, [r3, #0]
9000e9f6:	b953      	cbnz	r3, 9000ea0e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
9000e9f8:	4b1e      	ldr	r3, [pc, #120]	; (9000ea74 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
9000e9fa:	218b      	movs	r1, #139	; 0x8b
9000e9fc:	4a1e      	ldr	r2, [pc, #120]	; (9000ea78 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
9000e9fe:	481f      	ldr	r0, [pc, #124]	; (9000ea7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
9000ea00:	f010 fc50 	bl	9001f2a4 <__assert_func>
9000ea04:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
9000ea06:	e7b9      	b.n	9000e97c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
9000ea08:	2300      	movs	r3, #0
9000ea0a:	9307      	str	r3, [sp, #28]
9000ea0c:	e7f1      	b.n	9000e9f2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
9000ea0e:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9000ea12:	f64f 73ff 	movw	r3, #65535	; 0xffff
9000ea16:	429a      	cmp	r2, r3
9000ea18:	d026      	beq.n	9000ea68 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
9000ea1a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9000ea1e:	2b00      	cmp	r3, #0
9000ea20:	dd22      	ble.n	9000ea68 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
9000ea22:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
9000ea26:	2b00      	cmp	r3, #0
9000ea28:	dd1e      	ble.n	9000ea68 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
9000ea2a:	2300      	movs	r3, #0
9000ea2c:	a908      	add	r1, sp, #32
9000ea2e:	4620      	mov	r0, r4
9000ea30:	e9cd 3308 	strd	r3, r3, [sp, #32]
9000ea34:	6823      	ldr	r3, [r4, #0]
9000ea36:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9000ea38:	4798      	blx	r3
9000ea3a:	4b11      	ldr	r3, [pc, #68]	; (9000ea80 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
9000ea3c:	681b      	ldr	r3, [r3, #0]
9000ea3e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
9000ea42:	b10a      	cbz	r2, 9000ea48 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
9000ea44:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000ea46:	b900      	cbnz	r0, 9000ea4a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
9000ea48:	6898      	ldr	r0, [r3, #8]
9000ea4a:	2501      	movs	r5, #1
9000ea4c:	6801      	ldr	r1, [r0, #0]
9000ea4e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9000ea52:	9502      	str	r5, [sp, #8]
9000ea54:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
9000ea58:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9000ea5c:	9401      	str	r4, [sp, #4]
9000ea5e:	ac06      	add	r4, sp, #24
9000ea60:	9400      	str	r4, [sp, #0]
9000ea62:	688c      	ldr	r4, [r1, #8]
9000ea64:	a905      	add	r1, sp, #20
9000ea66:	47a0      	blx	r4
9000ea68:	b00a      	add	sp, #40	; 0x28
9000ea6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000ea6e:	bf00      	nop
9000ea70:	24012b68 	.word	0x24012b68
9000ea74:	900226a8 	.word	0x900226a8
9000ea78:	9002277c 	.word	0x9002277c
9000ea7c:	900226e4 	.word	0x900226e4
9000ea80:	24012ae0 	.word	0x24012ae0

9000ea84 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
9000ea84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9000ea86:	f64f 73ff 	movw	r3, #65535	; 0xffff
9000ea8a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
9000ea8c:	4606      	mov	r6, r0
9000ea8e:	4299      	cmp	r1, r3
9000ea90:	d02a      	beq.n	9000eae8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
9000ea92:	4b16      	ldr	r3, [pc, #88]	; (9000eaec <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
9000ea94:	681b      	ldr	r3, [r3, #0]
9000ea96:	b92b      	cbnz	r3, 9000eaa4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
9000ea98:	4b15      	ldr	r3, [pc, #84]	; (9000eaf0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
9000ea9a:	21b1      	movs	r1, #177	; 0xb1
9000ea9c:	4a15      	ldr	r2, [pc, #84]	; (9000eaf4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
9000ea9e:	4816      	ldr	r0, [pc, #88]	; (9000eaf8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
9000eaa0:	f010 fc00 	bl	9001f2a4 <__assert_func>
9000eaa4:	4a15      	ldr	r2, [pc, #84]	; (9000eafc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
9000eaa6:	8812      	ldrh	r2, [r2, #0]
9000eaa8:	428a      	cmp	r2, r1
9000eaaa:	d803      	bhi.n	9000eab4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
9000eaac:	4b14      	ldr	r3, [pc, #80]	; (9000eb00 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
9000eaae:	21b2      	movs	r1, #178	; 0xb2
9000eab0:	4a10      	ldr	r2, [pc, #64]	; (9000eaf4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
9000eab2:	e7f4      	b.n	9000ea9e <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
9000eab4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
9000eab8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
9000eabc:	4b11      	ldr	r3, [pc, #68]	; (9000eb04 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
9000eabe:	7854      	ldrb	r4, [r2, #1]
9000eac0:	681b      	ldr	r3, [r3, #0]
9000eac2:	f3c4 0481 	ubfx	r4, r4, #2, #2
9000eac6:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
9000eaca:	682b      	ldr	r3, [r5, #0]
9000eacc:	69df      	ldr	r7, [r3, #28]
9000eace:	4b0e      	ldr	r3, [pc, #56]	; (9000eb08 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
9000ead0:	6818      	ldr	r0, [r3, #0]
9000ead2:	f7f6 fea1 	bl	90005818 <_ZNK8touchgfx5Texts7getTextEt>
9000ead6:	2300      	movs	r3, #0
9000ead8:	4602      	mov	r2, r0
9000eada:	4621      	mov	r1, r4
9000eadc:	9300      	str	r3, [sp, #0]
9000eade:	4628      	mov	r0, r5
9000eae0:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
9000eae2:	47b8      	blx	r7
9000eae4:	b003      	add	sp, #12
9000eae6:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000eae8:	2000      	movs	r0, #0
9000eaea:	e7fb      	b.n	9000eae4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
9000eaec:	24012b30 	.word	0x24012b30
9000eaf0:	900224dc 	.word	0x900224dc
9000eaf4:	90022828 	.word	0x90022828
9000eaf8:	9002251e 	.word	0x9002251e
9000eafc:	24012b34 	.word	0x24012b34
9000eb00:	90022547 	.word	0x90022547
9000eb04:	24012b38 	.word	0x24012b38
9000eb08:	24012b3c 	.word	0x24012b3c

9000eb0c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
9000eb0c:	b570      	push	{r4, r5, r6, lr}
9000eb0e:	f64f 73ff 	movw	r3, #65535	; 0xffff
9000eb12:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
9000eb14:	4604      	mov	r4, r0
9000eb16:	4299      	cmp	r1, r3
9000eb18:	d01e      	beq.n	9000eb58 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
9000eb1a:	6803      	ldr	r3, [r0, #0]
9000eb1c:	6edd      	ldr	r5, [r3, #108]	; 0x6c
9000eb1e:	4b0f      	ldr	r3, [pc, #60]	; (9000eb5c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
9000eb20:	681b      	ldr	r3, [r3, #0]
9000eb22:	b92b      	cbnz	r3, 9000eb30 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
9000eb24:	4b0e      	ldr	r3, [pc, #56]	; (9000eb60 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
9000eb26:	21b1      	movs	r1, #177	; 0xb1
9000eb28:	4a0e      	ldr	r2, [pc, #56]	; (9000eb64 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
9000eb2a:	480f      	ldr	r0, [pc, #60]	; (9000eb68 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
9000eb2c:	f010 fbba 	bl	9001f2a4 <__assert_func>
9000eb30:	4b0e      	ldr	r3, [pc, #56]	; (9000eb6c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
9000eb32:	881b      	ldrh	r3, [r3, #0]
9000eb34:	428b      	cmp	r3, r1
9000eb36:	d803      	bhi.n	9000eb40 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
9000eb38:	4b0d      	ldr	r3, [pc, #52]	; (9000eb70 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
9000eb3a:	21b2      	movs	r1, #178	; 0xb2
9000eb3c:	4a09      	ldr	r2, [pc, #36]	; (9000eb64 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
9000eb3e:	e7f4      	b.n	9000eb2a <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
9000eb40:	4b0c      	ldr	r3, [pc, #48]	; (9000eb74 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
9000eb42:	6818      	ldr	r0, [r3, #0]
9000eb44:	f7f6 fe68 	bl	90005818 <_ZNK8touchgfx5Texts7getTextEt>
9000eb48:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000eb4a:	4601      	mov	r1, r0
9000eb4c:	46ac      	mov	ip, r5
9000eb4e:	4620      	mov	r0, r4
9000eb50:	2300      	movs	r3, #0
9000eb52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000eb56:	4760      	bx	ip
9000eb58:	2000      	movs	r0, #0
9000eb5a:	bd70      	pop	{r4, r5, r6, pc}
9000eb5c:	24012b30 	.word	0x24012b30
9000eb60:	900224dc 	.word	0x900224dc
9000eb64:	90022828 	.word	0x90022828
9000eb68:	9002251e 	.word	0x9002251e
9000eb6c:	24012b34 	.word	0x24012b34
9000eb70:	90022547 	.word	0x90022547
9000eb74:	24012b3c 	.word	0x24012b3c

9000eb78 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
9000eb78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000eb7c:	f64f 72ff 	movw	r2, #65535	; 0xffff
9000eb80:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
9000eb82:	b08c      	sub	sp, #48	; 0x30
9000eb84:	4604      	mov	r4, r0
9000eb86:	4293      	cmp	r3, r2
9000eb88:	460e      	mov	r6, r1
9000eb8a:	d05d      	beq.n	9000ec48 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
9000eb8c:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 9000ec6c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
9000eb90:	f8d8 2000 	ldr.w	r2, [r8]
9000eb94:	b92a      	cbnz	r2, 9000eba2 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
9000eb96:	4b2e      	ldr	r3, [pc, #184]	; (9000ec50 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
9000eb98:	21b1      	movs	r1, #177	; 0xb1
9000eb9a:	4a2e      	ldr	r2, [pc, #184]	; (9000ec54 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
9000eb9c:	482e      	ldr	r0, [pc, #184]	; (9000ec58 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
9000eb9e:	f010 fb81 	bl	9001f2a4 <__assert_func>
9000eba2:	4f2e      	ldr	r7, [pc, #184]	; (9000ec5c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
9000eba4:	8839      	ldrh	r1, [r7, #0]
9000eba6:	4299      	cmp	r1, r3
9000eba8:	d803      	bhi.n	9000ebb2 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
9000ebaa:	4b2d      	ldr	r3, [pc, #180]	; (9000ec60 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
9000ebac:	21b2      	movs	r1, #178	; 0xb2
9000ebae:	4a29      	ldr	r2, [pc, #164]	; (9000ec54 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
9000ebb0:	e7f4      	b.n	9000eb9c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
9000ebb2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9000ebb6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
9000ebba:	4b2a      	ldr	r3, [pc, #168]	; (9000ec64 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
9000ebbc:	681b      	ldr	r3, [r3, #0]
9000ebbe:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9000ebc2:	2a00      	cmp	r2, #0
9000ebc4:	d040      	beq.n	9000ec48 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
9000ebc6:	784b      	ldrb	r3, [r1, #1]
9000ebc8:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
9000ebcc:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
9000ebd0:	f3c3 0901 	ubfx	r9, r3, #0, #2
9000ebd4:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
9000ebd8:	f3c3 0381 	ubfx	r3, r3, #2, #2
9000ebdc:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
9000ebe0:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
9000ebe4:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
9000ebe8:	ad05      	add	r5, sp, #20
9000ebea:	6b00      	ldr	r0, [r0, #48]	; 0x30
9000ebec:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
9000ebf0:	9207      	str	r2, [sp, #28]
9000ebf2:	f88d 9020 	strb.w	r9, [sp, #32]
9000ebf6:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
9000ebfa:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
9000ebfe:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
9000ec02:	9009      	str	r0, [sp, #36]	; 0x24
9000ec04:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
9000ec08:	f7f4 fff8 	bl	90003bfc <_ZN8touchgfx3HAL3lcdEv>
9000ec0c:	4621      	mov	r1, r4
9000ec0e:	4681      	mov	r9, r0
9000ec10:	4628      	mov	r0, r5
9000ec12:	f002 fd1d 	bl	90011650 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000ec16:	f8d8 3000 	ldr.w	r3, [r8]
9000ec1a:	2b00      	cmp	r3, #0
9000ec1c:	d0bb      	beq.n	9000eb96 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
9000ec1e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
9000ec20:	883b      	ldrh	r3, [r7, #0]
9000ec22:	428b      	cmp	r3, r1
9000ec24:	d9c1      	bls.n	9000ebaa <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
9000ec26:	4b10      	ldr	r3, [pc, #64]	; (9000ec68 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
9000ec28:	6818      	ldr	r0, [r3, #0]
9000ec2a:	f7f6 fdf5 	bl	90005818 <_ZNK8touchgfx5Texts7getTextEt>
9000ec2e:	2300      	movs	r3, #0
9000ec30:	9303      	str	r3, [sp, #12]
9000ec32:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000ec34:	e9cd 0301 	strd	r0, r3, [sp, #4]
9000ec38:	ab07      	add	r3, sp, #28
9000ec3a:	4648      	mov	r0, r9
9000ec3c:	9300      	str	r3, [sp, #0]
9000ec3e:	4633      	mov	r3, r6
9000ec40:	e895 0006 	ldmia.w	r5, {r1, r2}
9000ec44:	f7f6 fd79 	bl	9000573a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9000ec48:	b00c      	add	sp, #48	; 0x30
9000ec4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000ec4e:	bf00      	nop
9000ec50:	900224dc 	.word	0x900224dc
9000ec54:	90022828 	.word	0x90022828
9000ec58:	9002251e 	.word	0x9002251e
9000ec5c:	24012b34 	.word	0x24012b34
9000ec60:	90022547 	.word	0x90022547
9000ec64:	24012b38 	.word	0x24012b38
9000ec68:	24012b3c 	.word	0x24012b3c
9000ec6c:	24012b30 	.word	0x24012b30

9000ec70 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
9000ec70:	b570      	push	{r4, r5, r6, lr}
9000ec72:	880b      	ldrh	r3, [r1, #0]
9000ec74:	460d      	mov	r5, r1
9000ec76:	4604      	mov	r4, r0
9000ec78:	84c3      	strh	r3, [r0, #38]	; 0x26
9000ec7a:	4608      	mov	r0, r1
9000ec7c:	f004 fce8 	bl	90013650 <_ZNK8touchgfx6Bitmap8getWidthEv>
9000ec80:	4606      	mov	r6, r0
9000ec82:	4628      	mov	r0, r5
9000ec84:	f004 fd1e 	bl	900136c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9000ec88:	6823      	ldr	r3, [r4, #0]
9000ec8a:	4605      	mov	r5, r0
9000ec8c:	b231      	sxth	r1, r6
9000ec8e:	4620      	mov	r0, r4
9000ec90:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000ec92:	4798      	blx	r3
9000ec94:	6823      	ldr	r3, [r4, #0]
9000ec96:	b229      	sxth	r1, r5
9000ec98:	4620      	mov	r0, r4
9000ec9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000ec9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000eca0:	4718      	bx	r3

9000eca2 <_ZNK8touchgfx5Image12getSolidRectEv>:
9000eca2:	b510      	push	{r4, lr}
9000eca4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
9000eca8:	4604      	mov	r4, r0
9000ecaa:	2bff      	cmp	r3, #255	; 0xff
9000ecac:	d006      	beq.n	9000ecbc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
9000ecae:	2300      	movs	r3, #0
9000ecb0:	8003      	strh	r3, [r0, #0]
9000ecb2:	8043      	strh	r3, [r0, #2]
9000ecb4:	8083      	strh	r3, [r0, #4]
9000ecb6:	80c3      	strh	r3, [r0, #6]
9000ecb8:	4620      	mov	r0, r4
9000ecba:	bd10      	pop	{r4, pc}
9000ecbc:	3126      	adds	r1, #38	; 0x26
9000ecbe:	f004 fd3b 	bl	90013738 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9000ecc2:	e7f9      	b.n	9000ecb8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

9000ecc4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
9000ecc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ecc8:	4604      	mov	r4, r0
9000ecca:	b088      	sub	sp, #32
9000eccc:	2500      	movs	r5, #0
9000ecce:	460f      	mov	r7, r1
9000ecd0:	f854 3b26 	ldr.w	r3, [r4], #38
9000ecd4:	a904      	add	r1, sp, #16
9000ecd6:	4606      	mov	r6, r0
9000ecd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9000ecda:	e9cd 5504 	strd	r5, r5, [sp, #16]
9000ecde:	4798      	blx	r3
9000ece0:	4620      	mov	r0, r4
9000ece2:	f004 fcb5 	bl	90013650 <_ZNK8touchgfx6Bitmap8getWidthEv>
9000ece6:	4680      	mov	r8, r0
9000ece8:	4620      	mov	r0, r4
9000ecea:	f004 fceb 	bl	900136c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9000ecee:	9506      	str	r5, [sp, #24]
9000ecf0:	ad06      	add	r5, sp, #24
9000ecf2:	f8ad 001e 	strh.w	r0, [sp, #30]
9000ecf6:	4639      	mov	r1, r7
9000ecf8:	f8ad 801c 	strh.w	r8, [sp, #28]
9000ecfc:	4628      	mov	r0, r5
9000ecfe:	f7fe fba9 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
9000ed02:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9000ed06:	2b00      	cmp	r3, #0
9000ed08:	dd19      	ble.n	9000ed3e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9000ed0a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
9000ed0e:	2b00      	cmp	r3, #0
9000ed10:	dd15      	ble.n	9000ed3e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9000ed12:	4b0c      	ldr	r3, [pc, #48]	; (9000ed44 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
9000ed14:	681b      	ldr	r3, [r3, #0]
9000ed16:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
9000ed1a:	b10a      	cbz	r2, 9000ed20 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
9000ed1c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000ed1e:	b900      	cbnz	r0, 9000ed22 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
9000ed20:	6898      	ldr	r0, [r3, #8]
9000ed22:	2701      	movs	r7, #1
9000ed24:	6801      	ldr	r1, [r0, #0]
9000ed26:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9000ed2a:	9702      	str	r7, [sp, #8]
9000ed2c:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
9000ed30:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9000ed34:	e9cd 5600 	strd	r5, r6, [sp]
9000ed38:	688d      	ldr	r5, [r1, #8]
9000ed3a:	4621      	mov	r1, r4
9000ed3c:	47a8      	blx	r5
9000ed3e:	b008      	add	sp, #32
9000ed40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000ed44:	24012ae0 	.word	0x24012ae0

9000ed48 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
9000ed48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ed4c:	4696      	mov	lr, r2
9000ed4e:	b097      	sub	sp, #92	; 0x5c
9000ed50:	4605      	mov	r5, r0
9000ed52:	4614      	mov	r4, r2
9000ed54:	460e      	mov	r6, r1
9000ed56:	461f      	mov	r7, r3
9000ed58:	f10d 0c1c 	add.w	ip, sp, #28
9000ed5c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
9000ed60:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
9000ed64:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
9000ed68:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9000ed6c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9000ed70:	f8de 3000 	ldr.w	r3, [lr]
9000ed74:	f104 0e14 	add.w	lr, r4, #20
9000ed78:	f8cc 3000 	str.w	r3, [ip]
9000ed7c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
9000ed80:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9000ed84:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9000ed88:	f8de 3000 	ldr.w	r3, [lr]
9000ed8c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
9000ed90:	f8cc 3000 	str.w	r3, [ip]
9000ed94:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
9000ed98:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9000ed9c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9000eda0:	f8de 3000 	ldr.w	r3, [lr]
9000eda4:	4631      	mov	r1, r6
9000eda6:	9a21      	ldr	r2, [sp, #132]	; 0x84
9000eda8:	4628      	mov	r0, r5
9000edaa:	f8cc 3000 	str.w	r3, [ip]
9000edae:	682b      	ldr	r3, [r5, #0]
9000edb0:	9201      	str	r2, [sp, #4]
9000edb2:	9a20      	ldr	r2, [sp, #128]	; 0x80
9000edb4:	f8cd 8008 	str.w	r8, [sp, #8]
9000edb8:	9200      	str	r2, [sp, #0]
9000edba:	aa07      	add	r2, sp, #28
9000edbc:	e9cd 9a03 	strd	r9, sl, [sp, #12]
9000edc0:	f8d3 b038 	ldr.w	fp, [r3, #56]	; 0x38
9000edc4:	463b      	mov	r3, r7
9000edc6:	47d8      	blx	fp
9000edc8:	46a6      	mov	lr, r4
9000edca:	f10d 0c1c 	add.w	ip, sp, #28
9000edce:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9000edd2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9000edd6:	f8de 3000 	ldr.w	r3, [lr]
9000edda:	f104 0e28 	add.w	lr, r4, #40	; 0x28
9000edde:	343c      	adds	r4, #60	; 0x3c
9000ede0:	f8cc 3000 	str.w	r3, [ip]
9000ede4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
9000ede8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9000edec:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9000edf0:	f8de 3000 	ldr.w	r3, [lr]
9000edf4:	f8cc 3000 	str.w	r3, [ip]
9000edf8:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
9000edfc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000edfe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9000ee02:	6823      	ldr	r3, [r4, #0]
9000ee04:	4631      	mov	r1, r6
9000ee06:	4628      	mov	r0, r5
9000ee08:	f8cc 3000 	str.w	r3, [ip]
9000ee0c:	682b      	ldr	r3, [r5, #0]
9000ee0e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
9000ee12:	9a21      	ldr	r2, [sp, #132]	; 0x84
9000ee14:	f8cd 8008 	str.w	r8, [sp, #8]
9000ee18:	9201      	str	r2, [sp, #4]
9000ee1a:	9a20      	ldr	r2, [sp, #128]	; 0x80
9000ee1c:	9200      	str	r2, [sp, #0]
9000ee1e:	aa07      	add	r2, sp, #28
9000ee20:	6b9c      	ldr	r4, [r3, #56]	; 0x38
9000ee22:	463b      	mov	r3, r7
9000ee24:	47a0      	blx	r4
9000ee26:	b017      	add	sp, #92	; 0x5c
9000ee28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9000ee2c <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9000ee2c:	2000      	movs	r0, #0
9000ee2e:	4770      	bx	lr

9000ee30 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
9000ee30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ee34:	b08d      	sub	sp, #52	; 0x34
9000ee36:	4688      	mov	r8, r1
9000ee38:	f8d3 c000 	ldr.w	ip, [r3]
9000ee3c:	9916      	ldr	r1, [sp, #88]	; 0x58
9000ee3e:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
9000ee42:	680f      	ldr	r7, [r1, #0]
9000ee44:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
9000ee48:	eba7 070c 	sub.w	r7, r7, ip
9000ee4c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
9000ee50:	edd3 6a07 	vldr	s13, [r3, #28]
9000ee54:	42bc      	cmp	r4, r7
9000ee56:	9918      	ldr	r1, [sp, #96]	; 0x60
9000ee58:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
9000ee5c:	bfa8      	it	ge
9000ee5e:	463c      	movge	r4, r7
9000ee60:	f9b1 9000 	ldrsh.w	r9, [r1]
9000ee64:	f9ba 1000 	ldrsh.w	r1, [sl]
9000ee68:	ee07 4a90 	vmov	s15, r4
9000ee6c:	eb09 0e0c 	add.w	lr, r9, ip
9000ee70:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
9000ee74:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
9000ee78:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
9000ee7c:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
9000ee80:	4571      	cmp	r1, lr
9000ee82:	ee25 4a04 	vmul.f32	s8, s10, s8
9000ee86:	ee65 4a24 	vmul.f32	s9, s10, s9
9000ee8a:	ee25 5a27 	vmul.f32	s10, s10, s15
9000ee8e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9000ee92:	ee71 0aa4 	vadd.f32	s1, s3, s9
9000ee96:	ee32 1a05 	vadd.f32	s2, s4, s10
9000ee9a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000ee9e:	ee36 0a84 	vadd.f32	s0, s13, s8
9000eea2:	ee61 1a87 	vmul.f32	s3, s3, s14
9000eea6:	ee22 2a07 	vmul.f32	s4, s4, s14
9000eeaa:	f340 808c 	ble.w	9000efc6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
9000eeae:	eba1 060e 	sub.w	r6, r1, lr
9000eeb2:	fb96 f5f4 	sdiv	r5, r6, r4
9000eeb6:	ee07 5a10 	vmov	s14, r5
9000eeba:	2d00      	cmp	r5, #0
9000eebc:	fb04 6615 	mls	r6, r4, r5, r6
9000eec0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000eec4:	eea7 0a04 	vfma.f32	s0, s14, s8
9000eec8:	eee7 0a24 	vfma.f32	s1, s14, s9
9000eecc:	eea7 1a05 	vfma.f32	s2, s14, s10
9000eed0:	dd12      	ble.n	9000eef8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
9000eed2:	ee70 6a44 	vsub.f32	s13, s0, s8
9000eed6:	ee70 1ae4 	vsub.f32	s3, s1, s9
9000eeda:	ee31 2a45 	vsub.f32	s4, s2, s10
9000eede:	eef5 6a40 	vcmp.f32	s13, #0.0
9000eee2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000eee6:	bf14      	ite	ne
9000eee8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
9000eeec:	eeb0 7a67 	vmoveq.f32	s14, s15
9000eef0:	ee61 1a87 	vmul.f32	s3, s3, s14
9000eef4:	ee22 2a07 	vmul.f32	s4, s4, s14
9000eef8:	fb05 f204 	mul.w	r2, r5, r4
9000eefc:	1abf      	subs	r7, r7, r2
9000eefe:	4494      	add	ip, r2
9000ef00:	f8ba 2004 	ldrh.w	r2, [sl, #4]
9000ef04:	4411      	add	r1, r2
9000ef06:	eb09 020c 	add.w	r2, r9, ip
9000ef0a:	b209      	sxth	r1, r1
9000ef0c:	443a      	add	r2, r7
9000ef0e:	428a      	cmp	r2, r1
9000ef10:	bfc4      	itt	gt
9000ef12:	eba1 0209 	subgt.w	r2, r1, r9
9000ef16:	eba2 070c 	subgt.w	r7, r2, ip
9000ef1a:	2f00      	cmp	r7, #0
9000ef1c:	dd50      	ble.n	9000efc0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
9000ef1e:	fb97 f1f4 	sdiv	r1, r7, r4
9000ef22:	fb04 7211 	mls	r2, r4, r1, r7
9000ef26:	b90a      	cbnz	r2, 9000ef2c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
9000ef28:	3901      	subs	r1, #1
9000ef2a:	4622      	mov	r2, r4
9000ef2c:	eec7 3a80 	vdiv.f32	s7, s15, s0
9000ef30:	6840      	ldr	r0, [r0, #4]
9000ef32:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
9000ef36:	44b6      	add	lr, r6
9000ef38:	f8d0 a000 	ldr.w	sl, [r0]
9000ef3c:	2900      	cmp	r1, #0
9000ef3e:	bfcc      	ite	gt
9000ef40:	46a1      	movgt	r9, r4
9000ef42:	4691      	movle	r9, r2
9000ef44:	900b      	str	r0, [sp, #44]	; 0x2c
9000ef46:	9817      	ldr	r0, [sp, #92]	; 0x5c
9000ef48:	fb04 e505 	mla	r5, r4, r5, lr
9000ef4c:	eef0 6a42 	vmov.f32	s13, s4
9000ef50:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
9000ef54:	9008      	str	r0, [sp, #32]
9000ef56:	eeb0 7a61 	vmov.f32	s14, s3
9000ef5a:	9818      	ldr	r0, [sp, #96]	; 0x60
9000ef5c:	695b      	ldr	r3, [r3, #20]
9000ef5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9000ef62:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
9000ef66:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
9000ef6a:	980b      	ldr	r0, [sp, #44]	; 0x2c
9000ef6c:	445b      	add	r3, fp
9000ef6e:	9307      	str	r3, [sp, #28]
9000ef70:	ee16 3a90 	vmov	r3, s13
9000ef74:	e9cd 8505 	strd	r8, r5, [sp, #20]
9000ef78:	ee60 2aa3 	vmul.f32	s5, s1, s7
9000ef7c:	ee21 3a23 	vmul.f32	s6, s2, s7
9000ef80:	ee72 7ae1 	vsub.f32	s15, s5, s3
9000ef84:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9000ef88:	ee17 7a90 	vmov	r7, s15
9000ef8c:	ee73 7a42 	vsub.f32	s15, s6, s4
9000ef90:	fb97 f7f4 	sdiv	r7, r7, r4
9000ef94:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9000ef98:	ee17 ca90 	vmov	ip, s15
9000ef9c:	fb9c fcf4 	sdiv	ip, ip, r4
9000efa0:	fb0c 3306 	mla	r3, ip, r6, r3
9000efa4:	9302      	str	r3, [sp, #8]
9000efa6:	ee17 3a10 	vmov	r3, s14
9000efaa:	e9cd 7c03 	strd	r7, ip, [sp, #12]
9000efae:	fb07 3706 	mla	r7, r7, r6, r3
9000efb2:	eba9 0306 	sub.w	r3, r9, r6
9000efb6:	e9cd 4700 	strd	r4, r7, [sp]
9000efba:	f8da 4008 	ldr.w	r4, [sl, #8]
9000efbe:	47a0      	blx	r4
9000efc0:	b00d      	add	sp, #52	; 0x34
9000efc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000efc6:	2500      	movs	r5, #0
9000efc8:	462e      	mov	r6, r5
9000efca:	e799      	b.n	9000ef00 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

9000efcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
9000efcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000efd0:	b0db      	sub	sp, #364	; 0x16c
9000efd2:	461d      	mov	r5, r3
9000efd4:	4614      	mov	r4, r2
9000efd6:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
9000efda:	910f      	str	r1, [sp, #60]	; 0x3c
9000efdc:	4629      	mov	r1, r5
9000efde:	930a      	str	r3, [sp, #40]	; 0x28
9000efe0:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
9000efe4:	9009      	str	r0, [sp, #36]	; 0x24
9000efe6:	930b      	str	r3, [sp, #44]	; 0x2c
9000efe8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
9000efec:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
9000eff0:	9310      	str	r3, [sp, #64]	; 0x40
9000eff2:	6803      	ldr	r3, [r0, #0]
9000eff4:	6c1f      	ldr	r7, [r3, #64]	; 0x40
9000eff6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
9000effa:	47b8      	blx	r7
9000effc:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000effe:	6058      	str	r0, [r3, #4]
9000f000:	2800      	cmp	r0, #0
9000f002:	f000 83a1 	beq.w	9000f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9000f006:	682b      	ldr	r3, [r5, #0]
9000f008:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
9000f00c:	ed94 7a02 	vldr	s14, [r4, #8]
9000f010:	9314      	str	r3, [sp, #80]	; 0x50
9000f012:	686b      	ldr	r3, [r5, #4]
9000f014:	eeb4 7ae7 	vcmpe.f32	s14, s15
9000f018:	9315      	str	r3, [sp, #84]	; 0x54
9000f01a:	4bc1      	ldr	r3, [pc, #772]	; (9000f320 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
9000f01c:	7819      	ldrb	r1, [r3, #0]
9000f01e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
9000f022:	2900      	cmp	r1, #0
9000f024:	bf16      	itet	ne
9000f026:	4619      	movne	r1, r3
9000f028:	4611      	moveq	r1, r2
9000f02a:	4613      	movne	r3, r2
9000f02c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000f030:	9116      	str	r1, [sp, #88]	; 0x58
9000f032:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
9000f036:	f240 8387 	bls.w	9000f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9000f03a:	ed94 7a07 	vldr	s14, [r4, #28]
9000f03e:	eeb4 7ae7 	vcmpe.f32	s14, s15
9000f042:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000f046:	f240 837f 	bls.w	9000f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9000f04a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
9000f04e:	eeb4 7ae7 	vcmpe.f32	s14, s15
9000f052:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000f056:	f240 8377 	bls.w	9000f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9000f05a:	6822      	ldr	r2, [r4, #0]
9000f05c:	4bb1      	ldr	r3, [pc, #708]	; (9000f324 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
9000f05e:	429a      	cmp	r2, r3
9000f060:	f2c0 8372 	blt.w	9000f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9000f064:	49b0      	ldr	r1, [pc, #704]	; (9000f328 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
9000f066:	6963      	ldr	r3, [r4, #20]
9000f068:	428a      	cmp	r2, r1
9000f06a:	f300 836d 	bgt.w	9000f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9000f06e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
9000f072:	48ae      	ldr	r0, [pc, #696]	; (9000f32c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
9000f074:	33ff      	adds	r3, #255	; 0xff
9000f076:	4283      	cmp	r3, r0
9000f078:	f200 8366 	bhi.w	9000f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9000f07c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000f07e:	4dac      	ldr	r5, [pc, #688]	; (9000f330 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
9000f080:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
9000f084:	33ff      	adds	r3, #255	; 0xff
9000f086:	42ab      	cmp	r3, r5
9000f088:	f200 835e 	bhi.w	9000f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9000f08c:	6862      	ldr	r2, [r4, #4]
9000f08e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
9000f092:	33ff      	adds	r3, #255	; 0xff
9000f094:	4283      	cmp	r3, r0
9000f096:	f200 8357 	bhi.w	9000f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9000f09a:	69a1      	ldr	r1, [r4, #24]
9000f09c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
9000f0a0:	33ff      	adds	r3, #255	; 0xff
9000f0a2:	4283      	cmp	r3, r0
9000f0a4:	f200 8350 	bhi.w	9000f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9000f0a8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000f0aa:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
9000f0ae:	30ff      	adds	r0, #255	; 0xff
9000f0b0:	42a8      	cmp	r0, r5
9000f0b2:	f200 8349 	bhi.w	9000f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9000f0b6:	428a      	cmp	r2, r1
9000f0b8:	f280 8110 	bge.w	9000f2dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
9000f0bc:	429a      	cmp	r2, r3
9000f0be:	f300 8119 	bgt.w	9000f2f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
9000f0c2:	4299      	cmp	r1, r3
9000f0c4:	f280 811d 	bge.w	9000f302 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
9000f0c8:	2502      	movs	r5, #2
9000f0ca:	2701      	movs	r7, #1
9000f0cc:	46a9      	mov	r9, r5
9000f0ce:	46b8      	mov	r8, r7
9000f0d0:	f04f 0a00 	mov.w	sl, #0
9000f0d4:	4621      	mov	r1, r4
9000f0d6:	a849      	add	r0, sp, #292	; 0x124
9000f0d8:	f003 fc88 	bl	900129ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
9000f0dc:	4622      	mov	r2, r4
9000f0de:	4653      	mov	r3, sl
9000f0e0:	a949      	add	r1, sp, #292	; 0x124
9000f0e2:	f8cd 9000 	str.w	r9, [sp]
9000f0e6:	a819      	add	r0, sp, #100	; 0x64
9000f0e8:	f003 fdb0 	bl	90012c4c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
9000f0ec:	4622      	mov	r2, r4
9000f0ee:	4653      	mov	r3, sl
9000f0f0:	a949      	add	r1, sp, #292	; 0x124
9000f0f2:	f8cd 8000 	str.w	r8, [sp]
9000f0f6:	a829      	add	r0, sp, #164	; 0xa4
9000f0f8:	f003 fda8 	bl	90012c4c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
9000f0fc:	4643      	mov	r3, r8
9000f0fe:	4622      	mov	r2, r4
9000f100:	a949      	add	r1, sp, #292	; 0x124
9000f102:	f8cd 9000 	str.w	r9, [sp]
9000f106:	a839      	add	r0, sp, #228	; 0xe4
9000f108:	f003 fda0 	bl	90012c4c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
9000f10c:	42af      	cmp	r7, r5
9000f10e:	af12      	add	r7, sp, #72	; 0x48
9000f110:	bfb7      	itett	lt
9000f112:	2300      	movlt	r3, #0
9000f114:	2301      	movge	r3, #1
9000f116:	ad29      	addlt	r5, sp, #164	; 0xa4
9000f118:	ac19      	addlt	r4, sp, #100	; 0x64
9000f11a:	bfb1      	iteee	lt
9000f11c:	930e      	strlt	r3, [sp, #56]	; 0x38
9000f11e:	ad19      	addge	r5, sp, #100	; 0x64
9000f120:	930e      	strge	r3, [sp, #56]	; 0x38
9000f122:	ac29      	addge	r4, sp, #164	; 0xa4
9000f124:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9000f126:	e893 0003 	ldmia.w	r3, {r0, r1}
9000f12a:	e887 0003 	stmia.w	r7, {r0, r1}
9000f12e:	b928      	cbnz	r0, 9000f13c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
9000f130:	4b80      	ldr	r3, [pc, #512]	; (9000f334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
9000f132:	6818      	ldr	r0, [r3, #0]
9000f134:	6803      	ldr	r3, [r0, #0]
9000f136:	6a1b      	ldr	r3, [r3, #32]
9000f138:	4798      	blx	r3
9000f13a:	6038      	str	r0, [r7, #0]
9000f13c:	9b64      	ldr	r3, [sp, #400]	; 0x190
9000f13e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9000f142:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9000f146:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
9000f148:	930c      	str	r3, [sp, #48]	; 0x30
9000f14a:	990c      	ldr	r1, [sp, #48]	; 0x30
9000f14c:	6963      	ldr	r3, [r4, #20]
9000f14e:	440b      	add	r3, r1
9000f150:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
9000f154:	4408      	add	r0, r1
9000f156:	b200      	sxth	r0, r0
9000f158:	4283      	cmp	r3, r0
9000f15a:	900d      	str	r0, [sp, #52]	; 0x34
9000f15c:	f280 80dd 	bge.w	9000f31a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
9000f160:	428b      	cmp	r3, r1
9000f162:	da08      	bge.n	9000f176 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
9000f164:	2a00      	cmp	r2, #0
9000f166:	dd06      	ble.n	9000f176 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
9000f168:	1acb      	subs	r3, r1, r3
9000f16a:	429a      	cmp	r2, r3
9000f16c:	f2c0 80e4 	blt.w	9000f338 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
9000f170:	2b00      	cmp	r3, #0
9000f172:	f300 80e2 	bgt.w	9000f33a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
9000f176:	6967      	ldr	r7, [r4, #20]
9000f178:	f10d 0850 	add.w	r8, sp, #80	; 0x50
9000f17c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000f17e:	443b      	add	r3, r7
9000f180:	461f      	mov	r7, r3
9000f182:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000f184:	1bdf      	subs	r7, r3, r7
9000f186:	4297      	cmp	r7, r2
9000f188:	bfa8      	it	ge
9000f18a:	4617      	movge	r7, r2
9000f18c:	2f00      	cmp	r7, #0
9000f18e:	f340 8166 	ble.w	9000f45e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
9000f192:	9b64      	ldr	r3, [sp, #400]	; 0x190
9000f194:	6829      	ldr	r1, [r5, #0]
9000f196:	f9b3 2000 	ldrsh.w	r2, [r3]
9000f19a:	f9bb 3000 	ldrsh.w	r3, [fp]
9000f19e:	4411      	add	r1, r2
9000f1a0:	6820      	ldr	r0, [r4, #0]
9000f1a2:	4299      	cmp	r1, r3
9000f1a4:	dd1a      	ble.n	9000f1dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
9000f1a6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
9000f1aa:	4402      	add	r2, r0
9000f1ac:	440b      	add	r3, r1
9000f1ae:	b21b      	sxth	r3, r3
9000f1b0:	429a      	cmp	r2, r3
9000f1b2:	dc13      	bgt.n	9000f1dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
9000f1b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
9000f1b6:	a912      	add	r1, sp, #72	; 0x48
9000f1b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000f1ba:	9809      	ldr	r0, [sp, #36]	; 0x24
9000f1bc:	681b      	ldr	r3, [r3, #0]
9000f1be:	9206      	str	r2, [sp, #24]
9000f1c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9000f1c2:	9500      	str	r5, [sp, #0]
9000f1c4:	9205      	str	r2, [sp, #20]
9000f1c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9000f1c8:	e9cd b203 	strd	fp, r2, [sp, #12]
9000f1cc:	9a64      	ldr	r2, [sp, #400]	; 0x190
9000f1ce:	e9cd 8201 	strd	r8, r2, [sp, #4]
9000f1d2:	aa49      	add	r2, sp, #292	; 0x124
9000f1d4:	f8d3 9044 	ldr.w	r9, [r3, #68]	; 0x44
9000f1d8:	4623      	mov	r3, r4
9000f1da:	47c8      	blx	r9
9000f1dc:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
9000f1e0:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
9000f1e4:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
9000f1e8:	ee37 7a27 	vadd.f32	s14, s14, s15
9000f1ec:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
9000f1f0:	68a1      	ldr	r1, [r4, #8]
9000f1f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000f1f6:	ed94 6a08 	vldr	s12, [r4, #32]
9000f1fa:	edd4 6a07 	vldr	s13, [r4, #28]
9000f1fe:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
9000f202:	ee76 6a86 	vadd.f32	s13, s13, s12
9000f206:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
9000f20a:	e9d4 2300 	ldrd	r2, r3, [r4]
9000f20e:	edc4 6a07 	vstr	s13, [r4, #28]
9000f212:	441a      	add	r2, r3
9000f214:	6963      	ldr	r3, [r4, #20]
9000f216:	3301      	adds	r3, #1
9000f218:	6022      	str	r2, [r4, #0]
9000f21a:	6163      	str	r3, [r4, #20]
9000f21c:	69a3      	ldr	r3, [r4, #24]
9000f21e:	3b01      	subs	r3, #1
9000f220:	61a3      	str	r3, [r4, #24]
9000f222:	6923      	ldr	r3, [r4, #16]
9000f224:	440b      	add	r3, r1
9000f226:	68e1      	ldr	r1, [r4, #12]
9000f228:	428b      	cmp	r3, r1
9000f22a:	6123      	str	r3, [r4, #16]
9000f22c:	db15      	blt.n	9000f25a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
9000f22e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
9000f232:	3201      	adds	r2, #1
9000f234:	1a5b      	subs	r3, r3, r1
9000f236:	ee76 6a26 	vadd.f32	s13, s12, s13
9000f23a:	6022      	str	r2, [r4, #0]
9000f23c:	6123      	str	r3, [r4, #16]
9000f23e:	edc4 6a07 	vstr	s13, [r4, #28]
9000f242:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
9000f246:	ee36 7a87 	vadd.f32	s14, s13, s14
9000f24a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
9000f24e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
9000f252:	ee77 7a27 	vadd.f32	s15, s14, s15
9000f256:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
9000f25a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
9000f25e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
9000f262:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
9000f266:	ee37 7a27 	vadd.f32	s14, s14, s15
9000f26a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
9000f26e:	68a9      	ldr	r1, [r5, #8]
9000f270:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000f274:	ed95 6a08 	vldr	s12, [r5, #32]
9000f278:	edd5 6a07 	vldr	s13, [r5, #28]
9000f27c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
9000f280:	ee76 6a86 	vadd.f32	s13, s13, s12
9000f284:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
9000f288:	e9d5 2300 	ldrd	r2, r3, [r5]
9000f28c:	edc5 6a07 	vstr	s13, [r5, #28]
9000f290:	441a      	add	r2, r3
9000f292:	696b      	ldr	r3, [r5, #20]
9000f294:	3301      	adds	r3, #1
9000f296:	602a      	str	r2, [r5, #0]
9000f298:	616b      	str	r3, [r5, #20]
9000f29a:	69ab      	ldr	r3, [r5, #24]
9000f29c:	3b01      	subs	r3, #1
9000f29e:	61ab      	str	r3, [r5, #24]
9000f2a0:	692b      	ldr	r3, [r5, #16]
9000f2a2:	440b      	add	r3, r1
9000f2a4:	68e9      	ldr	r1, [r5, #12]
9000f2a6:	428b      	cmp	r3, r1
9000f2a8:	612b      	str	r3, [r5, #16]
9000f2aa:	db15      	blt.n	9000f2d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
9000f2ac:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
9000f2b0:	3201      	adds	r2, #1
9000f2b2:	1a5b      	subs	r3, r3, r1
9000f2b4:	ee76 6a26 	vadd.f32	s13, s12, s13
9000f2b8:	602a      	str	r2, [r5, #0]
9000f2ba:	612b      	str	r3, [r5, #16]
9000f2bc:	edc5 6a07 	vstr	s13, [r5, #28]
9000f2c0:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
9000f2c4:	ee36 7a87 	vadd.f32	s14, s13, s14
9000f2c8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
9000f2cc:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
9000f2d0:	ee77 7a27 	vadd.f32	s15, s14, s15
9000f2d4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
9000f2d8:	3f01      	subs	r7, #1
9000f2da:	e757      	b.n	9000f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
9000f2dc:	4299      	cmp	r1, r3
9000f2de:	dc13      	bgt.n	9000f308 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
9000f2e0:	429a      	cmp	r2, r3
9000f2e2:	da14      	bge.n	9000f30e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
9000f2e4:	2502      	movs	r5, #2
9000f2e6:	2703      	movs	r7, #3
9000f2e8:	f04f 0800 	mov.w	r8, #0
9000f2ec:	46a9      	mov	r9, r5
9000f2ee:	f04f 0a01 	mov.w	sl, #1
9000f2f2:	e6ef      	b.n	9000f0d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
9000f2f4:	2501      	movs	r5, #1
9000f2f6:	2700      	movs	r7, #0
9000f2f8:	46a9      	mov	r9, r5
9000f2fa:	46b8      	mov	r8, r7
9000f2fc:	f04f 0a02 	mov.w	sl, #2
9000f300:	e6e8      	b.n	9000f0d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
9000f302:	2501      	movs	r5, #1
9000f304:	2702      	movs	r7, #2
9000f306:	e6e1      	b.n	9000f0cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
9000f308:	2500      	movs	r5, #0
9000f30a:	2701      	movs	r7, #1
9000f30c:	e7f4      	b.n	9000f2f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
9000f30e:	2702      	movs	r7, #2
9000f310:	2503      	movs	r5, #3
9000f312:	f04f 0900 	mov.w	r9, #0
9000f316:	46b8      	mov	r8, r7
9000f318:	e7e9      	b.n	9000f2ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
9000f31a:	4613      	mov	r3, r2
9000f31c:	e728      	b.n	9000f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
9000f31e:	bf00      	nop
9000f320:	24012ad8 	.word	0x24012ad8
9000f324:	fffd8f01 	.word	0xfffd8f01
9000f328:	00027100 	.word	0x00027100
9000f32c:	0004e1ff 	.word	0x0004e1ff
9000f330:	0004e1fe 	.word	0x0004e1fe
9000f334:	24012ae0 	.word	0x24012ae0
9000f338:	4613      	mov	r3, r2
9000f33a:	992b      	ldr	r1, [sp, #172]	; 0xac
9000f33c:	469e      	mov	lr, r3
9000f33e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
9000f340:	469c      	mov	ip, r3
9000f342:	9111      	str	r1, [sp, #68]	; 0x44
9000f344:	f04f 0900 	mov.w	r9, #0
9000f348:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
9000f34c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
9000f350:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
9000f354:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
9000f358:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
9000f35c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
9000f360:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
9000f364:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
9000f368:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
9000f36c:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
9000f370:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
9000f374:	f1bc 0f00 	cmp.w	ip, #0
9000f378:	d147      	bne.n	9000f40a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
9000f37a:	eb03 0c07 	add.w	ip, r3, r7
9000f37e:	1ad7      	subs	r7, r2, r3
9000f380:	f1b9 0f00 	cmp.w	r9, #0
9000f384:	d009      	beq.n	9000f39a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
9000f386:	9029      	str	r0, [sp, #164]	; 0xa4
9000f388:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
9000f38c:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
9000f390:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
9000f394:	912d      	str	r1, [sp, #180]	; 0xb4
9000f396:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
9000f39a:	991b      	ldr	r1, [sp, #108]	; 0x6c
9000f39c:	f04f 0800 	mov.w	r8, #0
9000f3a0:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
9000f3a4:	9111      	str	r1, [sp, #68]	; 0x44
9000f3a6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
9000f3aa:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
9000f3ae:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
9000f3b2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
9000f3b6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
9000f3ba:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
9000f3be:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
9000f3c2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
9000f3c6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
9000f3ca:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
9000f3ce:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
9000f3d2:	f1be 0f00 	cmp.w	lr, #0
9000f3d6:	d031      	beq.n	9000f43c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
9000f3d8:	9e11      	ldr	r6, [sp, #68]	; 0x44
9000f3da:	4450      	add	r0, sl
9000f3dc:	ee76 6aa4 	vadd.f32	s13, s13, s9
9000f3e0:	4431      	add	r1, r6
9000f3e2:	ee37 7a04 	vadd.f32	s14, s14, s8
9000f3e6:	ee77 7aa3 	vadd.f32	s15, s15, s7
9000f3ea:	4549      	cmp	r1, r9
9000f3ec:	db08      	blt.n	9000f400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
9000f3ee:	ee77 7a85 	vadd.f32	s15, s15, s10
9000f3f2:	3001      	adds	r0, #1
9000f3f4:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000f3f8:	eba1 0109 	sub.w	r1, r1, r9
9000f3fc:	ee37 7a06 	vadd.f32	s14, s14, s12
9000f400:	f10e 3eff 	add.w	lr, lr, #4294967295
9000f404:	f04f 0801 	mov.w	r8, #1
9000f408:	e7e3      	b.n	9000f3d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
9000f40a:	9e11      	ldr	r6, [sp, #68]	; 0x44
9000f40c:	4450      	add	r0, sl
9000f40e:	ee37 7a24 	vadd.f32	s14, s14, s9
9000f412:	4431      	add	r1, r6
9000f414:	ee77 7a84 	vadd.f32	s15, s15, s8
9000f418:	ee76 6aa3 	vadd.f32	s13, s13, s7
9000f41c:	4541      	cmp	r1, r8
9000f41e:	db08      	blt.n	9000f432 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
9000f420:	ee76 6a85 	vadd.f32	s13, s13, s10
9000f424:	3001      	adds	r0, #1
9000f426:	ee37 7a25 	vadd.f32	s14, s14, s11
9000f42a:	eba1 0108 	sub.w	r1, r1, r8
9000f42e:	ee77 7a86 	vadd.f32	s15, s15, s12
9000f432:	f10c 3cff 	add.w	ip, ip, #4294967295
9000f436:	f04f 0901 	mov.w	r9, #1
9000f43a:	e79b      	b.n	9000f374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
9000f43c:	449c      	add	ip, r3
9000f43e:	1aff      	subs	r7, r7, r3
9000f440:	f1b8 0f00 	cmp.w	r8, #0
9000f444:	d009      	beq.n	9000f45a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
9000f446:	9019      	str	r0, [sp, #100]	; 0x64
9000f448:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
9000f44c:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
9000f450:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
9000f454:	911d      	str	r1, [sp, #116]	; 0x74
9000f456:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
9000f45a:	1ad2      	subs	r2, r2, r3
9000f45c:	e68b      	b.n	9000f176 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
9000f45e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000f460:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
9000f462:	2b00      	cmp	r3, #0
9000f464:	f000 80d1 	beq.w	9000f60a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
9000f468:	ad19      	add	r5, sp, #100	; 0x64
9000f46a:	ac39      	add	r4, sp, #228	; 0xe4
9000f46c:	9b64      	ldr	r3, [sp, #400]	; 0x190
9000f46e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9000f472:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9000f476:	930c      	str	r3, [sp, #48]	; 0x30
9000f478:	990c      	ldr	r1, [sp, #48]	; 0x30
9000f47a:	6963      	ldr	r3, [r4, #20]
9000f47c:	440b      	add	r3, r1
9000f47e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
9000f482:	4408      	add	r0, r1
9000f484:	b200      	sxth	r0, r0
9000f486:	4283      	cmp	r3, r0
9000f488:	900d      	str	r0, [sp, #52]	; 0x34
9000f48a:	f280 80c1 	bge.w	9000f610 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
9000f48e:	428b      	cmp	r3, r1
9000f490:	da08      	bge.n	9000f4a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9000f492:	2a00      	cmp	r2, #0
9000f494:	dd06      	ble.n	9000f4a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9000f496:	1acb      	subs	r3, r1, r3
9000f498:	429a      	cmp	r2, r3
9000f49a:	f2c0 80bb 	blt.w	9000f614 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
9000f49e:	2b00      	cmp	r3, #0
9000f4a0:	f300 80b9 	bgt.w	9000f616 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
9000f4a4:	6967      	ldr	r7, [r4, #20]
9000f4a6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
9000f4aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000f4ac:	443b      	add	r3, r7
9000f4ae:	461f      	mov	r7, r3
9000f4b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000f4b2:	1bdf      	subs	r7, r3, r7
9000f4b4:	4297      	cmp	r7, r2
9000f4b6:	bfa8      	it	ge
9000f4b8:	4617      	movge	r7, r2
9000f4ba:	2f00      	cmp	r7, #0
9000f4bc:	f340 813c 	ble.w	9000f738 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
9000f4c0:	9b64      	ldr	r3, [sp, #400]	; 0x190
9000f4c2:	6829      	ldr	r1, [r5, #0]
9000f4c4:	f9b3 2000 	ldrsh.w	r2, [r3]
9000f4c8:	f9bb 3000 	ldrsh.w	r3, [fp]
9000f4cc:	4411      	add	r1, r2
9000f4ce:	6820      	ldr	r0, [r4, #0]
9000f4d0:	4299      	cmp	r1, r3
9000f4d2:	dd1a      	ble.n	9000f50a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
9000f4d4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
9000f4d8:	4402      	add	r2, r0
9000f4da:	440b      	add	r3, r1
9000f4dc:	b21b      	sxth	r3, r3
9000f4de:	429a      	cmp	r2, r3
9000f4e0:	dc13      	bgt.n	9000f50a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
9000f4e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
9000f4e4:	a912      	add	r1, sp, #72	; 0x48
9000f4e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000f4e8:	9809      	ldr	r0, [sp, #36]	; 0x24
9000f4ea:	681b      	ldr	r3, [r3, #0]
9000f4ec:	9206      	str	r2, [sp, #24]
9000f4ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9000f4f0:	9500      	str	r5, [sp, #0]
9000f4f2:	9205      	str	r2, [sp, #20]
9000f4f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9000f4f6:	e9cd b203 	strd	fp, r2, [sp, #12]
9000f4fa:	9a64      	ldr	r2, [sp, #400]	; 0x190
9000f4fc:	e9cd 8201 	strd	r8, r2, [sp, #4]
9000f500:	aa49      	add	r2, sp, #292	; 0x124
9000f502:	f8d3 9044 	ldr.w	r9, [r3, #68]	; 0x44
9000f506:	4623      	mov	r3, r4
9000f508:	47c8      	blx	r9
9000f50a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
9000f50e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
9000f512:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
9000f516:	ee37 7a27 	vadd.f32	s14, s14, s15
9000f51a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
9000f51e:	68a1      	ldr	r1, [r4, #8]
9000f520:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000f524:	ed94 6a08 	vldr	s12, [r4, #32]
9000f528:	edd4 6a07 	vldr	s13, [r4, #28]
9000f52c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
9000f530:	ee76 6a86 	vadd.f32	s13, s13, s12
9000f534:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
9000f538:	e9d4 2300 	ldrd	r2, r3, [r4]
9000f53c:	edc4 6a07 	vstr	s13, [r4, #28]
9000f540:	441a      	add	r2, r3
9000f542:	6963      	ldr	r3, [r4, #20]
9000f544:	3301      	adds	r3, #1
9000f546:	6022      	str	r2, [r4, #0]
9000f548:	6163      	str	r3, [r4, #20]
9000f54a:	69a3      	ldr	r3, [r4, #24]
9000f54c:	3b01      	subs	r3, #1
9000f54e:	61a3      	str	r3, [r4, #24]
9000f550:	6923      	ldr	r3, [r4, #16]
9000f552:	440b      	add	r3, r1
9000f554:	68e1      	ldr	r1, [r4, #12]
9000f556:	428b      	cmp	r3, r1
9000f558:	6123      	str	r3, [r4, #16]
9000f55a:	db15      	blt.n	9000f588 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
9000f55c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
9000f560:	3201      	adds	r2, #1
9000f562:	1a5b      	subs	r3, r3, r1
9000f564:	ee76 6a26 	vadd.f32	s13, s12, s13
9000f568:	6022      	str	r2, [r4, #0]
9000f56a:	6123      	str	r3, [r4, #16]
9000f56c:	edc4 6a07 	vstr	s13, [r4, #28]
9000f570:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
9000f574:	ee36 7a87 	vadd.f32	s14, s13, s14
9000f578:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
9000f57c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
9000f580:	ee77 7a27 	vadd.f32	s15, s14, s15
9000f584:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
9000f588:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
9000f58c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
9000f590:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
9000f594:	ee37 7a27 	vadd.f32	s14, s14, s15
9000f598:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
9000f59c:	68a9      	ldr	r1, [r5, #8]
9000f59e:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000f5a2:	ed95 6a08 	vldr	s12, [r5, #32]
9000f5a6:	edd5 6a07 	vldr	s13, [r5, #28]
9000f5aa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
9000f5ae:	ee76 6a86 	vadd.f32	s13, s13, s12
9000f5b2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
9000f5b6:	e9d5 2300 	ldrd	r2, r3, [r5]
9000f5ba:	edc5 6a07 	vstr	s13, [r5, #28]
9000f5be:	441a      	add	r2, r3
9000f5c0:	696b      	ldr	r3, [r5, #20]
9000f5c2:	3301      	adds	r3, #1
9000f5c4:	602a      	str	r2, [r5, #0]
9000f5c6:	616b      	str	r3, [r5, #20]
9000f5c8:	69ab      	ldr	r3, [r5, #24]
9000f5ca:	3b01      	subs	r3, #1
9000f5cc:	61ab      	str	r3, [r5, #24]
9000f5ce:	692b      	ldr	r3, [r5, #16]
9000f5d0:	440b      	add	r3, r1
9000f5d2:	68e9      	ldr	r1, [r5, #12]
9000f5d4:	428b      	cmp	r3, r1
9000f5d6:	612b      	str	r3, [r5, #16]
9000f5d8:	db15      	blt.n	9000f606 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
9000f5da:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
9000f5de:	3201      	adds	r2, #1
9000f5e0:	1a5b      	subs	r3, r3, r1
9000f5e2:	ee76 6a26 	vadd.f32	s13, s12, s13
9000f5e6:	602a      	str	r2, [r5, #0]
9000f5e8:	612b      	str	r3, [r5, #16]
9000f5ea:	edc5 6a07 	vstr	s13, [r5, #28]
9000f5ee:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
9000f5f2:	ee36 7a87 	vadd.f32	s14, s13, s14
9000f5f6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
9000f5fa:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
9000f5fe:	ee77 7a27 	vadd.f32	s15, s14, s15
9000f602:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
9000f606:	3f01      	subs	r7, #1
9000f608:	e757      	b.n	9000f4ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
9000f60a:	ad39      	add	r5, sp, #228	; 0xe4
9000f60c:	ac19      	add	r4, sp, #100	; 0x64
9000f60e:	e72d      	b.n	9000f46c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
9000f610:	4613      	mov	r3, r2
9000f612:	e744      	b.n	9000f49e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
9000f614:	4613      	mov	r3, r2
9000f616:	9e3b      	ldr	r6, [sp, #236]	; 0xec
9000f618:	469e      	mov	lr, r3
9000f61a:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
9000f61e:	461f      	mov	r7, r3
9000f620:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
9000f624:	f04f 0900 	mov.w	r9, #0
9000f628:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
9000f62c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
9000f630:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
9000f634:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
9000f638:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
9000f63c:	993d      	ldr	r1, [sp, #244]	; 0xf4
9000f63e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
9000f642:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
9000f646:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
9000f64a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
9000f64e:	960e      	str	r6, [sp, #56]	; 0x38
9000f650:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
9000f654:	2f00      	cmp	r7, #0
9000f656:	d146      	bne.n	9000f6e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
9000f658:	449c      	add	ip, r3
9000f65a:	1ad7      	subs	r7, r2, r3
9000f65c:	f1b9 0f00 	cmp.w	r9, #0
9000f660:	d009      	beq.n	9000f676 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
9000f662:	9039      	str	r0, [sp, #228]	; 0xe4
9000f664:	913d      	str	r1, [sp, #244]	; 0xf4
9000f666:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
9000f66a:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
9000f66e:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
9000f672:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
9000f676:	991b      	ldr	r1, [sp, #108]	; 0x6c
9000f678:	f04f 0800 	mov.w	r8, #0
9000f67c:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
9000f680:	910e      	str	r1, [sp, #56]	; 0x38
9000f682:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
9000f686:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
9000f68a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
9000f68e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
9000f692:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
9000f696:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
9000f69a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
9000f69e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
9000f6a2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
9000f6a6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
9000f6aa:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
9000f6ae:	f1be 0f00 	cmp.w	lr, #0
9000f6b2:	d030      	beq.n	9000f716 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
9000f6b4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
9000f6b6:	4450      	add	r0, sl
9000f6b8:	ee76 6aa4 	vadd.f32	s13, s13, s9
9000f6bc:	4431      	add	r1, r6
9000f6be:	ee37 7a04 	vadd.f32	s14, s14, s8
9000f6c2:	ee77 7aa3 	vadd.f32	s15, s15, s7
9000f6c6:	4549      	cmp	r1, r9
9000f6c8:	db08      	blt.n	9000f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
9000f6ca:	ee77 7a85 	vadd.f32	s15, s15, s10
9000f6ce:	3001      	adds	r0, #1
9000f6d0:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000f6d4:	eba1 0109 	sub.w	r1, r1, r9
9000f6d8:	ee37 7a06 	vadd.f32	s14, s14, s12
9000f6dc:	f10e 3eff 	add.w	lr, lr, #4294967295
9000f6e0:	f04f 0801 	mov.w	r8, #1
9000f6e4:	e7e3      	b.n	9000f6ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
9000f6e6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
9000f6e8:	4450      	add	r0, sl
9000f6ea:	ee37 7a24 	vadd.f32	s14, s14, s9
9000f6ee:	4431      	add	r1, r6
9000f6f0:	ee77 7a84 	vadd.f32	s15, s15, s8
9000f6f4:	ee76 6aa3 	vadd.f32	s13, s13, s7
9000f6f8:	4541      	cmp	r1, r8
9000f6fa:	db08      	blt.n	9000f70e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
9000f6fc:	ee76 6a85 	vadd.f32	s13, s13, s10
9000f700:	3001      	adds	r0, #1
9000f702:	ee37 7a25 	vadd.f32	s14, s14, s11
9000f706:	eba1 0108 	sub.w	r1, r1, r8
9000f70a:	ee77 7a86 	vadd.f32	s15, s15, s12
9000f70e:	3f01      	subs	r7, #1
9000f710:	f04f 0901 	mov.w	r9, #1
9000f714:	e79e      	b.n	9000f654 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
9000f716:	449c      	add	ip, r3
9000f718:	1aff      	subs	r7, r7, r3
9000f71a:	f1b8 0f00 	cmp.w	r8, #0
9000f71e:	d009      	beq.n	9000f734 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
9000f720:	9019      	str	r0, [sp, #100]	; 0x64
9000f722:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
9000f726:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
9000f72a:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
9000f72e:	911d      	str	r1, [sp, #116]	; 0x74
9000f730:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
9000f734:	1ad2      	subs	r2, r2, r3
9000f736:	e6b5      	b.n	9000f4a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9000f738:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9000f73a:	681b      	ldr	r3, [r3, #0]
9000f73c:	b923      	cbnz	r3, 9000f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9000f73e:	4b04      	ldr	r3, [pc, #16]	; (9000f750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
9000f740:	6818      	ldr	r0, [r3, #0]
9000f742:	6803      	ldr	r3, [r0, #0]
9000f744:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000f746:	4798      	blx	r3
9000f748:	b05b      	add	sp, #364	; 0x16c
9000f74a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000f74e:	bf00      	nop
9000f750:	24012ae0 	.word	0x24012ae0

9000f754 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
9000f754:	b570      	push	{r4, r5, r6, lr}
9000f756:	4604      	mov	r4, r0
9000f758:	2500      	movs	r5, #0
9000f75a:	9804      	ldr	r0, [sp, #16]
9000f75c:	7223      	strb	r3, [r4, #8]
9000f75e:	f89d 3014 	ldrb.w	r3, [sp, #20]
9000f762:	8025      	strh	r5, [r4, #0]
9000f764:	6061      	str	r1, [r4, #4]
9000f766:	7263      	strb	r3, [r4, #9]
9000f768:	60e0      	str	r0, [r4, #12]
9000f76a:	8222      	strh	r2, [r4, #16]
9000f76c:	8265      	strh	r5, [r4, #18]
9000f76e:	82a5      	strh	r5, [r4, #20]
9000f770:	82e5      	strh	r5, [r4, #22]
9000f772:	8325      	strh	r5, [r4, #24]
9000f774:	8365      	strh	r5, [r4, #26]
9000f776:	83a5      	strh	r5, [r4, #28]
9000f778:	77a5      	strb	r5, [r4, #30]
9000f77a:	6803      	ldr	r3, [r0, #0]
9000f77c:	695b      	ldr	r3, [r3, #20]
9000f77e:	4798      	blx	r3
9000f780:	4606      	mov	r6, r0
9000f782:	b1f8      	cbz	r0, 9000f7c4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
9000f784:	68e0      	ldr	r0, [r4, #12]
9000f786:	4631      	mov	r1, r6
9000f788:	6803      	ldr	r3, [r0, #0]
9000f78a:	68db      	ldr	r3, [r3, #12]
9000f78c:	4798      	blx	r3
9000f78e:	7b43      	ldrb	r3, [r0, #13]
9000f790:	7a82      	ldrb	r2, [r0, #10]
9000f792:	4605      	mov	r5, r0
9000f794:	005b      	lsls	r3, r3, #1
9000f796:	f403 7380 	and.w	r3, r3, #256	; 0x100
9000f79a:	4313      	orrs	r3, r2
9000f79c:	83a3      	strh	r3, [r4, #28]
9000f79e:	7a63      	ldrb	r3, [r4, #9]
9000f7a0:	2b04      	cmp	r3, #4
9000f7a2:	d10f      	bne.n	9000f7c4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
9000f7a4:	68e0      	ldr	r0, [r4, #12]
9000f7a6:	462a      	mov	r2, r5
9000f7a8:	4631      	mov	r1, r6
9000f7aa:	6803      	ldr	r3, [r0, #0]
9000f7ac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000f7ae:	4798      	blx	r3
9000f7b0:	7b6b      	ldrb	r3, [r5, #13]
9000f7b2:	005b      	lsls	r3, r3, #1
9000f7b4:	f403 7280 	and.w	r2, r3, #256	; 0x100
9000f7b8:	7aab      	ldrb	r3, [r5, #10]
9000f7ba:	4313      	orrs	r3, r2
9000f7bc:	4418      	add	r0, r3
9000f7be:	8ba3      	ldrh	r3, [r4, #28]
9000f7c0:	4418      	add	r0, r3
9000f7c2:	83a0      	strh	r0, [r4, #28]
9000f7c4:	4620      	mov	r0, r4
9000f7c6:	bd70      	pop	{r4, r5, r6, pc}

9000f7c8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
9000f7c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f7cc:	2400      	movs	r4, #0
9000f7ce:	b085      	sub	sp, #20
9000f7d0:	4681      	mov	r9, r0
9000f7d2:	4688      	mov	r8, r1
9000f7d4:	4692      	mov	sl, r2
9000f7d6:	469b      	mov	fp, r3
9000f7d8:	4627      	mov	r7, r4
9000f7da:	4625      	mov	r5, r4
9000f7dc:	4626      	mov	r6, r4
9000f7de:	4554      	cmp	r4, sl
9000f7e0:	da2a      	bge.n	9000f838 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9000f7e2:	2300      	movs	r3, #0
9000f7e4:	9303      	str	r3, [sp, #12]
9000f7e6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9000f7ea:	429d      	cmp	r5, r3
9000f7ec:	d004      	beq.n	9000f7f8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
9000f7ee:	f242 030b 	movw	r3, #8203	; 0x200b
9000f7f2:	429d      	cmp	r5, r3
9000f7f4:	bf18      	it	ne
9000f7f6:	462f      	movne	r7, r5
9000f7f8:	ab03      	add	r3, sp, #12
9000f7fa:	4642      	mov	r2, r8
9000f7fc:	4659      	mov	r1, fp
9000f7fe:	4648      	mov	r0, r9
9000f800:	f002 fe7a 	bl	900124f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9000f804:	4605      	mov	r5, r0
9000f806:	b1b8      	cbz	r0, 9000f838 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9000f808:	280a      	cmp	r0, #10
9000f80a:	d015      	beq.n	9000f838 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9000f80c:	9a03      	ldr	r2, [sp, #12]
9000f80e:	b18a      	cbz	r2, 9000f834 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
9000f810:	7b50      	ldrb	r0, [r2, #13]
9000f812:	4639      	mov	r1, r7
9000f814:	7a93      	ldrb	r3, [r2, #10]
9000f816:	0040      	lsls	r0, r0, #1
9000f818:	8895      	ldrh	r5, [r2, #4]
9000f81a:	f400 7080 	and.w	r0, r0, #256	; 0x100
9000f81e:	4303      	orrs	r3, r0
9000f820:	4640      	mov	r0, r8
9000f822:	9301      	str	r3, [sp, #4]
9000f824:	f8d8 3000 	ldr.w	r3, [r8]
9000f828:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000f82a:	4798      	blx	r3
9000f82c:	9b01      	ldr	r3, [sp, #4]
9000f82e:	4418      	add	r0, r3
9000f830:	4406      	add	r6, r0
9000f832:	b2b6      	uxth	r6, r6
9000f834:	3401      	adds	r4, #1
9000f836:	e7d2      	b.n	9000f7de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
9000f838:	4630      	mov	r0, r6
9000f83a:	b005      	add	sp, #20
9000f83c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9000f840 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
9000f840:	2a02      	cmp	r2, #2
9000f842:	b530      	push	{r4, r5, lr}
9000f844:	d011      	beq.n	9000f86a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
9000f846:	2a03      	cmp	r2, #3
9000f848:	d01c      	beq.n	9000f884 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
9000f84a:	2a01      	cmp	r2, #1
9000f84c:	d10c      	bne.n	9000f868 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
9000f84e:	888b      	ldrh	r3, [r1, #4]
9000f850:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
9000f854:	8801      	ldrh	r1, [r0, #0]
9000f856:	1a9b      	subs	r3, r3, r2
9000f858:	8844      	ldrh	r4, [r0, #2]
9000f85a:	1a5b      	subs	r3, r3, r1
9000f85c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
9000f860:	8004      	strh	r4, [r0, #0]
9000f862:	8043      	strh	r3, [r0, #2]
9000f864:	8081      	strh	r1, [r0, #4]
9000f866:	80c2      	strh	r2, [r0, #6]
9000f868:	bd30      	pop	{r4, r5, pc}
9000f86a:	88cb      	ldrh	r3, [r1, #6]
9000f86c:	88c2      	ldrh	r2, [r0, #6]
9000f86e:	1a9b      	subs	r3, r3, r2
9000f870:	8842      	ldrh	r2, [r0, #2]
9000f872:	1a9b      	subs	r3, r3, r2
9000f874:	888a      	ldrh	r2, [r1, #4]
9000f876:	8881      	ldrh	r1, [r0, #4]
9000f878:	8043      	strh	r3, [r0, #2]
9000f87a:	1a52      	subs	r2, r2, r1
9000f87c:	8801      	ldrh	r1, [r0, #0]
9000f87e:	1a52      	subs	r2, r2, r1
9000f880:	8002      	strh	r2, [r0, #0]
9000f882:	e7f1      	b.n	9000f868 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
9000f884:	88cb      	ldrh	r3, [r1, #6]
9000f886:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
9000f88a:	8841      	ldrh	r1, [r0, #2]
9000f88c:	1a9b      	subs	r3, r3, r2
9000f88e:	f9b0 5000 	ldrsh.w	r5, [r0]
9000f892:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
9000f896:	1a5b      	subs	r3, r3, r1
9000f898:	8045      	strh	r5, [r0, #2]
9000f89a:	8082      	strh	r2, [r0, #4]
9000f89c:	8003      	strh	r3, [r0, #0]
9000f89e:	80c4      	strh	r4, [r0, #6]
9000f8a0:	e7e2      	b.n	9000f868 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

9000f8a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
9000f8a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f8a6:	b09f      	sub	sp, #124	; 0x7c
9000f8a8:	9116      	str	r1, [sp, #88]	; 0x58
9000f8aa:	9317      	str	r3, [sp, #92]	; 0x5c
9000f8ac:	9929      	ldr	r1, [sp, #164]	; 0xa4
9000f8ae:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9000f8b0:	8809      	ldrh	r1, [r1, #0]
9000f8b2:	889b      	ldrh	r3, [r3, #4]
9000f8b4:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
9000f8b8:	440b      	add	r3, r1
9000f8ba:	9212      	str	r2, [sp, #72]	; 0x48
9000f8bc:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
9000f8c0:	b21b      	sxth	r3, r3
9000f8c2:	9011      	str	r0, [sp, #68]	; 0x44
9000f8c4:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
9000f8c8:	9310      	str	r3, [sp, #64]	; 0x40
9000f8ca:	f8d8 3000 	ldr.w	r3, [r8]
9000f8ce:	7a59      	ldrb	r1, [r3, #9]
9000f8d0:	7a1b      	ldrb	r3, [r3, #8]
9000f8d2:	9114      	str	r1, [sp, #80]	; 0x50
9000f8d4:	9315      	str	r3, [sp, #84]	; 0x54
9000f8d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9000f8d8:	f9b3 5000 	ldrsh.w	r5, [r3]
9000f8dc:	2a00      	cmp	r2, #0
9000f8de:	d067      	beq.n	9000f9b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
9000f8e0:	f898 3010 	ldrb.w	r3, [r8, #16]
9000f8e4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
9000f8e6:	2b04      	cmp	r3, #4
9000f8e8:	bf14      	ite	ne
9000f8ea:	2301      	movne	r3, #1
9000f8ec:	2302      	moveq	r3, #2
9000f8ee:	4413      	add	r3, r2
9000f8f0:	f04f 0900 	mov.w	r9, #0
9000f8f4:	930f      	str	r3, [sp, #60]	; 0x3c
9000f8f6:	464c      	mov	r4, r9
9000f8f8:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
9000f8fc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
9000f900:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
9000f904:	4293      	cmp	r3, r2
9000f906:	f280 808c 	bge.w	9000fa22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9000f90a:	2300      	movs	r3, #0
9000f90c:	931c      	str	r3, [sp, #112]	; 0x70
9000f90e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9000f912:	429c      	cmp	r4, r3
9000f914:	d006      	beq.n	9000f924 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
9000f916:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000f918:	f242 020b 	movw	r2, #8203	; 0x200b
9000f91c:	4294      	cmp	r4, r2
9000f91e:	bf18      	it	ne
9000f920:	4623      	movne	r3, r4
9000f922:	930d      	str	r3, [sp, #52]	; 0x34
9000f924:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000f926:	992d      	ldr	r1, [sp, #180]	; 0xb4
9000f928:	f8d8 2000 	ldr.w	r2, [r8]
9000f92c:	428b      	cmp	r3, r1
9000f92e:	db41      	blt.n	9000f9b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
9000f930:	6813      	ldr	r3, [r2, #0]
9000f932:	4610      	mov	r0, r2
9000f934:	695b      	ldr	r3, [r3, #20]
9000f936:	4798      	blx	r3
9000f938:	4604      	mov	r4, r0
9000f93a:	f8d8 0000 	ldr.w	r0, [r8]
9000f93e:	aa1d      	add	r2, sp, #116	; 0x74
9000f940:	4621      	mov	r1, r4
9000f942:	6803      	ldr	r3, [r0, #0]
9000f944:	689e      	ldr	r6, [r3, #8]
9000f946:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
9000f94a:	47b0      	blx	r6
9000f94c:	901c      	str	r0, [sp, #112]	; 0x70
9000f94e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9000f952:	429c      	cmp	r4, r3
9000f954:	f000 80ea 	beq.w	9000fb2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
9000f958:	f242 030b 	movw	r3, #8203	; 0x200b
9000f95c:	429c      	cmp	r4, r3
9000f95e:	f000 80e5 	beq.w	9000fb2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
9000f962:	2c00      	cmp	r4, #0
9000f964:	f000 80f7 	beq.w	9000fb56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
9000f968:	2c0a      	cmp	r4, #10
9000f96a:	d060      	beq.n	9000fa2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
9000f96c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
9000f96e:	b36a      	cbz	r2, 9000f9cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
9000f970:	8894      	ldrh	r4, [r2, #4]
9000f972:	f1bb 0f00 	cmp.w	fp, #0
9000f976:	d03b      	beq.n	9000f9f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
9000f978:	f892 900d 	ldrb.w	r9, [r2, #13]
9000f97c:	f1bb 0f01 	cmp.w	fp, #1
9000f980:	ea4f 0949 	mov.w	r9, r9, lsl #1
9000f984:	f409 7380 	and.w	r3, r9, #256	; 0x100
9000f988:	f892 900a 	ldrb.w	r9, [r2, #10]
9000f98c:	ea49 0903 	orr.w	r9, r9, r3
9000f990:	d134      	bne.n	9000f9fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
9000f992:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000f994:	eba5 0509 	sub.w	r5, r5, r9
9000f998:	2b00      	cmp	r3, #0
9000f99a:	d14f      	bne.n	9000fa3c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9000f99c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9000f99e:	eb09 0305 	add.w	r3, r9, r5
9000f9a2:	4413      	add	r3, r2
9000f9a4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9000f9a6:	f9b2 2000 	ldrsh.w	r2, [r2]
9000f9aa:	4293      	cmp	r3, r2
9000f9ac:	da51      	bge.n	9000fa52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
9000f9ae:	e038      	b.n	9000fa22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9000f9b0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9000f9b2:	e79d      	b.n	9000f8f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
9000f9b4:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
9000f9b8:	4659      	mov	r1, fp
9000f9ba:	982c      	ldr	r0, [sp, #176]	; 0xb0
9000f9bc:	9301      	str	r3, [sp, #4]
9000f9be:	ab1d      	add	r3, sp, #116	; 0x74
9000f9c0:	9300      	str	r3, [sp, #0]
9000f9c2:	ab1c      	add	r3, sp, #112	; 0x70
9000f9c4:	f002 fdf0 	bl	900125a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
9000f9c8:	4604      	mov	r4, r0
9000f9ca:	e7c0      	b.n	9000f94e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
9000f9cc:	f8d8 0000 	ldr.w	r0, [r8]
9000f9d0:	6803      	ldr	r3, [r0, #0]
9000f9d2:	691b      	ldr	r3, [r3, #16]
9000f9d4:	4798      	blx	r3
9000f9d6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9000f9da:	4298      	cmp	r0, r3
9000f9dc:	f000 80a6 	beq.w	9000fb2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
9000f9e0:	f242 030b 	movw	r3, #8203	; 0x200b
9000f9e4:	4298      	cmp	r0, r3
9000f9e6:	f000 80a1 	beq.w	9000fb2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
9000f9ea:	f1bb 0f00 	cmp.w	fp, #0
9000f9ee:	d100      	bne.n	9000f9f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
9000f9f0:	444d      	add	r5, r9
9000f9f2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
9000f9f4:	2a00      	cmp	r2, #0
9000f9f6:	d1bf      	bne.n	9000f978 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
9000f9f8:	4691      	mov	r9, r2
9000f9fa:	e097      	b.n	9000fb2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
9000f9fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000f9fe:	2b00      	cmp	r3, #0
9000fa00:	f000 80ab 	beq.w	9000fb5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b8>
9000fa04:	f1bb 0f00 	cmp.w	fp, #0
9000fa08:	d118      	bne.n	9000fa3c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9000fa0a:	f8d8 0000 	ldr.w	r0, [r8]
9000fa0e:	990d      	ldr	r1, [sp, #52]	; 0x34
9000fa10:	6803      	ldr	r3, [r0, #0]
9000fa12:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000fa14:	4798      	blx	r3
9000fa16:	4405      	add	r5, r0
9000fa18:	9b15      	ldr	r3, [sp, #84]	; 0x54
9000fa1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9000fa1c:	1aeb      	subs	r3, r5, r3
9000fa1e:	4293      	cmp	r3, r2
9000fa20:	dd17      	ble.n	9000fa52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
9000fa22:	2c00      	cmp	r4, #0
9000fa24:	f000 8097 	beq.w	9000fb56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
9000fa28:	2c0a      	cmp	r4, #10
9000fa2a:	f040 8085 	bne.w	9000fb38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
9000fa2e:	240a      	movs	r4, #10
9000fa30:	fab4 f084 	clz	r0, r4
9000fa34:	0940      	lsrs	r0, r0, #5
9000fa36:	b01f      	add	sp, #124	; 0x7c
9000fa38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000fa3c:	f8d8 0000 	ldr.w	r0, [r8]
9000fa40:	990d      	ldr	r1, [sp, #52]	; 0x34
9000fa42:	6803      	ldr	r3, [r0, #0]
9000fa44:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000fa46:	4798      	blx	r3
9000fa48:	f1bb 0f01 	cmp.w	fp, #1
9000fa4c:	eba5 0500 	sub.w	r5, r5, r0
9000fa50:	d0a4      	beq.n	9000f99c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
9000fa52:	981c      	ldr	r0, [sp, #112]	; 0x70
9000fa54:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9000fa56:	f990 1009 	ldrsb.w	r1, [r0, #9]
9000fa5a:	f9b3 6000 	ldrsh.w	r6, [r3]
9000fa5e:	7b43      	ldrb	r3, [r0, #13]
9000fa60:	4429      	add	r1, r5
9000fa62:	015b      	lsls	r3, r3, #5
9000fa64:	f403 7280 	and.w	r2, r3, #256	; 0x100
9000fa68:	7983      	ldrb	r3, [r0, #6]
9000fa6a:	4313      	orrs	r3, r2
9000fa6c:	440b      	add	r3, r1
9000fa6e:	42b3      	cmp	r3, r6
9000fa70:	db5c      	blt.n	9000fb2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
9000fa72:	9b10      	ldr	r3, [sp, #64]	; 0x40
9000fa74:	4299      	cmp	r1, r3
9000fa76:	da59      	bge.n	9000fb2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
9000fa78:	f8d8 0000 	ldr.w	r0, [r8]
9000fa7c:	42ae      	cmp	r6, r5
9000fa7e:	6803      	ldr	r3, [r0, #0]
9000fa80:	bfcc      	ite	gt
9000fa82:	1b76      	subgt	r6, r6, r5
9000fa84:	2600      	movle	r6, #0
9000fa86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000fa88:	bfc8      	it	gt
9000fa8a:	b2b6      	uxthgt	r6, r6
9000fa8c:	4798      	blx	r3
9000fa8e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9000fa90:	7b5a      	ldrb	r2, [r3, #13]
9000fa92:	00d1      	lsls	r1, r2, #3
9000fa94:	f401 7780 	and.w	r7, r1, #256	; 0x100
9000fa98:	7a19      	ldrb	r1, [r3, #8]
9000fa9a:	4339      	orrs	r1, r7
9000fa9c:	0657      	lsls	r7, r2, #25
9000fa9e:	9f17      	ldr	r7, [sp, #92]	; 0x5c
9000faa0:	bf48      	it	mi
9000faa2:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
9000faa6:	4407      	add	r7, r0
9000faa8:	bf48      	it	mi
9000faaa:	b209      	sxthmi	r1, r1
9000faac:	1a7f      	subs	r7, r7, r1
9000faae:	9929      	ldr	r1, [sp, #164]	; 0xa4
9000fab0:	b2bf      	uxth	r7, r7
9000fab2:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
9000fab6:	fa0f fa87 	sxth.w	sl, r7
9000faba:	4551      	cmp	r1, sl
9000fabc:	dd3a      	ble.n	9000fb34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9000fabe:	0112      	lsls	r2, r2, #4
9000fac0:	79d8      	ldrb	r0, [r3, #7]
9000fac2:	f402 7280 	and.w	r2, r2, #256	; 0x100
9000fac6:	4302      	orrs	r2, r0
9000fac8:	4492      	add	sl, r2
9000faca:	4551      	cmp	r1, sl
9000facc:	dc2e      	bgt.n	9000fb2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
9000face:	1bcf      	subs	r7, r1, r7
9000fad0:	468a      	mov	sl, r1
9000fad2:	b2bf      	uxth	r7, r7
9000fad4:	9319      	str	r3, [sp, #100]	; 0x64
9000fad6:	9b11      	ldr	r3, [sp, #68]	; 0x44
9000fad8:	f8d8 0000 	ldr.w	r0, [r8]
9000fadc:	681a      	ldr	r2, [r3, #0]
9000fade:	6801      	ldr	r1, [r0, #0]
9000fae0:	6c93      	ldr	r3, [r2, #72]	; 0x48
9000fae2:	9a1d      	ldr	r2, [sp, #116]	; 0x74
9000fae4:	9313      	str	r3, [sp, #76]	; 0x4c
9000fae6:	9218      	str	r2, [sp, #96]	; 0x60
9000fae8:	6b89      	ldr	r1, [r1, #56]	; 0x38
9000faea:	4788      	blx	r1
9000faec:	f898 1006 	ldrb.w	r1, [r8, #6]
9000faf0:	9b19      	ldr	r3, [sp, #100]	; 0x64
9000faf2:	910b      	str	r1, [sp, #44]	; 0x2c
9000faf4:	f898 100e 	ldrb.w	r1, [r8, #14]
9000faf8:	9a18      	ldr	r2, [sp, #96]	; 0x60
9000fafa:	910a      	str	r1, [sp, #40]	; 0x28
9000fafc:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
9000fb00:	9109      	str	r1, [sp, #36]	; 0x24
9000fb02:	f8d8 1008 	ldr.w	r1, [r8, #8]
9000fb06:	9305      	str	r3, [sp, #20]
9000fb08:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9000fb0a:	9206      	str	r2, [sp, #24]
9000fb0c:	e9cd a601 	strd	sl, r6, [sp, #4]
9000fb10:	442e      	add	r6, r5
9000fb12:	e9cd 7303 	strd	r7, r3, [sp, #12]
9000fb16:	b236      	sxth	r6, r6
9000fb18:	9b12      	ldr	r3, [sp, #72]	; 0x48
9000fb1a:	e9cd 0107 	strd	r0, r1, [sp, #28]
9000fb1e:	9600      	str	r6, [sp, #0]
9000fb20:	9916      	ldr	r1, [sp, #88]	; 0x58
9000fb22:	681a      	ldr	r2, [r3, #0]
9000fb24:	9811      	ldr	r0, [sp, #68]	; 0x44
9000fb26:	685b      	ldr	r3, [r3, #4]
9000fb28:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9000fb2a:	47b0      	blx	r6
9000fb2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000fb2e:	3301      	adds	r3, #1
9000fb30:	930e      	str	r3, [sp, #56]	; 0x38
9000fb32:	e6e5      	b.n	9000f900 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
9000fb34:	2700      	movs	r7, #0
9000fb36:	e7cd      	b.n	9000fad4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
9000fb38:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9000fb3a:	3501      	adds	r5, #1
9000fb3c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9000fb3e:	429d      	cmp	r5, r3
9000fb40:	f6bf af76 	bge.w	9000fa30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
9000fb44:	4659      	mov	r1, fp
9000fb46:	982c      	ldr	r0, [sp, #176]	; 0xb0
9000fb48:	f7f5 fd46 	bl	900055d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9000fb4c:	4604      	mov	r4, r0
9000fb4e:	b110      	cbz	r0, 9000fb56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
9000fb50:	280a      	cmp	r0, #10
9000fb52:	d1f2      	bne.n	9000fb3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
9000fb54:	e76b      	b.n	9000fa2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
9000fb56:	2400      	movs	r4, #0
9000fb58:	e76a      	b.n	9000fa30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
9000fb5a:	f1bb 0f00 	cmp.w	fp, #0
9000fb5e:	f43f af5b 	beq.w	9000fa18 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
9000fb62:	e776      	b.n	9000fa52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

9000fb64 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
9000fb64:	b530      	push	{r4, r5, lr}
9000fb66:	8a44      	ldrh	r4, [r0, #18]
9000fb68:	8ac5      	ldrh	r5, [r0, #22]
9000fb6a:	82c3      	strh	r3, [r0, #22]
9000fb6c:	442c      	add	r4, r5
9000fb6e:	1ae4      	subs	r4, r4, r3
9000fb70:	8b03      	ldrh	r3, [r0, #24]
9000fb72:	8244      	strh	r4, [r0, #18]
9000fb74:	8a84      	ldrh	r4, [r0, #20]
9000fb76:	4422      	add	r2, r4
9000fb78:	440c      	add	r4, r1
9000fb7a:	1a59      	subs	r1, r3, r1
9000fb7c:	8342      	strh	r2, [r0, #26]
9000fb7e:	8284      	strh	r4, [r0, #20]
9000fb80:	8301      	strh	r1, [r0, #24]
9000fb82:	bd30      	pop	{r4, r5, pc}

9000fb84 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
9000fb84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fb88:	7a43      	ldrb	r3, [r0, #9]
9000fb8a:	b087      	sub	sp, #28
9000fb8c:	4604      	mov	r4, r0
9000fb8e:	460f      	mov	r7, r1
9000fb90:	1eda      	subs	r2, r3, #3
9000fb92:	b2d2      	uxtb	r2, r2
9000fb94:	2900      	cmp	r1, #0
9000fb96:	d036      	beq.n	9000fc06 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
9000fb98:	2a01      	cmp	r2, #1
9000fb9a:	d932      	bls.n	9000fc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
9000fb9c:	1e58      	subs	r0, r3, #1
9000fb9e:	f1d0 0b00 	rsbs	fp, r0, #0
9000fba2:	eb4b 0b00 	adc.w	fp, fp, r0
9000fba6:	1e99      	subs	r1, r3, #2
9000fba8:	424b      	negs	r3, r1
9000fbaa:	414b      	adcs	r3, r1
9000fbac:	9303      	str	r3, [sp, #12]
9000fbae:	2300      	movs	r3, #0
9000fbb0:	e9cd 3301 	strd	r3, r3, [sp, #4]
9000fbb4:	2500      	movs	r5, #0
9000fbb6:	f242 0a0b 	movw	sl, #8203	; 0x200b
9000fbba:	46a9      	mov	r9, r5
9000fbbc:	8265      	strh	r5, [r4, #18]
9000fbbe:	82a5      	strh	r5, [r4, #20]
9000fbc0:	2300      	movs	r3, #0
9000fbc2:	9305      	str	r3, [sp, #20]
9000fbc4:	8823      	ldrh	r3, [r4, #0]
9000fbc6:	2b20      	cmp	r3, #32
9000fbc8:	d02b      	beq.n	9000fc22 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
9000fbca:	eba3 020a 	sub.w	r2, r3, sl
9000fbce:	4256      	negs	r6, r2
9000fbd0:	4156      	adcs	r6, r2
9000fbd2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
9000fbd6:	4293      	cmp	r3, r2
9000fbd8:	d004      	beq.n	9000fbe4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
9000fbda:	4553      	cmp	r3, sl
9000fbdc:	bf16      	itet	ne
9000fbde:	4699      	movne	r9, r3
9000fbe0:	2601      	moveq	r6, #1
9000fbe2:	2600      	movne	r6, #0
9000fbe4:	ab05      	add	r3, sp, #20
9000fbe6:	68e2      	ldr	r2, [r4, #12]
9000fbe8:	7a21      	ldrb	r1, [r4, #8]
9000fbea:	6860      	ldr	r0, [r4, #4]
9000fbec:	f002 fc84 	bl	900124f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9000fbf0:	8020      	strh	r0, [r4, #0]
9000fbf2:	b9c8      	cbnz	r0, 9000fc28 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
9000fbf4:	8b22      	ldrh	r2, [r4, #24]
9000fbf6:	2300      	movs	r3, #0
9000fbf8:	4611      	mov	r1, r2
9000fbfa:	4620      	mov	r0, r4
9000fbfc:	f7ff ffb2 	bl	9000fb64 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
9000fc00:	e066      	b.n	9000fcd0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
9000fc02:	468b      	mov	fp, r1
9000fc04:	e7cf      	b.n	9000fba6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
9000fc06:	3b01      	subs	r3, #1
9000fc08:	2a01      	cmp	r2, #1
9000fc0a:	9103      	str	r1, [sp, #12]
9000fc0c:	468b      	mov	fp, r1
9000fc0e:	bf8c      	ite	hi
9000fc10:	2200      	movhi	r2, #0
9000fc12:	2201      	movls	r2, #1
9000fc14:	2b01      	cmp	r3, #1
9000fc16:	9202      	str	r2, [sp, #8]
9000fc18:	bf8c      	ite	hi
9000fc1a:	2300      	movhi	r3, #0
9000fc1c:	2301      	movls	r3, #1
9000fc1e:	9301      	str	r3, [sp, #4]
9000fc20:	e7c8      	b.n	9000fbb4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
9000fc22:	4699      	mov	r9, r3
9000fc24:	2601      	movs	r6, #1
9000fc26:	e7dd      	b.n	9000fbe4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
9000fc28:	8ae3      	ldrh	r3, [r4, #22]
9000fc2a:	280a      	cmp	r0, #10
9000fc2c:	f103 0301 	add.w	r3, r3, #1
9000fc30:	82e3      	strh	r3, [r4, #22]
9000fc32:	d0df      	beq.n	9000fbf4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
9000fc34:	9a05      	ldr	r2, [sp, #20]
9000fc36:	bb42      	cbnz	r2, 9000fc8a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
9000fc38:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9000fc3c:	4298      	cmp	r0, r3
9000fc3e:	d001      	beq.n	9000fc44 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
9000fc40:	4550      	cmp	r0, sl
9000fc42:	d1bd      	bne.n	9000fbc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
9000fc44:	8823      	ldrh	r3, [r4, #0]
9000fc46:	8b21      	ldrh	r1, [r4, #24]
9000fc48:	2b20      	cmp	r3, #32
9000fc4a:	d001      	beq.n	9000fc50 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
9000fc4c:	4553      	cmp	r3, sl
9000fc4e:	d131      	bne.n	9000fcb4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
9000fc50:	2e00      	cmp	r6, #0
9000fc52:	bf0a      	itet	eq
9000fc54:	460d      	moveq	r5, r1
9000fc56:	4630      	movne	r0, r6
9000fc58:	2001      	moveq	r0, #1
9000fc5a:	440a      	add	r2, r1
9000fc5c:	8aa3      	ldrh	r3, [r4, #20]
9000fc5e:	f8b4 c010 	ldrh.w	ip, [r4, #16]
9000fc62:	b292      	uxth	r2, r2
9000fc64:	8322      	strh	r2, [r4, #24]
9000fc66:	4413      	add	r3, r2
9000fc68:	2f00      	cmp	r7, #0
9000fc6a:	d03a      	beq.n	9000fce2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
9000fc6c:	f1bb 0f00 	cmp.w	fp, #0
9000fc70:	d102      	bne.n	9000fc78 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
9000fc72:	9903      	ldr	r1, [sp, #12]
9000fc74:	b301      	cbz	r1, 9000fcb8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
9000fc76:	b1f8      	cbz	r0, 9000fcb8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
9000fc78:	8ba1      	ldrh	r1, [r4, #28]
9000fc7a:	4419      	add	r1, r3
9000fc7c:	458c      	cmp	ip, r1
9000fc7e:	da2a      	bge.n	9000fcd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
9000fc80:	8a61      	ldrh	r1, [r4, #18]
9000fc82:	b341      	cbz	r1, 9000fcd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
9000fc84:	4563      	cmp	r3, ip
9000fc86:	dd9b      	ble.n	9000fbc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
9000fc88:	e01c      	b.n	9000fcc4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
9000fc8a:	8893      	ldrh	r3, [r2, #4]
9000fc8c:	4649      	mov	r1, r9
9000fc8e:	8023      	strh	r3, [r4, #0]
9000fc90:	f892 800d 	ldrb.w	r8, [r2, #13]
9000fc94:	ea4f 0848 	mov.w	r8, r8, lsl #1
9000fc98:	f408 7080 	and.w	r0, r8, #256	; 0x100
9000fc9c:	f892 800a 	ldrb.w	r8, [r2, #10]
9000fca0:	ea48 0800 	orr.w	r8, r8, r0
9000fca4:	68e0      	ldr	r0, [r4, #12]
9000fca6:	6803      	ldr	r3, [r0, #0]
9000fca8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000fcaa:	4798      	blx	r3
9000fcac:	eb08 0200 	add.w	r2, r8, r0
9000fcb0:	b292      	uxth	r2, r2
9000fcb2:	e7c7      	b.n	9000fc44 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
9000fcb4:	2000      	movs	r0, #0
9000fcb6:	e7d0      	b.n	9000fc5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
9000fcb8:	4563      	cmp	r3, ip
9000fcba:	dd81      	ble.n	9000fbc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
9000fcbc:	8a63      	ldrh	r3, [r4, #18]
9000fcbe:	2b00      	cmp	r3, #0
9000fcc0:	f43f af7e 	beq.w	9000fbc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
9000fcc4:	2301      	movs	r3, #1
9000fcc6:	8ba2      	ldrh	r2, [r4, #28]
9000fcc8:	77a3      	strb	r3, [r4, #30]
9000fcca:	8b63      	ldrh	r3, [r4, #26]
9000fccc:	4413      	add	r3, r2
9000fcce:	8363      	strh	r3, [r4, #26]
9000fcd0:	b007      	add	sp, #28
9000fcd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000fcd6:	2300      	movs	r3, #0
9000fcd8:	4611      	mov	r1, r2
9000fcda:	4620      	mov	r0, r4
9000fcdc:	f7ff ff42 	bl	9000fb64 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
9000fce0:	e76e      	b.n	9000fbc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
9000fce2:	4563      	cmp	r3, ip
9000fce4:	dd14      	ble.n	9000fd10 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
9000fce6:	9b02      	ldr	r3, [sp, #8]
9000fce8:	b113      	cbz	r3, 9000fcf0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
9000fcea:	2301      	movs	r3, #1
9000fcec:	460a      	mov	r2, r1
9000fcee:	e783      	b.n	9000fbf8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
9000fcf0:	9b01      	ldr	r3, [sp, #4]
9000fcf2:	2b00      	cmp	r3, #0
9000fcf4:	f43f af64 	beq.w	9000fbc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
9000fcf8:	2800      	cmp	r0, #0
9000fcfa:	f47f af61 	bne.w	9000fbc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
9000fcfe:	b116      	cbz	r6, 9000fd06 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
9000fd00:	2301      	movs	r3, #1
9000fd02:	462a      	mov	r2, r5
9000fd04:	e779      	b.n	9000fbfa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
9000fd06:	8a63      	ldrh	r3, [r4, #18]
9000fd08:	2b00      	cmp	r3, #0
9000fd0a:	f43f af59 	beq.w	9000fbc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
9000fd0e:	e7df      	b.n	9000fcd0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
9000fd10:	2800      	cmp	r0, #0
9000fd12:	f47f af55 	bne.w	9000fbc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
9000fd16:	2e00      	cmp	r6, #0
9000fd18:	f43f af52 	beq.w	9000fbc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
9000fd1c:	2301      	movs	r3, #1
9000fd1e:	462a      	mov	r2, r5
9000fd20:	e7db      	b.n	9000fcda <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

9000fd22 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
9000fd22:	b530      	push	{r4, r5, lr}
9000fd24:	4605      	mov	r5, r0
9000fd26:	b08b      	sub	sp, #44	; 0x2c
9000fd28:	b191      	cbz	r1, 9000fd50 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
9000fd2a:	2401      	movs	r4, #1
9000fd2c:	e9cd 3100 	strd	r3, r1, [sp]
9000fd30:	4613      	mov	r3, r2
9000fd32:	4601      	mov	r1, r0
9000fd34:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
9000fd38:	a802      	add	r0, sp, #8
9000fd3a:	f7ff fd0b 	bl	9000f754 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
9000fd3e:	2100      	movs	r1, #0
9000fd40:	a802      	add	r0, sp, #8
9000fd42:	f7ff ff1f 	bl	9000fb84 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
9000fd46:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9000fd4a:	b163      	cbz	r3, 9000fd66 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
9000fd4c:	3401      	adds	r4, #1
9000fd4e:	e7f6      	b.n	9000fd3e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
9000fd50:	2401      	movs	r4, #1
9000fd52:	f002 fcc9 	bl	900126e8 <_ZN8touchgfx12TextProvider11getNextCharEv>
9000fd56:	280a      	cmp	r0, #10
9000fd58:	4628      	mov	r0, r5
9000fd5a:	bf08      	it	eq
9000fd5c:	3401      	addeq	r4, #1
9000fd5e:	f002 fcc3 	bl	900126e8 <_ZN8touchgfx12TextProvider11getNextCharEv>
9000fd62:	2800      	cmp	r0, #0
9000fd64:	d1f7      	bne.n	9000fd56 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
9000fd66:	b2a0      	uxth	r0, r4
9000fd68:	b00b      	add	sp, #44	; 0x2c
9000fd6a:	bd30      	pop	{r4, r5, pc}

9000fd6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
9000fd6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fd70:	b0db      	sub	sp, #364	; 0x16c
9000fd72:	4689      	mov	r9, r1
9000fd74:	461c      	mov	r4, r3
9000fd76:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
9000fd7a:	900a      	str	r0, [sp, #40]	; 0x28
9000fd7c:	f1ba 0f00 	cmp.w	sl, #0
9000fd80:	f000 80a5 	beq.w	9000fece <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
9000fd84:	681b      	ldr	r3, [r3, #0]
9000fd86:	2b00      	cmp	r3, #0
9000fd88:	f000 80a1 	beq.w	9000fece <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
9000fd8c:	7ba3      	ldrb	r3, [r4, #14]
9000fd8e:	2b00      	cmp	r3, #0
9000fd90:	f000 809d 	beq.w	9000fece <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
9000fd94:	f10d 0830 	add.w	r8, sp, #48	; 0x30
9000fd98:	6810      	ldr	r0, [r2, #0]
9000fd9a:	6851      	ldr	r1, [r2, #4]
9000fd9c:	2500      	movs	r5, #0
9000fd9e:	4643      	mov	r3, r8
9000fda0:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
9000fda4:	950e      	str	r5, [sp, #56]	; 0x38
9000fda6:	af18      	add	r7, sp, #96	; 0x60
9000fda8:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
9000fdac:	79a2      	ldrb	r2, [r4, #6]
9000fdae:	c303      	stmia	r3!, {r0, r1}
9000fdb0:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
9000fdb4:	a90e      	add	r1, sp, #56	; 0x38
9000fdb6:	4640      	mov	r0, r8
9000fdb8:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
9000fdbc:	f7ff fd40 	bl	9000f840 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9000fdc0:	a90e      	add	r1, sp, #56	; 0x38
9000fdc2:	79a2      	ldrb	r2, [r4, #6]
9000fdc4:	4608      	mov	r0, r1
9000fdc6:	f7ff fd3b 	bl	9000f840 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9000fdca:	4638      	mov	r0, r7
9000fdcc:	f002 f855 	bl	90011e7a <_ZN8touchgfx12TextProviderC1Ev>
9000fdd0:	6820      	ldr	r0, [r4, #0]
9000fdd2:	6803      	ldr	r3, [r0, #0]
9000fdd4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9000fdd6:	4798      	blx	r3
9000fdd8:	9a65      	ldr	r2, [sp, #404]	; 0x194
9000fdda:	4603      	mov	r3, r0
9000fddc:	4651      	mov	r1, sl
9000fdde:	4638      	mov	r0, r7
9000fde0:	f002 f890 	bl	90011f04 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
9000fde4:	7923      	ldrb	r3, [r4, #4]
9000fde6:	6820      	ldr	r0, [r4, #0]
9000fde8:	9308      	str	r3, [sp, #32]
9000fdea:	6803      	ldr	r3, [r0, #0]
9000fdec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000fdee:	4798      	blx	r3
9000fdf0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9000fdf4:	181e      	adds	r6, r3, r0
9000fdf6:	42ae      	cmp	r6, r5
9000fdf8:	dd06      	ble.n	9000fe08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
9000fdfa:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
9000fdfe:	4282      	cmp	r2, r0
9000fe00:	bfa4      	itt	ge
9000fe02:	189d      	addge	r5, r3, r2
9000fe04:	fb95 f5f6 	sdivge	r5, r5, r6
9000fe08:	a82e      	add	r0, sp, #184	; 0xb8
9000fe0a:	f002 f836 	bl	90011e7a <_ZN8touchgfx12TextProviderC1Ev>
9000fe0e:	7c23      	ldrb	r3, [r4, #16]
9000fe10:	b14b      	cbz	r3, 9000fe26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
9000fe12:	6820      	ldr	r0, [r4, #0]
9000fe14:	6803      	ldr	r3, [r0, #0]
9000fe16:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9000fe18:	4798      	blx	r3
9000fe1a:	9a65      	ldr	r2, [sp, #404]	; 0x194
9000fe1c:	4603      	mov	r3, r0
9000fe1e:	4651      	mov	r1, sl
9000fe20:	a82e      	add	r0, sp, #184	; 0xb8
9000fe22:	f002 f86f 	bl	90011f04 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
9000fe26:	7c21      	ldrb	r1, [r4, #16]
9000fe28:	a810      	add	r0, sp, #64	; 0x40
9000fe2a:	7963      	ldrb	r3, [r4, #5]
9000fe2c:	9101      	str	r1, [sp, #4]
9000fe2e:	6821      	ldr	r1, [r4, #0]
9000fe30:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9000fe34:	9100      	str	r1, [sp, #0]
9000fe36:	a92e      	add	r1, sp, #184	; 0xb8
9000fe38:	f7ff fc8c 	bl	9000f754 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
9000fe3c:	7c23      	ldrb	r3, [r4, #16]
9000fe3e:	b9bb      	cbnz	r3, 9000fe70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
9000fe40:	fa1f fa86 	uxth.w	sl, r6
9000fe44:	2d00      	cmp	r5, #0
9000fe46:	dd45      	ble.n	9000fed4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
9000fe48:	4638      	mov	r0, r7
9000fe4a:	f002 fc4d 	bl	900126e8 <_ZN8touchgfx12TextProvider11getNextCharEv>
9000fe4e:	2800      	cmp	r0, #0
9000fe50:	d03d      	beq.n	9000fece <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
9000fe52:	280a      	cmp	r0, #10
9000fe54:	d1f6      	bne.n	9000fe44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
9000fe56:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9000fe5a:	3d01      	subs	r5, #1
9000fe5c:	4453      	add	r3, sl
9000fe5e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
9000fe62:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
9000fe66:	eba3 030a 	sub.w	r3, r3, sl
9000fe6a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
9000fe6e:	e7e9      	b.n	9000fe44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
9000fe70:	0073      	lsls	r3, r6, #1
9000fe72:	f64f 7bff 	movw	fp, #65535	; 0xffff
9000fe76:	fa1f fa86 	uxth.w	sl, r6
9000fe7a:	9309      	str	r3, [sp, #36]	; 0x24
9000fe7c:	2d00      	cmp	r5, #0
9000fe7e:	dd29      	ble.n	9000fed4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
9000fe80:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
9000fe84:	a810      	add	r0, sp, #64	; 0x40
9000fe86:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000fe88:	428b      	cmp	r3, r1
9000fe8a:	bfd4      	ite	le
9000fe8c:	2100      	movle	r1, #0
9000fe8e:	2101      	movgt	r1, #1
9000fe90:	f7ff fe78 	bl	9000fb84 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
9000fe94:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
9000fe98:	3b01      	subs	r3, #1
9000fe9a:	b29b      	uxth	r3, r3
9000fe9c:	455b      	cmp	r3, fp
9000fe9e:	930b      	str	r3, [sp, #44]	; 0x2c
9000fea0:	d005      	beq.n	9000feae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
9000fea2:	7961      	ldrb	r1, [r4, #5]
9000fea4:	4638      	mov	r0, r7
9000fea6:	f7f5 fb97 	bl	900055d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9000feaa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000feac:	e7f4      	b.n	9000fe98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
9000feae:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9000feb2:	3d01      	subs	r5, #1
9000feb4:	4453      	add	r3, sl
9000feb6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
9000feba:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
9000febe:	eba3 030a 	sub.w	r3, r3, sl
9000fec2:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
9000fec6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9000feca:	2b00      	cmp	r3, #0
9000fecc:	d1d6      	bne.n	9000fe7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
9000fece:	b05b      	add	sp, #364	; 0x16c
9000fed0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000fed4:	ea4f 0a46 	mov.w	sl, r6, lsl #1
9000fed8:	ad44      	add	r5, sp, #272	; 0x110
9000feda:	f04f 0b00 	mov.w	fp, #0
9000fede:	7c23      	ldrb	r3, [r4, #16]
9000fee0:	2b00      	cmp	r3, #0
9000fee2:	d067      	beq.n	9000ffb4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
9000fee4:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
9000fee8:	a810      	add	r0, sp, #64	; 0x40
9000feea:	458a      	cmp	sl, r1
9000feec:	bfd4      	ite	le
9000feee:	2100      	movle	r1, #0
9000fef0:	2101      	movgt	r1, #1
9000fef2:	f7ff fe47 	bl	9000fb84 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
9000fef6:	9b08      	ldr	r3, [sp, #32]
9000fef8:	2b00      	cmp	r3, #0
9000fefa:	d056      	beq.n	9000ffaa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
9000fefc:	7c23      	ldrb	r3, [r4, #16]
9000fefe:	2258      	movs	r2, #88	; 0x58
9000ff00:	4639      	mov	r1, r7
9000ff02:	4628      	mov	r0, r5
9000ff04:	9309      	str	r3, [sp, #36]	; 0x24
9000ff06:	f00f fa4b 	bl	9001f3a0 <memcpy>
9000ff0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000ff0c:	2b00      	cmp	r3, #0
9000ff0e:	d059      	beq.n	9000ffc4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
9000ff10:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
9000ff14:	7922      	ldrb	r2, [r4, #4]
9000ff16:	2a01      	cmp	r2, #1
9000ff18:	d13d      	bne.n	9000ff96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
9000ff1a:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
9000ff1e:	1ac0      	subs	r0, r0, r3
9000ff20:	2302      	movs	r3, #2
9000ff22:	fb90 f0f3 	sdiv	r0, r0, r3
9000ff26:	b200      	sxth	r0, r0
9000ff28:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9000ff2c:	4418      	add	r0, r3
9000ff2e:	7c23      	ldrb	r3, [r4, #16]
9000ff30:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
9000ff34:	2b00      	cmp	r3, #0
9000ff36:	d03a      	beq.n	9000ffae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
9000ff38:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
9000ff3c:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
9000ff40:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9000ff44:	9500      	str	r5, [sp, #0]
9000ff46:	980a      	ldr	r0, [sp, #40]	; 0x28
9000ff48:	e9cd 2105 	strd	r2, r1, [sp, #20]
9000ff4c:	e9cd b703 	strd	fp, r7, [sp, #12]
9000ff50:	e9cd 8401 	strd	r8, r4, [sp, #4]
9000ff54:	464a      	mov	r2, r9
9000ff56:	2100      	movs	r1, #0
9000ff58:	f7ff fca3 	bl	9000f8a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
9000ff5c:	2800      	cmp	r0, #0
9000ff5e:	d1b6      	bne.n	9000fece <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
9000ff60:	b2b2      	uxth	r2, r6
9000ff62:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9000ff66:	4611      	mov	r1, r2
9000ff68:	4413      	add	r3, r2
9000ff6a:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
9000ff6e:	b21b      	sxth	r3, r3
9000ff70:	1a52      	subs	r2, r2, r1
9000ff72:	7c21      	ldrb	r1, [r4, #16]
9000ff74:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
9000ff78:	b212      	sxth	r2, r2
9000ff7a:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
9000ff7e:	b109      	cbz	r1, 9000ff84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
9000ff80:	42b2      	cmp	r2, r6
9000ff82:	dba4      	blt.n	9000fece <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
9000ff84:	f8b8 2006 	ldrh.w	r2, [r8, #6]
9000ff88:	f8b8 1002 	ldrh.w	r1, [r8, #2]
9000ff8c:	440a      	add	r2, r1
9000ff8e:	b212      	sxth	r2, r2
9000ff90:	4293      	cmp	r3, r2
9000ff92:	dda4      	ble.n	9000fede <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
9000ff94:	e79b      	b.n	9000fece <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
9000ff96:	2a02      	cmp	r2, #2
9000ff98:	d105      	bne.n	9000ffa6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
9000ff9a:	7be2      	ldrb	r2, [r4, #15]
9000ff9c:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
9000ffa0:	1a80      	subs	r0, r0, r2
9000ffa2:	1ac0      	subs	r0, r0, r3
9000ffa4:	e7bf      	b.n	9000ff26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
9000ffa6:	2000      	movs	r0, #0
9000ffa8:	e7be      	b.n	9000ff28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
9000ffaa:	7be0      	ldrb	r0, [r4, #15]
9000ffac:	e7bc      	b.n	9000ff28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
9000ffae:	f647 72ff 	movw	r2, #32767	; 0x7fff
9000ffb2:	e7c3      	b.n	9000ff3c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
9000ffb4:	9b08      	ldr	r3, [sp, #32]
9000ffb6:	2b00      	cmp	r3, #0
9000ffb8:	d0f7      	beq.n	9000ffaa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
9000ffba:	2258      	movs	r2, #88	; 0x58
9000ffbc:	4639      	mov	r1, r7
9000ffbe:	4628      	mov	r0, r5
9000ffc0:	f00f f9ee 	bl	9001f3a0 <memcpy>
9000ffc4:	2300      	movs	r3, #0
9000ffc6:	f647 72ff 	movw	r2, #32767	; 0x7fff
9000ffca:	6821      	ldr	r1, [r4, #0]
9000ffcc:	4628      	mov	r0, r5
9000ffce:	f7ff fbfb 	bl	9000f7c8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
9000ffd2:	b203      	sxth	r3, r0
9000ffd4:	e79e      	b.n	9000ff14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

9000ffd6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
9000ffd6:	2b02      	cmp	r3, #2
9000ffd8:	b510      	push	{r4, lr}
9000ffda:	f9b0 4000 	ldrsh.w	r4, [r0]
9000ffde:	d00b      	beq.n	9000fff8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
9000ffe0:	2b03      	cmp	r3, #3
9000ffe2:	d00e      	beq.n	90010002 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
9000ffe4:	2b01      	cmp	r3, #1
9000ffe6:	d001      	beq.n	9000ffec <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
9000ffe8:	1860      	adds	r0, r4, r1
9000ffea:	bd10      	pop	{r4, pc}
9000ffec:	8880      	ldrh	r0, [r0, #4]
9000ffee:	4420      	add	r0, r4
9000fff0:	b200      	sxth	r0, r0
9000fff2:	1a80      	subs	r0, r0, r2
9000fff4:	3801      	subs	r0, #1
9000fff6:	e7f8      	b.n	9000ffea <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
9000fff8:	8880      	ldrh	r0, [r0, #4]
9000fffa:	4420      	add	r0, r4
9000fffc:	b200      	sxth	r0, r0
9000fffe:	1a40      	subs	r0, r0, r1
90010000:	e7f8      	b.n	9000fff4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90010002:	18a0      	adds	r0, r4, r2
90010004:	e7f1      	b.n	9000ffea <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

90010006 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90010006:	2b02      	cmp	r3, #2
90010008:	b510      	push	{r4, lr}
9001000a:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
9001000e:	d006      	beq.n	9001001e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
90010010:	2b03      	cmp	r3, #3
90010012:	d00a      	beq.n	9001002a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90010014:	2b01      	cmp	r3, #1
90010016:	bf14      	ite	ne
90010018:	18a0      	addne	r0, r4, r2
9001001a:	1860      	addeq	r0, r4, r1
9001001c:	bd10      	pop	{r4, pc}
9001001e:	88c0      	ldrh	r0, [r0, #6]
90010020:	4420      	add	r0, r4
90010022:	b200      	sxth	r0, r0
90010024:	1a80      	subs	r0, r0, r2
90010026:	3801      	subs	r0, #1
90010028:	e7f8      	b.n	9001001c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
9001002a:	88c0      	ldrh	r0, [r0, #6]
9001002c:	4420      	add	r0, r4
9001002e:	b200      	sxth	r0, r0
90010030:	1a40      	subs	r0, r0, r1
90010032:	e7f8      	b.n	90010026 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

90010034 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90010034:	4b01      	ldr	r3, [pc, #4]	; (9001003c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90010036:	2200      	movs	r2, #0
90010038:	601a      	str	r2, [r3, #0]
9001003a:	4770      	bx	lr
9001003c:	24012ae8 	.word	0x24012ae8

90010040 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90010040:	4603      	mov	r3, r0
90010042:	b1c8      	cbz	r0, 90010078 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90010044:	0c02      	lsrs	r2, r0, #16
90010046:	0412      	lsls	r2, r2, #16
90010048:	b9a2      	cbnz	r2, 90010074 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
9001004a:	0403      	lsls	r3, r0, #16
9001004c:	2010      	movs	r0, #16
9001004e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
90010052:	bf04      	itt	eq
90010054:	021b      	lsleq	r3, r3, #8
90010056:	3008      	addeq	r0, #8
90010058:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
9001005c:	bf04      	itt	eq
9001005e:	011b      	lsleq	r3, r3, #4
90010060:	3004      	addeq	r0, #4
90010062:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90010066:	bf04      	itt	eq
90010068:	009b      	lsleq	r3, r3, #2
9001006a:	3002      	addeq	r0, #2
9001006c:	2b00      	cmp	r3, #0
9001006e:	db04      	blt.n	9001007a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90010070:	3001      	adds	r0, #1
90010072:	4770      	bx	lr
90010074:	2000      	movs	r0, #0
90010076:	e7ea      	b.n	9001004e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90010078:	2020      	movs	r0, #32
9001007a:	4770      	bx	lr

9001007c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
9001007c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010080:	b087      	sub	sp, #28
90010082:	4681      	mov	r9, r0
90010084:	4698      	mov	r8, r3
90010086:	4610      	mov	r0, r2
90010088:	460d      	mov	r5, r1
9001008a:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
9001008e:	b981      	cbnz	r1, 900100b2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
90010090:	b14b      	cbz	r3, 900100a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
90010092:	460b      	mov	r3, r1
90010094:	464a      	mov	r2, r9
90010096:	4641      	mov	r1, r8
90010098:	e9cd 4700 	strd	r4, r7, [sp]
9001009c:	f7ff ffee 	bl	9001007c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900100a0:	b007      	add	sp, #28
900100a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900100a6:	f04f 33ff 	mov.w	r3, #4294967295
900100aa:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
900100ae:	603b      	str	r3, [r7, #0]
900100b0:	e7f6      	b.n	900100a0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
900100b2:	fa32 fa01 	lsrs.w	sl, r2, r1
900100b6:	d107      	bne.n	900100c8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
900100b8:	fb09 f602 	mul.w	r6, r9, r2
900100bc:	fbb6 f0f4 	udiv	r0, r6, r4
900100c0:	fb04 6610 	mls	r6, r4, r0, r6
900100c4:	603e      	str	r6, [r7, #0]
900100c6:	e7eb      	b.n	900100a0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
900100c8:	2601      	movs	r6, #1
900100ca:	fa09 fb01 	lsl.w	fp, r9, r1
900100ce:	408e      	lsls	r6, r1
900100d0:	fbbb f3f4 	udiv	r3, fp, r4
900100d4:	3e01      	subs	r6, #1
900100d6:	9302      	str	r3, [sp, #8]
900100d8:	fb0a f303 	mul.w	r3, sl, r3
900100dc:	4016      	ands	r6, r2
900100de:	9303      	str	r3, [sp, #12]
900100e0:	4630      	mov	r0, r6
900100e2:	f7ff ffad 	bl	90010040 <_ZN8touchgfx16TouchCalibration4clzuEm>
900100e6:	464a      	mov	r2, r9
900100e8:	460b      	mov	r3, r1
900100ea:	4601      	mov	r1, r0
900100ec:	4630      	mov	r0, r6
900100ee:	e9cd 4700 	strd	r4, r7, [sp]
900100f2:	f7ff ffc3 	bl	9001007c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900100f6:	9b02      	ldr	r3, [sp, #8]
900100f8:	4606      	mov	r6, r0
900100fa:	eb05 0108 	add.w	r1, r5, r8
900100fe:	fb04 bb13 	mls	fp, r4, r3, fp
90010102:	4658      	mov	r0, fp
90010104:	f7ff ff9c 	bl	90010040 <_ZN8touchgfx16TouchCalibration4clzuEm>
90010108:	ab05      	add	r3, sp, #20
9001010a:	465a      	mov	r2, fp
9001010c:	e9cd 4300 	strd	r4, r3, [sp]
90010110:	4603      	mov	r3, r0
90010112:	4650      	mov	r0, sl
90010114:	f7ff ffb2 	bl	9001007c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90010118:	6839      	ldr	r1, [r7, #0]
9001011a:	9a05      	ldr	r2, [sp, #20]
9001011c:	9b03      	ldr	r3, [sp, #12]
9001011e:	4411      	add	r1, r2
90010120:	fbb1 f2f4 	udiv	r2, r1, r4
90010124:	18d3      	adds	r3, r2, r3
90010126:	fb04 1412 	mls	r4, r4, r2, r1
9001012a:	441e      	add	r6, r3
9001012c:	603c      	str	r4, [r7, #0]
9001012e:	4430      	add	r0, r6
90010130:	e7b6      	b.n	900100a0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

90010132 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90010132:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010136:	b085      	sub	sp, #20
90010138:	f1b0 0900 	subs.w	r9, r0, #0
9001013c:	461d      	mov	r5, r3
9001013e:	4617      	mov	r7, r2
90010140:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90010142:	bfbb      	ittet	lt
90010144:	f1c9 0900 	rsblt	r9, r9, #0
90010148:	f04f 36ff 	movlt.w	r6, #4294967295
9001014c:	2601      	movge	r6, #1
9001014e:	6823      	ldrlt	r3, [r4, #0]
90010150:	bfbc      	itt	lt
90010152:	425b      	neglt	r3, r3
90010154:	6023      	strlt	r3, [r4, #0]
90010156:	2a00      	cmp	r2, #0
90010158:	da04      	bge.n	90010164 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
9001015a:	6823      	ldr	r3, [r4, #0]
9001015c:	4257      	negs	r7, r2
9001015e:	4276      	negs	r6, r6
90010160:	425b      	negs	r3, r3
90010162:	6023      	str	r3, [r4, #0]
90010164:	2d00      	cmp	r5, #0
90010166:	4638      	mov	r0, r7
90010168:	bfba      	itte	lt
9001016a:	426d      	neglt	r5, r5
9001016c:	f04f 38ff 	movlt.w	r8, #4294967295
90010170:	f04f 0801 	movge.w	r8, #1
90010174:	f7ff ff64 	bl	90010040 <_ZN8touchgfx16TouchCalibration4clzuEm>
90010178:	ab03      	add	r3, sp, #12
9001017a:	463a      	mov	r2, r7
9001017c:	e9cd 5300 	strd	r5, r3, [sp]
90010180:	4603      	mov	r3, r0
90010182:	4648      	mov	r0, r9
90010184:	f7ff ff7a 	bl	9001007c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90010188:	6823      	ldr	r3, [r4, #0]
9001018a:	9a03      	ldr	r2, [sp, #12]
9001018c:	4546      	cmp	r6, r8
9001018e:	441a      	add	r2, r3
90010190:	fb92 f3f5 	sdiv	r3, r2, r5
90010194:	4418      	add	r0, r3
90010196:	fb05 2313 	mls	r3, r5, r3, r2
9001019a:	bf18      	it	ne
9001019c:	4240      	negne	r0, r0
9001019e:	1c72      	adds	r2, r6, #1
900101a0:	6023      	str	r3, [r4, #0]
900101a2:	d105      	bne.n	900101b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
900101a4:	2b00      	cmp	r3, #0
900101a6:	f1c3 0200 	rsb	r2, r3, #0
900101aa:	db0b      	blt.n	900101c4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
900101ac:	6022      	str	r2, [r4, #0]
900101ae:	e006      	b.n	900101be <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
900101b0:	2e01      	cmp	r6, #1
900101b2:	d104      	bne.n	900101be <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
900101b4:	2b00      	cmp	r3, #0
900101b6:	da02      	bge.n	900101be <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
900101b8:	442b      	add	r3, r5
900101ba:	3801      	subs	r0, #1
900101bc:	6023      	str	r3, [r4, #0]
900101be:	b005      	add	sp, #20
900101c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900101c4:	3801      	subs	r0, #1
900101c6:	1b52      	subs	r2, r2, r5
900101c8:	e7f0      	b.n	900101ac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

900101cc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
900101cc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
900101d0:	4c1c      	ldr	r4, [pc, #112]	; (90010244 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
900101d2:	4605      	mov	r5, r0
900101d4:	6807      	ldr	r7, [r0, #0]
900101d6:	69a3      	ldr	r3, [r4, #24]
900101d8:	b92b      	cbnz	r3, 900101e6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
900101da:	6840      	ldr	r0, [r0, #4]
900101dc:	e9c5 7000 	strd	r7, r0, [r5]
900101e0:	b004      	add	sp, #16
900101e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900101e6:	f04f 0802 	mov.w	r8, #2
900101ea:	68a2      	ldr	r2, [r4, #8]
900101ec:	ae04      	add	r6, sp, #16
900101ee:	6820      	ldr	r0, [r4, #0]
900101f0:	fb93 f1f8 	sdiv	r1, r3, r8
900101f4:	440a      	add	r2, r1
900101f6:	69e1      	ldr	r1, [r4, #28]
900101f8:	f846 2d04 	str.w	r2, [r6, #-4]!
900101fc:	463a      	mov	r2, r7
900101fe:	9600      	str	r6, [sp, #0]
90010200:	f7ff ff97 	bl	90010132 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90010204:	69a3      	ldr	r3, [r4, #24]
90010206:	4607      	mov	r7, r0
90010208:	686a      	ldr	r2, [r5, #4]
9001020a:	6a21      	ldr	r1, [r4, #32]
9001020c:	9600      	str	r6, [sp, #0]
9001020e:	6860      	ldr	r0, [r4, #4]
90010210:	f7ff ff8f 	bl	90010132 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90010214:	69a3      	ldr	r3, [r4, #24]
90010216:	6962      	ldr	r2, [r4, #20]
90010218:	4407      	add	r7, r0
9001021a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9001021c:	9600      	str	r6, [sp, #0]
9001021e:	68e0      	ldr	r0, [r4, #12]
90010220:	fb93 f8f8 	sdiv	r8, r3, r8
90010224:	4442      	add	r2, r8
90010226:	9203      	str	r2, [sp, #12]
90010228:	682a      	ldr	r2, [r5, #0]
9001022a:	f7ff ff82 	bl	90010132 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001022e:	4680      	mov	r8, r0
90010230:	9600      	str	r6, [sp, #0]
90010232:	69a3      	ldr	r3, [r4, #24]
90010234:	686a      	ldr	r2, [r5, #4]
90010236:	6aa1      	ldr	r1, [r4, #40]	; 0x28
90010238:	6920      	ldr	r0, [r4, #16]
9001023a:	f7ff ff7a 	bl	90010132 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001023e:	4440      	add	r0, r8
90010240:	e7cc      	b.n	900101dc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90010242:	bf00      	nop
90010244:	24012aec 	.word	0x24012aec

90010248 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90010248:	4b07      	ldr	r3, [pc, #28]	; (90010268 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
9001024a:	b510      	push	{r4, lr}
9001024c:	781b      	ldrb	r3, [r3, #0]
9001024e:	2b01      	cmp	r3, #1
90010250:	d108      	bne.n	90010264 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90010252:	4b06      	ldr	r3, [pc, #24]	; (9001026c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90010254:	880c      	ldrh	r4, [r1, #0]
90010256:	881b      	ldrh	r3, [r3, #0]
90010258:	f9b0 2000 	ldrsh.w	r2, [r0]
9001025c:	3b01      	subs	r3, #1
9001025e:	1b1b      	subs	r3, r3, r4
90010260:	8003      	strh	r3, [r0, #0]
90010262:	800a      	strh	r2, [r1, #0]
90010264:	bd10      	pop	{r4, pc}
90010266:	bf00      	nop
90010268:	24012ad8 	.word	0x24012ad8
9001026c:	24012adc 	.word	0x24012adc

90010270 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90010270:	4b0a      	ldr	r3, [pc, #40]	; (9001029c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90010272:	b510      	push	{r4, lr}
90010274:	781b      	ldrb	r3, [r3, #0]
90010276:	2b01      	cmp	r3, #1
90010278:	d10e      	bne.n	90010298 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
9001027a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
9001027e:	8843      	ldrh	r3, [r0, #2]
90010280:	f9b0 4000 	ldrsh.w	r4, [r0]
90010284:	18ca      	adds	r2, r1, r3
90010286:	4b06      	ldr	r3, [pc, #24]	; (900102a0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90010288:	8044      	strh	r4, [r0, #2]
9001028a:	881b      	ldrh	r3, [r3, #0]
9001028c:	1a9b      	subs	r3, r3, r2
9001028e:	8003      	strh	r3, [r0, #0]
90010290:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90010294:	8081      	strh	r1, [r0, #4]
90010296:	80c3      	strh	r3, [r0, #6]
90010298:	bd10      	pop	{r4, pc}
9001029a:	bf00      	nop
9001029c:	24012ad8 	.word	0x24012ad8
900102a0:	24012ad4 	.word	0x24012ad4

900102a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
900102a4:	4b07      	ldr	r3, [pc, #28]	; (900102c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
900102a6:	b510      	push	{r4, lr}
900102a8:	781b      	ldrb	r3, [r3, #0]
900102aa:	2b01      	cmp	r3, #1
900102ac:	d108      	bne.n	900102c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
900102ae:	f9b1 3000 	ldrsh.w	r3, [r1]
900102b2:	f9b0 4000 	ldrsh.w	r4, [r0]
900102b6:	8003      	strh	r3, [r0, #0]
900102b8:	8893      	ldrh	r3, [r2, #4]
900102ba:	3b01      	subs	r3, #1
900102bc:	1b1b      	subs	r3, r3, r4
900102be:	800b      	strh	r3, [r1, #0]
900102c0:	bd10      	pop	{r4, pc}
900102c2:	bf00      	nop
900102c4:	24012ad8 	.word	0x24012ad8

900102c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
900102c8:	4b08      	ldr	r3, [pc, #32]	; (900102ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
900102ca:	b513      	push	{r0, r1, r4, lr}
900102cc:	f9b3 2000 	ldrsh.w	r2, [r3]
900102d0:	2400      	movs	r4, #0
900102d2:	4b07      	ldr	r3, [pc, #28]	; (900102f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
900102d4:	f8ad 2004 	strh.w	r2, [sp, #4]
900102d8:	466a      	mov	r2, sp
900102da:	f9b3 3000 	ldrsh.w	r3, [r3]
900102de:	9400      	str	r4, [sp, #0]
900102e0:	f8ad 3006 	strh.w	r3, [sp, #6]
900102e4:	f7ff ffde 	bl	900102a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
900102e8:	b002      	add	sp, #8
900102ea:	bd10      	pop	{r4, pc}
900102ec:	24012ad4 	.word	0x24012ad4
900102f0:	24012ad6 	.word	0x24012ad6

900102f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
900102f4:	4b0a      	ldr	r3, [pc, #40]	; (90010320 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
900102f6:	460a      	mov	r2, r1
900102f8:	b510      	push	{r4, lr}
900102fa:	781b      	ldrb	r3, [r3, #0]
900102fc:	2b01      	cmp	r3, #1
900102fe:	d10d      	bne.n	9001031c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90010300:	8881      	ldrh	r1, [r0, #4]
90010302:	8803      	ldrh	r3, [r0, #0]
90010304:	440b      	add	r3, r1
90010306:	4601      	mov	r1, r0
90010308:	3b01      	subs	r3, #1
9001030a:	f821 3b02 	strh.w	r3, [r1], #2
9001030e:	f7ff ffc9 	bl	900102a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90010312:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90010316:	88c2      	ldrh	r2, [r0, #6]
90010318:	80c3      	strh	r3, [r0, #6]
9001031a:	8082      	strh	r2, [r0, #4]
9001031c:	bd10      	pop	{r4, pc}
9001031e:	bf00      	nop
90010320:	24012ad8 	.word	0x24012ad8

90010324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90010324:	4b09      	ldr	r3, [pc, #36]	; (9001034c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90010326:	b507      	push	{r0, r1, r2, lr}
90010328:	2100      	movs	r1, #0
9001032a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001032e:	4b08      	ldr	r3, [pc, #32]	; (90010350 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
90010330:	9100      	str	r1, [sp, #0]
90010332:	4669      	mov	r1, sp
90010334:	f9b3 3000 	ldrsh.w	r3, [r3]
90010338:	f8ad 2004 	strh.w	r2, [sp, #4]
9001033c:	f8ad 3006 	strh.w	r3, [sp, #6]
90010340:	f7ff ffd8 	bl	900102f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90010344:	b003      	add	sp, #12
90010346:	f85d fb04 	ldr.w	pc, [sp], #4
9001034a:	bf00      	nop
9001034c:	24012ad4 	.word	0x24012ad4
90010350:	24012ad6 	.word	0x24012ad6

90010354 <_ZN8touchgfx11Application13requestRedrawEv>:
90010354:	4b06      	ldr	r3, [pc, #24]	; (90010370 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90010356:	2100      	movs	r1, #0
90010358:	f9b3 2000 	ldrsh.w	r2, [r3]
9001035c:	4b05      	ldr	r3, [pc, #20]	; (90010374 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
9001035e:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
90010362:	f9b3 3000 	ldrsh.w	r3, [r3]
90010366:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
9001036a:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
9001036e:	4770      	bx	lr
90010370:	24012ad4 	.word	0x24012ad4
90010374:	24012ad6 	.word	0x24012ad6

90010378 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90010378:	4b03      	ldr	r3, [pc, #12]	; (90010388 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
9001037a:	6818      	ldr	r0, [r3, #0]
9001037c:	b110      	cbz	r0, 90010384 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
9001037e:	6803      	ldr	r3, [r0, #0]
90010380:	699b      	ldr	r3, [r3, #24]
90010382:	4718      	bx	r3
90010384:	4770      	bx	lr
90010386:	bf00      	nop
90010388:	24012b1c 	.word	0x24012b1c

9001038c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
9001038c:	4770      	bx	lr
	...

90010390 <_ZN8touchgfx11Application4drawEv>:
90010390:	4b09      	ldr	r3, [pc, #36]	; (900103b8 <_ZN8touchgfx11Application4drawEv+0x28>)
90010392:	b507      	push	{r0, r1, r2, lr}
90010394:	f9b3 2000 	ldrsh.w	r2, [r3]
90010398:	2100      	movs	r1, #0
9001039a:	4b08      	ldr	r3, [pc, #32]	; (900103bc <_ZN8touchgfx11Application4drawEv+0x2c>)
9001039c:	9100      	str	r1, [sp, #0]
9001039e:	4669      	mov	r1, sp
900103a0:	f9b3 3000 	ldrsh.w	r3, [r3]
900103a4:	f8ad 2004 	strh.w	r2, [sp, #4]
900103a8:	f8ad 3006 	strh.w	r3, [sp, #6]
900103ac:	6803      	ldr	r3, [r0, #0]
900103ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900103b0:	4798      	blx	r3
900103b2:	b003      	add	sp, #12
900103b4:	f85d fb04 	ldr.w	pc, [sp], #4
900103b8:	24012ad4 	.word	0x24012ad4
900103bc:	24012ad6 	.word	0x24012ad6

900103c0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
900103c0:	4b03      	ldr	r3, [pc, #12]	; (900103d0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
900103c2:	6818      	ldr	r0, [r3, #0]
900103c4:	b110      	cbz	r0, 900103cc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
900103c6:	6803      	ldr	r3, [r0, #0]
900103c8:	69db      	ldr	r3, [r3, #28]
900103ca:	4718      	bx	r3
900103cc:	4770      	bx	lr
900103ce:	bf00      	nop
900103d0:	24012b1c 	.word	0x24012b1c

900103d4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
900103d4:	4b03      	ldr	r3, [pc, #12]	; (900103e4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
900103d6:	6818      	ldr	r0, [r3, #0]
900103d8:	b110      	cbz	r0, 900103e0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
900103da:	6803      	ldr	r3, [r0, #0]
900103dc:	6a1b      	ldr	r3, [r3, #32]
900103de:	4718      	bx	r3
900103e0:	4770      	bx	lr
900103e2:	bf00      	nop
900103e4:	24012b1c 	.word	0x24012b1c

900103e8 <_ZN8touchgfx11Application14handleKeyEventEh>:
900103e8:	4b03      	ldr	r3, [pc, #12]	; (900103f8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
900103ea:	6818      	ldr	r0, [r3, #0]
900103ec:	b110      	cbz	r0, 900103f4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
900103ee:	6803      	ldr	r3, [r0, #0]
900103f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900103f2:	4718      	bx	r3
900103f4:	4770      	bx	lr
900103f6:	bf00      	nop
900103f8:	24012b1c 	.word	0x24012b1c

900103fc <_ZN8touchgfx11Application15handleTickEventEv>:
900103fc:	b570      	push	{r4, r5, r6, lr}
900103fe:	4d34      	ldr	r5, [pc, #208]	; (900104d0 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
90010400:	4604      	mov	r4, r0
90010402:	6828      	ldr	r0, [r5, #0]
90010404:	b140      	cbz	r0, 90010418 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90010406:	7a03      	ldrb	r3, [r0, #8]
90010408:	b933      	cbnz	r3, 90010418 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001040a:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
9001040e:	6803      	ldr	r3, [r0, #0]
90010410:	689b      	ldr	r3, [r3, #8]
90010412:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010416:	4718      	bx	r3
90010418:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
9001041c:	b97b      	cbnz	r3, 9001043e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001041e:	b170      	cbz	r0, 9001043e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90010420:	7a03      	ldrb	r3, [r0, #8]
90010422:	b163      	cbz	r3, 9001043e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90010424:	4b2b      	ldr	r3, [pc, #172]	; (900104d4 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
90010426:	6818      	ldr	r0, [r3, #0]
90010428:	b110      	cbz	r0, 90010430 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
9001042a:	6803      	ldr	r3, [r0, #0]
9001042c:	691b      	ldr	r3, [r3, #16]
9001042e:	4798      	blx	r3
90010430:	6828      	ldr	r0, [r5, #0]
90010432:	6803      	ldr	r3, [r0, #0]
90010434:	68db      	ldr	r3, [r3, #12]
90010436:	4798      	blx	r3
90010438:	2301      	movs	r3, #1
9001043a:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
9001043e:	2500      	movs	r5, #0
90010440:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
90010444:	42a8      	cmp	r0, r5
90010446:	dd0c      	ble.n	90010462 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
90010448:	1963      	adds	r3, r4, r5
9001044a:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
9001044e:	b132      	cbz	r2, 9001045e <_ZN8touchgfx11Application15handleTickEventEv+0x62>
90010450:	eb05 0245 	add.w	r2, r5, r5, lsl #1
90010454:	4413      	add	r3, r2
90010456:	6858      	ldr	r0, [r3, #4]
90010458:	6803      	ldr	r3, [r0, #0]
9001045a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001045c:	4798      	blx	r3
9001045e:	3501      	adds	r5, #1
90010460:	e7ee      	b.n	90010440 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
90010462:	2300      	movs	r3, #0
90010464:	461a      	mov	r2, r3
90010466:	4298      	cmp	r0, r3
90010468:	d114      	bne.n	90010494 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
9001046a:	1d25      	adds	r5, r4, #4
9001046c:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
90010470:	1e48      	subs	r0, r1, #1
90010472:	b280      	uxth	r0, r0
90010474:	4291      	cmp	r1, r2
90010476:	dd24      	ble.n	900104c2 <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
90010478:	4288      	cmp	r0, r1
9001047a:	d2fb      	bcs.n	90010474 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
9001047c:	eb04 0380 	add.w	r3, r4, r0, lsl #2
90010480:	eb05 0181 	add.w	r1, r5, r1, lsl #2
90010484:	3304      	adds	r3, #4
90010486:	428b      	cmp	r3, r1
90010488:	d018      	beq.n	900104bc <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
9001048a:	f853 6f04 	ldr.w	r6, [r3, #4]!
9001048e:	f843 6c04 	str.w	r6, [r3, #-4]
90010492:	e7f8      	b.n	90010486 <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
90010494:	18e1      	adds	r1, r4, r3
90010496:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
9001049a:	b16d      	cbz	r5, 900104b8 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
9001049c:	429a      	cmp	r2, r3
9001049e:	d00a      	beq.n	900104b6 <_ZN8touchgfx11Application15handleTickEventEv+0xba>
900104a0:	eb03 0643 	add.w	r6, r3, r3, lsl #1
900104a4:	4431      	add	r1, r6
900104a6:	684e      	ldr	r6, [r1, #4]
900104a8:	b291      	uxth	r1, r2
900104aa:	eb04 0181 	add.w	r1, r4, r1, lsl #2
900104ae:	604e      	str	r6, [r1, #4]
900104b0:	18a1      	adds	r1, r4, r2
900104b2:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
900104b6:	3201      	adds	r2, #1
900104b8:	3301      	adds	r3, #1
900104ba:	e7d4      	b.n	90010466 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
900104bc:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
900104c0:	e7d4      	b.n	9001046c <_ZN8touchgfx11Application15handleTickEventEv+0x70>
900104c2:	4b04      	ldr	r3, [pc, #16]	; (900104d4 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
900104c4:	6818      	ldr	r0, [r3, #0]
900104c6:	b110      	cbz	r0, 900104ce <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
900104c8:	6803      	ldr	r3, [r0, #0]
900104ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900104cc:	e7a1      	b.n	90010412 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
900104ce:	bd70      	pop	{r4, r5, r6, pc}
900104d0:	24012b20 	.word	0x24012b20
900104d4:	24012b1c 	.word	0x24012b1c

900104d8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
900104d8:	b570      	push	{r4, r5, r6, lr}
900104da:	4606      	mov	r6, r0
900104dc:	460c      	mov	r4, r1
900104de:	b929      	cbnz	r1, 900104ec <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
900104e0:	4b0c      	ldr	r3, [pc, #48]	; (90010514 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
900104e2:	2164      	movs	r1, #100	; 0x64
900104e4:	4a0c      	ldr	r2, [pc, #48]	; (90010518 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
900104e6:	480d      	ldr	r0, [pc, #52]	; (9001051c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
900104e8:	f00e fedc 	bl	9001f2a4 <__assert_func>
900104ec:	2300      	movs	r3, #0
900104ee:	4d0c      	ldr	r5, [pc, #48]	; (90010520 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
900104f0:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
900104f4:	6828      	ldr	r0, [r5, #0]
900104f6:	b110      	cbz	r0, 900104fe <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
900104f8:	6803      	ldr	r3, [r0, #0]
900104fa:	695b      	ldr	r3, [r3, #20]
900104fc:	4798      	blx	r3
900104fe:	602c      	str	r4, [r5, #0]
90010500:	4620      	mov	r0, r4
90010502:	6823      	ldr	r3, [r4, #0]
90010504:	68db      	ldr	r3, [r3, #12]
90010506:	4798      	blx	r3
90010508:	6833      	ldr	r3, [r6, #0]
9001050a:	4630      	mov	r0, r6
9001050c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001050e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010512:	4718      	bx	r3
90010514:	90022914 	.word	0x90022914
90010518:	900229e4 	.word	0x900229e4
9001051c:	9002291e 	.word	0x9002291e
90010520:	24012b1c 	.word	0x24012b1c

90010524 <_ZNK8touchgfx4Rect9intersectERKS0_>:
90010524:	b510      	push	{r4, lr}
90010526:	f9b1 4000 	ldrsh.w	r4, [r1]
9001052a:	888a      	ldrh	r2, [r1, #4]
9001052c:	f9b0 3000 	ldrsh.w	r3, [r0]
90010530:	4422      	add	r2, r4
90010532:	b212      	sxth	r2, r2
90010534:	4293      	cmp	r3, r2
90010536:	da15      	bge.n	90010564 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90010538:	8882      	ldrh	r2, [r0, #4]
9001053a:	4413      	add	r3, r2
9001053c:	b21b      	sxth	r3, r3
9001053e:	429c      	cmp	r4, r3
90010540:	da10      	bge.n	90010564 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90010542:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90010546:	88c9      	ldrh	r1, [r1, #6]
90010548:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
9001054c:	4419      	add	r1, r3
9001054e:	b209      	sxth	r1, r1
90010550:	428a      	cmp	r2, r1
90010552:	da07      	bge.n	90010564 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90010554:	88c0      	ldrh	r0, [r0, #6]
90010556:	4410      	add	r0, r2
90010558:	b200      	sxth	r0, r0
9001055a:	4283      	cmp	r3, r0
9001055c:	bfac      	ite	ge
9001055e:	2000      	movge	r0, #0
90010560:	2001      	movlt	r0, #1
90010562:	bd10      	pop	{r4, pc}
90010564:	2000      	movs	r0, #0
90010566:	e7fc      	b.n	90010562 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90010568 <_ZNK8touchgfx4Rect8includesERKS0_>:
90010568:	b570      	push	{r4, r5, r6, lr}
9001056a:	f9b1 4000 	ldrsh.w	r4, [r1]
9001056e:	f9b0 5000 	ldrsh.w	r5, [r0]
90010572:	42ac      	cmp	r4, r5
90010574:	db18      	blt.n	900105a8 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
90010576:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
9001057a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9001057e:	429a      	cmp	r2, r3
90010580:	db12      	blt.n	900105a8 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
90010582:	8886      	ldrh	r6, [r0, #4]
90010584:	4435      	add	r5, r6
90010586:	888e      	ldrh	r6, [r1, #4]
90010588:	4434      	add	r4, r6
9001058a:	b22d      	sxth	r5, r5
9001058c:	b224      	sxth	r4, r4
9001058e:	42a5      	cmp	r5, r4
90010590:	db0a      	blt.n	900105a8 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
90010592:	88c0      	ldrh	r0, [r0, #6]
90010594:	4418      	add	r0, r3
90010596:	88cb      	ldrh	r3, [r1, #6]
90010598:	441a      	add	r2, r3
9001059a:	b200      	sxth	r0, r0
9001059c:	b212      	sxth	r2, r2
9001059e:	4290      	cmp	r0, r2
900105a0:	bfb4      	ite	lt
900105a2:	2000      	movlt	r0, #0
900105a4:	2001      	movge	r0, #1
900105a6:	bd70      	pop	{r4, r5, r6, pc}
900105a8:	2000      	movs	r0, #0
900105aa:	e7fc      	b.n	900105a6 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

900105ac <_ZN8touchgfx4Rect11expandToFitERKS0_>:
900105ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900105ae:	4604      	mov	r4, r0
900105b0:	4608      	mov	r0, r1
900105b2:	460d      	mov	r5, r1
900105b4:	f7fc ff91 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
900105b8:	b978      	cbnz	r0, 900105da <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
900105ba:	4620      	mov	r0, r4
900105bc:	f7fc ff8d 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
900105c0:	f9b5 6000 	ldrsh.w	r6, [r5]
900105c4:	b150      	cbz	r0, 900105dc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
900105c6:	8026      	strh	r6, [r4, #0]
900105c8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
900105cc:	8063      	strh	r3, [r4, #2]
900105ce:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
900105d2:	80a3      	strh	r3, [r4, #4]
900105d4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
900105d8:	80e3      	strh	r3, [r4, #6]
900105da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900105dc:	f9b4 1000 	ldrsh.w	r1, [r4]
900105e0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900105e4:	42b1      	cmp	r1, r6
900105e6:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
900105ea:	f8b5 c004 	ldrh.w	ip, [r5, #4]
900105ee:	460f      	mov	r7, r1
900105f0:	88ed      	ldrh	r5, [r5, #6]
900105f2:	bfa8      	it	ge
900105f4:	4637      	movge	r7, r6
900105f6:	4293      	cmp	r3, r2
900105f8:	4618      	mov	r0, r3
900105fa:	4466      	add	r6, ip
900105fc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90010600:	bfa8      	it	ge
90010602:	4610      	movge	r0, r2
90010604:	442a      	add	r2, r5
90010606:	88e5      	ldrh	r5, [r4, #6]
90010608:	4461      	add	r1, ip
9001060a:	b236      	sxth	r6, r6
9001060c:	8027      	strh	r7, [r4, #0]
9001060e:	442b      	add	r3, r5
90010610:	b209      	sxth	r1, r1
90010612:	b212      	sxth	r2, r2
90010614:	8060      	strh	r0, [r4, #2]
90010616:	b21b      	sxth	r3, r3
90010618:	428e      	cmp	r6, r1
9001061a:	bfac      	ite	ge
9001061c:	ebc7 0106 	rsbge	r1, r7, r6
90010620:	ebc7 0101 	rsblt	r1, r7, r1
90010624:	429a      	cmp	r2, r3
90010626:	bfac      	ite	ge
90010628:	ebc0 0202 	rsbge	r2, r0, r2
9001062c:	ebc0 0203 	rsblt	r2, r0, r3
90010630:	80a1      	strh	r1, [r4, #4]
90010632:	80e2      	strh	r2, [r4, #6]
90010634:	e7d1      	b.n	900105da <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90010638 <_ZN8touchgfx11Application11getInstanceEv>:
90010638:	4b01      	ldr	r3, [pc, #4]	; (90010640 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
9001063a:	6818      	ldr	r0, [r3, #0]
9001063c:	4770      	bx	lr
9001063e:	bf00      	nop
90010640:	24012b2c 	.word	0x24012b2c

90010644 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
90010644:	2300      	movs	r3, #0
90010646:	f100 0288 	add.w	r2, r0, #136	; 0x88
9001064a:	30a8      	adds	r0, #168	; 0xa8
9001064c:	f820 3c24 	strh.w	r3, [r0, #-36]
90010650:	f802 3b01 	strb.w	r3, [r2], #1
90010654:	4282      	cmp	r2, r0
90010656:	d1fb      	bne.n	90010650 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
90010658:	4770      	bx	lr

9001065a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
9001065a:	4603      	mov	r3, r0
9001065c:	f100 0140 	add.w	r1, r0, #64	; 0x40
90010660:	2200      	movs	r2, #0
90010662:	801a      	strh	r2, [r3, #0]
90010664:	3308      	adds	r3, #8
90010666:	f823 2c06 	strh.w	r2, [r3, #-6]
9001066a:	f823 2c04 	strh.w	r2, [r3, #-4]
9001066e:	f823 2c02 	strh.w	r2, [r3, #-2]
90010672:	428b      	cmp	r3, r1
90010674:	d1f5      	bne.n	90010662 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90010676:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
9001067a:	4770      	bx	lr

9001067c <_ZN8touchgfx11ApplicationC1Ev>:
9001067c:	b570      	push	{r4, r5, r6, lr}
9001067e:	4b1a      	ldr	r3, [pc, #104]	; (900106e8 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
90010680:	2500      	movs	r5, #0
90010682:	4604      	mov	r4, r0
90010684:	30a8      	adds	r0, #168	; 0xa8
90010686:	f840 3ca8 	str.w	r3, [r0, #-168]
9001068a:	f820 5c24 	strh.w	r5, [r0, #-36]
9001068e:	f7ff ffe4 	bl	9001065a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90010692:	f104 00ea 	add.w	r0, r4, #234	; 0xea
90010696:	f7ff ffe0 	bl	9001065a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001069a:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
9001069e:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
900106a2:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
900106a6:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
900106aa:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
900106ae:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
900106b2:	490e      	ldr	r1, [pc, #56]	; (900106ec <_ZN8touchgfx11ApplicationC1Ev+0x70>)
900106b4:	480e      	ldr	r0, [pc, #56]	; (900106f0 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
900106b6:	f00e fcbf 	bl	9001f038 <CRC_Lock>
900106ba:	4e0e      	ldr	r6, [pc, #56]	; (900106f4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
900106bc:	4b0e      	ldr	r3, [pc, #56]	; (900106f8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900106be:	b158      	cbz	r0, 900106d8 <_ZN8touchgfx11ApplicationC1Ev+0x5c>
900106c0:	801d      	strh	r5, [r3, #0]
900106c2:	2300      	movs	r3, #0
900106c4:	4a0d      	ldr	r2, [pc, #52]	; (900106fc <_ZN8touchgfx11ApplicationC1Ev+0x80>)
900106c6:	4620      	mov	r0, r4
900106c8:	6013      	str	r3, [r2, #0]
900106ca:	4a0d      	ldr	r2, [pc, #52]	; (90010700 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
900106cc:	6033      	str	r3, [r6, #0]
900106ce:	6013      	str	r3, [r2, #0]
900106d0:	f7ff ffb8 	bl	90010644 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
900106d4:	4620      	mov	r0, r4
900106d6:	bd70      	pop	{r4, r5, r6, pc}
900106d8:	f44f 6280 	mov.w	r2, #1024	; 0x400
900106dc:	2002      	movs	r0, #2
900106de:	801a      	strh	r2, [r3, #0]
900106e0:	6030      	str	r0, [r6, #0]
900106e2:	f001 fa7f 	bl	90011be4 <_ZN8touchgfx6Screen4drawEv>
900106e6:	e7ec      	b.n	900106c2 <_ZN8touchgfx11ApplicationC1Ev+0x46>
900106e8:	900229a8 	.word	0x900229a8
900106ec:	b5e8b5cd 	.word	0xb5e8b5cd
900106f0:	f407a5c2 	.word	0xf407a5c2
900106f4:	24012b1c 	.word	0x24012b1c
900106f8:	24000050 	.word	0x24000050
900106fc:	24012b2c 	.word	0x24012b2c
90010700:	24012b20 	.word	0x24012b20

90010704 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90010704:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
90010708:	428b      	cmp	r3, r1
9001070a:	b510      	push	{r4, lr}
9001070c:	d90e      	bls.n	9001072c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
9001070e:	3b01      	subs	r3, #1
90010710:	b29b      	uxth	r3, r3
90010712:	428b      	cmp	r3, r1
90010714:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
90010718:	d908      	bls.n	9001072c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
9001071a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001071e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90010722:	681a      	ldr	r2, [r3, #0]
90010724:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90010728:	685a      	ldr	r2, [r3, #4]
9001072a:	6062      	str	r2, [r4, #4]
9001072c:	bd10      	pop	{r4, pc}
	...

90010730 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
90010730:	b537      	push	{r0, r1, r2, r4, r5, lr}
90010732:	466b      	mov	r3, sp
90010734:	4604      	mov	r4, r0
90010736:	e883 0006 	stmia.w	r3, {r1, r2}
9001073a:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
9001073e:	2a07      	cmp	r2, #7
90010740:	d906      	bls.n	90010750 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
90010742:	4b09      	ldr	r3, [pc, #36]	; (90010768 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
90010744:	f240 118f 	movw	r1, #399	; 0x18f
90010748:	4a08      	ldr	r2, [pc, #32]	; (9001076c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
9001074a:	4809      	ldr	r0, [pc, #36]	; (90010770 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
9001074c:	f00e fdaa 	bl	9001f2a4 <__assert_func>
90010750:	1c51      	adds	r1, r2, #1
90010752:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
90010756:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
9001075a:	cb03      	ldmia	r3!, {r0, r1}
9001075c:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
90010760:	6069      	str	r1, [r5, #4]
90010762:	b003      	add	sp, #12
90010764:	bd30      	pop	{r4, r5, pc}
90010766:	bf00      	nop
90010768:	90022948 	.word	0x90022948
9001076c:	90022a28 	.word	0x90022a28
90010770:	90022977 	.word	0x90022977

90010774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90010774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010778:	b08d      	sub	sp, #52	; 0x34
9001077a:	4683      	mov	fp, r0
9001077c:	ac08      	add	r4, sp, #32
9001077e:	4620      	mov	r0, r4
90010780:	e884 0006 	stmia.w	r4, {r1, r2}
90010784:	f7fc fea9 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
90010788:	2800      	cmp	r0, #0
9001078a:	d16a      	bne.n	90010862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
9001078c:	9402      	str	r4, [sp, #8]
9001078e:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
90010792:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
90010796:	2400      	movs	r4, #0
90010798:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
9001079c:	9301      	str	r3, [sp, #4]
9001079e:	36a0      	adds	r6, #160	; 0xa0
900107a0:	42a5      	cmp	r5, r4
900107a2:	d00d      	beq.n	900107c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
900107a4:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
900107a8:	9802      	ldr	r0, [sp, #8]
900107aa:	f7ff fedd 	bl	90010568 <_ZNK8touchgfx4Rect8includesERKS0_>
900107ae:	b128      	cbz	r0, 900107bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
900107b0:	1e69      	subs	r1, r5, #1
900107b2:	9801      	ldr	r0, [sp, #4]
900107b4:	1b09      	subs	r1, r1, r4
900107b6:	b289      	uxth	r1, r1
900107b8:	f7ff ffa4 	bl	90010704 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900107bc:	3401      	adds	r4, #1
900107be:	e7ef      	b.n	900107a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900107c0:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
900107c4:	1e7b      	subs	r3, r7, #1
900107c6:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
900107ca:	9703      	str	r7, [sp, #12]
900107cc:	9300      	str	r3, [sp, #0]
900107ce:	2400      	movs	r4, #0
900107d0:	4655      	mov	r5, sl
900107d2:	9704      	str	r7, [sp, #16]
900107d4:	4626      	mov	r6, r4
900107d6:	9b04      	ldr	r3, [sp, #16]
900107d8:	2b00      	cmp	r3, #0
900107da:	d078      	beq.n	900108ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
900107dc:	9902      	ldr	r1, [sp, #8]
900107de:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
900107e2:	f7ff fe9f 	bl	90010524 <_ZNK8touchgfx4Rect9intersectERKS0_>
900107e6:	b360      	cbz	r0, 90010842 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
900107e8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
900107ec:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
900107f0:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
900107f4:	45e6      	cmp	lr, ip
900107f6:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
900107fa:	db35      	blt.n	90010868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
900107fc:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
90010800:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
90010804:	4472      	add	r2, lr
90010806:	4463      	add	r3, ip
90010808:	b212      	sxth	r2, r2
9001080a:	b21b      	sxth	r3, r3
9001080c:	429a      	cmp	r2, r3
9001080e:	dc2b      	bgt.n	90010868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
90010810:	fa1f f288 	uxth.w	r2, r8
90010814:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
90010818:	45c1      	cmp	r9, r8
9001081a:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
9001081e:	4413      	add	r3, r2
90010820:	fa1f fc89 	uxth.w	ip, r9
90010824:	b29b      	uxth	r3, r3
90010826:	fa0f fe83 	sxth.w	lr, r3
9001082a:	db0f      	blt.n	9001084c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
9001082c:	eba3 030c 	sub.w	r3, r3, ip
90010830:	1ac9      	subs	r1, r1, r3
90010832:	b209      	sxth	r1, r1
90010834:	2900      	cmp	r1, #0
90010836:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
9001083a:	dd12      	ble.n	90010862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
9001083c:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
90010840:	4604      	mov	r4, r0
90010842:	9b04      	ldr	r3, [sp, #16]
90010844:	3d08      	subs	r5, #8
90010846:	3b01      	subs	r3, #1
90010848:	9304      	str	r3, [sp, #16]
9001084a:	e7c4      	b.n	900107d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
9001084c:	4461      	add	r1, ip
9001084e:	b209      	sxth	r1, r1
90010850:	4571      	cmp	r1, lr
90010852:	dc3a      	bgt.n	900108ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
90010854:	eba2 020c 	sub.w	r2, r2, ip
90010858:	b212      	sxth	r2, r2
9001085a:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
9001085e:	2a00      	cmp	r2, #0
90010860:	dcee      	bgt.n	90010840 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
90010862:	b00d      	add	sp, #52	; 0x34
90010864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010868:	45c1      	cmp	r9, r8
9001086a:	db2e      	blt.n	900108ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
9001086c:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
90010870:	4499      	add	r9, r3
90010872:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
90010876:	4498      	add	r8, r3
90010878:	fa0f f989 	sxth.w	r9, r9
9001087c:	fa0f f888 	sxth.w	r8, r8
90010880:	45c1      	cmp	r9, r8
90010882:	dc22      	bgt.n	900108ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
90010884:	fa1f f28c 	uxth.w	r2, ip
90010888:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
9001088c:	45e6      	cmp	lr, ip
9001088e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
90010892:	4413      	add	r3, r2
90010894:	fa1f f88e 	uxth.w	r8, lr
90010898:	b29b      	uxth	r3, r3
9001089a:	fa0f f983 	sxth.w	r9, r3
9001089e:	db0a      	blt.n	900108b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
900108a0:	eba3 0308 	sub.w	r3, r3, r8
900108a4:	1ac9      	subs	r1, r1, r3
900108a6:	b209      	sxth	r1, r1
900108a8:	2900      	cmp	r1, #0
900108aa:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
900108ae:	ddd8      	ble.n	90010862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
900108b0:	f8ad 9020 	strh.w	r9, [sp, #32]
900108b4:	e7c4      	b.n	90010840 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
900108b6:	4441      	add	r1, r8
900108b8:	b209      	sxth	r1, r1
900108ba:	4549      	cmp	r1, r9
900108bc:	dc05      	bgt.n	900108ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
900108be:	eba2 0208 	sub.w	r2, r2, r8
900108c2:	b212      	sxth	r2, r2
900108c4:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
900108c8:	e7c9      	b.n	9001085e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
900108ca:	4606      	mov	r6, r0
900108cc:	e7b9      	b.n	90010842 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
900108ce:	2c00      	cmp	r4, #0
900108d0:	f47f af7d 	bne.w	900107ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
900108d4:	2e00      	cmp	r6, #0
900108d6:	f000 81dc 	beq.w	90010c92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x51e>
900108da:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
900108de:	4655      	mov	r5, sl
900108e0:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
900108e4:	b2b9      	uxth	r1, r7
900108e6:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
900108ea:	b2b3      	uxth	r3, r6
900108ec:	9104      	str	r1, [sp, #16]
900108ee:	9804      	ldr	r0, [sp, #16]
900108f0:	441a      	add	r2, r3
900108f2:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
900108f6:	b292      	uxth	r2, r2
900108f8:	4401      	add	r1, r0
900108fa:	fa0f f882 	sxth.w	r8, r2
900108fe:	b289      	uxth	r1, r1
90010900:	9105      	str	r1, [sp, #20]
90010902:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
90010906:	e9cd 2306 	strd	r2, r3, [sp, #24]
9001090a:	9b03      	ldr	r3, [sp, #12]
9001090c:	2b00      	cmp	r3, #0
9001090e:	d054      	beq.n	900109ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
90010910:	9902      	ldr	r1, [sp, #8]
90010912:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
90010916:	f7ff fe05 	bl	90010524 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001091a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
9001091e:	b1d8      	cbz	r0, 90010958 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
90010920:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
90010924:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
90010928:	4576      	cmp	r6, lr
9001092a:	dc26      	bgt.n	9001097a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001092c:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
90010930:	44f4      	add	ip, lr
90010932:	fa0f fc8c 	sxth.w	ip, ip
90010936:	45e0      	cmp	r8, ip
90010938:	db1f      	blt.n	9001097a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001093a:	428f      	cmp	r7, r1
9001093c:	fa1f fc81 	uxth.w	ip, r1
90010940:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
90010944:	dc0f      	bgt.n	90010966 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90010946:	9805      	ldr	r0, [sp, #20]
90010948:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
9001094c:	eba0 0c0c 	sub.w	ip, r0, ip
90010950:	eba1 010c 	sub.w	r1, r1, ip
90010954:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
90010958:	4620      	mov	r0, r4
9001095a:	9903      	ldr	r1, [sp, #12]
9001095c:	3d08      	subs	r5, #8
9001095e:	4604      	mov	r4, r0
90010960:	3901      	subs	r1, #1
90010962:	9103      	str	r1, [sp, #12]
90010964:	e7cf      	b.n	90010906 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
90010966:	4461      	add	r1, ip
90010968:	b209      	sxth	r1, r1
9001096a:	4549      	cmp	r1, r9
9001096c:	dcf5      	bgt.n	9001095a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001096e:	9904      	ldr	r1, [sp, #16]
90010970:	eba1 0c0c 	sub.w	ip, r1, ip
90010974:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
90010978:	e7ee      	b.n	90010958 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
9001097a:	428f      	cmp	r7, r1
9001097c:	dced      	bgt.n	9001095a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001097e:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
90010982:	4461      	add	r1, ip
90010984:	b209      	sxth	r1, r1
90010986:	4589      	cmp	r9, r1
90010988:	dbe7      	blt.n	9001095a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001098a:	4576      	cmp	r6, lr
9001098c:	fa1f fc8e 	uxth.w	ip, lr
90010990:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
90010994:	dc08      	bgt.n	900109a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
90010996:	eba2 0c0c 	sub.w	ip, r2, ip
9001099a:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
9001099e:	eba1 010c 	sub.w	r1, r1, ip
900109a2:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
900109a6:	e7d7      	b.n	90010958 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
900109a8:	4461      	add	r1, ip
900109aa:	b209      	sxth	r1, r1
900109ac:	4588      	cmp	r8, r1
900109ae:	dbd4      	blt.n	9001095a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900109b0:	eba3 0c0c 	sub.w	ip, r3, ip
900109b4:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
900109b8:	e7ce      	b.n	90010958 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
900109ba:	2c00      	cmp	r4, #0
900109bc:	f000 8169 	beq.w	90010c92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x51e>
900109c0:	9b00      	ldr	r3, [sp, #0]
900109c2:	3301      	adds	r3, #1
900109c4:	f000 8165 	beq.w	90010c92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x51e>
900109c8:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
900109cc:	9802      	ldr	r0, [sp, #8]
900109ce:	4621      	mov	r1, r4
900109d0:	f7ff fdca 	bl	90010568 <_ZNK8touchgfx4Rect8includesERKS0_>
900109d4:	b120      	cbz	r0, 900109e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
900109d6:	f8bd 1000 	ldrh.w	r1, [sp]
900109da:	9801      	ldr	r0, [sp, #4]
900109dc:	f7ff fe92 	bl	90010704 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900109e0:	9902      	ldr	r1, [sp, #8]
900109e2:	4620      	mov	r0, r4
900109e4:	f7ff fd9e 	bl	90010524 <_ZNK8touchgfx4Rect9intersectERKS0_>
900109e8:	2800      	cmp	r0, #0
900109ea:	f000 809b 	beq.w	90010b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
900109ee:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900109f2:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
900109f6:	fa1f f288 	uxth.w	r2, r8
900109fa:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
900109fe:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
90010a02:	19d5      	adds	r5, r2, r7
90010a04:	b2a1      	uxth	r1, r4
90010a06:	45a0      	cmp	r8, r4
90010a08:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90010a0c:	fa1f f985 	uxth.w	r9, r5
90010a10:	440b      	add	r3, r1
90010a12:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
90010a16:	fa0f f589 	sxth.w	r5, r9
90010a1a:	b29b      	uxth	r3, r3
90010a1c:	9503      	str	r5, [sp, #12]
90010a1e:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
90010a22:	9507      	str	r5, [sp, #28]
90010a24:	f340 809d 	ble.w	90010b62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90010a28:	1a52      	subs	r2, r2, r1
90010a2a:	4584      	cmp	ip, r0
90010a2c:	fa0f fe83 	sxth.w	lr, r3
90010a30:	b292      	uxth	r2, r2
90010a32:	b215      	sxth	r5, r2
90010a34:	dd2f      	ble.n	90010a96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
90010a36:	9e00      	ldr	r6, [sp, #0]
90010a38:	fa1f fc8c 	uxth.w	ip, ip
90010a3c:	b280      	uxth	r0, r0
90010a3e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
90010a42:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
90010a46:	9e03      	ldr	r6, [sp, #12]
90010a48:	ebac 0300 	sub.w	r3, ip, r0
90010a4c:	448c      	add	ip, r1
90010a4e:	eba6 060e 	sub.w	r6, r6, lr
90010a52:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
90010a56:	b29b      	uxth	r3, r3
90010a58:	4470      	add	r0, lr
90010a5a:	fa0f fc8c 	sxth.w	ip, ip
90010a5e:	b21c      	sxth	r4, r3
90010a60:	b200      	sxth	r0, r0
90010a62:	4366      	muls	r6, r4
90010a64:	ebac 0000 	sub.w	r0, ip, r0
90010a68:	4368      	muls	r0, r5
90010a6a:	4286      	cmp	r6, r0
90010a6c:	db09      	blt.n	90010a82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
90010a6e:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
90010a72:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
90010a76:	4417      	add	r7, r2
90010a78:	f8ad 3020 	strh.w	r3, [sp, #32]
90010a7c:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
90010a80:	e685      	b.n	9001078e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
90010a82:	440b      	add	r3, r1
90010a84:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
90010a88:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90010a8c:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
90010a90:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90010a94:	e67b      	b.n	9001078e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
90010a96:	9e03      	ldr	r6, [sp, #12]
90010a98:	45b6      	cmp	lr, r6
90010a9a:	da28      	bge.n	90010aee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
90010a9c:	9b00      	ldr	r3, [sp, #0]
90010a9e:	eba6 060e 	sub.w	r6, r6, lr
90010aa2:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
90010aa6:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
90010aaa:	eb04 030c 	add.w	r3, r4, ip
90010aae:	fa1f f883 	uxth.w	r8, r3
90010ab2:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
90010ab6:	4403      	add	r3, r0
90010ab8:	fa0f f988 	sxth.w	r9, r8
90010abc:	eba0 000c 	sub.w	r0, r0, ip
90010ac0:	eba3 0308 	sub.w	r3, r3, r8
90010ac4:	4368      	muls	r0, r5
90010ac6:	b29b      	uxth	r3, r3
90010ac8:	fa0f f883 	sxth.w	r8, r3
90010acc:	fb08 f606 	mul.w	r6, r8, r6
90010ad0:	42b0      	cmp	r0, r6
90010ad2:	dc06      	bgt.n	90010ae2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
90010ad4:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
90010ad8:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
90010adc:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
90010ae0:	e7c9      	b.n	90010a76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
90010ae2:	4423      	add	r3, r4
90010ae4:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
90010ae8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90010aec:	e64f      	b.n	9001078e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
90010aee:	eba3 0309 	sub.w	r3, r3, r9
90010af2:	9807      	ldr	r0, [sp, #28]
90010af4:	b29b      	uxth	r3, r3
90010af6:	2806      	cmp	r0, #6
90010af8:	fa0f fc83 	sxth.w	ip, r3
90010afc:	d818      	bhi.n	90010b30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
90010afe:	4652      	mov	r2, sl
90010b00:	ab0a      	add	r3, sp, #40	; 0x28
90010b02:	f852 0fa0 	ldr.w	r0, [r2, #160]!
90010b06:	6851      	ldr	r1, [r2, #4]
90010b08:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
90010b0c:	c303      	stmia	r3!, {r0, r1}
90010b0e:	9b03      	ldr	r3, [sp, #12]
90010b10:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
90010b14:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
90010b18:	ab0a      	add	r3, sp, #40	; 0x28
90010b1a:	9801      	ldr	r0, [sp, #4]
90010b1c:	e893 0006 	ldmia.w	r3, {r1, r2}
90010b20:	f7ff fe06 	bl	90010730 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
90010b24:	9b00      	ldr	r3, [sp, #0]
90010b26:	f1aa 0a08 	sub.w	sl, sl, #8
90010b2a:	3b01      	subs	r3, #1
90010b2c:	9300      	str	r3, [sp, #0]
90010b2e:	e747      	b.n	900109c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90010b30:	9800      	ldr	r0, [sp, #0]
90010b32:	45ac      	cmp	ip, r5
90010b34:	ea4f 00c0 	mov.w	r0, r0, lsl #3
90010b38:	db0c      	blt.n	90010b54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
90010b3a:	4417      	add	r7, r2
90010b3c:	4458      	add	r0, fp
90010b3e:	f8ad 4020 	strh.w	r4, [sp, #32]
90010b42:	b2bf      	uxth	r7, r7
90010b44:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
90010b48:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
90010b4c:	440f      	add	r7, r1
90010b4e:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
90010b52:	e61c      	b.n	9001078e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
90010b54:	4458      	add	r0, fp
90010b56:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
90010b5a:	443b      	add	r3, r7
90010b5c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90010b60:	e615      	b.n	9001078e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
90010b62:	fa1f f18c 	uxth.w	r1, ip
90010b66:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
90010b6a:	b282      	uxth	r2, r0
90010b6c:	4584      	cmp	ip, r0
90010b6e:	eb01 0e05 	add.w	lr, r1, r5
90010b72:	9204      	str	r2, [sp, #16]
90010b74:	fa1f fe8e 	uxth.w	lr, lr
90010b78:	9e04      	ldr	r6, [sp, #16]
90010b7a:	fa0f f28e 	sxth.w	r2, lr
90010b7e:	9205      	str	r2, [sp, #20]
90010b80:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
90010b84:	4432      	add	r2, r6
90010b86:	b292      	uxth	r2, r2
90010b88:	9206      	str	r2, [sp, #24]
90010b8a:	da26      	bge.n	90010bda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
90010b8c:	eba3 0309 	sub.w	r3, r3, r9
90010b90:	eba2 020e 	sub.w	r2, r2, lr
90010b94:	eba0 000c 	sub.w	r0, r0, ip
90010b98:	eba4 0408 	sub.w	r4, r4, r8
90010b9c:	b29b      	uxth	r3, r3
90010b9e:	b292      	uxth	r2, r2
90010ba0:	fa0f fa83 	sxth.w	sl, r3
90010ba4:	b211      	sxth	r1, r2
90010ba6:	fb0a f000 	mul.w	r0, sl, r0
90010baa:	434c      	muls	r4, r1
90010bac:	42a0      	cmp	r0, r4
90010bae:	9800      	ldr	r0, [sp, #0]
90010bb0:	ea4f 00c0 	mov.w	r0, r0, lsl #3
90010bb4:	dc06      	bgt.n	90010bc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
90010bb6:	4458      	add	r0, fp
90010bb8:	9a05      	ldr	r2, [sp, #20]
90010bba:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
90010bbe:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
90010bc2:	e7ca      	b.n	90010b5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
90010bc4:	eb0b 0300 	add.w	r3, fp, r0
90010bc8:	9903      	ldr	r1, [sp, #12]
90010bca:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
90010bce:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
90010bd2:	442a      	add	r2, r5
90010bd4:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
90010bd8:	e5d9      	b.n	9001078e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
90010bda:	9e04      	ldr	r6, [sp, #16]
90010bdc:	9a03      	ldr	r2, [sp, #12]
90010bde:	1b89      	subs	r1, r1, r6
90010be0:	b21e      	sxth	r6, r3
90010be2:	b289      	uxth	r1, r1
90010be4:	4296      	cmp	r6, r2
90010be6:	fa0f fc81 	sxth.w	ip, r1
90010bea:	dd25      	ble.n	90010c38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c4>
90010bec:	eba3 0309 	sub.w	r3, r3, r9
90010bf0:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
90010bf4:	9e05      	ldr	r6, [sp, #20]
90010bf6:	eba4 0408 	sub.w	r4, r4, r8
90010bfa:	b29b      	uxth	r3, r3
90010bfc:	eba6 0902 	sub.w	r9, r6, r2
90010c00:	fb0c f404 	mul.w	r4, ip, r4
90010c04:	b218      	sxth	r0, r3
90010c06:	9a00      	ldr	r2, [sp, #0]
90010c08:	fb00 f909 	mul.w	r9, r0, r9
90010c0c:	00d2      	lsls	r2, r2, #3
90010c0e:	454c      	cmp	r4, r9
90010c10:	db03      	blt.n	90010c1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a6>
90010c12:	445a      	add	r2, fp
90010c14:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
90010c18:	e79f      	b.n	90010b5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
90010c1a:	eb0b 0302 	add.w	r3, fp, r2
90010c1e:	9a03      	ldr	r2, [sp, #12]
90010c20:	4429      	add	r1, r5
90010c22:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
90010c26:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
90010c2a:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
90010c2e:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
90010c32:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90010c36:	e5aa      	b.n	9001078e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
90010c38:	9b06      	ldr	r3, [sp, #24]
90010c3a:	9c07      	ldr	r4, [sp, #28]
90010c3c:	eba3 020e 	sub.w	r2, r3, lr
90010c40:	2c06      	cmp	r4, #6
90010c42:	b292      	uxth	r2, r2
90010c44:	b213      	sxth	r3, r2
90010c46:	d80d      	bhi.n	90010c64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f0>
90010c48:	4651      	mov	r1, sl
90010c4a:	aa0a      	add	r2, sp, #40	; 0x28
90010c4c:	f851 0fa0 	ldr.w	r0, [r1, #160]!
90010c50:	6849      	ldr	r1, [r1, #4]
90010c52:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
90010c56:	9b05      	ldr	r3, [sp, #20]
90010c58:	c203      	stmia	r2!, {r0, r1}
90010c5a:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
90010c5e:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
90010c62:	e759      	b.n	90010b18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
90010c64:	9c00      	ldr	r4, [sp, #0]
90010c66:	4563      	cmp	r3, ip
90010c68:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90010c6c:	db0d      	blt.n	90010c8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x516>
90010c6e:	4429      	add	r1, r5
90010c70:	9a04      	ldr	r2, [sp, #16]
90010c72:	445c      	add	r4, fp
90010c74:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90010c78:	b289      	uxth	r1, r1
90010c7a:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
90010c7e:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
90010c82:	4411      	add	r1, r2
90010c84:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
90010c88:	e581      	b.n	9001078e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
90010c8a:	445c      	add	r4, fp
90010c8c:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
90010c90:	e79f      	b.n	90010bd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
90010c92:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
90010c96:	2f07      	cmp	r7, #7
90010c98:	d806      	bhi.n	90010ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
90010c9a:	ab08      	add	r3, sp, #32
90010c9c:	9801      	ldr	r0, [sp, #4]
90010c9e:	e893 0006 	ldmia.w	r3, {r1, r2}
90010ca2:	f7ff fd45 	bl	90010730 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
90010ca6:	e5dc      	b.n	90010862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
90010ca8:	f107 39ff 	add.w	r9, r7, #4294967295
90010cac:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
90010cb0:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
90010cb4:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
90010cb8:	f04f 35ff 	mov.w	r5, #4294967295
90010cbc:	2400      	movs	r4, #0
90010cbe:	9304      	str	r3, [sp, #16]
90010cc0:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
90010cc4:	f109 32ff 	add.w	r2, r9, #4294967295
90010cc8:	9300      	str	r3, [sp, #0]
90010cca:	4690      	mov	r8, r2
90010ccc:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
90010cd0:	9303      	str	r3, [sp, #12]
90010cd2:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
90010cd6:	f1b8 3fff 	cmp.w	r8, #4294967295
90010cda:	6818      	ldr	r0, [r3, #0]
90010cdc:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
90010ce0:	9206      	str	r2, [sp, #24]
90010ce2:	bf16      	itet	ne
90010ce4:	9904      	ldrne	r1, [sp, #16]
90010ce6:	f8dd e008 	ldreq.w	lr, [sp, #8]
90010cea:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
90010cee:	9305      	str	r3, [sp, #20]
90010cf0:	f8be 1006 	ldrh.w	r1, [lr, #6]
90010cf4:	f8be 6004 	ldrh.w	r6, [lr, #4]
90010cf8:	fb16 f601 	smulbb	r6, r6, r1
90010cfc:	6859      	ldr	r1, [r3, #4]
90010cfe:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90010d02:	4671      	mov	r1, lr
90010d04:	a80a      	add	r0, sp, #40	; 0x28
90010d06:	f7ff fc51 	bl	900105ac <_ZN8touchgfx4Rect11expandToFitERKS0_>
90010d0a:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
90010d0e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
90010d12:	9b03      	ldr	r3, [sp, #12]
90010d14:	9a00      	ldr	r2, [sp, #0]
90010d16:	fb11 f100 	smulbb	r1, r1, r0
90010d1a:	2008      	movs	r0, #8
90010d1c:	fb02 6603 	mla	r6, r2, r3, r6
90010d20:	1b8e      	subs	r6, r1, r6
90010d22:	fb91 f1f0 	sdiv	r1, r1, r0
90010d26:	42b1      	cmp	r1, r6
90010d28:	dc21      	bgt.n	90010d6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
90010d2a:	4556      	cmp	r6, sl
90010d2c:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
90010d30:	da03      	bge.n	90010d3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c6>
90010d32:	b1e6      	cbz	r6, 90010d6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
90010d34:	46b2      	mov	sl, r6
90010d36:	4645      	mov	r5, r8
90010d38:	464c      	mov	r4, r9
90010d3a:	f108 38ff 	add.w	r8, r8, #4294967295
90010d3e:	f118 0f02 	cmn.w	r8, #2
90010d42:	d1c8      	bne.n	90010cd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x562>
90010d44:	f1b2 3fff 	cmp.w	r2, #4294967295
90010d48:	f1a7 0708 	sub.w	r7, r7, #8
90010d4c:	4691      	mov	r9, r2
90010d4e:	d1b7      	bne.n	90010cc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
90010d50:	9b01      	ldr	r3, [sp, #4]
90010d52:	b2a6      	uxth	r6, r4
90010d54:	00e4      	lsls	r4, r4, #3
90010d56:	1918      	adds	r0, r3, r4
90010d58:	1c6b      	adds	r3, r5, #1
90010d5a:	d10b      	bne.n	90010d74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x600>
90010d5c:	4601      	mov	r1, r0
90010d5e:	9802      	ldr	r0, [sp, #8]
90010d60:	f7ff fc24 	bl	900105ac <_ZN8touchgfx4Rect11expandToFitERKS0_>
90010d64:	4631      	mov	r1, r6
90010d66:	9801      	ldr	r0, [sp, #4]
90010d68:	f7ff fccc 	bl	90010704 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90010d6c:	e50f      	b.n	9001078e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
90010d6e:	4645      	mov	r5, r8
90010d70:	464c      	mov	r4, r9
90010d72:	e7ed      	b.n	90010d50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5dc>
90010d74:	9b01      	ldr	r3, [sp, #4]
90010d76:	00ed      	lsls	r5, r5, #3
90010d78:	445c      	add	r4, fp
90010d7a:	1959      	adds	r1, r3, r5
90010d7c:	445d      	add	r5, fp
90010d7e:	f7ff fc15 	bl	900105ac <_ZN8touchgfx4Rect11expandToFitERKS0_>
90010d82:	9b02      	ldr	r3, [sp, #8]
90010d84:	cb03      	ldmia	r3!, {r0, r1}
90010d86:	9b02      	ldr	r3, [sp, #8]
90010d88:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
90010d8c:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
90010d90:	f854 0fa8 	ldr.w	r0, [r4, #168]!
90010d94:	6861      	ldr	r1, [r4, #4]
90010d96:	c303      	stmia	r3!, {r0, r1}
90010d98:	e7e4      	b.n	90010d64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f0>
	...

90010d9c <_ZN8touchgfx11Application4drawERNS_4RectE>:
90010d9c:	4b1d      	ldr	r3, [pc, #116]	; (90010e14 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
90010d9e:	b530      	push	{r4, r5, lr}
90010da0:	f9b3 2000 	ldrsh.w	r2, [r3]
90010da4:	b085      	sub	sp, #20
90010da6:	4b1c      	ldr	r3, [pc, #112]	; (90010e18 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
90010da8:	460c      	mov	r4, r1
90010daa:	2100      	movs	r1, #0
90010dac:	4605      	mov	r5, r0
90010dae:	f9b3 3000 	ldrsh.w	r3, [r3]
90010db2:	6820      	ldr	r0, [r4, #0]
90010db4:	9100      	str	r1, [sp, #0]
90010db6:	f8ad 3006 	strh.w	r3, [sp, #6]
90010dba:	ab02      	add	r3, sp, #8
90010dbc:	6861      	ldr	r1, [r4, #4]
90010dbe:	f8ad 2004 	strh.w	r2, [sp, #4]
90010dc2:	c303      	stmia	r3!, {r0, r1}
90010dc4:	4669      	mov	r1, sp
90010dc6:	a802      	add	r0, sp, #8
90010dc8:	f7fc fb44 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
90010dcc:	ab02      	add	r3, sp, #8
90010dce:	cb03      	ldmia	r3!, {r0, r1}
90010dd0:	4b12      	ldr	r3, [pc, #72]	; (90010e1c <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
90010dd2:	6020      	str	r0, [r4, #0]
90010dd4:	6818      	ldr	r0, [r3, #0]
90010dd6:	6061      	str	r1, [r4, #4]
90010dd8:	b138      	cbz	r0, 90010dea <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
90010dda:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
90010dde:	b133      	cbz	r3, 90010dee <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
90010de0:	6821      	ldr	r1, [r4, #0]
90010de2:	4628      	mov	r0, r5
90010de4:	6862      	ldr	r2, [r4, #4]
90010de6:	f7ff fcc5 	bl	90010774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
90010dea:	b005      	add	sp, #20
90010dec:	bd30      	pop	{r4, r5, pc}
90010dee:	6803      	ldr	r3, [r0, #0]
90010df0:	4621      	mov	r1, r4
90010df2:	689b      	ldr	r3, [r3, #8]
90010df4:	4798      	blx	r3
90010df6:	4b0a      	ldr	r3, [pc, #40]	; (90010e20 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
90010df8:	6818      	ldr	r0, [r3, #0]
90010dfa:	b118      	cbz	r0, 90010e04 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
90010dfc:	6803      	ldr	r3, [r0, #0]
90010dfe:	4621      	mov	r1, r4
90010e00:	689b      	ldr	r3, [r3, #8]
90010e02:	4798      	blx	r3
90010e04:	4b07      	ldr	r3, [pc, #28]	; (90010e24 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
90010e06:	4621      	mov	r1, r4
90010e08:	6818      	ldr	r0, [r3, #0]
90010e0a:	6803      	ldr	r3, [r0, #0]
90010e0c:	695b      	ldr	r3, [r3, #20]
90010e0e:	4798      	blx	r3
90010e10:	e7eb      	b.n	90010dea <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
90010e12:	bf00      	nop
90010e14:	24012ad4 	.word	0x24012ad4
90010e18:	24012ad6 	.word	0x24012ad6
90010e1c:	24012b1c 	.word	0x24012b1c
90010e20:	24012b18 	.word	0x24012b18
90010e24:	24012ae0 	.word	0x24012ae0

90010e28 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
90010e28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010e2c:	4604      	mov	r4, r0
90010e2e:	b09b      	sub	sp, #108	; 0x6c
90010e30:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
90010e34:	b129      	cbz	r1, 90010e42 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
90010e36:	2300      	movs	r3, #0
90010e38:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
90010e3c:	b01b      	add	sp, #108	; 0x6c
90010e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010e42:	f500 7696 	add.w	r6, r0, #300	; 0x12c
90010e46:	4630      	mov	r0, r6
90010e48:	f7fc fb47 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
90010e4c:	4605      	mov	r5, r0
90010e4e:	b940      	cbnz	r0, 90010e62 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
90010e50:	4620      	mov	r0, r4
90010e52:	e896 0006 	ldmia.w	r6, {r1, r2}
90010e56:	f7ff fc8d 	bl	90010774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
90010e5a:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
90010e5e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
90010e62:	4ba6      	ldr	r3, [pc, #664]	; (900110fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d4>)
90010e64:	681b      	ldr	r3, [r3, #0]
90010e66:	b33b      	cbz	r3, 90010eb8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
90010e68:	4da5      	ldr	r5, [pc, #660]	; (90011100 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
90010e6a:	4628      	mov	r0, r5
90010e6c:	f7fc fb35 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
90010e70:	4606      	mov	r6, r0
90010e72:	bb08      	cbnz	r0, 90010eb8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
90010e74:	4628      	mov	r0, r5
90010e76:	f7ff f9fb 	bl	90010270 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90010e7a:	6829      	ldr	r1, [r5, #0]
90010e7c:	686a      	ldr	r2, [r5, #4]
90010e7e:	4620      	mov	r0, r4
90010e80:	f7ff fc78 	bl	90010774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
90010e84:	802e      	strh	r6, [r5, #0]
90010e86:	806e      	strh	r6, [r5, #2]
90010e88:	80ae      	strh	r6, [r5, #4]
90010e8a:	80ee      	strh	r6, [r5, #6]
90010e8c:	4f9d      	ldr	r7, [pc, #628]	; (90011104 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
90010e8e:	a809      	add	r0, sp, #36	; 0x24
90010e90:	f7ff fbe3 	bl	9001065a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90010e94:	883d      	ldrh	r5, [r7, #0]
90010e96:	462e      	mov	r6, r5
90010e98:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
90010e9c:	42b3      	cmp	r3, r6
90010e9e:	d910      	bls.n	90010ec2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
90010ea0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90010ea4:	3601      	adds	r6, #1
90010ea6:	a809      	add	r0, sp, #36	; 0x24
90010ea8:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
90010eac:	b2b6      	uxth	r6, r6
90010eae:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
90010eb2:	f7ff fc3d 	bl	90010730 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
90010eb6:	e7ef      	b.n	90010e98 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
90010eb8:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
90010ebc:	2b00      	cmp	r3, #0
90010ebe:	d1e5      	bne.n	90010e8c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
90010ec0:	e7bc      	b.n	90010e3c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
90010ec2:	462e      	mov	r6, r5
90010ec4:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
90010ec8:	42b3      	cmp	r3, r6
90010eca:	d90b      	bls.n	90010ee4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
90010ecc:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90010ed0:	3601      	adds	r6, #1
90010ed2:	4620      	mov	r0, r4
90010ed4:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
90010ed8:	b2b6      	uxth	r6, r6
90010eda:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
90010ede:	f7ff fc49 	bl	90010774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
90010ee2:	e7ef      	b.n	90010ec4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
90010ee4:	4a88      	ldr	r2, [pc, #544]	; (90011108 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
90010ee6:	6813      	ldr	r3, [r2, #0]
90010ee8:	4690      	mov	r8, r2
90010eea:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
90010eee:	2b01      	cmp	r3, #1
90010ef0:	f040 8093 	bne.w	9001101a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f2>
90010ef4:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
90010ef8:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
90010efc:	f04f 0900 	mov.w	r9, #0
90010f00:	33aa      	adds	r3, #170	; 0xaa
90010f02:	42a8      	cmp	r0, r5
90010f04:	f103 0308 	add.w	r3, r3, #8
90010f08:	dd0a      	ble.n	90010f20 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
90010f0a:	f833 2c08 	ldrh.w	r2, [r3, #-8]
90010f0e:	3501      	adds	r5, #1
90010f10:	f833 1c04 	ldrh.w	r1, [r3, #-4]
90010f14:	440a      	add	r2, r1
90010f16:	b212      	sxth	r2, r2
90010f18:	4591      	cmp	r9, r2
90010f1a:	bfb8      	it	lt
90010f1c:	4691      	movlt	r9, r2
90010f1e:	e7f0      	b.n	90010f02 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
90010f20:	4b7a      	ldr	r3, [pc, #488]	; (9001110c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
90010f22:	4e7b      	ldr	r6, [pc, #492]	; (90011110 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
90010f24:	881d      	ldrh	r5, [r3, #0]
90010f26:	2300      	movs	r3, #0
90010f28:	2d0f      	cmp	r5, #15
90010f2a:	bf8c      	ite	hi
90010f2c:	08ed      	lsrhi	r5, r5, #3
90010f2e:	2501      	movls	r5, #1
90010f30:	e9cd 3305 	strd	r3, r3, [sp, #20]
90010f34:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90010f38:	f8bd 101a 	ldrh.w	r1, [sp, #26]
90010f3c:	f8d8 0000 	ldr.w	r0, [r8]
90010f40:	440b      	add	r3, r1
90010f42:	6802      	ldr	r2, [r0, #0]
90010f44:	b21b      	sxth	r3, r3
90010f46:	4599      	cmp	r9, r3
90010f48:	dd4a      	ble.n	90010fe0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1b8>
90010f4a:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
90010f4e:	4798      	blx	r3
90010f50:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90010f54:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90010f58:	4413      	add	r3, r2
90010f5a:	b21b      	sxth	r3, r3
90010f5c:	195a      	adds	r2, r3, r5
90010f5e:	4290      	cmp	r0, r2
90010f60:	da07      	bge.n	90010f72 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
90010f62:	4581      	cmp	r9, r0
90010f64:	dd05      	ble.n	90010f72 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
90010f66:	4298      	cmp	r0, r3
90010f68:	da33      	bge.n	90010fd2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
90010f6a:	2b00      	cmp	r3, #0
90010f6c:	dd31      	ble.n	90010fd2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
90010f6e:	4648      	mov	r0, r9
90010f70:	e004      	b.n	90010f7c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
90010f72:	4298      	cmp	r0, r3
90010f74:	dbfb      	blt.n	90010f6e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
90010f76:	4548      	cmp	r0, r9
90010f78:	bfa8      	it	ge
90010f7a:	4648      	movge	r0, r9
90010f7c:	f9b6 2000 	ldrsh.w	r2, [r6]
90010f80:	2100      	movs	r1, #0
90010f82:	1ac0      	subs	r0, r0, r3
90010f84:	f8b7 a000 	ldrh.w	sl, [r7]
90010f88:	f8ad 1014 	strh.w	r1, [sp, #20]
90010f8c:	f8ad 3016 	strh.w	r3, [sp, #22]
90010f90:	f8ad 2018 	strh.w	r2, [sp, #24]
90010f94:	f8ad 001a 	strh.w	r0, [sp, #26]
90010f98:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
90010f9c:	4553      	cmp	r3, sl
90010f9e:	d9c9      	bls.n	90010f34 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
90010fa0:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90010fa4:	ab07      	add	r3, sp, #28
90010fa6:	f852 0fa8 	ldr.w	r0, [r2, #168]!
90010faa:	6851      	ldr	r1, [r2, #4]
90010fac:	c303      	stmia	r3!, {r0, r1}
90010fae:	a807      	add	r0, sp, #28
90010fb0:	a905      	add	r1, sp, #20
90010fb2:	f7fc fa4f 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
90010fb6:	a807      	add	r0, sp, #28
90010fb8:	f7fc fa8f 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
90010fbc:	b920      	cbnz	r0, 90010fc8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
90010fbe:	6823      	ldr	r3, [r4, #0]
90010fc0:	a907      	add	r1, sp, #28
90010fc2:	4620      	mov	r0, r4
90010fc4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90010fc6:	4798      	blx	r3
90010fc8:	f10a 0a01 	add.w	sl, sl, #1
90010fcc:	fa1f fa8a 	uxth.w	sl, sl
90010fd0:	e7e2      	b.n	90010f98 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
90010fd2:	f8d8 0000 	ldr.w	r0, [r8]
90010fd6:	2101      	movs	r1, #1
90010fd8:	6803      	ldr	r3, [r0, #0]
90010fda:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90010fdc:	4798      	blx	r3
90010fde:	e7a9      	b.n	90010f34 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
90010fe0:	69d3      	ldr	r3, [r2, #28]
90010fe2:	4798      	blx	r3
90010fe4:	4b4b      	ldr	r3, [pc, #300]	; (90011114 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
90010fe6:	781b      	ldrb	r3, [r3, #0]
90010fe8:	2b00      	cmp	r3, #0
90010fea:	f43f af27 	beq.w	90010e3c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
90010fee:	2300      	movs	r3, #0
90010ff0:	883d      	ldrh	r5, [r7, #0]
90010ff2:	34ea      	adds	r4, #234	; 0xea
90010ff4:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
90010ff8:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
90010ffc:	42ab      	cmp	r3, r5
90010ffe:	f67f af1d 	bls.w	90010e3c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
90011002:	ab1a      	add	r3, sp, #104	; 0x68
90011004:	4620      	mov	r0, r4
90011006:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001100a:	3501      	adds	r5, #1
9001100c:	3b44      	subs	r3, #68	; 0x44
9001100e:	b2ad      	uxth	r5, r5
90011010:	e893 0006 	ldmia.w	r3, {r1, r2}
90011014:	f7ff fb8c 	bl	90010730 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
90011018:	e7ee      	b.n	90010ff8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d0>
9001101a:	2b02      	cmp	r3, #2
9001101c:	f040 813d 	bne.w	9001129a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x472>
90011020:	4b3d      	ldr	r3, [pc, #244]	; (90011118 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
90011022:	781b      	ldrb	r3, [r3, #0]
90011024:	2b01      	cmp	r3, #1
90011026:	d02c      	beq.n	90011082 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25a>
90011028:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
9001102c:	883a      	ldrh	r2, [r7, #0]
9001102e:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
90011032:	3201      	adds	r2, #1
90011034:	b292      	uxth	r2, r2
90011036:	2900      	cmp	r1, #0
90011038:	d0d4      	beq.n	90010fe4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
9001103a:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
9001103e:	4610      	mov	r0, r2
90011040:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
90011044:	f04f 0a00 	mov.w	sl, #0
90011048:	441d      	add	r5, r3
9001104a:	b22d      	sxth	r5, r5
9001104c:	b283      	uxth	r3, r0
9001104e:	ea4f 06ca 	mov.w	r6, sl, lsl #3
90011052:	4299      	cmp	r1, r3
90011054:	f240 80c4 	bls.w	900111e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b8>
90011058:	4426      	add	r6, r4
9001105a:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
9001105e:	4684      	mov	ip, r0
90011060:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
90011064:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
90011068:	4573      	cmp	r3, lr
9001106a:	f340 80a6 	ble.w	900111ba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x392>
9001106e:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
90011072:	4475      	add	r5, lr
90011074:	b22d      	sxth	r5, r5
90011076:	429d      	cmp	r5, r3
90011078:	bfa8      	it	ge
9001107a:	461d      	movge	r5, r3
9001107c:	3001      	adds	r0, #1
9001107e:	46e2      	mov	sl, ip
90011080:	e7e4      	b.n	9001104c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x224>
90011082:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
90011086:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
9001108a:	f1bb 0f00 	cmp.w	fp, #0
9001108e:	d0a9      	beq.n	90010fe4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
90011090:	883b      	ldrh	r3, [r7, #0]
90011092:	2600      	movs	r6, #0
90011094:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
90011098:	3301      	adds	r3, #1
9001109a:	b29b      	uxth	r3, r3
9001109c:	b299      	uxth	r1, r3
9001109e:	00f5      	lsls	r5, r6, #3
900110a0:	458b      	cmp	fp, r1
900110a2:	d93b      	bls.n	9001111c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
900110a4:	4425      	add	r5, r4
900110a6:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
900110aa:	469c      	mov	ip, r3
900110ac:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
900110b0:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
900110b4:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
900110b8:	4408      	add	r0, r1
900110ba:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
900110be:	4471      	add	r1, lr
900110c0:	b200      	sxth	r0, r0
900110c2:	b209      	sxth	r1, r1
900110c4:	4288      	cmp	r0, r1
900110c6:	da06      	bge.n	900110d6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ae>
900110c8:	4586      	cmp	lr, r0
900110ca:	4672      	mov	r2, lr
900110cc:	bfb8      	it	lt
900110ce:	4602      	movlt	r2, r0
900110d0:	3301      	adds	r3, #1
900110d2:	4666      	mov	r6, ip
900110d4:	e7e2      	b.n	9001109c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x274>
900110d6:	d10b      	bne.n	900110f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2c8>
900110d8:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
900110dc:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
900110e0:	458c      	cmp	ip, r1
900110e2:	bfb4      	ite	lt
900110e4:	469c      	movlt	ip, r3
900110e6:	46b4      	movge	ip, r6
900110e8:	4572      	cmp	r2, lr
900110ea:	bfb8      	it	lt
900110ec:	4672      	movlt	r2, lr
900110ee:	e7ef      	b.n	900110d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
900110f0:	428a      	cmp	r2, r1
900110f2:	46b4      	mov	ip, r6
900110f4:	bfb8      	it	lt
900110f6:	460a      	movlt	r2, r1
900110f8:	e7ea      	b.n	900110d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
900110fa:	bf00      	nop
900110fc:	24012b18 	.word	0x24012b18
90011100:	24012b24 	.word	0x24012b24
90011104:	24000050 	.word	0x24000050
90011108:	24012ae0 	.word	0x24012ae0
9001110c:	24012ad6 	.word	0x24012ad6
90011110:	24012ad4 	.word	0x24012ad4
90011114:	24012ade 	.word	0x24012ade
90011118:	24012ad8 	.word	0x24012ad8
9001111c:	1961      	adds	r1, r4, r5
9001111e:	ab07      	add	r3, sp, #28
90011120:	f851 0fa8 	ldr.w	r0, [r1, #168]!
90011124:	6849      	ldr	r1, [r1, #4]
90011126:	c303      	stmia	r3!, {r0, r1}
90011128:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001112c:	a807      	add	r0, sp, #28
9001112e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90011132:	2b13      	cmp	r3, #19
90011134:	440b      	add	r3, r1
90011136:	bfd8      	it	le
90011138:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
9001113c:	1a9b      	subs	r3, r3, r2
9001113e:	f8ad 201c 	strh.w	r2, [sp, #28]
90011142:	f8ad 3020 	strh.w	r3, [sp, #32]
90011146:	f7ff f8ed 	bl	90010324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001114a:	a807      	add	r0, sp, #28
9001114c:	f7fc f9c5 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
90011150:	2800      	cmp	r0, #0
90011152:	d198      	bne.n	90011086 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
90011154:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90011158:	4425      	add	r5, r4
9001115a:	f8d8 0000 	ldr.w	r0, [r8]
9001115e:	f1bc 0f14 	cmp.w	ip, #20
90011162:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90011166:	f8d0 e000 	ldr.w	lr, [r0]
9001116a:	bfa8      	it	ge
9001116c:	f04f 0c14 	movge.w	ip, #20
90011170:	f8bd 201e 	ldrh.w	r2, [sp, #30]
90011174:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90011178:	fa1f fc8c 	uxth.w	ip, ip
9001117c:	f8cd c000 	str.w	ip, [sp]
90011180:	f8de a074 	ldr.w	sl, [lr, #116]	; 0x74
90011184:	47d0      	blx	sl
90011186:	4682      	mov	sl, r0
90011188:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
9001118c:	a807      	add	r0, sp, #28
9001118e:	f7ff f86f 	bl	90010270 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90011192:	6823      	ldr	r3, [r4, #0]
90011194:	4620      	mov	r0, r4
90011196:	a907      	add	r1, sp, #28
90011198:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9001119a:	4798      	blx	r3
9001119c:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
900111a0:	eba0 000a 	sub.w	r0, r0, sl
900111a4:	b200      	sxth	r0, r0
900111a6:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
900111aa:	2800      	cmp	r0, #0
900111ac:	f47f af6b 	bne.w	90011086 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
900111b0:	b2b1      	uxth	r1, r6
900111b2:	4648      	mov	r0, r9
900111b4:	f7ff faa6 	bl	90010704 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900111b8:	e765      	b.n	90011086 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
900111ba:	d10c      	bne.n	900111d6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ae>
900111bc:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
900111c0:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
900111c4:	45b4      	cmp	ip, r6
900111c6:	bfb4      	ite	lt
900111c8:	4684      	movlt	ip, r0
900111ca:	46d4      	movge	ip, sl
900111cc:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
900111d0:	4433      	add	r3, r6
900111d2:	b21b      	sxth	r3, r3
900111d4:	e74f      	b.n	90011076 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x24e>
900111d6:	4575      	cmp	r5, lr
900111d8:	46d4      	mov	ip, sl
900111da:	bfa8      	it	ge
900111dc:	4675      	movge	r5, lr
900111de:	e74d      	b.n	9001107c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x254>
900111e0:	eb0b 0006 	add.w	r0, fp, r6
900111e4:	4426      	add	r6, r4
900111e6:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
900111ea:	f1b9 0f13 	cmp.w	r9, #19
900111ee:	bfdc      	itt	le
900111f0:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
900111f4:	444d      	addle	r5, r9
900111f6:	e9cd 1202 	strd	r1, r2, [sp, #8]
900111fa:	bfd8      	it	le
900111fc:	b22d      	sxthle	r5, r5
900111fe:	f7fc f96c 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
90011202:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90011206:	2800      	cmp	r0, #0
90011208:	f47f af15 	bne.w	90011036 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x20e>
9001120c:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
90011210:	fa1f f989 	uxth.w	r9, r9
90011214:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90011218:	eba5 050c 	sub.w	r5, r5, ip
9001121c:	fa1f f28c 	uxth.w	r2, ip
90011220:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
90011224:	eb02 0009 	add.w	r0, r2, r9
90011228:	2d14      	cmp	r5, #20
9001122a:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
9001122e:	bfa8      	it	ge
90011230:	2514      	movge	r5, #20
90011232:	b200      	sxth	r0, r0
90011234:	f8ad 101c 	strh.w	r1, [sp, #28]
90011238:	b289      	uxth	r1, r1
9001123a:	fa1f fe85 	uxth.w	lr, r5
9001123e:	eba0 000c 	sub.w	r0, r0, ip
90011242:	f8ad c01e 	strh.w	ip, [sp, #30]
90011246:	4586      	cmp	lr, r0
90011248:	f8d8 0000 	ldr.w	r0, [r8]
9001124c:	f8ad 3020 	strh.w	r3, [sp, #32]
90011250:	b29b      	uxth	r3, r3
90011252:	bfb8      	it	lt
90011254:	46f1      	movlt	r9, lr
90011256:	6805      	ldr	r5, [r0, #0]
90011258:	f8cd 9000 	str.w	r9, [sp]
9001125c:	6f6d      	ldr	r5, [r5, #116]	; 0x74
9001125e:	47a8      	blx	r5
90011260:	6823      	ldr	r3, [r4, #0]
90011262:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90011266:	a907      	add	r1, sp, #28
90011268:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9001126a:	4620      	mov	r0, r4
9001126c:	4798      	blx	r3
9001126e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90011272:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
90011276:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
9001127a:	1a5b      	subs	r3, r3, r1
9001127c:	440a      	add	r2, r1
9001127e:	b21b      	sxth	r3, r3
90011280:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
90011284:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
90011288:	2b00      	cmp	r3, #0
9001128a:	f47f aecf 	bne.w	9001102c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
9001128e:	fa1f f18a 	uxth.w	r1, sl
90011292:	4658      	mov	r0, fp
90011294:	f7ff fa36 	bl	90010704 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90011298:	e6c8      	b.n	9001102c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
9001129a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
9001129e:	42ab      	cmp	r3, r5
900112a0:	f67f aea0 	bls.w	90010fe4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
900112a4:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
900112a8:	ab07      	add	r3, sp, #28
900112aa:	f852 0fa8 	ldr.w	r0, [r2, #168]!
900112ae:	6851      	ldr	r1, [r2, #4]
900112b0:	c303      	stmia	r3!, {r0, r1}
900112b2:	a807      	add	r0, sp, #28
900112b4:	f7fc f911 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
900112b8:	b920      	cbnz	r0, 900112c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49c>
900112ba:	6823      	ldr	r3, [r4, #0]
900112bc:	a907      	add	r1, sp, #28
900112be:	4620      	mov	r0, r4
900112c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900112c2:	4798      	blx	r3
900112c4:	3501      	adds	r5, #1
900112c6:	b2ad      	uxth	r5, r5
900112c8:	e7e7      	b.n	9001129a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x472>
900112ca:	bf00      	nop

900112cc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
900112cc:	4b03      	ldr	r3, [pc, #12]	; (900112dc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
900112ce:	2200      	movs	r2, #0
900112d0:	801a      	strh	r2, [r3, #0]
900112d2:	805a      	strh	r2, [r3, #2]
900112d4:	809a      	strh	r2, [r3, #4]
900112d6:	80da      	strh	r2, [r3, #6]
900112d8:	4770      	bx	lr
900112da:	bf00      	nop
900112dc:	24012b24 	.word	0x24012b24

900112e0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
900112e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900112e4:	b099      	sub	sp, #100	; 0x64
900112e6:	4607      	mov	r7, r0
900112e8:	4614      	mov	r4, r2
900112ea:	461d      	mov	r5, r3
900112ec:	a802      	add	r0, sp, #8
900112ee:	468a      	mov	sl, r1
900112f0:	f000 fdc3 	bl	90011e7a <_ZN8touchgfx12TextProviderC1Ev>
900112f4:	683b      	ldr	r3, [r7, #0]
900112f6:	4638      	mov	r0, r7
900112f8:	f242 0b0b 	movw	fp, #8203	; 0x200b
900112fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900112fe:	4798      	blx	r3
90011300:	462a      	mov	r2, r5
90011302:	2500      	movs	r5, #0
90011304:	4621      	mov	r1, r4
90011306:	4603      	mov	r3, r0
90011308:	a802      	add	r0, sp, #8
9001130a:	462c      	mov	r4, r5
9001130c:	46a9      	mov	r9, r5
9001130e:	46a8      	mov	r8, r5
90011310:	f000 fdf8 	bl	90011f04 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
90011314:	2300      	movs	r3, #0
90011316:	9301      	str	r3, [sp, #4]
90011318:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001131c:	429c      	cmp	r4, r3
9001131e:	d002      	beq.n	90011326 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
90011320:	455c      	cmp	r4, fp
90011322:	bf18      	it	ne
90011324:	4625      	movne	r5, r4
90011326:	ab01      	add	r3, sp, #4
90011328:	463a      	mov	r2, r7
9001132a:	4651      	mov	r1, sl
9001132c:	a802      	add	r0, sp, #8
9001132e:	f001 f8e3 	bl	900124f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90011332:	4604      	mov	r4, r0
90011334:	b108      	cbz	r0, 9001133a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
90011336:	280a      	cmp	r0, #10
90011338:	d10a      	bne.n	90011350 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
9001133a:	45c1      	cmp	r9, r8
9001133c:	bf38      	it	cc
9001133e:	46c1      	movcc	r9, r8
90011340:	f04f 0800 	mov.w	r8, #0
90011344:	2c00      	cmp	r4, #0
90011346:	d1e5      	bne.n	90011314 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
90011348:	4648      	mov	r0, r9
9001134a:	b019      	add	sp, #100	; 0x64
9001134c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011350:	9a01      	ldr	r2, [sp, #4]
90011352:	2a00      	cmp	r2, #0
90011354:	d0de      	beq.n	90011314 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
90011356:	7b56      	ldrb	r6, [r2, #13]
90011358:	4629      	mov	r1, r5
9001135a:	683b      	ldr	r3, [r7, #0]
9001135c:	0076      	lsls	r6, r6, #1
9001135e:	8894      	ldrh	r4, [r2, #4]
90011360:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90011362:	f406 7080 	and.w	r0, r6, #256	; 0x100
90011366:	7a96      	ldrb	r6, [r2, #10]
90011368:	4306      	orrs	r6, r0
9001136a:	4638      	mov	r0, r7
9001136c:	4798      	blx	r3
9001136e:	4430      	add	r0, r6
90011370:	4480      	add	r8, r0
90011372:	fa1f f888 	uxth.w	r8, r8
90011376:	e7e5      	b.n	90011344 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

90011378 <_ZNK8touchgfx4Font12getCharWidthEt>:
90011378:	b508      	push	{r3, lr}
9001137a:	6803      	ldr	r3, [r0, #0]
9001137c:	68db      	ldr	r3, [r3, #12]
9001137e:	4798      	blx	r3
90011380:	b128      	cbz	r0, 9001138e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90011382:	7b43      	ldrb	r3, [r0, #13]
90011384:	7a80      	ldrb	r0, [r0, #10]
90011386:	005b      	lsls	r3, r3, #1
90011388:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001138c:	4318      	orrs	r0, r3
9001138e:	bd08      	pop	{r3, pc}

90011390 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90011390:	b40e      	push	{r1, r2, r3}
90011392:	b5f0      	push	{r4, r5, r6, r7, lr}
90011394:	b098      	sub	sp, #96	; 0x60
90011396:	4605      	mov	r5, r0
90011398:	ab1d      	add	r3, sp, #116	; 0x74
9001139a:	a802      	add	r0, sp, #8
9001139c:	ae18      	add	r6, sp, #96	; 0x60
9001139e:	f853 4b04 	ldr.w	r4, [r3], #4
900113a2:	9300      	str	r3, [sp, #0]
900113a4:	f000 fd69 	bl	90011e7a <_ZN8touchgfx12TextProviderC1Ev>
900113a8:	682b      	ldr	r3, [r5, #0]
900113aa:	4628      	mov	r0, r5
900113ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900113ae:	4798      	blx	r3
900113b0:	4621      	mov	r1, r4
900113b2:	2400      	movs	r4, #0
900113b4:	4603      	mov	r3, r0
900113b6:	9a00      	ldr	r2, [sp, #0]
900113b8:	a802      	add	r0, sp, #8
900113ba:	f000 fda3 	bl	90011f04 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
900113be:	f846 4d5c 	str.w	r4, [r6, #-92]!
900113c2:	462a      	mov	r2, r5
900113c4:	4633      	mov	r3, r6
900113c6:	4621      	mov	r1, r4
900113c8:	a802      	add	r0, sp, #8
900113ca:	f001 f895 	bl	900124f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900113ce:	b300      	cbz	r0, 90011412 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
900113d0:	280a      	cmp	r0, #10
900113d2:	d01a      	beq.n	9001140a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7a>
900113d4:	9f01      	ldr	r7, [sp, #4]
900113d6:	b1c7      	cbz	r7, 9001140a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7a>
900113d8:	7b78      	ldrb	r0, [r7, #13]
900113da:	7a3b      	ldrb	r3, [r7, #8]
900113dc:	00c1      	lsls	r1, r0, #3
900113de:	88aa      	ldrh	r2, [r5, #4]
900113e0:	f401 7180 	and.w	r1, r1, #256	; 0x100
900113e4:	4319      	orrs	r1, r3
900113e6:	0643      	lsls	r3, r0, #25
900113e8:	ea4f 1000 	mov.w	r0, r0, lsl #4
900113ec:	bf48      	it	mi
900113ee:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
900113f2:	f400 7080 	and.w	r0, r0, #256	; 0x100
900113f6:	bf48      	it	mi
900113f8:	b219      	sxthmi	r1, r3
900113fa:	79fb      	ldrb	r3, [r7, #7]
900113fc:	4303      	orrs	r3, r0
900113fe:	4413      	add	r3, r2
90011400:	1a5b      	subs	r3, r3, r1
90011402:	b29b      	uxth	r3, r3
90011404:	42a3      	cmp	r3, r4
90011406:	bfc8      	it	gt
90011408:	b21c      	sxthgt	r4, r3
9001140a:	4633      	mov	r3, r6
9001140c:	462a      	mov	r2, r5
9001140e:	2100      	movs	r1, #0
90011410:	e7da      	b.n	900113c8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
90011412:	b2a0      	uxth	r0, r4
90011414:	b018      	add	sp, #96	; 0x60
90011416:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001141a:	b003      	add	sp, #12
9001141c:	4770      	bx	lr

9001141e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
9001141e:	b40e      	push	{r1, r2, r3}
90011420:	b530      	push	{r4, r5, lr}
90011422:	b098      	sub	sp, #96	; 0x60
90011424:	4604      	mov	r4, r0
90011426:	ab1b      	add	r3, sp, #108	; 0x6c
90011428:	a802      	add	r0, sp, #8
9001142a:	f853 5b04 	ldr.w	r5, [r3], #4
9001142e:	9301      	str	r3, [sp, #4]
90011430:	f000 fd23 	bl	90011e7a <_ZN8touchgfx12TextProviderC1Ev>
90011434:	6823      	ldr	r3, [r4, #0]
90011436:	4620      	mov	r0, r4
90011438:	2401      	movs	r4, #1
9001143a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001143c:	4798      	blx	r3
9001143e:	9a01      	ldr	r2, [sp, #4]
90011440:	4603      	mov	r3, r0
90011442:	4629      	mov	r1, r5
90011444:	a802      	add	r0, sp, #8
90011446:	f000 fd5d 	bl	90011f04 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
9001144a:	a802      	add	r0, sp, #8
9001144c:	f001 f94c 	bl	900126e8 <_ZN8touchgfx12TextProvider11getNextCharEv>
90011450:	b2a3      	uxth	r3, r4
90011452:	b138      	cbz	r0, 90011464 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x46>
90011454:	280a      	cmp	r0, #10
90011456:	a802      	add	r0, sp, #8
90011458:	bf04      	itt	eq
9001145a:	3301      	addeq	r3, #1
9001145c:	b21c      	sxtheq	r4, r3
9001145e:	f001 f943 	bl	900126e8 <_ZN8touchgfx12TextProvider11getNextCharEv>
90011462:	e7f5      	b.n	90011450 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
90011464:	4618      	mov	r0, r3
90011466:	b018      	add	sp, #96	; 0x60
90011468:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9001146c:	b003      	add	sp, #12
9001146e:	4770      	bx	lr

90011470 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90011470:	b40e      	push	{r1, r2, r3}
90011472:	b5f0      	push	{r4, r5, r6, r7, lr}
90011474:	b098      	sub	sp, #96	; 0x60
90011476:	4604      	mov	r4, r0
90011478:	26ff      	movs	r6, #255	; 0xff
9001147a:	ab1d      	add	r3, sp, #116	; 0x74
9001147c:	a802      	add	r0, sp, #8
9001147e:	f853 5b04 	ldr.w	r5, [r3], #4
90011482:	9300      	str	r3, [sp, #0]
90011484:	f000 fcf9 	bl	90011e7a <_ZN8touchgfx12TextProviderC1Ev>
90011488:	6823      	ldr	r3, [r4, #0]
9001148a:	4620      	mov	r0, r4
9001148c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001148e:	4798      	blx	r3
90011490:	4629      	mov	r1, r5
90011492:	4603      	mov	r3, r0
90011494:	9a00      	ldr	r2, [sp, #0]
90011496:	a802      	add	r0, sp, #8
90011498:	ad18      	add	r5, sp, #96	; 0x60
9001149a:	f000 fd33 	bl	90011f04 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
9001149e:	2100      	movs	r1, #0
900114a0:	4622      	mov	r2, r4
900114a2:	a802      	add	r0, sp, #8
900114a4:	f845 1d5c 	str.w	r1, [r5, #-92]!
900114a8:	462b      	mov	r3, r5
900114aa:	f001 f825 	bl	900124f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900114ae:	b1d8      	cbz	r0, 900114e8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900114b0:	280a      	cmp	r0, #10
900114b2:	d012      	beq.n	900114da <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
900114b4:	9801      	ldr	r0, [sp, #4]
900114b6:	b180      	cbz	r0, 900114da <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
900114b8:	7b47      	ldrb	r7, [r0, #13]
900114ba:	7922      	ldrb	r2, [r4, #4]
900114bc:	00fb      	lsls	r3, r7, #3
900114be:	f403 7180 	and.w	r1, r3, #256	; 0x100
900114c2:	7a03      	ldrb	r3, [r0, #8]
900114c4:	430b      	orrs	r3, r1
900114c6:	0679      	lsls	r1, r7, #25
900114c8:	bf44      	itt	mi
900114ca:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900114ce:	b21b      	sxthmi	r3, r3
900114d0:	1ad3      	subs	r3, r2, r3
900114d2:	b2db      	uxtb	r3, r3
900114d4:	429e      	cmp	r6, r3
900114d6:	bf28      	it	cs
900114d8:	461e      	movcs	r6, r3
900114da:	462b      	mov	r3, r5
900114dc:	4622      	mov	r2, r4
900114de:	2100      	movs	r1, #0
900114e0:	a802      	add	r0, sp, #8
900114e2:	f001 f809 	bl	900124f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900114e6:	e7e2      	b.n	900114ae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
900114e8:	4630      	mov	r0, r6
900114ea:	b018      	add	sp, #96	; 0x60
900114ec:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900114f0:	b003      	add	sp, #12
900114f2:	4770      	bx	lr

900114f4 <_ZNK8touchgfx8Drawable10invalidateEv>:
900114f4:	b513      	push	{r0, r1, r4, lr}
900114f6:	1d01      	adds	r1, r0, #4
900114f8:	4603      	mov	r3, r0
900114fa:	466a      	mov	r2, sp
900114fc:	c903      	ldmia	r1, {r0, r1}
900114fe:	e882 0003 	stmia.w	r2, {r0, r1}
90011502:	2100      	movs	r1, #0
90011504:	4618      	mov	r0, r3
90011506:	9100      	str	r1, [sp, #0]
90011508:	6819      	ldr	r1, [r3, #0]
9001150a:	690c      	ldr	r4, [r1, #16]
9001150c:	4611      	mov	r1, r2
9001150e:	47a0      	blx	r4
90011510:	b002      	add	sp, #8
90011512:	bd10      	pop	{r4, pc}

90011514 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90011514:	b538      	push	{r3, r4, r5, lr}
90011516:	680b      	ldr	r3, [r1, #0]
90011518:	460c      	mov	r4, r1
9001151a:	4605      	mov	r5, r0
9001151c:	68db      	ldr	r3, [r3, #12]
9001151e:	4798      	blx	r3
90011520:	6823      	ldr	r3, [r4, #0]
90011522:	4620      	mov	r0, r4
90011524:	4629      	mov	r1, r5
90011526:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90011528:	4798      	blx	r3
9001152a:	4628      	mov	r0, r5
9001152c:	bd38      	pop	{r3, r4, r5, pc}

9001152e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
9001152e:	b410      	push	{r4}
90011530:	880a      	ldrh	r2, [r1, #0]
90011532:	8884      	ldrh	r4, [r0, #4]
90011534:	4422      	add	r2, r4
90011536:	800a      	strh	r2, [r1, #0]
90011538:	884a      	ldrh	r2, [r1, #2]
9001153a:	88c4      	ldrh	r4, [r0, #6]
9001153c:	4422      	add	r2, r4
9001153e:	804a      	strh	r2, [r1, #2]
90011540:	6940      	ldr	r0, [r0, #20]
90011542:	b120      	cbz	r0, 9001154e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
90011544:	6803      	ldr	r3, [r0, #0]
90011546:	f85d 4b04 	ldr.w	r4, [sp], #4
9001154a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001154c:	4718      	bx	r3
9001154e:	f85d 4b04 	ldr.w	r4, [sp], #4
90011552:	4770      	bx	lr

90011554 <_ZN8touchgfx8Drawable12moveRelativeEss>:
90011554:	b5f0      	push	{r4, r5, r6, r7, lr}
90011556:	460b      	mov	r3, r1
90011558:	b085      	sub	sp, #20
9001155a:	4604      	mov	r4, r0
9001155c:	b901      	cbnz	r1, 90011560 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
9001155e:	b322      	cbz	r2, 900115aa <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
90011560:	1d27      	adds	r7, r4, #4
90011562:	466e      	mov	r6, sp
90011564:	88e5      	ldrh	r5, [r4, #6]
90011566:	e897 0003 	ldmia.w	r7, {r0, r1}
9001156a:	442a      	add	r2, r5
9001156c:	e886 0003 	stmia.w	r6, {r0, r1}
90011570:	88a1      	ldrh	r1, [r4, #4]
90011572:	4620      	mov	r0, r4
90011574:	b215      	sxth	r5, r2
90011576:	4419      	add	r1, r3
90011578:	6823      	ldr	r3, [r4, #0]
9001157a:	b209      	sxth	r1, r1
9001157c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001157e:	4798      	blx	r3
90011580:	6823      	ldr	r3, [r4, #0]
90011582:	4629      	mov	r1, r5
90011584:	4620      	mov	r0, r4
90011586:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90011588:	ad02      	add	r5, sp, #8
9001158a:	4798      	blx	r3
9001158c:	e897 0003 	ldmia.w	r7, {r0, r1}
90011590:	e885 0003 	stmia.w	r5, {r0, r1}
90011594:	6960      	ldr	r0, [r4, #20]
90011596:	b150      	cbz	r0, 900115ae <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
90011598:	6803      	ldr	r3, [r0, #0]
9001159a:	4631      	mov	r1, r6
9001159c:	691b      	ldr	r3, [r3, #16]
9001159e:	4798      	blx	r3
900115a0:	6960      	ldr	r0, [r4, #20]
900115a2:	6803      	ldr	r3, [r0, #0]
900115a4:	691b      	ldr	r3, [r3, #16]
900115a6:	4629      	mov	r1, r5
900115a8:	4798      	blx	r3
900115aa:	b005      	add	sp, #20
900115ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
900115ae:	f7ff f843 	bl	90010638 <_ZN8touchgfx11Application11getInstanceEv>
900115b2:	6803      	ldr	r3, [r0, #0]
900115b4:	4631      	mov	r1, r6
900115b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900115b8:	4798      	blx	r3
900115ba:	f7ff f83d 	bl	90010638 <_ZN8touchgfx11Application11getInstanceEv>
900115be:	6803      	ldr	r3, [r0, #0]
900115c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900115c2:	e7f0      	b.n	900115a6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

900115c4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
900115c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
900115c6:	8882      	ldrh	r2, [r0, #4]
900115c8:	4605      	mov	r5, r0
900115ca:	880b      	ldrh	r3, [r1, #0]
900115cc:	460c      	mov	r4, r1
900115ce:	4413      	add	r3, r2
900115d0:	800b      	strh	r3, [r1, #0]
900115d2:	884b      	ldrh	r3, [r1, #2]
900115d4:	88c2      	ldrh	r2, [r0, #6]
900115d6:	4413      	add	r3, r2
900115d8:	4602      	mov	r2, r0
900115da:	804b      	strh	r3, [r1, #2]
900115dc:	466b      	mov	r3, sp
900115de:	f852 0f04 	ldr.w	r0, [r2, #4]!
900115e2:	6851      	ldr	r1, [r2, #4]
900115e4:	c303      	stmia	r3!, {r0, r1}
900115e6:	4621      	mov	r1, r4
900115e8:	4668      	mov	r0, sp
900115ea:	f7fb ff33 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
900115ee:	466b      	mov	r3, sp
900115f0:	cb03      	ldmia	r3!, {r0, r1}
900115f2:	6020      	str	r0, [r4, #0]
900115f4:	6061      	str	r1, [r4, #4]
900115f6:	6968      	ldr	r0, [r5, #20]
900115f8:	b128      	cbz	r0, 90011606 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
900115fa:	6803      	ldr	r3, [r0, #0]
900115fc:	691b      	ldr	r3, [r3, #16]
900115fe:	4621      	mov	r1, r4
90011600:	4798      	blx	r3
90011602:	b003      	add	sp, #12
90011604:	bd30      	pop	{r4, r5, pc}
90011606:	f7ff f817 	bl	90010638 <_ZN8touchgfx11Application11getInstanceEv>
9001160a:	6803      	ldr	r3, [r0, #0]
9001160c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9001160e:	e7f6      	b.n	900115fe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

90011610 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
90011610:	b570      	push	{r4, r5, r6, lr}
90011612:	8882      	ldrh	r2, [r0, #4]
90011614:	460c      	mov	r4, r1
90011616:	880b      	ldrh	r3, [r1, #0]
90011618:	4605      	mov	r5, r0
9001161a:	4413      	add	r3, r2
9001161c:	800b      	strh	r3, [r1, #0]
9001161e:	884b      	ldrh	r3, [r1, #2]
90011620:	88c2      	ldrh	r2, [r0, #6]
90011622:	4413      	add	r3, r2
90011624:	804b      	strh	r3, [r1, #2]
90011626:	1d01      	adds	r1, r0, #4
90011628:	4620      	mov	r0, r4
9001162a:	f7fb ff13 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
9001162e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90011632:	2b00      	cmp	r3, #0
90011634:	dd0b      	ble.n	9001164e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90011636:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001163a:	2b00      	cmp	r3, #0
9001163c:	dd07      	ble.n	9001164e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001163e:	6968      	ldr	r0, [r5, #20]
90011640:	b128      	cbz	r0, 9001164e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90011642:	6803      	ldr	r3, [r0, #0]
90011644:	4621      	mov	r1, r4
90011646:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90011648:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001164c:	4718      	bx	r3
9001164e:	bd70      	pop	{r4, r5, r6, pc}

90011650 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90011650:	b510      	push	{r4, lr}
90011652:	2300      	movs	r3, #0
90011654:	4604      	mov	r4, r0
90011656:	4608      	mov	r0, r1
90011658:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
9001165c:	8023      	strh	r3, [r4, #0]
9001165e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90011662:	8063      	strh	r3, [r4, #2]
90011664:	6803      	ldr	r3, [r0, #0]
90011666:	80a1      	strh	r1, [r4, #4]
90011668:	4621      	mov	r1, r4
9001166a:	80e2      	strh	r2, [r4, #6]
9001166c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001166e:	4798      	blx	r3
90011670:	4620      	mov	r0, r4
90011672:	bd10      	pop	{r4, pc}

90011674 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
90011674:	b530      	push	{r4, r5, lr}
90011676:	8083      	strh	r3, [r0, #4]
90011678:	f89d 300c 	ldrb.w	r3, [sp, #12]
9001167c:	f89d 5010 	ldrb.w	r5, [sp, #16]
90011680:	7183      	strb	r3, [r0, #6]
90011682:	79c3      	ldrb	r3, [r0, #7]
90011684:	6101      	str	r1, [r0, #16]
90011686:	f365 0306 	bfi	r3, r5, #0, #7
9001168a:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001168e:	8282      	strh	r2, [r0, #20]
90011690:	f365 13c7 	bfi	r3, r5, #7, #1
90011694:	71c3      	strb	r3, [r0, #7]
90011696:	f89d 3018 	ldrb.w	r3, [sp, #24]
9001169a:	7203      	strb	r3, [r0, #8]
9001169c:	f89d 301c 	ldrb.w	r3, [sp, #28]
900116a0:	7243      	strb	r3, [r0, #9]
900116a2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900116a6:	8143      	strh	r3, [r0, #10]
900116a8:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
900116ac:	8183      	strh	r3, [r0, #12]
900116ae:	4b01      	ldr	r3, [pc, #4]	; (900116b4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
900116b0:	6003      	str	r3, [r0, #0]
900116b2:	bd30      	pop	{r4, r5, pc}
900116b4:	90022afc 	.word	0x90022afc

900116b8 <_ZNK8touchgfx9ConstFont4findEt>:
900116b8:	b5f0      	push	{r4, r5, r6, r7, lr}
900116ba:	6904      	ldr	r4, [r0, #16]
900116bc:	b3bc      	cbz	r4, 9001172e <_ZNK8touchgfx9ConstFont4findEt+0x76>
900116be:	88a3      	ldrh	r3, [r4, #4]
900116c0:	8a82      	ldrh	r2, [r0, #20]
900116c2:	1acb      	subs	r3, r1, r3
900116c4:	f102 32ff 	add.w	r2, r2, #4294967295
900116c8:	d431      	bmi.n	9001172e <_ZNK8touchgfx9ConstFont4findEt+0x76>
900116ca:	4293      	cmp	r3, r2
900116cc:	dd0c      	ble.n	900116e8 <_ZNK8touchgfx9ConstFont4findEt+0x30>
900116ce:	230e      	movs	r3, #14
900116d0:	fb03 4302 	mla	r3, r3, r2, r4
900116d4:	889b      	ldrh	r3, [r3, #4]
900116d6:	1a5b      	subs	r3, r3, r1
900116d8:	1ad3      	subs	r3, r2, r3
900116da:	429a      	cmp	r2, r3
900116dc:	db27      	blt.n	9001172e <_ZNK8touchgfx9ConstFont4findEt+0x76>
900116de:	2b00      	cmp	r3, #0
900116e0:	bfbc      	itt	lt
900116e2:	2302      	movlt	r3, #2
900116e4:	fb92 f3f3 	sdivlt	r3, r2, r3
900116e8:	2500      	movs	r5, #0
900116ea:	260e      	movs	r6, #14
900116ec:	4295      	cmp	r5, r2
900116ee:	dc1e      	bgt.n	9001172e <_ZNK8touchgfx9ConstFont4findEt+0x76>
900116f0:	fb06 4003 	mla	r0, r6, r3, r4
900116f4:	8887      	ldrh	r7, [r0, #4]
900116f6:	42b9      	cmp	r1, r7
900116f8:	d01a      	beq.n	90011730 <_ZNK8touchgfx9ConstFont4findEt+0x78>
900116fa:	d20d      	bcs.n	90011718 <_ZNK8touchgfx9ConstFont4findEt+0x60>
900116fc:	1e5a      	subs	r2, r3, #1
900116fe:	4295      	cmp	r5, r2
90011700:	dc15      	bgt.n	9001172e <_ZNK8touchgfx9ConstFont4findEt+0x76>
90011702:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90011706:	1a5b      	subs	r3, r3, r1
90011708:	1ad3      	subs	r3, r2, r3
9001170a:	429a      	cmp	r2, r3
9001170c:	db0f      	blt.n	9001172e <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001170e:	429d      	cmp	r5, r3
90011710:	ddec      	ble.n	900116ec <_ZNK8touchgfx9ConstFont4findEt+0x34>
90011712:	1953      	adds	r3, r2, r5
90011714:	105b      	asrs	r3, r3, #1
90011716:	e7e9      	b.n	900116ec <_ZNK8touchgfx9ConstFont4findEt+0x34>
90011718:	1c5d      	adds	r5, r3, #1
9001171a:	42aa      	cmp	r2, r5
9001171c:	db07      	blt.n	9001172e <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001171e:	8a43      	ldrh	r3, [r0, #18]
90011720:	1acb      	subs	r3, r1, r3
90011722:	442b      	add	r3, r5
90011724:	429d      	cmp	r5, r3
90011726:	dc02      	bgt.n	9001172e <_ZNK8touchgfx9ConstFont4findEt+0x76>
90011728:	429a      	cmp	r2, r3
9001172a:	dadf      	bge.n	900116ec <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001172c:	e7f1      	b.n	90011712 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
9001172e:	2000      	movs	r0, #0
90011730:	bdf0      	pop	{r4, r5, r6, r7, pc}

90011732 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90011732:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90011734:	4604      	mov	r4, r0
90011736:	4617      	mov	r7, r2
90011738:	461e      	mov	r6, r3
9001173a:	b911      	cbnz	r1, 90011742 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
9001173c:	2500      	movs	r5, #0
9001173e:	4628      	mov	r0, r5
90011740:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90011742:	290a      	cmp	r1, #10
90011744:	d0fa      	beq.n	9001173c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90011746:	f64f 62ff 	movw	r2, #65279	; 0xfeff
9001174a:	4291      	cmp	r1, r2
9001174c:	d0f6      	beq.n	9001173c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001174e:	f242 020b 	movw	r2, #8203	; 0x200b
90011752:	4291      	cmp	r1, r2
90011754:	d0f2      	beq.n	9001173c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90011756:	f7ff ffaf 	bl	900116b8 <_ZNK8touchgfx9ConstFont4findEt>
9001175a:	4605      	mov	r5, r0
9001175c:	b950      	cbnz	r0, 90011774 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001175e:	6823      	ldr	r3, [r4, #0]
90011760:	4620      	mov	r0, r4
90011762:	691b      	ldr	r3, [r3, #16]
90011764:	4798      	blx	r3
90011766:	4601      	mov	r1, r0
90011768:	4620      	mov	r0, r4
9001176a:	f7ff ffa5 	bl	900116b8 <_ZNK8touchgfx9ConstFont4findEt>
9001176e:	4605      	mov	r5, r0
90011770:	2800      	cmp	r0, #0
90011772:	d0e3      	beq.n	9001173c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90011774:	6823      	ldr	r3, [r4, #0]
90011776:	4629      	mov	r1, r5
90011778:	4620      	mov	r0, r4
9001177a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
9001177c:	4798      	blx	r3
9001177e:	6038      	str	r0, [r7, #0]
90011780:	6823      	ldr	r3, [r4, #0]
90011782:	4620      	mov	r0, r4
90011784:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90011786:	4798      	blx	r3
90011788:	7030      	strb	r0, [r6, #0]
9001178a:	e7d8      	b.n	9001173e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

9001178c <_ZN8touchgfx6memsetEPvhm>:
9001178c:	4402      	add	r2, r0
9001178e:	4290      	cmp	r0, r2
90011790:	d002      	beq.n	90011798 <_ZN8touchgfx6memsetEPvhm+0xc>
90011792:	f800 1b01 	strb.w	r1, [r0], #1
90011796:	e7fa      	b.n	9001178e <_ZN8touchgfx6memsetEPvhm+0x2>
90011798:	4770      	bx	lr

9001179a <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
9001179a:	2000      	movs	r0, #0
9001179c:	4770      	bx	lr

9001179e <_ZN8touchgfx9DragEvent12getEventTypeEv>:
9001179e:	2001      	movs	r0, #1
900117a0:	4770      	bx	lr

900117a2 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
900117a2:	2002      	movs	r0, #2
900117a4:	4770      	bx	lr

900117a6 <_ZN8touchgfx12GestureEventD1Ev>:
900117a6:	4770      	bx	lr

900117a8 <_ZN8touchgfx9DragEventD1Ev>:
900117a8:	4770      	bx	lr

900117aa <_ZN8touchgfx10ClickEventD1Ev>:
900117aa:	4770      	bx	lr

900117ac <_ZN8touchgfx10ClickEventD0Ev>:
900117ac:	b510      	push	{r4, lr}
900117ae:	4604      	mov	r4, r0
900117b0:	210c      	movs	r1, #12
900117b2:	f00d fd48 	bl	9001f246 <_ZdlPvj>
900117b6:	4620      	mov	r0, r4
900117b8:	bd10      	pop	{r4, pc}

900117ba <_ZN8touchgfx9DragEventD0Ev>:
900117ba:	b510      	push	{r4, lr}
900117bc:	4604      	mov	r4, r0
900117be:	2110      	movs	r1, #16
900117c0:	f00d fd41 	bl	9001f246 <_ZdlPvj>
900117c4:	4620      	mov	r0, r4
900117c6:	bd10      	pop	{r4, pc}

900117c8 <_ZN8touchgfx12GestureEventD0Ev>:
900117c8:	b510      	push	{r4, lr}
900117ca:	4604      	mov	r4, r0
900117cc:	210c      	movs	r1, #12
900117ce:	f00d fd3a 	bl	9001f246 <_ZdlPvj>
900117d2:	4620      	mov	r0, r4
900117d4:	bd10      	pop	{r4, pc}
	...

900117d8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
900117d8:	b530      	push	{r4, r5, lr}
900117da:	460d      	mov	r5, r1
900117dc:	6b01      	ldr	r1, [r0, #48]	; 0x30
900117de:	b087      	sub	sp, #28
900117e0:	4604      	mov	r4, r0
900117e2:	b301      	cbz	r1, 90011826 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
900117e4:	a801      	add	r0, sp, #4
900117e6:	f7ff ff33 	bl	90011650 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900117ea:	892a      	ldrh	r2, [r5, #8]
900117ec:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900117f0:	7928      	ldrb	r0, [r5, #4]
900117f2:	1ad2      	subs	r2, r2, r3
900117f4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900117f6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900117fa:	441a      	add	r2, r3
900117fc:	896b      	ldrh	r3, [r5, #10]
900117fe:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90011802:	f88d 0010 	strb.w	r0, [sp, #16]
90011806:	1b5b      	subs	r3, r3, r5
90011808:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
9001180a:	6b20      	ldr	r0, [r4, #48]	; 0x30
9001180c:	442b      	add	r3, r5
9001180e:	4d07      	ldr	r5, [pc, #28]	; (9001182c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90011810:	f8ad 1012 	strh.w	r1, [sp, #18]
90011814:	a903      	add	r1, sp, #12
90011816:	9503      	str	r5, [sp, #12]
90011818:	f8ad 2014 	strh.w	r2, [sp, #20]
9001181c:	f8ad 3016 	strh.w	r3, [sp, #22]
90011820:	6803      	ldr	r3, [r0, #0]
90011822:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90011824:	4798      	blx	r3
90011826:	b007      	add	sp, #28
90011828:	bd30      	pop	{r4, r5, pc}
9001182a:	bf00      	nop
9001182c:	90022b78 	.word	0x90022b78

90011830 <_ZNK8touchgfx4Rect9intersectEss>:
90011830:	b510      	push	{r4, lr}
90011832:	f9b0 3000 	ldrsh.w	r3, [r0]
90011836:	428b      	cmp	r3, r1
90011838:	dc10      	bgt.n	9001185c <_ZNK8touchgfx4Rect9intersectEss+0x2c>
9001183a:	8884      	ldrh	r4, [r0, #4]
9001183c:	4423      	add	r3, r4
9001183e:	b21b      	sxth	r3, r3
90011840:	4299      	cmp	r1, r3
90011842:	da0b      	bge.n	9001185c <_ZNK8touchgfx4Rect9intersectEss+0x2c>
90011844:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90011848:	4293      	cmp	r3, r2
9001184a:	dc07      	bgt.n	9001185c <_ZNK8touchgfx4Rect9intersectEss+0x2c>
9001184c:	88c0      	ldrh	r0, [r0, #6]
9001184e:	4418      	add	r0, r3
90011850:	b200      	sxth	r0, r0
90011852:	4282      	cmp	r2, r0
90011854:	bfac      	ite	ge
90011856:	2000      	movge	r0, #0
90011858:	2001      	movlt	r0, #1
9001185a:	bd10      	pop	{r4, pc}
9001185c:	2000      	movs	r0, #0
9001185e:	e7fc      	b.n	9001185a <_ZNK8touchgfx4Rect9intersectEss+0x2a>

90011860 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90011860:	b5f0      	push	{r4, r5, r6, r7, lr}
90011862:	460c      	mov	r4, r1
90011864:	6b01      	ldr	r1, [r0, #48]	; 0x30
90011866:	b089      	sub	sp, #36	; 0x24
90011868:	4605      	mov	r5, r0
9001186a:	2900      	cmp	r1, #0
9001186c:	d054      	beq.n	90011918 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
9001186e:	4668      	mov	r0, sp
90011870:	f7ff feee 	bl	90011650 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011874:	8eae      	ldrh	r6, [r5, #52]	; 0x34
90011876:	8eef      	ldrh	r7, [r5, #54]	; 0x36
90011878:	4668      	mov	r0, sp
9001187a:	8922      	ldrh	r2, [r4, #8]
9001187c:	88e1      	ldrh	r1, [r4, #6]
9001187e:	443a      	add	r2, r7
90011880:	4431      	add	r1, r6
90011882:	b212      	sxth	r2, r2
90011884:	b209      	sxth	r1, r1
90011886:	f7ff ffd3 	bl	90011830 <_ZNK8touchgfx4Rect9intersectEss>
9001188a:	b1d0      	cbz	r0, 900118c2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
9001188c:	89a2      	ldrh	r2, [r4, #12]
9001188e:	4668      	mov	r0, sp
90011890:	8961      	ldrh	r1, [r4, #10]
90011892:	443a      	add	r2, r7
90011894:	4431      	add	r1, r6
90011896:	b212      	sxth	r2, r2
90011898:	b209      	sxth	r1, r1
9001189a:	f7ff ffc9 	bl	90011830 <_ZNK8touchgfx4Rect9intersectEss>
9001189e:	4603      	mov	r3, r0
900118a0:	b978      	cbnz	r0, 900118c2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
900118a2:	4a1e      	ldr	r2, [pc, #120]	; (9001191c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
900118a4:	a904      	add	r1, sp, #16
900118a6:	6b28      	ldr	r0, [r5, #48]	; 0x30
900118a8:	9204      	str	r2, [sp, #16]
900118aa:	2202      	movs	r2, #2
900118ac:	f8ad 3016 	strh.w	r3, [sp, #22]
900118b0:	f88d 2014 	strb.w	r2, [sp, #20]
900118b4:	f8ad 3018 	strh.w	r3, [sp, #24]
900118b8:	f8ad 301a 	strh.w	r3, [sp, #26]
900118bc:	6803      	ldr	r3, [r0, #0]
900118be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900118c0:	4798      	blx	r3
900118c2:	6b29      	ldr	r1, [r5, #48]	; 0x30
900118c4:	a802      	add	r0, sp, #8
900118c6:	f7ff fec3 	bl	90011650 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900118ca:	f8bd 2008 	ldrh.w	r2, [sp, #8]
900118ce:	88e0      	ldrh	r0, [r4, #6]
900118d0:	8961      	ldrh	r1, [r4, #10]
900118d2:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
900118d6:	1a80      	subs	r0, r0, r2
900118d8:	f8bd e00a 	ldrh.w	lr, [sp, #10]
900118dc:	1a89      	subs	r1, r1, r2
900118de:	8923      	ldrh	r3, [r4, #8]
900118e0:	4460      	add	r0, ip
900118e2:	89a2      	ldrh	r2, [r4, #12]
900118e4:	4461      	add	r1, ip
900118e6:	8eee      	ldrh	r6, [r5, #54]	; 0x36
900118e8:	eba3 030e 	sub.w	r3, r3, lr
900118ec:	eba2 020e 	sub.w	r2, r2, lr
900118f0:	f8ad 0016 	strh.w	r0, [sp, #22]
900118f4:	7927      	ldrb	r7, [r4, #4]
900118f6:	4433      	add	r3, r6
900118f8:	4432      	add	r2, r6
900118fa:	4c09      	ldr	r4, [pc, #36]	; (90011920 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
900118fc:	6b28      	ldr	r0, [r5, #48]	; 0x30
900118fe:	f8ad 101a 	strh.w	r1, [sp, #26]
90011902:	a904      	add	r1, sp, #16
90011904:	9404      	str	r4, [sp, #16]
90011906:	f88d 7014 	strb.w	r7, [sp, #20]
9001190a:	f8ad 3018 	strh.w	r3, [sp, #24]
9001190e:	f8ad 201c 	strh.w	r2, [sp, #28]
90011912:	6803      	ldr	r3, [r0, #0]
90011914:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90011916:	4798      	blx	r3
90011918:	b009      	add	sp, #36	; 0x24
9001191a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001191c:	90022b50 	.word	0x90022b50
90011920:	90022b64 	.word	0x90022b64

90011924 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90011924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011928:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
9001192c:	b0a1      	sub	sp, #132	; 0x84
9001192e:	4604      	mov	r4, r0
90011930:	460d      	mov	r5, r1
90011932:	790b      	ldrb	r3, [r1, #4]
90011934:	f1b9 0f00 	cmp.w	r9, #0
90011938:	d00f      	beq.n	9001195a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
9001193a:	2b00      	cmp	r3, #0
9001193c:	f040 80a2 	bne.w	90011a84 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x160>
90011940:	b021      	add	sp, #132	; 0x84
90011942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011946:	f104 0330 	add.w	r3, r4, #48	; 0x30
9001194a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
9001194e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90011952:	1d20      	adds	r0, r4, #4
90011954:	f7fb fccc 	bl	9000d2f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90011958:	e094      	b.n	90011a84 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x160>
9001195a:	2b00      	cmp	r3, #0
9001195c:	d1f0      	bne.n	90011940 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
9001195e:	4b5f      	ldr	r3, [pc, #380]	; (90011adc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
90011960:	681b      	ldr	r3, [r3, #0]
90011962:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
90011966:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
9001196a:	f1ba 0f03 	cmp.w	sl, #3
9001196e:	ddea      	ble.n	90011946 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
90011970:	f1ba 0f0c 	cmp.w	sl, #12
90011974:	f04f 0303 	mov.w	r3, #3
90011978:	f04f 0600 	mov.w	r6, #0
9001197c:	4958      	ldr	r1, [pc, #352]	; (90011ae0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
9001197e:	bfd8      	it	le
90011980:	f10a 32ff 	addle.w	r2, sl, #4294967295
90011984:	960a      	str	r6, [sp, #40]	; 0x28
90011986:	bfd8      	it	le
90011988:	fb92 f3f3 	sdivle	r3, r2, r3
9001198c:	9301      	str	r3, [sp, #4]
9001198e:	4b55      	ldr	r3, [pc, #340]	; (90011ae4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
90011990:	f9b3 2000 	ldrsh.w	r2, [r3]
90011994:	4b54      	ldr	r3, [pc, #336]	; (90011ae8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
90011996:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
9001199a:	2248      	movs	r2, #72	; 0x48
9001199c:	f9b3 3000 	ldrsh.w	r3, [r3]
900119a0:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900119a4:	ab0e      	add	r3, sp, #56	; 0x38
900119a6:	4618      	mov	r0, r3
900119a8:	f00d fcfa 	bl	9001f3a0 <memcpy>
900119ac:	f04f 32ff 	mov.w	r2, #4294967295
900119b0:	f8cd a008 	str.w	sl, [sp, #8]
900119b4:	e9cd 2006 	strd	r2, r0, [sp, #24]
900119b8:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
900119bc:	46b3      	mov	fp, r6
900119be:	fb93 f3f2 	sdiv	r3, r3, r2
900119c2:	b29b      	uxth	r3, r3
900119c4:	9303      	str	r3, [sp, #12]
900119c6:	2300      	movs	r3, #0
900119c8:	9a03      	ldr	r2, [sp, #12]
900119ca:	88ef      	ldrh	r7, [r5, #6]
900119cc:	a80a      	add	r0, sp, #40	; 0x28
900119ce:	9309      	str	r3, [sp, #36]	; 0x24
900119d0:	9b07      	ldr	r3, [sp, #28]
900119d2:	f8b5 8008 	ldrh.w	r8, [r5, #8]
900119d6:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
900119da:	fb13 f302 	smulbb	r3, r3, r2
900119de:	b29b      	uxth	r3, r3
900119e0:	9304      	str	r3, [sp, #16]
900119e2:	9b07      	ldr	r3, [sp, #28]
900119e4:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
900119e8:	685b      	ldr	r3, [r3, #4]
900119ea:	fb13 f302 	smulbb	r3, r3, r2
900119ee:	b29b      	uxth	r3, r3
900119f0:	9305      	str	r3, [sp, #20]
900119f2:	9b04      	ldr	r3, [sp, #16]
900119f4:	441f      	add	r7, r3
900119f6:	9b05      	ldr	r3, [sp, #20]
900119f8:	4498      	add	r8, r3
900119fa:	b23f      	sxth	r7, r7
900119fc:	fa0f f888 	sxth.w	r8, r8
90011a00:	4639      	mov	r1, r7
90011a02:	4642      	mov	r2, r8
90011a04:	f7ff ff14 	bl	90011830 <_ZNK8touchgfx4Rect9intersectEss>
90011a08:	b380      	cbz	r0, 90011a6c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x148>
90011a0a:	4639      	mov	r1, r7
90011a0c:	ab09      	add	r3, sp, #36	; 0x24
90011a0e:	4642      	mov	r2, r8
90011a10:	1d20      	adds	r0, r4, #4
90011a12:	f7fb fc6d 	bl	9000d2f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90011a16:	9909      	ldr	r1, [sp, #36]	; 0x24
90011a18:	b341      	cbz	r1, 90011a6c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x148>
90011a1a:	4549      	cmp	r1, r9
90011a1c:	d026      	beq.n	90011a6c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x148>
90011a1e:	a80c      	add	r0, sp, #48	; 0x30
90011a20:	f7ff fe16 	bl	90011650 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011a24:	2002      	movs	r0, #2
90011a26:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
90011a2a:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
90011a2e:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90011a32:	fb92 f2f0 	sdiv	r2, r2, r0
90011a36:	440a      	add	r2, r1
90011a38:	1a99      	subs	r1, r3, r2
90011a3a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
90011a3e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
90011a42:	fb93 f3f0 	sdiv	r3, r3, r0
90011a46:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
90011a4a:	4403      	add	r3, r0
90011a4c:	1ad3      	subs	r3, r2, r3
90011a4e:	9a06      	ldr	r2, [sp, #24]
90011a50:	435b      	muls	r3, r3
90011a52:	fb01 3301 	mla	r3, r1, r1, r3
90011a56:	4293      	cmp	r3, r2
90011a58:	d208      	bcs.n	90011a6c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x148>
90011a5a:	9a04      	ldr	r2, [sp, #16]
90011a5c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
90011a60:	86a2      	strh	r2, [r4, #52]	; 0x34
90011a62:	9a05      	ldr	r2, [sp, #20]
90011a64:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
90011a68:	86e2      	strh	r2, [r4, #54]	; 0x36
90011a6a:	9306      	str	r3, [sp, #24]
90011a6c:	f10b 0b02 	add.w	fp, fp, #2
90011a70:	f1bb 0f08 	cmp.w	fp, #8
90011a74:	dda7      	ble.n	900119c6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa2>
90011a76:	9b02      	ldr	r3, [sp, #8]
90011a78:	3601      	adds	r6, #1
90011a7a:	4453      	add	r3, sl
90011a7c:	9302      	str	r3, [sp, #8]
90011a7e:	9b01      	ldr	r3, [sp, #4]
90011a80:	42b3      	cmp	r3, r6
90011a82:	d199      	bne.n	900119b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x94>
90011a84:	6b21      	ldr	r1, [r4, #48]	; 0x30
90011a86:	2900      	cmp	r1, #0
90011a88:	f43f af5a 	beq.w	90011940 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
90011a8c:	a80c      	add	r0, sp, #48	; 0x30
90011a8e:	2600      	movs	r6, #0
90011a90:	f7ff fdde 	bl	90011650 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011a94:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
90011a98:	88ea      	ldrh	r2, [r5, #6]
90011a9a:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
90011a9e:	1ad2      	subs	r2, r2, r3
90011aa0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90011aa2:	7929      	ldrb	r1, [r5, #4]
90011aa4:	441a      	add	r2, r3
90011aa6:	892b      	ldrh	r3, [r5, #8]
90011aa8:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
90011aac:	a90e      	add	r1, sp, #56	; 0x38
90011aae:	1a1b      	subs	r3, r3, r0
90011ab0:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
90011ab2:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
90011ab6:	4403      	add	r3, r0
90011ab8:	480c      	ldr	r0, [pc, #48]	; (90011aec <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c8>)
90011aba:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
90011abe:	900e      	str	r0, [sp, #56]	; 0x38
90011ac0:	6b20      	ldr	r0, [r4, #48]	; 0x30
90011ac2:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90011ac6:	6803      	ldr	r3, [r0, #0]
90011ac8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90011aca:	4798      	blx	r3
90011acc:	792b      	ldrb	r3, [r5, #4]
90011ace:	2b00      	cmp	r3, #0
90011ad0:	f43f af36 	beq.w	90011940 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
90011ad4:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
90011ad8:	e732      	b.n	90011940 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
90011ada:	bf00      	nop
90011adc:	24012ae0 	.word	0x24012ae0
90011ae0:	900210ac 	.word	0x900210ac
90011ae4:	24012ad4 	.word	0x24012ad4
90011ae8:	24012ad6 	.word	0x24012ad6
90011aec:	90022b50 	.word	0x90022b50

90011af0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
90011af0:	b537      	push	{r0, r1, r2, r4, r5, lr}
90011af2:	4604      	mov	r4, r0
90011af4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90011af8:	3201      	adds	r2, #1
90011afa:	d112      	bne.n	90011b22 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90011afc:	2500      	movs	r5, #0
90011afe:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90011b02:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90011b06:	6803      	ldr	r3, [r0, #0]
90011b08:	9500      	str	r5, [sp, #0]
90011b0a:	466d      	mov	r5, sp
90011b0c:	f8ad 1004 	strh.w	r1, [sp, #4]
90011b10:	f8ad 2006 	strh.w	r2, [sp, #6]
90011b14:	4629      	mov	r1, r5
90011b16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90011b18:	4798      	blx	r3
90011b1a:	e895 0003 	ldmia.w	r5, {r0, r1}
90011b1e:	e884 0003 	stmia.w	r4, {r0, r1}
90011b22:	4620      	mov	r0, r4
90011b24:	b003      	add	sp, #12
90011b26:	bd30      	pop	{r4, r5, pc}

90011b28 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
90011b28:	b513      	push	{r0, r1, r4, lr}
90011b2a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
90011b2e:	4604      	mov	r4, r0
90011b30:	3301      	adds	r3, #1
90011b32:	d109      	bne.n	90011b48 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90011b34:	4601      	mov	r1, r0
90011b36:	4668      	mov	r0, sp
90011b38:	f7ff fd8a 	bl	90011650 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011b3c:	f8bd 3000 	ldrh.w	r3, [sp]
90011b40:	8423      	strh	r3, [r4, #32]
90011b42:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011b46:	8463      	strh	r3, [r4, #34]	; 0x22
90011b48:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90011b4c:	b002      	add	sp, #8
90011b4e:	bd10      	pop	{r4, pc}

90011b50 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90011b50:	b513      	push	{r0, r1, r4, lr}
90011b52:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
90011b56:	4604      	mov	r4, r0
90011b58:	3301      	adds	r3, #1
90011b5a:	d109      	bne.n	90011b70 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90011b5c:	4601      	mov	r1, r0
90011b5e:	4668      	mov	r0, sp
90011b60:	f7ff fd76 	bl	90011650 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011b64:	f8bd 3000 	ldrh.w	r3, [sp]
90011b68:	8423      	strh	r3, [r4, #32]
90011b6a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011b6e:	8463      	strh	r3, [r4, #34]	; 0x22
90011b70:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
90011b74:	b002      	add	sp, #8
90011b76:	bd10      	pop	{r4, pc}

90011b78 <_ZN8touchgfx6ScreenC1Ev>:
90011b78:	b570      	push	{r4, r5, r6, lr}
90011b7a:	4b16      	ldr	r3, [pc, #88]	; (90011bd4 <_ZN8touchgfx6ScreenC1Ev+0x5c>)
90011b7c:	4605      	mov	r5, r0
90011b7e:	4a16      	ldr	r2, [pc, #88]	; (90011bd8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
90011b80:	2101      	movs	r1, #1
90011b82:	f845 3b04 	str.w	r3, [r5], #4
90011b86:	2300      	movs	r3, #0
90011b88:	6042      	str	r2, [r0, #4]
90011b8a:	4604      	mov	r4, r0
90011b8c:	8103      	strh	r3, [r0, #8]
90011b8e:	8143      	strh	r3, [r0, #10]
90011b90:	8183      	strh	r3, [r0, #12]
90011b92:	81c3      	strh	r3, [r0, #14]
90011b94:	8203      	strh	r3, [r0, #16]
90011b96:	8243      	strh	r3, [r0, #18]
90011b98:	8283      	strh	r3, [r0, #20]
90011b9a:	82c3      	strh	r3, [r0, #22]
90011b9c:	6203      	str	r3, [r0, #32]
90011b9e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90011ba2:	6343      	str	r3, [r0, #52]	; 0x34
90011ba4:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90011ba8:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
90011bac:	e9c0 3306 	strd	r3, r3, [r0, #24]
90011bb0:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
90011bb4:	4b09      	ldr	r3, [pc, #36]	; (90011bdc <_ZN8touchgfx6ScreenC1Ev+0x64>)
90011bb6:	4628      	mov	r0, r5
90011bb8:	f9b3 6000 	ldrsh.w	r6, [r3]
90011bbc:	6b53      	ldr	r3, [r2, #52]	; 0x34
90011bbe:	4a08      	ldr	r2, [pc, #32]	; (90011be0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
90011bc0:	f9b2 1000 	ldrsh.w	r1, [r2]
90011bc4:	4798      	blx	r3
90011bc6:	6863      	ldr	r3, [r4, #4]
90011bc8:	4628      	mov	r0, r5
90011bca:	4631      	mov	r1, r6
90011bcc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011bce:	4798      	blx	r3
90011bd0:	4620      	mov	r0, r4
90011bd2:	bd70      	pop	{r4, r5, r6, pc}
90011bd4:	90022b8c 	.word	0x90022b8c
90011bd8:	90021c64 	.word	0x90021c64
90011bdc:	24012ad6 	.word	0x24012ad6
90011be0:	24012ad4 	.word	0x24012ad4

90011be4 <_ZN8touchgfx6Screen4drawEv>:
90011be4:	4b09      	ldr	r3, [pc, #36]	; (90011c0c <_ZN8touchgfx6Screen4drawEv+0x28>)
90011be6:	b507      	push	{r0, r1, r2, lr}
90011be8:	f9b3 2000 	ldrsh.w	r2, [r3]
90011bec:	2100      	movs	r1, #0
90011bee:	4b08      	ldr	r3, [pc, #32]	; (90011c10 <_ZN8touchgfx6Screen4drawEv+0x2c>)
90011bf0:	9100      	str	r1, [sp, #0]
90011bf2:	4669      	mov	r1, sp
90011bf4:	f9b3 3000 	ldrsh.w	r3, [r3]
90011bf8:	f8ad 2004 	strh.w	r2, [sp, #4]
90011bfc:	f8ad 3006 	strh.w	r3, [sp, #6]
90011c00:	6803      	ldr	r3, [r0, #0]
90011c02:	689b      	ldr	r3, [r3, #8]
90011c04:	4798      	blx	r3
90011c06:	b003      	add	sp, #12
90011c08:	f85d fb04 	ldr.w	pc, [sp], #4
90011c0c:	24012ad4 	.word	0x24012ad4
90011c10:	24012ad6 	.word	0x24012ad6

90011c14 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
90011c14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011c18:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
90011c1c:	b089      	sub	sp, #36	; 0x24
90011c1e:	4680      	mov	r8, r0
90011c20:	460c      	mov	r4, r1
90011c22:	2b00      	cmp	r3, #0
90011c24:	4615      	mov	r5, r2
90011c26:	dd0e      	ble.n	90011c46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90011c28:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
90011c2c:	2b00      	cmp	r3, #0
90011c2e:	dd0a      	ble.n	90011c46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90011c30:	4628      	mov	r0, r5
90011c32:	f7ff ff5d 	bl	90011af0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90011c36:	4621      	mov	r1, r4
90011c38:	f7fe fc74 	bl	90010524 <_ZNK8touchgfx4Rect9intersectERKS0_>
90011c3c:	69eb      	ldr	r3, [r5, #28]
90011c3e:	b928      	cbnz	r0, 90011c4c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90011c40:	461d      	mov	r5, r3
90011c42:	2b00      	cmp	r3, #0
90011c44:	d1f4      	bne.n	90011c30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
90011c46:	b009      	add	sp, #36	; 0x24
90011c48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011c4c:	ae04      	add	r6, sp, #16
90011c4e:	2b00      	cmp	r3, #0
90011c50:	f000 80b5 	beq.w	90011dbe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90011c54:	682b      	ldr	r3, [r5, #0]
90011c56:	4629      	mov	r1, r5
90011c58:	a802      	add	r0, sp, #8
90011c5a:	68db      	ldr	r3, [r3, #12]
90011c5c:	4798      	blx	r3
90011c5e:	4628      	mov	r0, r5
90011c60:	f7ff ff62 	bl	90011b28 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90011c64:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90011c68:	4407      	add	r7, r0
90011c6a:	4628      	mov	r0, r5
90011c6c:	f7ff ff70 	bl	90011b50 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90011c70:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90011c74:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90011c78:	b23f      	sxth	r7, r7
90011c7a:	4418      	add	r0, r3
90011c7c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90011c80:	4621      	mov	r1, r4
90011c82:	f8ad 2014 	strh.w	r2, [sp, #20]
90011c86:	f8ad 0012 	strh.w	r0, [sp, #18]
90011c8a:	4630      	mov	r0, r6
90011c8c:	f8ad 3016 	strh.w	r3, [sp, #22]
90011c90:	f8ad 7010 	strh.w	r7, [sp, #16]
90011c94:	f7fb fbde 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
90011c98:	4628      	mov	r0, r5
90011c9a:	f7ff ff29 	bl	90011af0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90011c9e:	ab06      	add	r3, sp, #24
90011ca0:	4602      	mov	r2, r0
90011ca2:	e896 0003 	ldmia.w	r6, {r0, r1}
90011ca6:	e883 0003 	stmia.w	r3, {r0, r1}
90011caa:	4611      	mov	r1, r2
90011cac:	4618      	mov	r0, r3
90011cae:	f7fb fbd1 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
90011cb2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90011cb6:	f9b4 1000 	ldrsh.w	r1, [r4]
90011cba:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
90011cbe:	4299      	cmp	r1, r3
90011cc0:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90011cc4:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90011cc8:	d10b      	bne.n	90011ce2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90011cca:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90011cce:	4552      	cmp	r2, sl
90011cd0:	d107      	bne.n	90011ce2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90011cd2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90011cd6:	455a      	cmp	r2, fp
90011cd8:	d103      	bne.n	90011ce2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90011cda:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90011cde:	454a      	cmp	r2, r9
90011ce0:	d06d      	beq.n	90011dbe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90011ce2:	f1bb 0f00 	cmp.w	fp, #0
90011ce6:	dd65      	ble.n	90011db4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90011ce8:	f1b9 0f00 	cmp.w	r9, #0
90011cec:	dd62      	ble.n	90011db4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90011cee:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90011cf2:	fa1f f08a 	uxth.w	r0, sl
90011cf6:	4552      	cmp	r2, sl
90011cf8:	9000      	str	r0, [sp, #0]
90011cfa:	da12      	bge.n	90011d22 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
90011cfc:	9301      	str	r3, [sp, #4]
90011cfe:	9b00      	ldr	r3, [sp, #0]
90011d00:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90011d04:	f8ad 2012 	strh.w	r2, [sp, #18]
90011d08:	1a9a      	subs	r2, r3, r2
90011d0a:	f8ad 1010 	strh.w	r1, [sp, #16]
90011d0e:	4631      	mov	r1, r6
90011d10:	f8ad 0014 	strh.w	r0, [sp, #20]
90011d14:	4640      	mov	r0, r8
90011d16:	f8ad 2016 	strh.w	r2, [sp, #22]
90011d1a:	69ea      	ldr	r2, [r5, #28]
90011d1c:	f7ff ff7a 	bl	90011c14 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90011d20:	9b01      	ldr	r3, [sp, #4]
90011d22:	f9b4 2000 	ldrsh.w	r2, [r4]
90011d26:	b29f      	uxth	r7, r3
90011d28:	429a      	cmp	r2, r3
90011d2a:	da0d      	bge.n	90011d48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
90011d2c:	f8ad 2010 	strh.w	r2, [sp, #16]
90011d30:	1aba      	subs	r2, r7, r2
90011d32:	f8ad a012 	strh.w	sl, [sp, #18]
90011d36:	4631      	mov	r1, r6
90011d38:	f8ad 2014 	strh.w	r2, [sp, #20]
90011d3c:	4640      	mov	r0, r8
90011d3e:	f8ad 9016 	strh.w	r9, [sp, #22]
90011d42:	69ea      	ldr	r2, [r5, #28]
90011d44:	f7ff ff66 	bl	90011c14 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90011d48:	8822      	ldrh	r2, [r4, #0]
90011d4a:	445f      	add	r7, fp
90011d4c:	88a3      	ldrh	r3, [r4, #4]
90011d4e:	b2bf      	uxth	r7, r7
90011d50:	4413      	add	r3, r2
90011d52:	b23a      	sxth	r2, r7
90011d54:	b29b      	uxth	r3, r3
90011d56:	b219      	sxth	r1, r3
90011d58:	4291      	cmp	r1, r2
90011d5a:	dd0d      	ble.n	90011d78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90011d5c:	1bdb      	subs	r3, r3, r7
90011d5e:	f8ad 2010 	strh.w	r2, [sp, #16]
90011d62:	f8ad a012 	strh.w	sl, [sp, #18]
90011d66:	4631      	mov	r1, r6
90011d68:	f8ad 3014 	strh.w	r3, [sp, #20]
90011d6c:	4640      	mov	r0, r8
90011d6e:	f8ad 9016 	strh.w	r9, [sp, #22]
90011d72:	69ea      	ldr	r2, [r5, #28]
90011d74:	f7ff ff4e 	bl	90011c14 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90011d78:	88e2      	ldrh	r2, [r4, #6]
90011d7a:	8863      	ldrh	r3, [r4, #2]
90011d7c:	4413      	add	r3, r2
90011d7e:	9a00      	ldr	r2, [sp, #0]
90011d80:	444a      	add	r2, r9
90011d82:	b29b      	uxth	r3, r3
90011d84:	fa1f f982 	uxth.w	r9, r2
90011d88:	b219      	sxth	r1, r3
90011d8a:	fa0f f289 	sxth.w	r2, r9
90011d8e:	428a      	cmp	r2, r1
90011d90:	da15      	bge.n	90011dbe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90011d92:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90011d96:	eba3 0309 	sub.w	r3, r3, r9
90011d9a:	f9b4 0000 	ldrsh.w	r0, [r4]
90011d9e:	f8ad 1014 	strh.w	r1, [sp, #20]
90011da2:	4631      	mov	r1, r6
90011da4:	f8ad 0010 	strh.w	r0, [sp, #16]
90011da8:	f8ad 2012 	strh.w	r2, [sp, #18]
90011dac:	f8ad 3016 	strh.w	r3, [sp, #22]
90011db0:	69ea      	ldr	r2, [r5, #28]
90011db2:	e001      	b.n	90011db8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90011db4:	69ea      	ldr	r2, [r5, #28]
90011db6:	4621      	mov	r1, r4
90011db8:	4640      	mov	r0, r8
90011dba:	f7ff ff2b 	bl	90011c14 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90011dbe:	4628      	mov	r0, r5
90011dc0:	f7ff fe96 	bl	90011af0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90011dc4:	6861      	ldr	r1, [r4, #4]
90011dc6:	4602      	mov	r2, r0
90011dc8:	4633      	mov	r3, r6
90011dca:	6820      	ldr	r0, [r4, #0]
90011dcc:	c303      	stmia	r3!, {r0, r1}
90011dce:	4611      	mov	r1, r2
90011dd0:	4630      	mov	r0, r6
90011dd2:	f7fb fb3f 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
90011dd6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90011dda:	2b00      	cmp	r3, #0
90011ddc:	f77f af33 	ble.w	90011c46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90011de0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90011de4:	2b00      	cmp	r3, #0
90011de6:	f77f af2e 	ble.w	90011c46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90011dea:	4628      	mov	r0, r5
90011dec:	f7ff fe9c 	bl	90011b28 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90011df0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90011df4:	1a18      	subs	r0, r3, r0
90011df6:	f8ad 0010 	strh.w	r0, [sp, #16]
90011dfa:	4628      	mov	r0, r5
90011dfc:	f7ff fea8 	bl	90011b50 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90011e00:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90011e04:	4631      	mov	r1, r6
90011e06:	1a18      	subs	r0, r3, r0
90011e08:	f8ad 0012 	strh.w	r0, [sp, #18]
90011e0c:	4628      	mov	r0, r5
90011e0e:	682b      	ldr	r3, [r5, #0]
90011e10:	689b      	ldr	r3, [r3, #8]
90011e12:	4798      	blx	r3
90011e14:	e717      	b.n	90011c46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90011e16 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90011e16:	b537      	push	{r0, r1, r2, r4, r5, lr}
90011e18:	2300      	movs	r3, #0
90011e1a:	aa02      	add	r2, sp, #8
90011e1c:	4604      	mov	r4, r0
90011e1e:	3004      	adds	r0, #4
90011e20:	f842 3d04 	str.w	r3, [r2, #-4]!
90011e24:	460d      	mov	r5, r1
90011e26:	f7fb fbed 	bl	9000d604 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90011e2a:	9a01      	ldr	r2, [sp, #4]
90011e2c:	b11a      	cbz	r2, 90011e36 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
90011e2e:	4629      	mov	r1, r5
90011e30:	4620      	mov	r0, r4
90011e32:	f7ff feef 	bl	90011c14 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90011e36:	b003      	add	sp, #12
90011e38:	bd30      	pop	{r4, r5, pc}

90011e3a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90011e3a:	b537      	push	{r0, r1, r2, r4, r5, lr}
90011e3c:	4602      	mov	r2, r0
90011e3e:	4604      	mov	r4, r0
90011e40:	460d      	mov	r5, r1
90011e42:	466b      	mov	r3, sp
90011e44:	f852 0f08 	ldr.w	r0, [r2, #8]!
90011e48:	6851      	ldr	r1, [r2, #4]
90011e4a:	c303      	stmia	r3!, {r0, r1}
90011e4c:	4629      	mov	r1, r5
90011e4e:	4668      	mov	r0, sp
90011e50:	f7fb fb00 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
90011e54:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011e58:	4669      	mov	r1, sp
90011e5a:	b123      	cbz	r3, 90011e66 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
90011e5c:	4620      	mov	r0, r4
90011e5e:	f7ff ffda 	bl	90011e16 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90011e62:	b003      	add	sp, #12
90011e64:	bd30      	pop	{r4, r5, pc}
90011e66:	1d20      	adds	r0, r4, #4
90011e68:	f7fb fb93 	bl	9000d592 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90011e6c:	e7f9      	b.n	90011e62 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

90011e6e <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90011e6e:	460b      	mov	r3, r1
90011e70:	680a      	ldr	r2, [r1, #0]
90011e72:	1d01      	adds	r1, r0, #4
90011e74:	6992      	ldr	r2, [r2, #24]
90011e76:	4618      	mov	r0, r3
90011e78:	4710      	bx	r2

90011e7a <_ZN8touchgfx12TextProviderC1Ev>:
90011e7a:	2300      	movs	r3, #0
90011e7c:	2201      	movs	r2, #1
90011e7e:	b510      	push	{r4, lr}
90011e80:	4604      	mov	r4, r0
90011e82:	60c3      	str	r3, [r0, #12]
90011e84:	7403      	strb	r3, [r0, #16]
90011e86:	82c3      	strh	r3, [r0, #22]
90011e88:	8303      	strh	r3, [r0, #24]
90011e8a:	85c3      	strh	r3, [r0, #46]	; 0x2e
90011e8c:	8603      	strh	r3, [r0, #48]	; 0x30
90011e8e:	86c3      	strh	r3, [r0, #54]	; 0x36
90011e90:	8703      	strh	r3, [r0, #56]	; 0x38
90011e92:	63c3      	str	r3, [r0, #60]	; 0x3c
90011e94:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
90011e98:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
90011e9c:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
90011ea0:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
90011ea4:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
90011ea8:	e9c0 3300 	strd	r3, r3, [r0]
90011eac:	f7f3 fc3a 	bl	90005724 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90011eb0:	4620      	mov	r0, r4
90011eb2:	bd10      	pop	{r4, pc}

90011eb4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
90011eb4:	b530      	push	{r4, r5, lr}
90011eb6:	2500      	movs	r5, #0
90011eb8:	2401      	movs	r4, #1
90011eba:	6843      	ldr	r3, [r0, #4]
90011ebc:	b913      	cbnz	r3, 90011ec4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90011ebe:	6803      	ldr	r3, [r0, #0]
90011ec0:	b1f3      	cbz	r3, 90011f00 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
90011ec2:	6043      	str	r3, [r0, #4]
90011ec4:	7c03      	ldrb	r3, [r0, #16]
90011ec6:	b143      	cbz	r3, 90011eda <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
90011ec8:	68c3      	ldr	r3, [r0, #12]
90011eca:	b12b      	cbz	r3, 90011ed8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90011ecc:	881a      	ldrh	r2, [r3, #0]
90011ece:	b11a      	cbz	r2, 90011ed8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90011ed0:	1c9a      	adds	r2, r3, #2
90011ed2:	60c2      	str	r2, [r0, #12]
90011ed4:	8818      	ldrh	r0, [r3, #0]
90011ed6:	bd30      	pop	{r4, r5, pc}
90011ed8:	7405      	strb	r5, [r0, #16]
90011eda:	6843      	ldr	r3, [r0, #4]
90011edc:	8819      	ldrh	r1, [r3, #0]
90011ede:	b179      	cbz	r1, 90011f00 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
90011ee0:	1c9a      	adds	r2, r3, #2
90011ee2:	2902      	cmp	r1, #2
90011ee4:	6042      	str	r2, [r0, #4]
90011ee6:	d1f5      	bne.n	90011ed4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90011ee8:	6883      	ldr	r3, [r0, #8]
90011eea:	1d1a      	adds	r2, r3, #4
90011eec:	6082      	str	r2, [r0, #8]
90011eee:	681b      	ldr	r3, [r3, #0]
90011ef0:	60c3      	str	r3, [r0, #12]
90011ef2:	2b00      	cmp	r3, #0
90011ef4:	d0e1      	beq.n	90011eba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90011ef6:	881b      	ldrh	r3, [r3, #0]
90011ef8:	2b00      	cmp	r3, #0
90011efa:	d0de      	beq.n	90011eba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90011efc:	7404      	strb	r4, [r0, #16]
90011efe:	e7dc      	b.n	90011eba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90011f00:	2000      	movs	r0, #0
90011f02:	e7e8      	b.n	90011ed6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90011f04 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
90011f04:	63c3      	str	r3, [r0, #60]	; 0x3c
90011f06:	2300      	movs	r3, #0
90011f08:	6082      	str	r2, [r0, #8]
90011f0a:	6001      	str	r1, [r0, #0]
90011f0c:	6043      	str	r3, [r0, #4]
90011f0e:	60c3      	str	r3, [r0, #12]
90011f10:	7403      	strb	r3, [r0, #16]
90011f12:	8603      	strh	r3, [r0, #48]	; 0x30
90011f14:	8303      	strh	r3, [r0, #24]
90011f16:	8703      	strh	r3, [r0, #56]	; 0x38
90011f18:	b410      	push	{r4}
90011f1a:	f85d 4b04 	ldr.w	r4, [sp], #4
90011f1e:	f7f3 bc01 	b.w	90005724 <_ZN8touchgfx12TextProvider18initializeInternalEv>

90011f22 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90011f22:	b5f0      	push	{r4, r5, r6, r7, lr}
90011f24:	4605      	mov	r5, r0
90011f26:	4608      	mov	r0, r1
90011f28:	b1f1      	cbz	r1, 90011f68 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90011f2a:	f105 0440 	add.w	r4, r5, #64	; 0x40
90011f2e:	460b      	mov	r3, r1
90011f30:	f101 0708 	add.w	r7, r1, #8
90011f34:	4622      	mov	r2, r4
90011f36:	6818      	ldr	r0, [r3, #0]
90011f38:	3308      	adds	r3, #8
90011f3a:	f853 1c04 	ldr.w	r1, [r3, #-4]
90011f3e:	4626      	mov	r6, r4
90011f40:	42bb      	cmp	r3, r7
90011f42:	c603      	stmia	r6!, {r0, r1}
90011f44:	4634      	mov	r4, r6
90011f46:	d1f6      	bne.n	90011f36 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
90011f48:	6818      	ldr	r0, [r3, #0]
90011f4a:	6030      	str	r0, [r6, #0]
90011f4c:	4610      	mov	r0, r2
90011f4e:	889b      	ldrh	r3, [r3, #4]
90011f50:	80b3      	strh	r3, [r6, #4]
90011f52:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
90011f56:	015b      	lsls	r3, r3, #5
90011f58:	f403 7180 	and.w	r1, r3, #256	; 0x100
90011f5c:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
90011f60:	430b      	orrs	r3, r1
90011f62:	425b      	negs	r3, r3
90011f64:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
90011f68:	bdf0      	pop	{r4, r5, r6, r7, pc}

90011f6a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90011f6a:	b538      	push	{r3, r4, r5, lr}
90011f6c:	460c      	mov	r4, r1
90011f6e:	6811      	ldr	r1, [r2, #0]
90011f70:	4610      	mov	r0, r2
90011f72:	68cd      	ldr	r5, [r1, #12]
90011f74:	4619      	mov	r1, r3
90011f76:	47a8      	blx	r5
90011f78:	2800      	cmp	r0, #0
90011f7a:	bf08      	it	eq
90011f7c:	4620      	moveq	r0, r4
90011f7e:	bd38      	pop	{r3, r4, r5, pc}

90011f80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90011f80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90011f82:	4604      	mov	r4, r0
90011f84:	4615      	mov	r5, r2
90011f86:	4608      	mov	r0, r1
90011f88:	b93a      	cbnz	r2, 90011f9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
90011f8a:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
90011f8e:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
90011f92:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
90011f96:	4628      	mov	r0, r5
90011f98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90011f9a:	f892 c00d 	ldrb.w	ip, [r2, #13]
90011f9e:	8893      	ldrh	r3, [r2, #4]
90011fa0:	ea4f 160c 	mov.w	r6, ip, lsl #4
90011fa4:	f406 7280 	and.w	r2, r6, #256	; 0x100
90011fa8:	79ee      	ldrb	r6, [r5, #7]
90011faa:	4316      	orrs	r6, r2
90011fac:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
90011fb0:	189a      	adds	r2, r3, r2
90011fb2:	b2b7      	uxth	r7, r6
90011fb4:	b291      	uxth	r1, r2
90011fb6:	291d      	cmp	r1, #29
90011fb8:	f200 8084 	bhi.w	900120c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
90011fbc:	2201      	movs	r2, #1
90011fbe:	10f6      	asrs	r6, r6, #3
90011fc0:	408a      	lsls	r2, r1
90011fc2:	4978      	ldr	r1, [pc, #480]	; (900121a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
90011fc4:	420a      	tst	r2, r1
90011fc6:	d12e      	bne.n	90012026 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
90011fc8:	f412 7f60 	tst.w	r2, #896	; 0x380
90011fcc:	d07a      	beq.n	900120c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
90011fce:	f104 0240 	add.w	r2, r4, #64	; 0x40
90011fd2:	462b      	mov	r3, r5
90011fd4:	f105 0e08 	add.w	lr, r5, #8
90011fd8:	4615      	mov	r5, r2
90011fda:	6818      	ldr	r0, [r3, #0]
90011fdc:	3308      	adds	r3, #8
90011fde:	f853 1c04 	ldr.w	r1, [r3, #-4]
90011fe2:	4694      	mov	ip, r2
90011fe4:	4573      	cmp	r3, lr
90011fe6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90011fea:	4662      	mov	r2, ip
90011fec:	d1f5      	bne.n	90011fda <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
90011fee:	6818      	ldr	r0, [r3, #0]
90011ff0:	f8cc 0000 	str.w	r0, [ip]
90011ff4:	889b      	ldrh	r3, [r3, #4]
90011ff6:	f8ac 3004 	strh.w	r3, [ip, #4]
90011ffa:	b2b3      	uxth	r3, r6
90011ffc:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
90012000:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
90012004:	1aca      	subs	r2, r1, r3
90012006:	1bcf      	subs	r7, r1, r7
90012008:	f020 0060 	bic.w	r0, r0, #96	; 0x60
9001200c:	b292      	uxth	r2, r2
9001200e:	1afb      	subs	r3, r7, r3
90012010:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
90012014:	10d2      	asrs	r2, r2, #3
90012016:	f002 0260 	and.w	r2, r2, #96	; 0x60
9001201a:	4302      	orrs	r2, r0
9001201c:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
90012020:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
90012024:	e7b7      	b.n	90011f96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90012026:	8e23      	ldrh	r3, [r4, #48]	; 0x30
90012028:	b92b      	cbnz	r3, 90012036 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
9001202a:	4b5f      	ldr	r3, [pc, #380]	; (900121a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
9001202c:	21c0      	movs	r1, #192	; 0xc0
9001202e:	4a5f      	ldr	r2, [pc, #380]	; (900121ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
90012030:	485f      	ldr	r0, [pc, #380]	; (900121b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
90012032:	f00d f937 	bl	9001f2a4 <__assert_func>
90012036:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
90012038:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001203c:	8b59      	ldrh	r1, [r3, #26]
9001203e:	f640 6333 	movw	r3, #3635	; 0xe33
90012042:	4299      	cmp	r1, r3
90012044:	d110      	bne.n	90012068 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
90012046:	6803      	ldr	r3, [r0, #0]
90012048:	68db      	ldr	r3, [r3, #12]
9001204a:	4798      	blx	r3
9001204c:	7b41      	ldrb	r1, [r0, #13]
9001204e:	00cb      	lsls	r3, r1, #3
90012050:	f403 7280 	and.w	r2, r3, #256	; 0x100
90012054:	7a03      	ldrb	r3, [r0, #8]
90012056:	0648      	lsls	r0, r1, #25
90012058:	ea43 0302 	orr.w	r3, r3, r2
9001205c:	bf44      	itt	mi
9001205e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90012062:	b21b      	sxthmi	r3, r3
90012064:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
90012068:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
9001206c:	462a      	mov	r2, r5
9001206e:	f105 0c08 	add.w	ip, r5, #8
90012072:	443b      	add	r3, r7
90012074:	4433      	add	r3, r6
90012076:	f104 0640 	add.w	r6, r4, #64	; 0x40
9001207a:	b29b      	uxth	r3, r3
9001207c:	4635      	mov	r5, r6
9001207e:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
90012082:	6810      	ldr	r0, [r2, #0]
90012084:	3208      	adds	r2, #8
90012086:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001208a:	4637      	mov	r7, r6
9001208c:	4562      	cmp	r2, ip
9001208e:	c703      	stmia	r7!, {r0, r1}
90012090:	463e      	mov	r6, r7
90012092:	d1f6      	bne.n	90012082 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
90012094:	6810      	ldr	r0, [r2, #0]
90012096:	6038      	str	r0, [r7, #0]
90012098:	8892      	ldrh	r2, [r2, #4]
9001209a:	80ba      	strh	r2, [r7, #4]
9001209c:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
900120a0:	10db      	asrs	r3, r3, #3
900120a2:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
900120a6:	f003 0360 	and.w	r3, r3, #96	; 0x60
900120aa:	f022 0260 	bic.w	r2, r2, #96	; 0x60
900120ae:	4313      	orrs	r3, r2
900120b0:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
900120b4:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
900120b8:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
900120bc:	1a9b      	subs	r3, r3, r2
900120be:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
900120c2:	e768      	b.n	90011f96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
900120c4:	f023 0204 	bic.w	r2, r3, #4
900120c8:	f640 611b 	movw	r1, #3611	; 0xe1b
900120cc:	428a      	cmp	r2, r1
900120ce:	d003      	beq.n	900120d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
900120d0:	f640 621d 	movw	r2, #3613	; 0xe1d
900120d4:	4293      	cmp	r3, r2
900120d6:	d120      	bne.n	9001211a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x19a>
900120d8:	3b01      	subs	r3, #1
900120da:	4602      	mov	r2, r0
900120dc:	4629      	mov	r1, r5
900120de:	4620      	mov	r0, r4
900120e0:	b29b      	uxth	r3, r3
900120e2:	f7ff ff42 	bl	90011f6a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
900120e6:	7b41      	ldrb	r1, [r0, #13]
900120e8:	00cb      	lsls	r3, r1, #3
900120ea:	0649      	lsls	r1, r1, #25
900120ec:	f403 7280 	and.w	r2, r3, #256	; 0x100
900120f0:	7a03      	ldrb	r3, [r0, #8]
900120f2:	ea43 0302 	orr.w	r3, r3, r2
900120f6:	bf44      	itt	mi
900120f8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900120fc:	b21b      	sxthmi	r3, r3
900120fe:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
90012102:	7b6b      	ldrb	r3, [r5, #13]
90012104:	7aaa      	ldrb	r2, [r5, #10]
90012106:	005b      	lsls	r3, r3, #1
90012108:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001210c:	4313      	orrs	r3, r2
9001210e:	115a      	asrs	r2, r3, #5
90012110:	eb02 0393 	add.w	r3, r2, r3, lsr #2
90012114:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
90012118:	e035      	b.n	90012186 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
9001211a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
9001211e:	f01c 0f40 	tst.w	ip, #64	; 0x40
90012122:	f402 7180 	and.w	r1, r2, #256	; 0x100
90012126:	7a2a      	ldrb	r2, [r5, #8]
90012128:	ea42 0201 	orr.w	r2, r2, r1
9001212c:	f640 6109 	movw	r1, #3593	; 0xe09
90012130:	bf1c      	itt	ne
90012132:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
90012136:	b212      	sxthne	r2, r2
90012138:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
9001213c:	f023 0210 	bic.w	r2, r3, #16
90012140:	428a      	cmp	r2, r1
90012142:	d003      	beq.n	9001214c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1cc>
90012144:	f640 6213 	movw	r2, #3603	; 0xe13
90012148:	4293      	cmp	r3, r2
9001214a:	d129      	bne.n	900121a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
9001214c:	7b6e      	ldrb	r6, [r5, #13]
9001214e:	4629      	mov	r1, r5
90012150:	0076      	lsls	r6, r6, #1
90012152:	f406 7280 	and.w	r2, r6, #256	; 0x100
90012156:	7aae      	ldrb	r6, [r5, #10]
90012158:	4316      	orrs	r6, r2
9001215a:	f640 6213 	movw	r2, #3603	; 0xe13
9001215e:	4293      	cmp	r3, r2
90012160:	4602      	mov	r2, r0
90012162:	4620      	mov	r0, r4
90012164:	bf16      	itet	ne
90012166:	f103 33ff 	addne.w	r3, r3, #4294967295
9001216a:	f640 630c 	movweq	r3, #3596	; 0xe0c
9001216e:	b29b      	uxthne	r3, r3
90012170:	f7ff fefb 	bl	90011f6a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90012174:	7b43      	ldrb	r3, [r0, #13]
90012176:	7a82      	ldrb	r2, [r0, #10]
90012178:	005b      	lsls	r3, r3, #1
9001217a:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001217e:	4313      	orrs	r3, r2
90012180:	1af6      	subs	r6, r6, r3
90012182:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
90012186:	7b69      	ldrb	r1, [r5, #13]
90012188:	00cb      	lsls	r3, r1, #3
9001218a:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001218e:	7a2b      	ldrb	r3, [r5, #8]
90012190:	4313      	orrs	r3, r2
90012192:	064a      	lsls	r2, r1, #25
90012194:	bf44      	itt	mi
90012196:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001219a:	b21b      	sxthmi	r3, r3
9001219c:	1bdb      	subs	r3, r3, r7
9001219e:	e73f      	b.n	90012020 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
900121a0:	2300      	movs	r3, #0
900121a2:	e7b7      	b.n	90012114 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x194>
900121a4:	3fc00079 	.word	0x3fc00079
900121a8:	90022bb8 	.word	0x90022bb8
900121ac:	90022e2a 	.word	0x90022e2a
900121b0:	90022bc1 	.word	0x90022bc1

900121b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
900121b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900121b8:	4604      	mov	r4, r0
900121ba:	b942      	cbnz	r2, 900121ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
900121bc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
900121c0:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
900121c4:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
900121c8:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
900121cc:	e046      	b.n	9001225c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
900121ce:	7b51      	ldrb	r1, [r2, #13]
900121d0:	8893      	ldrh	r3, [r2, #4]
900121d2:	010f      	lsls	r7, r1, #4
900121d4:	f407 7080 	and.w	r0, r7, #256	; 0x100
900121d8:	79d7      	ldrb	r7, [r2, #7]
900121da:	4307      	orrs	r7, r0
900121dc:	2f04      	cmp	r7, #4
900121de:	b2bd      	uxth	r5, r7
900121e0:	bfcc      	ite	gt
900121e2:	08bf      	lsrgt	r7, r7, #2
900121e4:	2701      	movle	r7, #1
900121e6:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
900121ea:	f200 80ab 	bhi.w	90012344 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
900121ee:	f240 60e7 	movw	r0, #1767	; 0x6e7
900121f2:	4283      	cmp	r3, r0
900121f4:	d216      	bcs.n	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
900121f6:	f240 605b 	movw	r0, #1627	; 0x65b
900121fa:	4283      	cmp	r3, r0
900121fc:	d859      	bhi.n	900122b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
900121fe:	f240 6057 	movw	r0, #1623	; 0x657
90012202:	4283      	cmp	r3, r0
90012204:	d20e      	bcs.n	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
90012206:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
9001220a:	d24a      	bcs.n	900122a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
9001220c:	f240 604e 	movw	r0, #1614	; 0x64e
90012210:	4283      	cmp	r3, r0
90012212:	d207      	bcs.n	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
90012214:	f240 601a 	movw	r0, #1562	; 0x61a
90012218:	4283      	cmp	r3, r0
9001221a:	d02a      	beq.n	90012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
9001221c:	d821      	bhi.n	90012262 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
9001221e:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
90012222:	d35b      	bcc.n	900122dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90012224:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
90012228:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001222c:	f040 80d0 	bne.w	900123d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
90012230:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
90012234:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90012238:	f040 80ca 	bne.w	900123d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
9001223c:	00cb      	lsls	r3, r1, #3
9001223e:	0649      	lsls	r1, r1, #25
90012240:	f403 7080 	and.w	r0, r3, #256	; 0x100
90012244:	7a13      	ldrb	r3, [r2, #8]
90012246:	ea43 0300 	orr.w	r3, r3, r0
9001224a:	bf44      	itt	mi
9001224c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90012250:	b21b      	sxthmi	r3, r3
90012252:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
90012256:	1b5d      	subs	r5, r3, r5
90012258:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
9001225c:	4610      	mov	r0, r2
9001225e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012262:	f240 604b 	movw	r0, #1611	; 0x64b
90012266:	4283      	cmp	r3, r0
90012268:	d338      	bcc.n	900122dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001226a:	f240 604c 	movw	r0, #1612	; 0x64c
9001226e:	4283      	cmp	r3, r0
90012270:	d9d8      	bls.n	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
90012272:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
90012276:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
9001227a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001227e:	f040 80f2 	bne.w	90012466 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>
90012282:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90012286:	f040 80ee 	bne.w	90012466 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>
9001228a:	00cb      	lsls	r3, r1, #3
9001228c:	064e      	lsls	r6, r1, #25
9001228e:	f403 7080 	and.w	r0, r3, #256	; 0x100
90012292:	7a13      	ldrb	r3, [r2, #8]
90012294:	ea43 0300 	orr.w	r3, r3, r0
90012298:	bf44      	itt	mi
9001229a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001229e:	b21b      	sxthmi	r3, r3
900122a0:	e7d9      	b.n	90012256 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
900122a2:	f240 6054 	movw	r0, #1620	; 0x654
900122a6:	4283      	cmp	r3, r0
900122a8:	d8e3      	bhi.n	90012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
900122aa:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
900122ae:	d9e0      	bls.n	90012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
900122b0:	e7b8      	b.n	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
900122b2:	f240 6074 	movw	r0, #1652	; 0x674
900122b6:	4283      	cmp	r3, r0
900122b8:	d0b4      	beq.n	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
900122ba:	d82d      	bhi.n	90012318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
900122bc:	f240 605e 	movw	r0, #1630	; 0x65e
900122c0:	4283      	cmp	r3, r0
900122c2:	d804      	bhi.n	900122ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
900122c4:	f240 605d 	movw	r0, #1629	; 0x65d
900122c8:	4283      	cmp	r3, r0
900122ca:	d3d2      	bcc.n	90012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
900122cc:	e7aa      	b.n	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
900122ce:	f240 605f 	movw	r0, #1631	; 0x65f
900122d2:	4283      	cmp	r3, r0
900122d4:	d0cd      	beq.n	90012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
900122d6:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
900122da:	d0a3      	beq.n	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
900122dc:	00cb      	lsls	r3, r1, #3
900122de:	0649      	lsls	r1, r1, #25
900122e0:	f403 7080 	and.w	r0, r3, #256	; 0x100
900122e4:	7a13      	ldrb	r3, [r2, #8]
900122e6:	ea43 0300 	orr.w	r3, r3, r0
900122ea:	bf44      	itt	mi
900122ec:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900122f0:	b21b      	sxthmi	r3, r3
900122f2:	1b5d      	subs	r5, r3, r5
900122f4:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
900122f8:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
900122fc:	7b53      	ldrb	r3, [r2, #13]
900122fe:	015b      	lsls	r3, r3, #5
90012300:	f403 7180 	and.w	r1, r3, #256	; 0x100
90012304:	7993      	ldrb	r3, [r2, #6]
90012306:	430b      	orrs	r3, r1
90012308:	2105      	movs	r1, #5
9001230a:	005b      	lsls	r3, r3, #1
9001230c:	fb93 f3f1 	sdiv	r3, r3, r1
90012310:	f992 1009 	ldrsb.w	r1, [r2, #9]
90012314:	440b      	add	r3, r1
90012316:	e757      	b.n	900121c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90012318:	f240 60e2 	movw	r0, #1762	; 0x6e2
9001231c:	4283      	cmp	r3, r0
9001231e:	d809      	bhi.n	90012334 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
90012320:	f240 60df 	movw	r0, #1759	; 0x6df
90012324:	4283      	cmp	r3, r0
90012326:	f4bf af7d 	bcs.w	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
9001232a:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
9001232e:	2b05      	cmp	r3, #5
90012330:	d8d4      	bhi.n	900122dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90012332:	e777      	b.n	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
90012334:	f240 60e3 	movw	r0, #1763	; 0x6e3
90012338:	4283      	cmp	r3, r0
9001233a:	d09a      	beq.n	90012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
9001233c:	f240 60e4 	movw	r0, #1764	; 0x6e4
90012340:	4283      	cmp	r3, r0
90012342:	e7ca      	b.n	900122da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
90012344:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
90012348:	d22b      	bcs.n	900123a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
9001234a:	f640 00ed 	movw	r0, #2285	; 0x8ed
9001234e:	4283      	cmp	r3, r0
90012350:	d28f      	bcs.n	90012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
90012352:	f640 00e5 	movw	r0, #2277	; 0x8e5
90012356:	4283      	cmp	r3, r0
90012358:	d816      	bhi.n	90012388 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
9001235a:	f640 00e4 	movw	r0, #2276	; 0x8e4
9001235e:	4283      	cmp	r3, r0
90012360:	f4bf af60 	bcs.w	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
90012364:	f240 60ec 	movw	r0, #1772	; 0x6ec
90012368:	4283      	cmp	r3, r0
9001236a:	d80a      	bhi.n	90012382 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
9001236c:	f240 60eb 	movw	r0, #1771	; 0x6eb
90012370:	4283      	cmp	r3, r0
90012372:	f4bf af57 	bcs.w	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
90012376:	f240 60ea 	movw	r0, #1770	; 0x6ea
9001237a:	4283      	cmp	r3, r0
9001237c:	f43f af79 	beq.w	90012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
90012380:	e7ac      	b.n	900122dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90012382:	f240 60ed 	movw	r0, #1773	; 0x6ed
90012386:	e7f8      	b.n	9001237a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
90012388:	f640 00e8 	movw	r0, #2280	; 0x8e8
9001238c:	4283      	cmp	r3, r0
9001238e:	d802      	bhi.n	90012396 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
90012390:	f640 00e7 	movw	r0, #2279	; 0x8e7
90012394:	e798      	b.n	900122c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
90012396:	f640 00e9 	movw	r0, #2281	; 0x8e9
9001239a:	4283      	cmp	r3, r0
9001239c:	f47f af42 	bne.w	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
900123a0:	e767      	b.n	90012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
900123a2:	f640 00f6 	movw	r0, #2294	; 0x8f6
900123a6:	4283      	cmp	r3, r0
900123a8:	f43f af63 	beq.w	90012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
900123ac:	d802      	bhi.n	900123b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
900123ae:	f640 00f2 	movw	r0, #2290	; 0x8f2
900123b2:	e7f2      	b.n	9001239a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
900123b4:	f640 00fa 	movw	r0, #2298	; 0x8fa
900123b8:	4283      	cmp	r3, r0
900123ba:	d805      	bhi.n	900123c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
900123bc:	f640 00f9 	movw	r0, #2297	; 0x8f9
900123c0:	4283      	cmp	r3, r0
900123c2:	f4ff af2f 	bcc.w	90012224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
900123c6:	e754      	b.n	90012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
900123c8:	f640 00fe 	movw	r0, #2302	; 0x8fe
900123cc:	4283      	cmp	r3, r0
900123ce:	e7af      	b.n	90012330 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
900123d0:	f104 0c40 	add.w	ip, r4, #64	; 0x40
900123d4:	4617      	mov	r7, r2
900123d6:	f102 0808 	add.w	r8, r2, #8
900123da:	4666      	mov	r6, ip
900123dc:	6838      	ldr	r0, [r7, #0]
900123de:	3708      	adds	r7, #8
900123e0:	f857 1c04 	ldr.w	r1, [r7, #-4]
900123e4:	46e6      	mov	lr, ip
900123e6:	4547      	cmp	r7, r8
900123e8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
900123ec:	46f4      	mov	ip, lr
900123ee:	d1f5      	bne.n	900123dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
900123f0:	6838      	ldr	r0, [r7, #0]
900123f2:	f8ce 0000 	str.w	r0, [lr]
900123f6:	88b9      	ldrh	r1, [r7, #4]
900123f8:	f8ae 1004 	strh.w	r1, [lr, #4]
900123fc:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
90012400:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90012404:	d009      	beq.n	9001241a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
90012406:	7b51      	ldrb	r1, [r2, #13]
90012408:	7992      	ldrb	r2, [r2, #6]
9001240a:	0149      	lsls	r1, r1, #5
9001240c:	f401 7180 	and.w	r1, r1, #256	; 0x100
90012410:	4311      	orrs	r1, r2
90012412:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90012416:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
9001241a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001241e:	d00d      	beq.n	9001243c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x288>
90012420:	442b      	add	r3, r5
90012422:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
90012426:	b29b      	uxth	r3, r3
90012428:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001242c:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
90012430:	10db      	asrs	r3, r3, #3
90012432:	f003 0360 	and.w	r3, r3, #96	; 0x60
90012436:	4313      	orrs	r3, r2
90012438:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
9001243c:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
90012440:	00cb      	lsls	r3, r1, #3
90012442:	064f      	lsls	r7, r1, #25
90012444:	f403 7280 	and.w	r2, r3, #256	; 0x100
90012448:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
9001244c:	ea43 0302 	orr.w	r3, r3, r2
90012450:	bf44      	itt	mi
90012452:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90012456:	b21b      	sxthmi	r3, r3
90012458:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
9001245c:	1b5d      	subs	r5, r3, r5
9001245e:	4632      	mov	r2, r6
90012460:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
90012464:	e6fa      	b.n	9001225c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
90012466:	f104 0e40 	add.w	lr, r4, #64	; 0x40
9001246a:	4694      	mov	ip, r2
9001246c:	f102 0908 	add.w	r9, r2, #8
90012470:	4676      	mov	r6, lr
90012472:	f8dc 0000 	ldr.w	r0, [ip]
90012476:	f10c 0c08 	add.w	ip, ip, #8
9001247a:	f85c 1c04 	ldr.w	r1, [ip, #-4]
9001247e:	46f0      	mov	r8, lr
90012480:	45cc      	cmp	ip, r9
90012482:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90012486:	46c6      	mov	lr, r8
90012488:	d1f3      	bne.n	90012472 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2be>
9001248a:	f8dc 0000 	ldr.w	r0, [ip]
9001248e:	f8c8 0000 	str.w	r0, [r8]
90012492:	f8bc 1004 	ldrh.w	r1, [ip, #4]
90012496:	f8a8 1004 	strh.w	r1, [r8, #4]
9001249a:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
9001249e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
900124a2:	d009      	beq.n	900124b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x304>
900124a4:	7b51      	ldrb	r1, [r2, #13]
900124a6:	7992      	ldrb	r2, [r2, #6]
900124a8:	0149      	lsls	r1, r1, #5
900124aa:	f401 7180 	and.w	r1, r1, #256	; 0x100
900124ae:	4311      	orrs	r1, r2
900124b0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
900124b4:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
900124b8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
900124bc:	d00d      	beq.n	900124da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x326>
900124be:	1bdb      	subs	r3, r3, r7
900124c0:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
900124c4:	b29b      	uxth	r3, r3
900124c6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
900124ca:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
900124ce:	10db      	asrs	r3, r3, #3
900124d0:	f003 0360 	and.w	r3, r3, #96	; 0x60
900124d4:	4313      	orrs	r3, r2
900124d6:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
900124da:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
900124de:	00cb      	lsls	r3, r1, #3
900124e0:	0648      	lsls	r0, r1, #25
900124e2:	f403 7280 	and.w	r2, r3, #256	; 0x100
900124e6:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
900124ea:	ea43 0302 	orr.w	r3, r3, r2
900124ee:	bf44      	itt	mi
900124f0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900124f4:	b21b      	sxthmi	r3, r3
900124f6:	e7b1      	b.n	9001245c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a8>

900124f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
900124f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900124fc:	461e      	mov	r6, r3
900124fe:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90012500:	4604      	mov	r4, r0
90012502:	4617      	mov	r7, r2
90012504:	b92b      	cbnz	r3, 90012512 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
90012506:	4b25      	ldr	r3, [pc, #148]	; (9001259c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
90012508:	21c0      	movs	r1, #192	; 0xc0
9001250a:	4a25      	ldr	r2, [pc, #148]	; (900125a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
9001250c:	4825      	ldr	r0, [pc, #148]	; (900125a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
9001250e:	f00c fec9 	bl	9001f2a4 <__assert_func>
90012512:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
90012514:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90012518:	f8b3 801a 	ldrh.w	r8, [r3, #26]
9001251c:	f7f3 f85c 	bl	900055d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90012520:	4605      	mov	r5, r0
90012522:	b918      	cbnz	r0, 9001252c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
90012524:	6030      	str	r0, [r6, #0]
90012526:	4628      	mov	r0, r5
90012528:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001252c:	683b      	ldr	r3, [r7, #0]
9001252e:	4601      	mov	r1, r0
90012530:	4638      	mov	r0, r7
90012532:	68db      	ldr	r3, [r3, #12]
90012534:	4798      	blx	r3
90012536:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001253a:	4602      	mov	r2, r0
9001253c:	6030      	str	r0, [r6, #0]
9001253e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
90012542:	d213      	bcs.n	9001256c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
90012544:	4643      	mov	r3, r8
90012546:	4639      	mov	r1, r7
90012548:	4620      	mov	r0, r4
9001254a:	f7ff fe33 	bl	900121b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001254e:	6030      	str	r0, [r6, #0]
90012550:	6833      	ldr	r3, [r6, #0]
90012552:	b143      	cbz	r3, 90012566 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
90012554:	7b5a      	ldrb	r2, [r3, #13]
90012556:	7a9b      	ldrb	r3, [r3, #10]
90012558:	0052      	lsls	r2, r2, #1
9001255a:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001255e:	4313      	orrs	r3, r2
90012560:	bf0c      	ite	eq
90012562:	2301      	moveq	r3, #1
90012564:	2300      	movne	r3, #0
90012566:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
9001256a:	e7dc      	b.n	90012526 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
9001256c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
90012570:	b29b      	uxth	r3, r3
90012572:	2b7f      	cmp	r3, #127	; 0x7f
90012574:	d804      	bhi.n	90012580 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
90012576:	4639      	mov	r1, r7
90012578:	4620      	mov	r0, r4
9001257a:	f7ff fd01 	bl	90011f80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001257e:	e7e6      	b.n	9001254e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
90012580:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
90012584:	2b00      	cmp	r3, #0
90012586:	d0e3      	beq.n	90012550 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
90012588:	f640 1302 	movw	r3, #2306	; 0x902
9001258c:	429d      	cmp	r5, r3
9001258e:	d1df      	bne.n	90012550 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
90012590:	4601      	mov	r1, r0
90012592:	4620      	mov	r0, r4
90012594:	f7ff fcc5 	bl	90011f22 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90012598:	e7d9      	b.n	9001254e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
9001259a:	bf00      	nop
9001259c:	90022bb8 	.word	0x90022bb8
900125a0:	90022e2a 	.word	0x90022e2a
900125a4:	90022bc1 	.word	0x90022bc1

900125a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
900125a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900125ac:	461e      	mov	r6, r3
900125ae:	8e03      	ldrh	r3, [r0, #48]	; 0x30
900125b0:	4604      	mov	r4, r0
900125b2:	4617      	mov	r7, r2
900125b4:	b92b      	cbnz	r3, 900125c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
900125b6:	4b26      	ldr	r3, [pc, #152]	; (90012650 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
900125b8:	21c0      	movs	r1, #192	; 0xc0
900125ba:	4a26      	ldr	r2, [pc, #152]	; (90012654 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
900125bc:	4826      	ldr	r0, [pc, #152]	; (90012658 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
900125be:	f00c fe71 	bl	9001f2a4 <__assert_func>
900125c2:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
900125c4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900125c8:	f8b3 801a 	ldrh.w	r8, [r3, #26]
900125cc:	f7f3 f804 	bl	900055d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900125d0:	4605      	mov	r5, r0
900125d2:	b918      	cbnz	r0, 900125dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
900125d4:	6030      	str	r0, [r6, #0]
900125d6:	4628      	mov	r0, r5
900125d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900125dc:	683b      	ldr	r3, [r7, #0]
900125de:	4601      	mov	r1, r0
900125e0:	4638      	mov	r0, r7
900125e2:	f8d3 9008 	ldr.w	r9, [r3, #8]
900125e6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
900125ea:	47c8      	blx	r9
900125ec:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
900125f0:	4602      	mov	r2, r0
900125f2:	6030      	str	r0, [r6, #0]
900125f4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
900125f8:	d213      	bcs.n	90012622 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
900125fa:	4643      	mov	r3, r8
900125fc:	4639      	mov	r1, r7
900125fe:	4620      	mov	r0, r4
90012600:	f7ff fdd8 	bl	900121b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90012604:	6030      	str	r0, [r6, #0]
90012606:	6833      	ldr	r3, [r6, #0]
90012608:	b143      	cbz	r3, 9001261c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
9001260a:	7b5a      	ldrb	r2, [r3, #13]
9001260c:	7a9b      	ldrb	r3, [r3, #10]
9001260e:	0052      	lsls	r2, r2, #1
90012610:	f402 7280 	and.w	r2, r2, #256	; 0x100
90012614:	4313      	orrs	r3, r2
90012616:	bf0c      	ite	eq
90012618:	2301      	moveq	r3, #1
9001261a:	2300      	movne	r3, #0
9001261c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
90012620:	e7d9      	b.n	900125d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
90012622:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
90012626:	b29b      	uxth	r3, r3
90012628:	2b7f      	cmp	r3, #127	; 0x7f
9001262a:	d804      	bhi.n	90012636 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
9001262c:	4639      	mov	r1, r7
9001262e:	4620      	mov	r0, r4
90012630:	f7ff fca6 	bl	90011f80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90012634:	e7e6      	b.n	90012604 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
90012636:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
9001263a:	2b00      	cmp	r3, #0
9001263c:	d0e3      	beq.n	90012606 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
9001263e:	f640 1302 	movw	r3, #2306	; 0x902
90012642:	429d      	cmp	r5, r3
90012644:	d1df      	bne.n	90012606 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
90012646:	4601      	mov	r1, r0
90012648:	4620      	mov	r0, r4
9001264a:	f7ff fc6a 	bl	90011f22 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001264e:	e7d9      	b.n	90012604 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
90012650:	90022bb8 	.word	0x90022bb8
90012654:	90022e2a 	.word	0x90022e2a
90012658:	90022bc1 	.word	0x90022bc1

9001265c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001265c:	b510      	push	{r4, lr}
9001265e:	4604      	mov	r4, r0
90012660:	8f21      	ldrh	r1, [r4, #56]	; 0x38
90012662:	8e23      	ldrh	r3, [r4, #48]	; 0x30
90012664:	b9d9      	cbnz	r1, 9001269e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
90012666:	8e23      	ldrh	r3, [r4, #48]	; 0x30
90012668:	2b0a      	cmp	r3, #10
9001266a:	d036      	beq.n	900126da <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
9001266c:	4620      	mov	r0, r4
9001266e:	f7ff fc21 	bl	90011eb4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
90012672:	8e23      	ldrh	r3, [r4, #48]	; 0x30
90012674:	2b09      	cmp	r3, #9
90012676:	d906      	bls.n	90012686 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
90012678:	4b18      	ldr	r3, [pc, #96]	; (900126dc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
9001267a:	f44f 7182 	mov.w	r1, #260	; 0x104
9001267e:	4a18      	ldr	r2, [pc, #96]	; (900126e0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
90012680:	4818      	ldr	r0, [pc, #96]	; (900126e4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
90012682:	f00c fe0f 	bl	9001f2a4 <__assert_func>
90012686:	1c5a      	adds	r2, r3, #1
90012688:	8622      	strh	r2, [r4, #48]	; 0x30
9001268a:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
9001268c:	4413      	add	r3, r2
9001268e:	b29b      	uxth	r3, r3
90012690:	2b09      	cmp	r3, #9
90012692:	bf88      	it	hi
90012694:	3b0a      	subhi	r3, #10
90012696:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001269a:	8358      	strh	r0, [r3, #26]
9001269c:	e7e3      	b.n	90012666 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
9001269e:	2b0a      	cmp	r3, #10
900126a0:	d01b      	beq.n	900126da <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
900126a2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900126a4:	3901      	subs	r1, #1
900126a6:	eb04 0042 	add.w	r0, r4, r2, lsl #1
900126aa:	8e40      	ldrh	r0, [r0, #50]	; 0x32
900126ac:	8721      	strh	r1, [r4, #56]	; 0x38
900126ae:	1c51      	adds	r1, r2, #1
900126b0:	b289      	uxth	r1, r1
900126b2:	2901      	cmp	r1, #1
900126b4:	bf8a      	itet	hi
900126b6:	f102 32ff 	addhi.w	r2, r2, #4294967295
900126ba:	86e1      	strhls	r1, [r4, #54]	; 0x36
900126bc:	86e2      	strhhi	r2, [r4, #54]	; 0x36
900126be:	2b09      	cmp	r3, #9
900126c0:	d8da      	bhi.n	90012678 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
900126c2:	1c5a      	adds	r2, r3, #1
900126c4:	8622      	strh	r2, [r4, #48]	; 0x30
900126c6:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
900126c8:	4413      	add	r3, r2
900126ca:	b29b      	uxth	r3, r3
900126cc:	2b09      	cmp	r3, #9
900126ce:	bf88      	it	hi
900126d0:	3b0a      	subhi	r3, #10
900126d2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900126d6:	8358      	strh	r0, [r3, #26]
900126d8:	e7c2      	b.n	90012660 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
900126da:	bd10      	pop	{r4, pc}
900126dc:	90022bed 	.word	0x90022bed
900126e0:	90022f80 	.word	0x90022f80
900126e4:	90022bc1 	.word	0x90022bc1

900126e8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
900126e8:	b538      	push	{r3, r4, r5, lr}
900126ea:	8e02      	ldrh	r2, [r0, #48]	; 0x30
900126ec:	4604      	mov	r4, r0
900126ee:	b92a      	cbnz	r2, 900126fc <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
900126f0:	4b13      	ldr	r3, [pc, #76]	; (90012740 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
900126f2:	21d5      	movs	r1, #213	; 0xd5
900126f4:	4a13      	ldr	r2, [pc, #76]	; (90012744 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
900126f6:	4814      	ldr	r0, [pc, #80]	; (90012748 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
900126f8:	f00c fdd4 	bl	9001f2a4 <__assert_func>
900126fc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
900126fe:	3a01      	subs	r2, #1
90012700:	eb00 0143 	add.w	r1, r0, r3, lsl #1
90012704:	8b4d      	ldrh	r5, [r1, #26]
90012706:	8602      	strh	r2, [r0, #48]	; 0x30
90012708:	1c5a      	adds	r2, r3, #1
9001270a:	b292      	uxth	r2, r2
9001270c:	2a09      	cmp	r2, #9
9001270e:	bf8a      	itet	hi
90012710:	3b09      	subhi	r3, #9
90012712:	85c2      	strhls	r2, [r0, #46]	; 0x2e
90012714:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
90012716:	f7ff ffa1 	bl	9001265c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001271a:	8b23      	ldrh	r3, [r4, #24]
9001271c:	2b01      	cmp	r3, #1
9001271e:	bf9c      	itt	ls
90012720:	3301      	addls	r3, #1
90012722:	8323      	strhls	r3, [r4, #24]
90012724:	8ae3      	ldrh	r3, [r4, #22]
90012726:	b90b      	cbnz	r3, 9001272c <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
90012728:	2302      	movs	r3, #2
9001272a:	82e3      	strh	r3, [r4, #22]
9001272c:	8ae3      	ldrh	r3, [r4, #22]
9001272e:	4628      	mov	r0, r5
90012730:	3b01      	subs	r3, #1
90012732:	b29b      	uxth	r3, r3
90012734:	82e3      	strh	r3, [r4, #22]
90012736:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001273a:	8265      	strh	r5, [r4, #18]
9001273c:	bd38      	pop	{r3, r4, r5, pc}
9001273e:	bf00      	nop
90012740:	90022bb8 	.word	0x90022bb8
90012744:	90022ed5 	.word	0x90022ed5
90012748:	90022bc1 	.word	0x90022bc1

9001274c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001274c:	428a      	cmp	r2, r1
9001274e:	b538      	push	{r3, r4, r5, lr}
90012750:	8e04      	ldrh	r4, [r0, #48]	; 0x30
90012752:	d90c      	bls.n	9001276e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
90012754:	b92c      	cbnz	r4, 90012762 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
90012756:	4b1c      	ldr	r3, [pc, #112]	; (900127c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
90012758:	21e1      	movs	r1, #225	; 0xe1
9001275a:	4a1c      	ldr	r2, [pc, #112]	; (900127cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
9001275c:	481c      	ldr	r0, [pc, #112]	; (900127d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
9001275e:	f00c fda1 	bl	9001f2a4 <__assert_func>
90012762:	3c01      	subs	r4, #1
90012764:	4b1b      	ldr	r3, [pc, #108]	; (900127d4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
90012766:	4a1c      	ldr	r2, [pc, #112]	; (900127d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
90012768:	21c5      	movs	r1, #197	; 0xc5
9001276a:	8604      	strh	r4, [r0, #48]	; 0x30
9001276c:	e7f6      	b.n	9001275c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
9001276e:	428c      	cmp	r4, r1
90012770:	d203      	bcs.n	9001277a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
90012772:	4b1a      	ldr	r3, [pc, #104]	; (900127dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
90012774:	21cb      	movs	r1, #203	; 0xcb
90012776:	4a1a      	ldr	r2, [pc, #104]	; (900127e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
90012778:	e7f0      	b.n	9001275c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
9001277a:	1a64      	subs	r4, r4, r1
9001277c:	250a      	movs	r5, #10
9001277e:	8604      	strh	r4, [r0, #48]	; 0x30
90012780:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
90012782:	4421      	add	r1, r4
90012784:	b289      	uxth	r1, r1
90012786:	2909      	cmp	r1, #9
90012788:	bf88      	it	hi
9001278a:	390a      	subhi	r1, #10
9001278c:	85c1      	strh	r1, [r0, #46]	; 0x2e
9001278e:	b1ba      	cbz	r2, 900127c0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
90012790:	3a01      	subs	r2, #1
90012792:	8e01      	ldrh	r1, [r0, #48]	; 0x30
90012794:	b292      	uxth	r2, r2
90012796:	2909      	cmp	r1, #9
90012798:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001279c:	d903      	bls.n	900127a6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
9001279e:	4b11      	ldr	r3, [pc, #68]	; (900127e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
900127a0:	21e6      	movs	r1, #230	; 0xe6
900127a2:	4a11      	ldr	r2, [pc, #68]	; (900127e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
900127a4:	e7da      	b.n	9001275c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
900127a6:	3101      	adds	r1, #1
900127a8:	8601      	strh	r1, [r0, #48]	; 0x30
900127aa:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
900127ac:	b901      	cbnz	r1, 900127b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
900127ae:	85c5      	strh	r5, [r0, #46]	; 0x2e
900127b0:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
900127b2:	3901      	subs	r1, #1
900127b4:	b289      	uxth	r1, r1
900127b6:	85c1      	strh	r1, [r0, #46]	; 0x2e
900127b8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
900127bc:	834c      	strh	r4, [r1, #26]
900127be:	e7e6      	b.n	9001278e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
900127c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
900127c4:	f7ff bf4a 	b.w	9001265c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
900127c8:	90022bb8 	.word	0x90022bb8
900127cc:	90022cae 	.word	0x90022cae
900127d0:	90022bc1 	.word	0x90022bc1
900127d4:	90022bf9 	.word	0x90022bf9
900127d8:	90022d58 	.word	0x90022d58
900127dc:	90022c07 	.word	0x90022c07
900127e0:	9002302f 	.word	0x9002302f
900127e4:	90022c13 	.word	0x90022c13
900127e8:	90022c26 	.word	0x90022c26

900127ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
900127ec:	3a01      	subs	r2, #1
900127ee:	b570      	push	{r4, r5, r6, lr}
900127f0:	b292      	uxth	r2, r2
900127f2:	f64f 76ff 	movw	r6, #65535	; 0xffff
900127f6:	42b2      	cmp	r2, r6
900127f8:	d019      	beq.n	9001282e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
900127fa:	8b04      	ldrh	r4, [r0, #24]
900127fc:	f831 5b02 	ldrh.w	r5, [r1], #2
90012800:	4294      	cmp	r4, r2
90012802:	d805      	bhi.n	90012810 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
90012804:	4b19      	ldr	r3, [pc, #100]	; (9001286c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
90012806:	4a1a      	ldr	r2, [pc, #104]	; (90012870 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
90012808:	21c5      	movs	r1, #197	; 0xc5
9001280a:	481a      	ldr	r0, [pc, #104]	; (90012874 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
9001280c:	f00c fd4a 	bl	9001f2a4 <__assert_func>
90012810:	8ac4      	ldrh	r4, [r0, #22]
90012812:	4414      	add	r4, r2
90012814:	3a01      	subs	r2, #1
90012816:	b2a4      	uxth	r4, r4
90012818:	b292      	uxth	r2, r2
9001281a:	2c01      	cmp	r4, #1
9001281c:	bf88      	it	hi
9001281e:	3c02      	subhi	r4, #2
90012820:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90012824:	8a64      	ldrh	r4, [r4, #18]
90012826:	42ac      	cmp	r4, r5
90012828:	d0e5      	beq.n	900127f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
9001282a:	2000      	movs	r0, #0
9001282c:	bd70      	pop	{r4, r5, r6, pc}
9001282e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90012832:	2400      	movs	r4, #0
90012834:	4413      	add	r3, r2
90012836:	b2a2      	uxth	r2, r4
90012838:	429a      	cmp	r2, r3
9001283a:	da14      	bge.n	90012866 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
9001283c:	8e06      	ldrh	r6, [r0, #48]	; 0x30
9001283e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90012842:	4296      	cmp	r6, r2
90012844:	d802      	bhi.n	9001284c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
90012846:	4b09      	ldr	r3, [pc, #36]	; (9001286c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
90012848:	4a0b      	ldr	r2, [pc, #44]	; (90012878 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
9001284a:	e7dd      	b.n	90012808 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
9001284c:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
9001284e:	3401      	adds	r4, #1
90012850:	4432      	add	r2, r6
90012852:	b292      	uxth	r2, r2
90012854:	2a09      	cmp	r2, #9
90012856:	bf88      	it	hi
90012858:	3a0a      	subhi	r2, #10
9001285a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001285e:	8b52      	ldrh	r2, [r2, #26]
90012860:	42aa      	cmp	r2, r5
90012862:	d0e8      	beq.n	90012836 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
90012864:	e7e1      	b.n	9001282a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
90012866:	2001      	movs	r0, #1
90012868:	e7e0      	b.n	9001282c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
9001286a:	bf00      	nop
9001286c:	90022bf9 	.word	0x90022bf9
90012870:	900230b3 	.word	0x900230b3
90012874:	90022bc1 	.word	0x90022bc1
90012878:	90022d58 	.word	0x90022d58

9001287c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001287c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012880:	4605      	mov	r5, r0
90012882:	4616      	mov	r6, r2
90012884:	1c8c      	adds	r4, r1, #2
90012886:	8809      	ldrh	r1, [r1, #0]
90012888:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001288c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90012890:	42b3      	cmp	r3, r6
90012892:	d124      	bne.n	900128de <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90012894:	f3c1 2903 	ubfx	r9, r1, #8, #4
90012898:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001289c:	f001 070f 	and.w	r7, r1, #15
900128a0:	4652      	mov	r2, sl
900128a2:	f8cd 8000 	str.w	r8, [sp]
900128a6:	464b      	mov	r3, r9
900128a8:	4621      	mov	r1, r4
900128aa:	4628      	mov	r0, r5
900128ac:	f7ff ff9e 	bl	900127ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
900128b0:	4683      	mov	fp, r0
900128b2:	b168      	cbz	r0, 900128d0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
900128b4:	eb0a 0109 	add.w	r1, sl, r9
900128b8:	463a      	mov	r2, r7
900128ba:	4628      	mov	r0, r5
900128bc:	4441      	add	r1, r8
900128be:	eb04 0341 	add.w	r3, r4, r1, lsl #1
900128c2:	4649      	mov	r1, r9
900128c4:	f7ff ff42 	bl	9001274c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
900128c8:	4658      	mov	r0, fp
900128ca:	b003      	add	sp, #12
900128cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900128d0:	eb07 010a 	add.w	r1, r7, sl
900128d4:	4449      	add	r1, r9
900128d6:	4441      	add	r1, r8
900128d8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
900128dc:	e7d2      	b.n	90012884 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
900128de:	f04f 0b00 	mov.w	fp, #0
900128e2:	e7f1      	b.n	900128c8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

900128e4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
900128e4:	b570      	push	{r4, r5, r6, lr}
900128e6:	8810      	ldrh	r0, [r2, #0]
900128e8:	4298      	cmp	r0, r3
900128ea:	d817      	bhi.n	9001291c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
900128ec:	1e48      	subs	r0, r1, #1
900128ee:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
900128f2:	4298      	cmp	r0, r3
900128f4:	d312      	bcc.n	9001291c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
900128f6:	2400      	movs	r4, #0
900128f8:	428c      	cmp	r4, r1
900128fa:	d20f      	bcs.n	9001291c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
900128fc:	1860      	adds	r0, r4, r1
900128fe:	1040      	asrs	r0, r0, #1
90012900:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90012904:	0085      	lsls	r5, r0, #2
90012906:	42b3      	cmp	r3, r6
90012908:	d902      	bls.n	90012910 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001290a:	3001      	adds	r0, #1
9001290c:	b284      	uxth	r4, r0
9001290e:	e7f3      	b.n	900128f8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90012910:	d201      	bcs.n	90012916 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90012912:	b281      	uxth	r1, r0
90012914:	e7f0      	b.n	900128f8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90012916:	442a      	add	r2, r5
90012918:	8850      	ldrh	r0, [r2, #2]
9001291a:	bd70      	pop	{r4, r5, r6, pc}
9001291c:	2000      	movs	r0, #0
9001291e:	e7fc      	b.n	9001291a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90012920 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90012920:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012924:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
90012926:	4604      	mov	r4, r0
90012928:	260b      	movs	r6, #11
9001292a:	886f      	ldrh	r7, [r5, #2]
9001292c:	087f      	lsrs	r7, r7, #1
9001292e:	3e01      	subs	r6, #1
90012930:	d01b      	beq.n	9001296a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
90012932:	8e23      	ldrh	r3, [r4, #48]	; 0x30
90012934:	b92b      	cbnz	r3, 90012942 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
90012936:	4b0e      	ldr	r3, [pc, #56]	; (90012970 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
90012938:	21c0      	movs	r1, #192	; 0xc0
9001293a:	4a0e      	ldr	r2, [pc, #56]	; (90012974 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
9001293c:	480e      	ldr	r0, [pc, #56]	; (90012978 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
9001293e:	f00c fcb1 	bl	9001f2a4 <__assert_func>
90012942:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
90012944:	462a      	mov	r2, r5
90012946:	4639      	mov	r1, r7
90012948:	4620      	mov	r0, r4
9001294a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001294e:	f8b3 801a 	ldrh.w	r8, [r3, #26]
90012952:	4643      	mov	r3, r8
90012954:	f7ff ffc6 	bl	900128e4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
90012958:	b138      	cbz	r0, 9001296a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
9001295a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001295e:	4642      	mov	r2, r8
90012960:	4620      	mov	r0, r4
90012962:	f7ff ff8b 	bl	9001287c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
90012966:	2800      	cmp	r0, #0
90012968:	d1e1      	bne.n	9001292e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001296a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001296e:	bf00      	nop
90012970:	90022bb8 	.word	0x90022bb8
90012974:	90022e2a 	.word	0x90022e2a
90012978:	90022bc1 	.word	0x90022bc1

9001297c <_ZN8touchgfx8ceil28_4El>:
9001297c:	f110 030f 	adds.w	r3, r0, #15
90012980:	d401      	bmi.n	90012986 <_ZN8touchgfx8ceil28_4El+0xa>
90012982:	1118      	asrs	r0, r3, #4
90012984:	4770      	bx	lr
90012986:	2210      	movs	r2, #16
90012988:	f1c0 0001 	rsb	r0, r0, #1
9001298c:	fb93 f3f2 	sdiv	r3, r3, r2
90012990:	f010 000f 	ands.w	r0, r0, #15
90012994:	bf18      	it	ne
90012996:	2001      	movne	r0, #1
90012998:	1a18      	subs	r0, r3, r0
9001299a:	4770      	bx	lr

9001299c <_ZN8touchgfx11floorDivModEllRlS0_>:
9001299c:	2900      	cmp	r1, #0
9001299e:	b538      	push	{r3, r4, r5, lr}
900129a0:	dc05      	bgt.n	900129ae <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
900129a2:	4b0f      	ldr	r3, [pc, #60]	; (900129e0 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
900129a4:	21fa      	movs	r1, #250	; 0xfa
900129a6:	4a0f      	ldr	r2, [pc, #60]	; (900129e4 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
900129a8:	480f      	ldr	r0, [pc, #60]	; (900129e8 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
900129aa:	f00c fc7b 	bl	9001f2a4 <__assert_func>
900129ae:	2800      	cmp	r0, #0
900129b0:	db06      	blt.n	900129c0 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
900129b2:	fb90 f4f1 	sdiv	r4, r0, r1
900129b6:	fb01 0114 	mls	r1, r1, r4, r0
900129ba:	6014      	str	r4, [r2, #0]
900129bc:	6019      	str	r1, [r3, #0]
900129be:	bd38      	pop	{r3, r4, r5, pc}
900129c0:	4240      	negs	r0, r0
900129c2:	fb90 f4f1 	sdiv	r4, r0, r1
900129c6:	4265      	negs	r5, r4
900129c8:	fb01 0014 	mls	r0, r1, r4, r0
900129cc:	6015      	str	r5, [r2, #0]
900129ce:	6018      	str	r0, [r3, #0]
900129d0:	2800      	cmp	r0, #0
900129d2:	d0f4      	beq.n	900129be <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
900129d4:	6810      	ldr	r0, [r2, #0]
900129d6:	3801      	subs	r0, #1
900129d8:	6010      	str	r0, [r2, #0]
900129da:	6818      	ldr	r0, [r3, #0]
900129dc:	1a09      	subs	r1, r1, r0
900129de:	e7ed      	b.n	900129bc <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
900129e0:	90023184 	.word	0x90023184
900129e4:	900231c3 	.word	0x900231c3
900129e8:	90023194 	.word	0x90023194

900129ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
900129ec:	b570      	push	{r4, r5, r6, lr}
900129ee:	694a      	ldr	r2, [r1, #20]
900129f0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
900129f2:	684b      	ldr	r3, [r1, #4]
900129f4:	1b54      	subs	r4, r2, r5
900129f6:	6ace      	ldr	r6, [r1, #44]	; 0x2c
900129f8:	f000 8106 	beq.w	90012c08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
900129fc:	1b9b      	subs	r3, r3, r6
900129fe:	d003      	beq.n	90012a08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90012a00:	4363      	muls	r3, r4
90012a02:	2210      	movs	r2, #16
90012a04:	fb93 f3f2 	sdiv	r3, r3, r2
90012a08:	680c      	ldr	r4, [r1, #0]
90012a0a:	698a      	ldr	r2, [r1, #24]
90012a0c:	1b65      	subs	r5, r4, r5
90012a0e:	f000 80fd 	beq.w	90012c0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
90012a12:	1b92      	subs	r2, r2, r6
90012a14:	d003      	beq.n	90012a1e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90012a16:	436a      	muls	r2, r5
90012a18:	2410      	movs	r4, #16
90012a1a:	fb92 f2f4 	sdiv	r2, r2, r4
90012a1e:	1a9b      	subs	r3, r3, r2
90012a20:	ed9f 4a89 	vldr	s8, [pc, #548]	; 90012c48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
90012a24:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90012a28:	460a      	mov	r2, r1
90012a2a:	ee07 3a90 	vmov	s15, r3
90012a2e:	f100 040c 	add.w	r4, r0, #12
90012a32:	4603      	mov	r3, r0
90012a34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90012a38:	ee67 7a84 	vmul.f32	s15, s15, s8
90012a3c:	ee87 3a27 	vdiv.f32	s6, s14, s15
90012a40:	eeb1 6a43 	vneg.f32	s12, s6
90012a44:	edd2 7a02 	vldr	s15, [r2, #8]
90012a48:	3214      	adds	r2, #20
90012a4a:	eec7 6a27 	vdiv.f32	s13, s14, s15
90012a4e:	ece3 6a01 	vstmia	r3!, {s13}
90012a52:	429c      	cmp	r4, r3
90012a54:	ed52 7a02 	vldr	s15, [r2, #-8]
90012a58:	ee67 7aa6 	vmul.f32	s15, s15, s13
90012a5c:	edc3 7a02 	vstr	s15, [r3, #8]
90012a60:	ed52 7a01 	vldr	s15, [r2, #-4]
90012a64:	ee67 7aa6 	vmul.f32	s15, s15, s13
90012a68:	edc3 7a05 	vstr	s15, [r3, #20]
90012a6c:	d1ea      	bne.n	90012a44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
90012a6e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90012a70:	698b      	ldr	r3, [r1, #24]
90012a72:	edd0 4a02 	vldr	s9, [r0, #8]
90012a76:	1a9b      	subs	r3, r3, r2
90012a78:	edd0 3a00 	vldr	s7, [r0]
90012a7c:	edd0 6a01 	vldr	s13, [r0, #4]
90012a80:	ee07 3a90 	vmov	s15, r3
90012a84:	684b      	ldr	r3, [r1, #4]
90012a86:	ee76 6ae4 	vsub.f32	s13, s13, s9
90012a8a:	ed90 5a05 	vldr	s10, [r0, #20]
90012a8e:	1a9b      	subs	r3, r3, r2
90012a90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90012a94:	ee73 4ae4 	vsub.f32	s9, s7, s9
90012a98:	ed90 2a03 	vldr	s4, [r0, #12]
90012a9c:	ee07 3a10 	vmov	s14, r3
90012aa0:	edd0 5a04 	vldr	s11, [r0, #16]
90012aa4:	ee67 7a84 	vmul.f32	s15, s15, s8
90012aa8:	ed90 1a07 	vldr	s2, [r0, #28]
90012aac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90012ab0:	edd0 2a06 	vldr	s5, [r0, #24]
90012ab4:	ee75 5ac5 	vsub.f32	s11, s11, s10
90012ab8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90012abc:	ee27 7a04 	vmul.f32	s14, s14, s8
90012ac0:	ee32 5a45 	vsub.f32	s10, s4, s10
90012ac4:	eee6 7a87 	vfma.f32	s15, s13, s14
90012ac8:	ee67 7a83 	vmul.f32	s15, s15, s6
90012acc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
90012ad0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
90012ad2:	694a      	ldr	r2, [r1, #20]
90012ad4:	1b13      	subs	r3, r2, r4
90012ad6:	ee07 3a10 	vmov	s14, r3
90012ada:	680b      	ldr	r3, [r1, #0]
90012adc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90012ae0:	1b1b      	subs	r3, r3, r4
90012ae2:	ee27 7a04 	vmul.f32	s14, s14, s8
90012ae6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
90012aea:	ee07 3a10 	vmov	s14, r3
90012aee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90012af2:	ee27 7a04 	vmul.f32	s14, s14, s8
90012af6:	eee6 4a87 	vfma.f32	s9, s13, s14
90012afa:	ee64 4a86 	vmul.f32	s9, s9, s12
90012afe:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
90012b02:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90012b04:	698b      	ldr	r3, [r1, #24]
90012b06:	1a9b      	subs	r3, r3, r2
90012b08:	ee06 3a90 	vmov	s13, r3
90012b0c:	684b      	ldr	r3, [r1, #4]
90012b0e:	1a9b      	subs	r3, r3, r2
90012b10:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90012b14:	ee07 3a10 	vmov	s14, r3
90012b18:	ee66 6a84 	vmul.f32	s13, s13, s8
90012b1c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90012b20:	ee65 6a66 	vnmul.f32	s13, s10, s13
90012b24:	ee27 7a04 	vmul.f32	s14, s14, s8
90012b28:	eee5 6a87 	vfma.f32	s13, s11, s14
90012b2c:	ee66 6a83 	vmul.f32	s13, s13, s6
90012b30:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
90012b34:	6a8c      	ldr	r4, [r1, #40]	; 0x28
90012b36:	694a      	ldr	r2, [r1, #20]
90012b38:	1b13      	subs	r3, r2, r4
90012b3a:	ee07 3a10 	vmov	s14, r3
90012b3e:	680b      	ldr	r3, [r1, #0]
90012b40:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90012b44:	1b1b      	subs	r3, r3, r4
90012b46:	ee27 7a04 	vmul.f32	s14, s14, s8
90012b4a:	ee25 5a47 	vnmul.f32	s10, s10, s14
90012b4e:	ee07 3a10 	vmov	s14, r3
90012b52:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90012b56:	ee27 7a04 	vmul.f32	s14, s14, s8
90012b5a:	eea5 5a87 	vfma.f32	s10, s11, s14
90012b5e:	edd0 5a08 	vldr	s11, [r0, #32]
90012b62:	ee31 1a65 	vsub.f32	s2, s2, s11
90012b66:	ee72 5ae5 	vsub.f32	s11, s5, s11
90012b6a:	ee25 5a06 	vmul.f32	s10, s10, s12
90012b6e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
90012b72:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90012b74:	698b      	ldr	r3, [r1, #24]
90012b76:	1a9b      	subs	r3, r3, r2
90012b78:	ee07 3a10 	vmov	s14, r3
90012b7c:	684b      	ldr	r3, [r1, #4]
90012b7e:	1a9b      	subs	r3, r3, r2
90012b80:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90012b84:	ee01 3a90 	vmov	s3, r3
90012b88:	ee27 7a04 	vmul.f32	s14, s14, s8
90012b8c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
90012b90:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90012b94:	ee61 1a84 	vmul.f32	s3, s3, s8
90012b98:	eea1 7a21 	vfma.f32	s14, s2, s3
90012b9c:	ee27 7a03 	vmul.f32	s14, s14, s6
90012ba0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
90012ba4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
90012ba6:	694a      	ldr	r2, [r1, #20]
90012ba8:	1b13      	subs	r3, r2, r4
90012baa:	ee03 3a10 	vmov	s6, r3
90012bae:	680b      	ldr	r3, [r1, #0]
90012bb0:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90012bb4:	1b1b      	subs	r3, r3, r4
90012bb6:	ee23 3a04 	vmul.f32	s6, s6, s8
90012bba:	ee65 5ac3 	vnmul.f32	s11, s11, s6
90012bbe:	ee03 3a10 	vmov	s6, r3
90012bc2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90012bc6:	ee23 4a04 	vmul.f32	s8, s6, s8
90012bca:	eee1 5a04 	vfma.f32	s11, s2, s8
90012bce:	ee25 6a86 	vmul.f32	s12, s11, s12
90012bd2:	ee62 5a67 	vnmul.f32	s11, s4, s15
90012bd6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
90012bda:	eee3 5aa6 	vfma.f32	s11, s7, s13
90012bde:	eef5 5ac0 	vcmpe.f32	s11, #0.0
90012be2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012be6:	dd13      	ble.n	90012c10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
90012be8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90012bec:	ee62 7ae7 	vnmul.f32	s15, s5, s15
90012bf0:	63c3      	str	r3, [r0, #60]	; 0x3c
90012bf2:	eee3 7a87 	vfma.f32	s15, s7, s14
90012bf6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90012bfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012bfe:	dd15      	ble.n	90012c2c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
90012c00:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90012c04:	6403      	str	r3, [r0, #64]	; 0x40
90012c06:	bd70      	pop	{r4, r5, r6, pc}
90012c08:	4623      	mov	r3, r4
90012c0a:	e6fd      	b.n	90012a08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90012c0c:	462a      	mov	r2, r5
90012c0e:	e706      	b.n	90012a1e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90012c10:	d502      	bpl.n	90012c18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
90012c12:	f647 73ff 	movw	r3, #32767	; 0x7fff
90012c16:	e7e9      	b.n	90012bec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
90012c18:	ee22 2a64 	vnmul.f32	s4, s4, s9
90012c1c:	eea3 2a85 	vfma.f32	s4, s7, s10
90012c20:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
90012c24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012c28:	dade      	bge.n	90012be8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
90012c2a:	e7f2      	b.n	90012c12 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
90012c2c:	d502      	bpl.n	90012c34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
90012c2e:	f647 73ff 	movw	r3, #32767	; 0x7fff
90012c32:	e7e7      	b.n	90012c04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
90012c34:	ee62 4ae4 	vnmul.f32	s9, s5, s9
90012c38:	eee3 4a86 	vfma.f32	s9, s7, s12
90012c3c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
90012c40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012c44:	dadc      	bge.n	90012c00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
90012c46:	e7f2      	b.n	90012c2e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
90012c48:	3d800000 	.word	0x3d800000

90012c4c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
90012c4c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012c50:	f04f 0814 	mov.w	r8, #20
90012c54:	4604      	mov	r4, r0
90012c56:	4617      	mov	r7, r2
90012c58:	460d      	mov	r5, r1
90012c5a:	fb08 f903 	mul.w	r9, r8, r3
90012c5e:	461e      	mov	r6, r3
90012c60:	eb02 0a09 	add.w	sl, r2, r9
90012c64:	f8da 0004 	ldr.w	r0, [sl, #4]
90012c68:	f7ff fe88 	bl	9001297c <_ZN8touchgfx8ceil28_4El>
90012c6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90012c6e:	6160      	str	r0, [r4, #20]
90012c70:	fb08 f803 	mul.w	r8, r8, r3
90012c74:	9001      	str	r0, [sp, #4]
90012c76:	eb07 0b08 	add.w	fp, r7, r8
90012c7a:	f8db 0004 	ldr.w	r0, [fp, #4]
90012c7e:	f7ff fe7d 	bl	9001297c <_ZN8touchgfx8ceil28_4El>
90012c82:	9a01      	ldr	r2, [sp, #4]
90012c84:	1a80      	subs	r0, r0, r2
90012c86:	61a0      	str	r0, [r4, #24]
90012c88:	2800      	cmp	r0, #0
90012c8a:	f000 8088 	beq.w	90012d9e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
90012c8e:	f857 3009 	ldr.w	r3, [r7, r9]
90012c92:	f857 c008 	ldr.w	ip, [r7, r8]
90012c96:	f8db 0004 	ldr.w	r0, [fp, #4]
90012c9a:	ebac 0c03 	sub.w	ip, ip, r3
90012c9e:	f8da 1004 	ldr.w	r1, [sl, #4]
90012ca2:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
90012ca6:	1a40      	subs	r0, r0, r1
90012ca8:	fb0b f202 	mul.w	r2, fp, r2
90012cac:	ea4f 1800 	mov.w	r8, r0, lsl #4
90012cb0:	fb0c 2211 	mls	r2, ip, r1, r2
90012cb4:	4641      	mov	r1, r8
90012cb6:	fb00 2003 	mla	r0, r0, r3, r2
90012cba:	f104 0310 	add.w	r3, r4, #16
90012cbe:	4622      	mov	r2, r4
90012cc0:	3801      	subs	r0, #1
90012cc2:	4440      	add	r0, r8
90012cc4:	f7ff fe6a 	bl	9001299c <_ZN8touchgfx11floorDivModEllRlS0_>
90012cc8:	f104 0308 	add.w	r3, r4, #8
90012ccc:	1d22      	adds	r2, r4, #4
90012cce:	4641      	mov	r1, r8
90012cd0:	4658      	mov	r0, fp
90012cd2:	f7ff fe63 	bl	9001299c <_ZN8touchgfx11floorDivModEllRlS0_>
90012cd6:	f8c4 800c 	str.w	r8, [r4, #12]
90012cda:	6962      	ldr	r2, [r4, #20]
90012cdc:	f8da 3004 	ldr.w	r3, [sl, #4]
90012ce0:	eddf 6a31 	vldr	s13, [pc, #196]	; 90012da8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
90012ce4:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
90012ce8:	6822      	ldr	r2, [r4, #0]
90012cea:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
90012cee:	ee07 3a10 	vmov	s14, r3
90012cf2:	f857 3009 	ldr.w	r3, [r7, r9]
90012cf6:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
90012cfa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90012cfe:	ee07 3a90 	vmov	s15, r3
90012d02:	eb05 0386 	add.w	r3, r5, r6, lsl #2
90012d06:	ee27 7a26 	vmul.f32	s14, s14, s13
90012d0a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90012d0e:	ee67 7aa6 	vmul.f32	s15, s15, s13
90012d12:	edd3 6a00 	vldr	s13, [r3]
90012d16:	eee6 6a07 	vfma.f32	s13, s12, s14
90012d1a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90012d1e:	eee6 6a27 	vfma.f32	s13, s12, s15
90012d22:	edc4 6a07 	vstr	s13, [r4, #28]
90012d26:	edd4 6a01 	vldr	s13, [r4, #4]
90012d2a:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
90012d2e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90012d32:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
90012d36:	eea6 6aa5 	vfma.f32	s12, s13, s11
90012d3a:	ed84 6a08 	vstr	s12, [r4, #32]
90012d3e:	6a6a      	ldr	r2, [r5, #36]	; 0x24
90012d40:	6262      	str	r2, [r4, #36]	; 0x24
90012d42:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
90012d46:	ed93 6a03 	vldr	s12, [r3, #12]
90012d4a:	eea5 6a87 	vfma.f32	s12, s11, s14
90012d4e:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
90012d52:	eea5 6aa7 	vfma.f32	s12, s11, s15
90012d56:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
90012d5a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
90012d5e:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
90012d62:	eea6 6aa5 	vfma.f32	s12, s13, s11
90012d66:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
90012d6a:	6aea      	ldr	r2, [r5, #44]	; 0x2c
90012d6c:	6322      	str	r2, [r4, #48]	; 0x30
90012d6e:	ed93 6a06 	vldr	s12, [r3, #24]
90012d72:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
90012d76:	eea5 6a87 	vfma.f32	s12, s11, s14
90012d7a:	eeb0 7a46 	vmov.f32	s14, s12
90012d7e:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
90012d82:	eea6 7a27 	vfma.f32	s14, s12, s15
90012d86:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
90012d8a:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
90012d8e:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
90012d92:	eee6 7a87 	vfma.f32	s15, s13, s14
90012d96:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
90012d9a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
90012d9c:	63e3      	str	r3, [r4, #60]	; 0x3c
90012d9e:	4620      	mov	r0, r4
90012da0:	b003      	add	sp, #12
90012da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012da6:	bf00      	nop
90012da8:	3d800000 	.word	0x3d800000

90012dac <_ZN8touchgfx7Unicode6strlenEPKt>:
90012dac:	4602      	mov	r2, r0
90012dae:	b148      	cbz	r0, 90012dc4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
90012db0:	2300      	movs	r3, #0
90012db2:	b298      	uxth	r0, r3
90012db4:	3301      	adds	r3, #1
90012db6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
90012dba:	f831 1c02 	ldrh.w	r1, [r1, #-2]
90012dbe:	2900      	cmp	r1, #0
90012dc0:	d1f7      	bne.n	90012db2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
90012dc2:	4770      	bx	lr
90012dc4:	4770      	bx	lr

90012dc6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
90012dc6:	b530      	push	{r4, r5, lr}
90012dc8:	4604      	mov	r4, r0
90012dca:	b159      	cbz	r1, 90012de4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
90012dcc:	b148      	cbz	r0, 90012de2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90012dce:	2300      	movs	r3, #0
90012dd0:	b298      	uxth	r0, r3
90012dd2:	4282      	cmp	r2, r0
90012dd4:	d905      	bls.n	90012de2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90012dd6:	5ccd      	ldrb	r5, [r1, r3]
90012dd8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
90012ddc:	3301      	adds	r3, #1
90012dde:	2d00      	cmp	r5, #0
90012de0:	d1f6      	bne.n	90012dd0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
90012de2:	bd30      	pop	{r4, r5, pc}
90012de4:	4608      	mov	r0, r1
90012de6:	e7fc      	b.n	90012de2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

90012de8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
90012de8:	b5f0      	push	{r4, r5, r6, r7, lr}
90012dea:	468c      	mov	ip, r1
90012dec:	b08b      	sub	sp, #44	; 0x2c
90012dee:	2100      	movs	r1, #0
90012df0:	ae01      	add	r6, sp, #4
90012df2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
90012df6:	211f      	movs	r1, #31
90012df8:	fbb0 f7f3 	udiv	r7, r0, r3
90012dfc:	fb03 0517 	mls	r5, r3, r7, r0
90012e00:	4638      	mov	r0, r7
90012e02:	b2ec      	uxtb	r4, r5
90012e04:	2d09      	cmp	r5, #9
90012e06:	bfd4      	ite	le
90012e08:	3430      	addle	r4, #48	; 0x30
90012e0a:	3457      	addgt	r4, #87	; 0x57
90012e0c:	b2e4      	uxtb	r4, r4
90012e0e:	558c      	strb	r4, [r1, r6]
90012e10:	1e4c      	subs	r4, r1, #1
90012e12:	b92f      	cbnz	r7, 90012e20 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
90012e14:	4431      	add	r1, r6
90012e16:	4660      	mov	r0, ip
90012e18:	f7ff ffd5 	bl	90012dc6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90012e1c:	b00b      	add	sp, #44	; 0x2c
90012e1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012e20:	4621      	mov	r1, r4
90012e22:	e7e9      	b.n	90012df8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

90012e24 <_ZN8touchgfx7Unicode4itoaElPtti>:
90012e24:	b5f0      	push	{r4, r5, r6, r7, lr}
90012e26:	4607      	mov	r7, r0
90012e28:	b08b      	sub	sp, #44	; 0x2c
90012e2a:	4608      	mov	r0, r1
90012e2c:	b341      	cbz	r1, 90012e80 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
90012e2e:	1e99      	subs	r1, r3, #2
90012e30:	2922      	cmp	r1, #34	; 0x22
90012e32:	d825      	bhi.n	90012e80 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
90012e34:	2100      	movs	r1, #0
90012e36:	463c      	mov	r4, r7
90012e38:	261f      	movs	r6, #31
90012e3a:	f10d 0c04 	add.w	ip, sp, #4
90012e3e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
90012e42:	1e71      	subs	r1, r6, #1
90012e44:	fb94 fef3 	sdiv	lr, r4, r3
90012e48:	fb03 441e 	mls	r4, r3, lr, r4
90012e4c:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
90012e50:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
90012e54:	b2ec      	uxtb	r4, r5
90012e56:	2d09      	cmp	r5, #9
90012e58:	bfd4      	ite	le
90012e5a:	3430      	addle	r4, #48	; 0x30
90012e5c:	3457      	addgt	r4, #87	; 0x57
90012e5e:	b2e4      	uxtb	r4, r4
90012e60:	f80c 4006 	strb.w	r4, [ip, r6]
90012e64:	4674      	mov	r4, lr
90012e66:	b96c      	cbnz	r4, 90012e84 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
90012e68:	2f00      	cmp	r7, #0
90012e6a:	da05      	bge.n	90012e78 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
90012e6c:	ab0a      	add	r3, sp, #40	; 0x28
90012e6e:	4419      	add	r1, r3
90012e70:	232d      	movs	r3, #45	; 0x2d
90012e72:	f801 3c24 	strb.w	r3, [r1, #-36]
90012e76:	1eb1      	subs	r1, r6, #2
90012e78:	3101      	adds	r1, #1
90012e7a:	4461      	add	r1, ip
90012e7c:	f7ff ffa3 	bl	90012dc6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90012e80:	b00b      	add	sp, #44	; 0x2c
90012e82:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012e84:	460e      	mov	r6, r1
90012e86:	e7dc      	b.n	90012e42 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

90012e88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
90012e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012e8c:	b085      	sub	sp, #20
90012e8e:	4691      	mov	r9, r2
90012e90:	6802      	ldr	r2, [r0, #0]
90012e92:	4688      	mov	r8, r1
90012e94:	461c      	mov	r4, r3
90012e96:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
90012e9a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
90012e9e:	4683      	mov	fp, r0
90012ea0:	4610      	mov	r0, r2
90012ea2:	9103      	str	r1, [sp, #12]
90012ea4:	9302      	str	r3, [sp, #8]
90012ea6:	9201      	str	r2, [sp, #4]
90012ea8:	f7ff ff80 	bl	90012dac <_ZN8touchgfx7Unicode6strlenEPKt>
90012eac:	f1b8 0f00 	cmp.w	r8, #0
90012eb0:	bf0c      	ite	eq
90012eb2:	4684      	moveq	ip, r0
90012eb4:	f100 0c01 	addne.w	ip, r0, #1
90012eb8:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
90012ebc:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
90012ec0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90012ec2:	fa1f fc8c 	uxth.w	ip, ip
90012ec6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90012ec8:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
90012ecc:	9903      	ldr	r1, [sp, #12]
90012ece:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
90012ed2:	d041      	beq.n	90012f58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90012ed4:	d834      	bhi.n	90012f40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
90012ed6:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
90012eda:	d059      	beq.n	90012f90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
90012edc:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
90012ee0:	d03a      	beq.n	90012f58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90012ee2:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
90012ee6:	d034      	beq.n	90012f52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90012ee8:	2400      	movs	r4, #0
90012eea:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
90012eee:	3a01      	subs	r2, #1
90012ef0:	b169      	cbz	r1, 90012f0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90012ef2:	9911      	ldr	r1, [sp, #68]	; 0x44
90012ef4:	458c      	cmp	ip, r1
90012ef6:	da09      	bge.n	90012f0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90012ef8:	eba1 010c 	sub.w	r1, r1, ip
90012efc:	b289      	uxth	r1, r1
90012efe:	b933      	cbnz	r3, 90012f0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90012f00:	2e00      	cmp	r6, #0
90012f02:	d051      	beq.n	90012fa8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90012f04:	2800      	cmp	r0, #0
90012f06:	d04f      	beq.n	90012fa8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90012f08:	440c      	add	r4, r1
90012f0a:	b2a4      	uxth	r4, r4
90012f0c:	2100      	movs	r1, #0
90012f0e:	682b      	ldr	r3, [r5, #0]
90012f10:	4293      	cmp	r3, r2
90012f12:	da07      	bge.n	90012f24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90012f14:	f1b8 0f00 	cmp.w	r8, #0
90012f18:	d004      	beq.n	90012f24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90012f1a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
90012f1e:	682b      	ldr	r3, [r5, #0]
90012f20:	3301      	adds	r3, #1
90012f22:	602b      	str	r3, [r5, #0]
90012f24:	2730      	movs	r7, #48	; 0x30
90012f26:	2c00      	cmp	r4, #0
90012f28:	d04e      	beq.n	90012fc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90012f2a:	682e      	ldr	r6, [r5, #0]
90012f2c:	3c01      	subs	r4, #1
90012f2e:	42b2      	cmp	r2, r6
90012f30:	b2a4      	uxth	r4, r4
90012f32:	dd49      	ble.n	90012fc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90012f34:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90012f38:	682b      	ldr	r3, [r5, #0]
90012f3a:	3301      	adds	r3, #1
90012f3c:	602b      	str	r3, [r5, #0]
90012f3e:	e7f2      	b.n	90012f26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
90012f40:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
90012f44:	d01d      	beq.n	90012f82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
90012f46:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
90012f4a:	d002      	beq.n	90012f52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90012f4c:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
90012f50:	e7c9      	b.n	90012ee6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
90012f52:	4684      	mov	ip, r0
90012f54:	f04f 0800 	mov.w	r8, #0
90012f58:	2c00      	cmp	r4, #0
90012f5a:	d0c6      	beq.n	90012eea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90012f5c:	b947      	cbnz	r7, 90012f70 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90012f5e:	2801      	cmp	r0, #1
90012f60:	d106      	bne.n	90012f70 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90012f62:	8814      	ldrh	r4, [r2, #0]
90012f64:	2c30      	cmp	r4, #48	; 0x30
90012f66:	bf02      	ittt	eq
90012f68:	3202      	addeq	r2, #2
90012f6a:	4638      	moveq	r0, r7
90012f6c:	f8cb 2000 	streq.w	r2, [fp]
90012f70:	45bc      	cmp	ip, r7
90012f72:	da14      	bge.n	90012f9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
90012f74:	b2bf      	uxth	r7, r7
90012f76:	eba7 040c 	sub.w	r4, r7, ip
90012f7a:	46bc      	mov	ip, r7
90012f7c:	b2a4      	uxth	r4, r4
90012f7e:	2600      	movs	r6, #0
90012f80:	e7b3      	b.n	90012eea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90012f82:	4684      	mov	ip, r0
90012f84:	b16c      	cbz	r4, 90012fa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
90012f86:	42b8      	cmp	r0, r7
90012f88:	dd00      	ble.n	90012f8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
90012f8a:	b2b8      	uxth	r0, r7
90012f8c:	2400      	movs	r4, #0
90012f8e:	e003      	b.n	90012f98 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
90012f90:	f04f 0c01 	mov.w	ip, #1
90012f94:	2400      	movs	r4, #0
90012f96:	4660      	mov	r0, ip
90012f98:	4626      	mov	r6, r4
90012f9a:	46a0      	mov	r8, r4
90012f9c:	e7a5      	b.n	90012eea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90012f9e:	2400      	movs	r4, #0
90012fa0:	e7ed      	b.n	90012f7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
90012fa2:	4626      	mov	r6, r4
90012fa4:	46a0      	mov	r8, r4
90012fa6:	e7a0      	b.n	90012eea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90012fa8:	2900      	cmp	r1, #0
90012faa:	d0b0      	beq.n	90012f0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90012fac:	2720      	movs	r7, #32
90012fae:	682e      	ldr	r6, [r5, #0]
90012fb0:	2900      	cmp	r1, #0
90012fb2:	d0ac      	beq.n	90012f0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90012fb4:	3901      	subs	r1, #1
90012fb6:	4296      	cmp	r6, r2
90012fb8:	b289      	uxth	r1, r1
90012fba:	daa7      	bge.n	90012f0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90012fbc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90012fc0:	682b      	ldr	r3, [r5, #0]
90012fc2:	3301      	adds	r3, #1
90012fc4:	602b      	str	r3, [r5, #0]
90012fc6:	e7f2      	b.n	90012fae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
90012fc8:	b188      	cbz	r0, 90012fee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90012fca:	682b      	ldr	r3, [r5, #0]
90012fcc:	3801      	subs	r0, #1
90012fce:	429a      	cmp	r2, r3
90012fd0:	b280      	uxth	r0, r0
90012fd2:	dd0c      	ble.n	90012fee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90012fd4:	f8db 3000 	ldr.w	r3, [fp]
90012fd8:	1c9c      	adds	r4, r3, #2
90012fda:	f8cb 4000 	str.w	r4, [fp]
90012fde:	881c      	ldrh	r4, [r3, #0]
90012fe0:	682b      	ldr	r3, [r5, #0]
90012fe2:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
90012fe6:	682b      	ldr	r3, [r5, #0]
90012fe8:	3301      	adds	r3, #1
90012fea:	602b      	str	r3, [r5, #0]
90012fec:	e7ec      	b.n	90012fc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90012fee:	2620      	movs	r6, #32
90012ff0:	b151      	cbz	r1, 90013008 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90012ff2:	6828      	ldr	r0, [r5, #0]
90012ff4:	3901      	subs	r1, #1
90012ff6:	4282      	cmp	r2, r0
90012ff8:	b289      	uxth	r1, r1
90012ffa:	dd05      	ble.n	90013008 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90012ffc:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
90013000:	682b      	ldr	r3, [r5, #0]
90013002:	3301      	adds	r3, #1
90013004:	602b      	str	r3, [r5, #0]
90013006:	e7f3      	b.n	90012ff0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
90013008:	b005      	add	sp, #20
9001300a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001300e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001300e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013012:	2400      	movs	r4, #0
90013014:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
90013018:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
9001301c:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
90013020:	8014      	strh	r4, [r2, #0]
90013022:	701c      	strb	r4, [r3, #0]
90013024:	f888 4000 	strb.w	r4, [r8]
90013028:	f88c 4000 	strb.w	r4, [ip]
9001302c:	f88e 4000 	strb.w	r4, [lr]
90013030:	703c      	strb	r4, [r7, #0]
90013032:	6804      	ldr	r4, [r0, #0]
90013034:	b1a4      	cbz	r4, 90013060 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
90013036:	8824      	ldrh	r4, [r4, #0]
90013038:	f04f 0901 	mov.w	r9, #1
9001303c:	b314      	cbz	r4, 90013084 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001303e:	2c2b      	cmp	r4, #43	; 0x2b
90013040:	d001      	beq.n	90013046 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
90013042:	2c20      	cmp	r4, #32
90013044:	d110      	bne.n	90013068 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
90013046:	8014      	strh	r4, [r2, #0]
90013048:	6804      	ldr	r4, [r0, #0]
9001304a:	b10c      	cbz	r4, 90013050 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
9001304c:	3402      	adds	r4, #2
9001304e:	6004      	str	r4, [r0, #0]
90013050:	680c      	ldr	r4, [r1, #0]
90013052:	b10c      	cbz	r4, 90013058 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
90013054:	3401      	adds	r4, #1
90013056:	600c      	str	r4, [r1, #0]
90013058:	6804      	ldr	r4, [r0, #0]
9001305a:	b17c      	cbz	r4, 9001307c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
9001305c:	8824      	ldrh	r4, [r4, #0]
9001305e:	e7ed      	b.n	9001303c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90013060:	680c      	ldr	r4, [r1, #0]
90013062:	b17c      	cbz	r4, 90013084 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90013064:	7824      	ldrb	r4, [r4, #0]
90013066:	e7e7      	b.n	90013038 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
90013068:	2c2d      	cmp	r4, #45	; 0x2d
9001306a:	d102      	bne.n	90013072 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
9001306c:	f883 9000 	strb.w	r9, [r3]
90013070:	e7ea      	b.n	90013048 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90013072:	2c23      	cmp	r4, #35	; 0x23
90013074:	d107      	bne.n	90013086 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
90013076:	f888 9000 	strb.w	r9, [r8]
9001307a:	e7e5      	b.n	90013048 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001307c:	680c      	ldr	r4, [r1, #0]
9001307e:	b10c      	cbz	r4, 90013084 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90013080:	7824      	ldrb	r4, [r4, #0]
90013082:	e7db      	b.n	9001303c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90013084:	2400      	movs	r4, #0
90013086:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
9001308a:	2b09      	cmp	r3, #9
9001308c:	d901      	bls.n	90013092 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001308e:	2c2a      	cmp	r4, #42	; 0x2a
90013090:	d122      	bne.n	900130d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90013092:	2301      	movs	r3, #1
90013094:	2c30      	cmp	r4, #48	; 0x30
90013096:	f88e 3000 	strb.w	r3, [lr]
9001309a:	d10d      	bne.n	900130b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001309c:	f88c 3000 	strb.w	r3, [ip]
900130a0:	6803      	ldr	r3, [r0, #0]
900130a2:	b10b      	cbz	r3, 900130a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
900130a4:	3302      	adds	r3, #2
900130a6:	6003      	str	r3, [r0, #0]
900130a8:	680b      	ldr	r3, [r1, #0]
900130aa:	b10b      	cbz	r3, 900130b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
900130ac:	3301      	adds	r3, #1
900130ae:	600b      	str	r3, [r1, #0]
900130b0:	6803      	ldr	r3, [r0, #0]
900130b2:	2b00      	cmp	r3, #0
900130b4:	d02f      	beq.n	90013116 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
900130b6:	881c      	ldrh	r4, [r3, #0]
900130b8:	2c2a      	cmp	r4, #42	; 0x2a
900130ba:	d135      	bne.n	90013128 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
900130bc:	f04f 33ff 	mov.w	r3, #4294967295
900130c0:	6033      	str	r3, [r6, #0]
900130c2:	6803      	ldr	r3, [r0, #0]
900130c4:	b10b      	cbz	r3, 900130ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
900130c6:	3302      	adds	r3, #2
900130c8:	6003      	str	r3, [r0, #0]
900130ca:	680b      	ldr	r3, [r1, #0]
900130cc:	b10b      	cbz	r3, 900130d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
900130ce:	3301      	adds	r3, #1
900130d0:	600b      	str	r3, [r1, #0]
900130d2:	6803      	ldr	r3, [r0, #0]
900130d4:	b31b      	cbz	r3, 9001311e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
900130d6:	881c      	ldrh	r4, [r3, #0]
900130d8:	2c2e      	cmp	r4, #46	; 0x2e
900130da:	d11a      	bne.n	90013112 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
900130dc:	2301      	movs	r3, #1
900130de:	703b      	strb	r3, [r7, #0]
900130e0:	6803      	ldr	r3, [r0, #0]
900130e2:	b10b      	cbz	r3, 900130e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
900130e4:	3302      	adds	r3, #2
900130e6:	6003      	str	r3, [r0, #0]
900130e8:	680b      	ldr	r3, [r1, #0]
900130ea:	b10b      	cbz	r3, 900130f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
900130ec:	3301      	adds	r3, #1
900130ee:	600b      	str	r3, [r1, #0]
900130f0:	6803      	ldr	r3, [r0, #0]
900130f2:	2b00      	cmp	r3, #0
900130f4:	d036      	beq.n	90013164 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
900130f6:	881b      	ldrh	r3, [r3, #0]
900130f8:	2b2a      	cmp	r3, #42	; 0x2a
900130fa:	d137      	bne.n	9001316c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
900130fc:	f04f 33ff 	mov.w	r3, #4294967295
90013100:	602b      	str	r3, [r5, #0]
90013102:	6803      	ldr	r3, [r0, #0]
90013104:	b10b      	cbz	r3, 9001310a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
90013106:	3302      	adds	r3, #2
90013108:	6003      	str	r3, [r0, #0]
9001310a:	680b      	ldr	r3, [r1, #0]
9001310c:	b10b      	cbz	r3, 90013112 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001310e:	3301      	adds	r3, #1
90013110:	600b      	str	r3, [r1, #0]
90013112:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013116:	680c      	ldr	r4, [r1, #0]
90013118:	b134      	cbz	r4, 90013128 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001311a:	7824      	ldrb	r4, [r4, #0]
9001311c:	e7cc      	b.n	900130b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001311e:	680b      	ldr	r3, [r1, #0]
90013120:	2b00      	cmp	r3, #0
90013122:	d0f6      	beq.n	90013112 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90013124:	781c      	ldrb	r4, [r3, #0]
90013126:	e7d7      	b.n	900130d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90013128:	2300      	movs	r3, #0
9001312a:	220a      	movs	r2, #10
9001312c:	6033      	str	r3, [r6, #0]
9001312e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
90013132:	fa1f f38c 	uxth.w	r3, ip
90013136:	2b09      	cmp	r3, #9
90013138:	d8ce      	bhi.n	900130d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001313a:	6833      	ldr	r3, [r6, #0]
9001313c:	fb02 c303 	mla	r3, r2, r3, ip
90013140:	6033      	str	r3, [r6, #0]
90013142:	6803      	ldr	r3, [r0, #0]
90013144:	b10b      	cbz	r3, 9001314a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
90013146:	3302      	adds	r3, #2
90013148:	6003      	str	r3, [r0, #0]
9001314a:	680b      	ldr	r3, [r1, #0]
9001314c:	b10b      	cbz	r3, 90013152 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001314e:	3301      	adds	r3, #1
90013150:	600b      	str	r3, [r1, #0]
90013152:	6803      	ldr	r3, [r0, #0]
90013154:	b10b      	cbz	r3, 9001315a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
90013156:	881c      	ldrh	r4, [r3, #0]
90013158:	e7e9      	b.n	9001312e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001315a:	680c      	ldr	r4, [r1, #0]
9001315c:	2c00      	cmp	r4, #0
9001315e:	d0e6      	beq.n	9001312e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90013160:	7824      	ldrb	r4, [r4, #0]
90013162:	e7e4      	b.n	9001312e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90013164:	680b      	ldr	r3, [r1, #0]
90013166:	b10b      	cbz	r3, 9001316c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90013168:	781b      	ldrb	r3, [r3, #0]
9001316a:	e7c5      	b.n	900130f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
9001316c:	2200      	movs	r2, #0
9001316e:	240a      	movs	r4, #10
90013170:	602a      	str	r2, [r5, #0]
90013172:	3b30      	subs	r3, #48	; 0x30
90013174:	682a      	ldr	r2, [r5, #0]
90013176:	b29e      	uxth	r6, r3
90013178:	2e09      	cmp	r6, #9
9001317a:	d813      	bhi.n	900131a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
9001317c:	fb04 3302 	mla	r3, r4, r2, r3
90013180:	602b      	str	r3, [r5, #0]
90013182:	6803      	ldr	r3, [r0, #0]
90013184:	b10b      	cbz	r3, 9001318a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
90013186:	3302      	adds	r3, #2
90013188:	6003      	str	r3, [r0, #0]
9001318a:	680b      	ldr	r3, [r1, #0]
9001318c:	b10b      	cbz	r3, 90013192 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001318e:	3301      	adds	r3, #1
90013190:	600b      	str	r3, [r1, #0]
90013192:	6803      	ldr	r3, [r0, #0]
90013194:	b10b      	cbz	r3, 9001319a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
90013196:	881b      	ldrh	r3, [r3, #0]
90013198:	e7eb      	b.n	90013172 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001319a:	680b      	ldr	r3, [r1, #0]
9001319c:	2b00      	cmp	r3, #0
9001319e:	d0e8      	beq.n	90013172 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
900131a0:	781b      	ldrb	r3, [r3, #0]
900131a2:	e7e6      	b.n	90013172 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
900131a4:	2a06      	cmp	r2, #6
900131a6:	bfa8      	it	ge
900131a8:	2206      	movge	r2, #6
900131aa:	602a      	str	r2, [r5, #0]
900131ac:	e7b1      	b.n	90013112 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

900131ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
900131ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900131b2:	b0a3      	sub	sp, #140	; 0x8c
900131b4:	2600      	movs	r6, #0
900131b6:	4607      	mov	r7, r0
900131b8:	4688      	mov	r8, r1
900131ba:	f10d 0944 	add.w	r9, sp, #68	; 0x44
900131be:	4631      	mov	r1, r6
900131c0:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
900131c2:	4648      	mov	r0, r9
900131c4:	960d      	str	r6, [sp, #52]	; 0x34
900131c6:	e9cd 3208 	strd	r3, r2, [sp, #32]
900131ca:	2242      	movs	r2, #66	; 0x42
900131cc:	f7fe fade 	bl	9001178c <_ZN8touchgfx6memsetEPvhm>
900131d0:	b15f      	cbz	r7, 900131ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
900131d2:	f108 3aff 	add.w	sl, r8, #4294967295
900131d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
900131d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900131da:	b152      	cbz	r2, 900131f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
900131dc:	8812      	ldrh	r2, [r2, #0]
900131de:	b10a      	cbz	r2, 900131e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
900131e0:	459a      	cmp	sl, r3
900131e2:	dc2e      	bgt.n	90013242 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
900131e4:	2200      	movs	r2, #0
900131e6:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
900131ea:	4638      	mov	r0, r7
900131ec:	b023      	add	sp, #140	; 0x8c
900131ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900131f2:	9a08      	ldr	r2, [sp, #32]
900131f4:	2a00      	cmp	r2, #0
900131f6:	d0f5      	beq.n	900131e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
900131f8:	7812      	ldrb	r2, [r2, #0]
900131fa:	e7f0      	b.n	900131de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
900131fc:	2d00      	cmp	r5, #0
900131fe:	d0ea      	beq.n	900131d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90013200:	782a      	ldrb	r2, [r5, #0]
90013202:	b142      	cbz	r2, 90013216 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
90013204:	2a25      	cmp	r2, #37	; 0x25
90013206:	d001      	beq.n	9001320c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
90013208:	459a      	cmp	sl, r3
9001320a:	dc08      	bgt.n	9001321e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
9001320c:	f1bb 0f00 	cmp.w	fp, #0
90013210:	d121      	bne.n	90013256 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
90013212:	2d00      	cmp	r5, #0
90013214:	d0df      	beq.n	900131d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90013216:	782a      	ldrb	r2, [r5, #0]
90013218:	f04f 0b00 	mov.w	fp, #0
9001321c:	e01d      	b.n	9001325a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001321e:	f1bb 0f00 	cmp.w	fp, #0
90013222:	d077      	beq.n	90013314 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
90013224:	f8bb 2000 	ldrh.w	r2, [fp]
90013228:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001322c:	f1bb 0f00 	cmp.w	fp, #0
90013230:	d002      	beq.n	90013238 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
90013232:	f10b 0202 	add.w	r2, fp, #2
90013236:	9209      	str	r2, [sp, #36]	; 0x24
90013238:	b10d      	cbz	r5, 9001323e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001323a:	3501      	adds	r5, #1
9001323c:	9508      	str	r5, [sp, #32]
9001323e:	3301      	adds	r3, #1
90013240:	930d      	str	r3, [sp, #52]	; 0x34
90013242:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013244:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
90013248:	f1bb 0f00 	cmp.w	fp, #0
9001324c:	d0d6      	beq.n	900131fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001324e:	f8bb 2000 	ldrh.w	r2, [fp]
90013252:	2a00      	cmp	r2, #0
90013254:	d1d6      	bne.n	90013204 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
90013256:	f8bb 2000 	ldrh.w	r2, [fp]
9001325a:	2a00      	cmp	r2, #0
9001325c:	d0bb      	beq.n	900131d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001325e:	459a      	cmp	sl, r3
90013260:	ddb9      	ble.n	900131d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90013262:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
90013266:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
9001326a:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
9001326e:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
90013272:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
90013276:	960e      	str	r6, [sp, #56]	; 0x38
90013278:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
9001327c:	960f      	str	r6, [sp, #60]	; 0x3c
9001327e:	f1bb 0f00 	cmp.w	fp, #0
90013282:	d002      	beq.n	9001328a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
90013284:	f10b 0302 	add.w	r3, fp, #2
90013288:	9309      	str	r3, [sp, #36]	; 0x24
9001328a:	b10d      	cbz	r5, 90013290 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001328c:	1c6b      	adds	r3, r5, #1
9001328e:	9308      	str	r3, [sp, #32]
90013290:	ab0f      	add	r3, sp, #60	; 0x3c
90013292:	f10d 0232 	add.w	r2, sp, #50	; 0x32
90013296:	a908      	add	r1, sp, #32
90013298:	a809      	add	r0, sp, #36	; 0x24
9001329a:	9305      	str	r3, [sp, #20]
9001329c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
900132a0:	9304      	str	r3, [sp, #16]
900132a2:	ab0e      	add	r3, sp, #56	; 0x38
900132a4:	9303      	str	r3, [sp, #12]
900132a6:	ab0c      	add	r3, sp, #48	; 0x30
900132a8:	9302      	str	r3, [sp, #8]
900132aa:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
900132ae:	9301      	str	r3, [sp, #4]
900132b0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
900132b4:	9300      	str	r3, [sp, #0]
900132b6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
900132ba:	f7ff fea8 	bl	9001300e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
900132be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900132c0:	2b00      	cmp	r3, #0
900132c2:	bfbf      	itttt	lt
900132c4:	6823      	ldrlt	r3, [r4, #0]
900132c6:	3404      	addlt	r4, #4
900132c8:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
900132cc:	930e      	strlt	r3, [sp, #56]	; 0x38
900132ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900132d0:	2b00      	cmp	r3, #0
900132d2:	bfbe      	ittt	lt
900132d4:	6823      	ldrlt	r3, [r4, #0]
900132d6:	3404      	addlt	r4, #4
900132d8:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
900132dc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900132e0:	bfb8      	it	lt
900132e2:	930f      	strlt	r3, [sp, #60]	; 0x3c
900132e4:	b1d9      	cbz	r1, 9001331e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
900132e6:	880b      	ldrh	r3, [r1, #0]
900132e8:	2b69      	cmp	r3, #105	; 0x69
900132ea:	d01f      	beq.n	9001332c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
900132ec:	d82f      	bhi.n	9001334e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
900132ee:	2b58      	cmp	r3, #88	; 0x58
900132f0:	d01c      	beq.n	9001332c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
900132f2:	d818      	bhi.n	90013326 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
900132f4:	2b25      	cmp	r3, #37	; 0x25
900132f6:	d034      	beq.n	90013362 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
900132f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900132fa:	e9cd 5b08 	strd	r5, fp, [sp, #32]
900132fe:	f1bb 0f00 	cmp.w	fp, #0
90013302:	f000 80b7 	beq.w	90013474 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
90013306:	f8bb 5000 	ldrh.w	r5, [fp]
9001330a:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001330e:	3301      	adds	r3, #1
90013310:	930d      	str	r3, [sp, #52]	; 0x34
90013312:	e029      	b.n	90013368 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90013314:	b10d      	cbz	r5, 9001331a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
90013316:	782a      	ldrb	r2, [r5, #0]
90013318:	e786      	b.n	90013228 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001331a:	462a      	mov	r2, r5
9001331c:	e784      	b.n	90013228 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001331e:	2a00      	cmp	r2, #0
90013320:	d0ea      	beq.n	900132f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90013322:	7813      	ldrb	r3, [r2, #0]
90013324:	e7e0      	b.n	900132e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
90013326:	3b63      	subs	r3, #99	; 0x63
90013328:	2b01      	cmp	r3, #1
9001332a:	d8e5      	bhi.n	900132f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001332c:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
90013330:	b329      	cbz	r1, 9001337e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
90013332:	880b      	ldrh	r3, [r1, #0]
90013334:	2b69      	cmp	r3, #105	; 0x69
90013336:	d063      	beq.n	90013400 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90013338:	d825      	bhi.n	90013386 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001333a:	2b63      	cmp	r3, #99	; 0x63
9001333c:	d038      	beq.n	900133b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001333e:	2b64      	cmp	r3, #100	; 0x64
90013340:	d05e      	beq.n	90013400 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90013342:	2b58      	cmp	r3, #88	; 0x58
90013344:	d07a      	beq.n	9001343c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
90013346:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
9001334a:	4625      	mov	r5, r4
9001334c:	e036      	b.n	900133bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001334e:	2b73      	cmp	r3, #115	; 0x73
90013350:	d0ec      	beq.n	9001332c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90013352:	d802      	bhi.n	9001335a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
90013354:	2b6f      	cmp	r3, #111	; 0x6f
90013356:	d1cf      	bne.n	900132f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90013358:	e7e8      	b.n	9001332c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001335a:	2b75      	cmp	r3, #117	; 0x75
9001335c:	d0e6      	beq.n	9001332c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001335e:	2b78      	cmp	r3, #120	; 0x78
90013360:	e7f9      	b.n	90013356 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
90013362:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90013364:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
90013368:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001336a:	b10b      	cbz	r3, 90013370 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001336c:	3302      	adds	r3, #2
9001336e:	9309      	str	r3, [sp, #36]	; 0x24
90013370:	9b08      	ldr	r3, [sp, #32]
90013372:	2b00      	cmp	r3, #0
90013374:	f43f af2f 	beq.w	900131d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90013378:	3301      	adds	r3, #1
9001337a:	9308      	str	r3, [sp, #32]
9001337c:	e72b      	b.n	900131d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001337e:	2a00      	cmp	r2, #0
90013380:	d0e1      	beq.n	90013346 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90013382:	7813      	ldrb	r3, [r2, #0]
90013384:	e7d6      	b.n	90013334 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
90013386:	2b73      	cmp	r3, #115	; 0x73
90013388:	d036      	beq.n	900133f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001338a:	d807      	bhi.n	9001339c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001338c:	2b6f      	cmp	r3, #111	; 0x6f
9001338e:	d1da      	bne.n	90013346 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90013390:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90013392:	1d25      	adds	r5, r4, #4
90013394:	2308      	movs	r3, #8
90013396:	eba8 0202 	sub.w	r2, r8, r2
9001339a:	e049      	b.n	90013430 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001339c:	2b75      	cmp	r3, #117	; 0x75
9001339e:	d042      	beq.n	90013426 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
900133a0:	2b78      	cmp	r3, #120	; 0x78
900133a2:	d1d0      	bne.n	90013346 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
900133a4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900133a6:	1d25      	adds	r5, r4, #4
900133a8:	2310      	movs	r3, #16
900133aa:	eba8 0202 	sub.w	r2, r8, r2
900133ae:	e03f      	b.n	90013430 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
900133b0:	7823      	ldrb	r3, [r4, #0]
900133b2:	1d25      	adds	r5, r4, #4
900133b4:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
900133b8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
900133bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900133be:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
900133c2:	2b00      	cmp	r3, #0
900133c4:	d051      	beq.n	9001346a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
900133c6:	881a      	ldrh	r2, [r3, #0]
900133c8:	a80d      	add	r0, sp, #52	; 0x34
900133ca:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
900133ce:	462c      	mov	r4, r5
900133d0:	9005      	str	r0, [sp, #20]
900133d2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
900133d6:	9004      	str	r0, [sp, #16]
900133d8:	980e      	ldr	r0, [sp, #56]	; 0x38
900133da:	9003      	str	r0, [sp, #12]
900133dc:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
900133e0:	9002      	str	r0, [sp, #8]
900133e2:	980f      	ldr	r0, [sp, #60]	; 0x3c
900133e4:	9001      	str	r0, [sp, #4]
900133e6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
900133ea:	e9cd 8706 	strd	r8, r7, [sp, #24]
900133ee:	9000      	str	r0, [sp, #0]
900133f0:	a810      	add	r0, sp, #64	; 0x40
900133f2:	f7ff fd49 	bl	90012e88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
900133f6:	e7b7      	b.n	90013368 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
900133f8:	1d25      	adds	r5, r4, #4
900133fa:	6823      	ldr	r3, [r4, #0]
900133fc:	9310      	str	r3, [sp, #64]	; 0x40
900133fe:	e7dd      	b.n	900133bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90013400:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90013402:	230a      	movs	r3, #10
90013404:	4649      	mov	r1, r9
90013406:	6820      	ldr	r0, [r4, #0]
90013408:	eba8 0202 	sub.w	r2, r8, r2
9001340c:	1d25      	adds	r5, r4, #4
9001340e:	b292      	uxth	r2, r2
90013410:	f7ff fd08 	bl	90012e24 <_ZN8touchgfx7Unicode4itoaElPtti>
90013414:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90013418:	2b2d      	cmp	r3, #45	; 0x2d
9001341a:	d1cf      	bne.n	900133bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001341c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90013420:	9b10      	ldr	r3, [sp, #64]	; 0x40
90013422:	3302      	adds	r3, #2
90013424:	e7ea      	b.n	900133fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
90013426:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90013428:	1d25      	adds	r5, r4, #4
9001342a:	230a      	movs	r3, #10
9001342c:	eba8 0202 	sub.w	r2, r8, r2
90013430:	b292      	uxth	r2, r2
90013432:	4649      	mov	r1, r9
90013434:	6820      	ldr	r0, [r4, #0]
90013436:	f7ff fcd7 	bl	90012de8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
9001343a:	e7bf      	b.n	900133bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001343c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001343e:	2310      	movs	r3, #16
90013440:	4649      	mov	r1, r9
90013442:	6820      	ldr	r0, [r4, #0]
90013444:	eba8 0202 	sub.w	r2, r8, r2
90013448:	1d25      	adds	r5, r4, #4
9001344a:	b292      	uxth	r2, r2
9001344c:	f7ff fccc 	bl	90012de8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
90013450:	f10d 0242 	add.w	r2, sp, #66	; 0x42
90013454:	f832 3f02 	ldrh.w	r3, [r2, #2]!
90013458:	2b00      	cmp	r3, #0
9001345a:	d0af      	beq.n	900133bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001345c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
90013460:	2919      	cmp	r1, #25
90013462:	d8f7      	bhi.n	90013454 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90013464:	3b20      	subs	r3, #32
90013466:	8013      	strh	r3, [r2, #0]
90013468:	e7f4      	b.n	90013454 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001346a:	9a08      	ldr	r2, [sp, #32]
9001346c:	2a00      	cmp	r2, #0
9001346e:	d0ab      	beq.n	900133c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90013470:	7812      	ldrb	r2, [r2, #0]
90013472:	e7a9      	b.n	900133c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90013474:	2d00      	cmp	r5, #0
90013476:	f43f af48 	beq.w	9001330a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001347a:	782d      	ldrb	r5, [r5, #0]
9001347c:	e745      	b.n	9001330a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001347e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001347e:	b507      	push	{r0, r1, r2, lr}
90013480:	9300      	str	r3, [sp, #0]
90013482:	4613      	mov	r3, r2
90013484:	2200      	movs	r2, #0
90013486:	f7ff fe92 	bl	900131ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001348a:	b003      	add	sp, #12
9001348c:	f85d fb04 	ldr.w	pc, [sp], #4

90013490 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
90013490:	b40c      	push	{r2, r3}
90013492:	b507      	push	{r0, r1, r2, lr}
90013494:	ab04      	add	r3, sp, #16
90013496:	f853 2b04 	ldr.w	r2, [r3], #4
9001349a:	9301      	str	r3, [sp, #4]
9001349c:	f7ff ffef 	bl	9001347e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
900134a0:	b003      	add	sp, #12
900134a2:	f85d eb04 	ldr.w	lr, [sp], #4
900134a6:	b002      	add	sp, #8
900134a8:	4770      	bx	lr
	...

900134ac <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
900134ac:	4b01      	ldr	r3, [pc, #4]	; (900134b4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
900134ae:	6018      	str	r0, [r3, #0]
900134b0:	4770      	bx	lr
900134b2:	bf00      	nop
900134b4:	24012b40 	.word	0x24012b40

900134b8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
900134b8:	4b06      	ldr	r3, [pc, #24]	; (900134d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
900134ba:	881a      	ldrh	r2, [r3, #0]
900134bc:	4282      	cmp	r2, r0
900134be:	d807      	bhi.n	900134d0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
900134c0:	4b05      	ldr	r3, [pc, #20]	; (900134d8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
900134c2:	881b      	ldrh	r3, [r3, #0]
900134c4:	4413      	add	r3, r2
900134c6:	4298      	cmp	r0, r3
900134c8:	bfac      	ite	ge
900134ca:	2000      	movge	r0, #0
900134cc:	2001      	movlt	r0, #1
900134ce:	4770      	bx	lr
900134d0:	2000      	movs	r0, #0
900134d2:	4770      	bx	lr
900134d4:	24012b60 	.word	0x24012b60
900134d8:	24012b64 	.word	0x24012b64

900134dc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
900134dc:	b508      	push	{r3, lr}
900134de:	4601      	mov	r1, r0
900134e0:	f7ff ffea 	bl	900134b8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
900134e4:	b118      	cbz	r0, 900134ee <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
900134e6:	4b02      	ldr	r3, [pc, #8]	; (900134f0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
900134e8:	681b      	ldr	r3, [r3, #0]
900134ea:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
900134ee:	bd08      	pop	{r3, pc}
900134f0:	24012b44 	.word	0x24012b44

900134f4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
900134f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900134f8:	4d28      	ldr	r5, [pc, #160]	; (9001359c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
900134fa:	682b      	ldr	r3, [r5, #0]
900134fc:	2b00      	cmp	r3, #0
900134fe:	d04a      	beq.n	90013596 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
90013500:	4a27      	ldr	r2, [pc, #156]	; (900135a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
90013502:	4e28      	ldr	r6, [pc, #160]	; (900135a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
90013504:	8810      	ldrh	r0, [r2, #0]
90013506:	f8b6 8000 	ldrh.w	r8, [r6]
9001350a:	4c27      	ldr	r4, [pc, #156]	; (900135a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001350c:	4440      	add	r0, r8
9001350e:	4f27      	ldr	r7, [pc, #156]	; (900135ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
90013510:	1c41      	adds	r1, r0, #1
90013512:	ea4f 0e80 	mov.w	lr, r0, lsl #2
90013516:	f021 0101 	bic.w	r1, r1, #1
9001351a:	eb03 020e 	add.w	r2, r3, lr
9001351e:	0409      	lsls	r1, r1, #16
90013520:	6022      	str	r2, [r4, #0]
90013522:	0c09      	lsrs	r1, r1, #16
90013524:	ea4f 0c41 	mov.w	ip, r1, lsl #1
90013528:	eb0e 010c 	add.w	r1, lr, ip
9001352c:	185a      	adds	r2, r3, r1
9001352e:	603a      	str	r2, [r7, #0]
90013530:	220e      	movs	r2, #14
90013532:	fb02 f208 	mul.w	r2, r2, r8
90013536:	3203      	adds	r2, #3
90013538:	f022 0203 	bic.w	r2, r2, #3
9001353c:	4411      	add	r1, r2
9001353e:	440b      	add	r3, r1
90013540:	491b      	ldr	r1, [pc, #108]	; (900135b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
90013542:	600b      	str	r3, [r1, #0]
90013544:	2300      	movs	r3, #0
90013546:	491b      	ldr	r1, [pc, #108]	; (900135b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
90013548:	800b      	strh	r3, [r1, #0]
9001354a:	491b      	ldr	r1, [pc, #108]	; (900135b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
9001354c:	6809      	ldr	r1, [r1, #0]
9001354e:	eba1 010e 	sub.w	r1, r1, lr
90013552:	eba1 010c 	sub.w	r1, r1, ip
90013556:	469c      	mov	ip, r3
90013558:	1a8a      	subs	r2, r1, r2
9001355a:	4918      	ldr	r1, [pc, #96]	; (900135bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
9001355c:	600a      	str	r2, [r1, #0]
9001355e:	f64f 71ff 	movw	r1, #65535	; 0xffff
90013562:	4a17      	ldr	r2, [pc, #92]	; (900135c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
90013564:	8013      	strh	r3, [r2, #0]
90013566:	4283      	cmp	r3, r0
90013568:	d10d      	bne.n	90013586 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
9001356a:	8835      	ldrh	r5, [r6, #0]
9001356c:	2300      	movs	r3, #0
9001356e:	6838      	ldr	r0, [r7, #0]
90013570:	240e      	movs	r4, #14
90013572:	429d      	cmp	r5, r3
90013574:	d90f      	bls.n	90013596 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
90013576:	fb04 0203 	mla	r2, r4, r3, r0
9001357a:	3301      	adds	r3, #1
9001357c:	7b11      	ldrb	r1, [r2, #12]
9001357e:	f36f 1145 	bfc	r1, #5, #1
90013582:	7311      	strb	r1, [r2, #12]
90013584:	e7f5      	b.n	90013572 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
90013586:	682a      	ldr	r2, [r5, #0]
90013588:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001358c:	6822      	ldr	r2, [r4, #0]
9001358e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
90013592:	3301      	adds	r3, #1
90013594:	e7e7      	b.n	90013566 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
90013596:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001359a:	bf00      	nop
9001359c:	24012b44 	.word	0x24012b44
900135a0:	24012b60 	.word	0x24012b60
900135a4:	24012b64 	.word	0x24012b64
900135a8:	24012b58 	.word	0x24012b58
900135ac:	24012b48 	.word	0x24012b48
900135b0:	24012b50 	.word	0x24012b50
900135b4:	24012b62 	.word	0x24012b62
900135b8:	24012b4c 	.word	0x24012b4c
900135bc:	24012b5c 	.word	0x24012b5c
900135c0:	24012b54 	.word	0x24012b54

900135c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
900135c4:	4b10      	ldr	r3, [pc, #64]	; (90013608 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
900135c6:	b510      	push	{r4, lr}
900135c8:	681b      	ldr	r3, [r3, #0]
900135ca:	b9db      	cbnz	r3, 90013604 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
900135cc:	b1d1      	cbz	r1, 90013604 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
900135ce:	4b0f      	ldr	r3, [pc, #60]	; (9001360c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
900135d0:	240e      	movs	r4, #14
900135d2:	801a      	strh	r2, [r3, #0]
900135d4:	b292      	uxth	r2, r2
900135d6:	4b0e      	ldr	r3, [pc, #56]	; (90013610 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
900135d8:	881b      	ldrh	r3, [r3, #0]
900135da:	4413      	add	r3, r2
900135dc:	4362      	muls	r2, r4
900135de:	2406      	movs	r4, #6
900135e0:	fb04 2203 	mla	r2, r4, r3, r2
900135e4:	428a      	cmp	r2, r1
900135e6:	d305      	bcc.n	900135f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
900135e8:	4b0a      	ldr	r3, [pc, #40]	; (90013614 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
900135ea:	2137      	movs	r1, #55	; 0x37
900135ec:	4a0a      	ldr	r2, [pc, #40]	; (90013618 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
900135ee:	480b      	ldr	r0, [pc, #44]	; (9001361c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
900135f0:	f00b fe58 	bl	9001f2a4 <__assert_func>
900135f4:	4b0a      	ldr	r3, [pc, #40]	; (90013620 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
900135f6:	6019      	str	r1, [r3, #0]
900135f8:	4b0a      	ldr	r3, [pc, #40]	; (90013624 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
900135fa:	6018      	str	r0, [r3, #0]
900135fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013600:	f7ff bf78 	b.w	900134f4 <_ZN8touchgfx6Bitmap10clearCacheEv>
90013604:	bd10      	pop	{r4, pc}
90013606:	bf00      	nop
90013608:	24012b50 	.word	0x24012b50
9001360c:	24012b64 	.word	0x24012b64
90013610:	24012b60 	.word	0x24012b60
90013614:	90023261 	.word	0x90023261
90013618:	900232ba 	.word	0x900232ba
9001361c:	9002323c 	.word	0x9002323c
90013620:	24012b4c 	.word	0x24012b4c
90013624:	24012b44 	.word	0x24012b44

90013628 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90013628:	b470      	push	{r4, r5, r6}
9001362a:	4c07      	ldr	r4, [pc, #28]	; (90013648 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001362c:	4605      	mov	r5, r0
9001362e:	4610      	mov	r0, r2
90013630:	9a03      	ldr	r2, [sp, #12]
90013632:	6826      	ldr	r6, [r4, #0]
90013634:	b936      	cbnz	r6, 90013644 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
90013636:	6025      	str	r5, [r4, #0]
90013638:	4c04      	ldr	r4, [pc, #16]	; (9001364c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001363a:	8021      	strh	r1, [r4, #0]
9001363c:	4619      	mov	r1, r3
9001363e:	bc70      	pop	{r4, r5, r6}
90013640:	f7ff bfc0 	b.w	900135c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
90013644:	bc70      	pop	{r4, r5, r6}
90013646:	4770      	bx	lr
90013648:	24012b68 	.word	0x24012b68
9001364c:	24012b60 	.word	0x24012b60

90013650 <_ZNK8touchgfx6Bitmap8getWidthEv>:
90013650:	b508      	push	{r3, lr}
90013652:	4b14      	ldr	r3, [pc, #80]	; (900136a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
90013654:	6819      	ldr	r1, [r3, #0]
90013656:	b931      	cbnz	r1, 90013666 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
90013658:	4b13      	ldr	r3, [pc, #76]	; (900136a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001365a:	f240 3187 	movw	r1, #903	; 0x387
9001365e:	4a13      	ldr	r2, [pc, #76]	; (900136ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
90013660:	4813      	ldr	r0, [pc, #76]	; (900136b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
90013662:	f00b fe1f 	bl	9001f2a4 <__assert_func>
90013666:	4a13      	ldr	r2, [pc, #76]	; (900136b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
90013668:	8803      	ldrh	r3, [r0, #0]
9001366a:	8812      	ldrh	r2, [r2, #0]
9001366c:	4293      	cmp	r3, r2
9001366e:	d204      	bcs.n	9001367a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
90013670:	2214      	movs	r2, #20
90013672:	fb02 1303 	mla	r3, r2, r3, r1
90013676:	8918      	ldrh	r0, [r3, #8]
90013678:	bd08      	pop	{r3, pc}
9001367a:	490f      	ldr	r1, [pc, #60]	; (900136b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
9001367c:	8809      	ldrh	r1, [r1, #0]
9001367e:	4411      	add	r1, r2
90013680:	428b      	cmp	r3, r1
90013682:	da06      	bge.n	90013692 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
90013684:	1a9b      	subs	r3, r3, r2
90013686:	4a0d      	ldr	r2, [pc, #52]	; (900136bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
90013688:	210e      	movs	r1, #14
9001368a:	6812      	ldr	r2, [r2, #0]
9001368c:	fb01 2303 	mla	r3, r1, r3, r2
90013690:	e7f1      	b.n	90013676 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
90013692:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90013696:	4293      	cmp	r3, r2
90013698:	bf0a      	itet	eq
9001369a:	4b09      	ldreq	r3, [pc, #36]	; (900136c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
9001369c:	2000      	movne	r0, #0
9001369e:	8818      	ldrheq	r0, [r3, #0]
900136a0:	e7ea      	b.n	90013678 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
900136a2:	bf00      	nop
900136a4:	24012b68 	.word	0x24012b68
900136a8:	900226a8 	.word	0x900226a8
900136ac:	90023367 	.word	0x90023367
900136b0:	9002323c 	.word	0x9002323c
900136b4:	24012b60 	.word	0x24012b60
900136b8:	24012b64 	.word	0x24012b64
900136bc:	24012b48 	.word	0x24012b48
900136c0:	24012ad4 	.word	0x24012ad4

900136c4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
900136c4:	b508      	push	{r3, lr}
900136c6:	4b14      	ldr	r3, [pc, #80]	; (90013718 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
900136c8:	6819      	ldr	r1, [r3, #0]
900136ca:	b931      	cbnz	r1, 900136da <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
900136cc:	4b13      	ldr	r3, [pc, #76]	; (9001371c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
900136ce:	f240 319b 	movw	r1, #923	; 0x39b
900136d2:	4a13      	ldr	r2, [pc, #76]	; (90013720 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
900136d4:	4813      	ldr	r0, [pc, #76]	; (90013724 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
900136d6:	f00b fde5 	bl	9001f2a4 <__assert_func>
900136da:	4a13      	ldr	r2, [pc, #76]	; (90013728 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
900136dc:	8803      	ldrh	r3, [r0, #0]
900136de:	8812      	ldrh	r2, [r2, #0]
900136e0:	4293      	cmp	r3, r2
900136e2:	d204      	bcs.n	900136ee <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
900136e4:	2214      	movs	r2, #20
900136e6:	fb02 1303 	mla	r3, r2, r3, r1
900136ea:	8958      	ldrh	r0, [r3, #10]
900136ec:	bd08      	pop	{r3, pc}
900136ee:	490f      	ldr	r1, [pc, #60]	; (9001372c <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
900136f0:	8809      	ldrh	r1, [r1, #0]
900136f2:	4411      	add	r1, r2
900136f4:	428b      	cmp	r3, r1
900136f6:	da06      	bge.n	90013706 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
900136f8:	1a9b      	subs	r3, r3, r2
900136fa:	4a0d      	ldr	r2, [pc, #52]	; (90013730 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
900136fc:	210e      	movs	r1, #14
900136fe:	6812      	ldr	r2, [r2, #0]
90013700:	fb01 2303 	mla	r3, r1, r3, r2
90013704:	e7f1      	b.n	900136ea <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
90013706:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001370a:	4293      	cmp	r3, r2
9001370c:	bf0a      	itet	eq
9001370e:	4b09      	ldreq	r3, [pc, #36]	; (90013734 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
90013710:	2000      	movne	r0, #0
90013712:	8818      	ldrheq	r0, [r3, #0]
90013714:	e7ea      	b.n	900136ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
90013716:	bf00      	nop
90013718:	24012b68 	.word	0x24012b68
9001371c:	900226a8 	.word	0x900226a8
90013720:	90023393 	.word	0x90023393
90013724:	9002323c 	.word	0x9002323c
90013728:	24012b60 	.word	0x24012b60
9001372c:	24012b64 	.word	0x24012b64
90013730:	24012b48 	.word	0x24012b48
90013734:	24012ad6 	.word	0x24012ad6

90013738 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
90013738:	4b23      	ldr	r3, [pc, #140]	; (900137c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001373a:	b510      	push	{r4, lr}
9001373c:	681c      	ldr	r4, [r3, #0]
9001373e:	b934      	cbnz	r4, 9001374e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
90013740:	4b22      	ldr	r3, [pc, #136]	; (900137cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
90013742:	f240 31af 	movw	r1, #943	; 0x3af
90013746:	4a22      	ldr	r2, [pc, #136]	; (900137d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
90013748:	4822      	ldr	r0, [pc, #136]	; (900137d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
9001374a:	f00b fdab 	bl	9001f2a4 <__assert_func>
9001374e:	4a22      	ldr	r2, [pc, #136]	; (900137d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
90013750:	880b      	ldrh	r3, [r1, #0]
90013752:	8812      	ldrh	r2, [r2, #0]
90013754:	4293      	cmp	r3, r2
90013756:	d211      	bcs.n	9001377c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
90013758:	2214      	movs	r2, #20
9001375a:	fb02 4303 	mla	r3, r2, r3, r4
9001375e:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
90013762:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
90013766:	8a1a      	ldrh	r2, [r3, #16]
90013768:	8a5b      	ldrh	r3, [r3, #18]
9001376a:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001376e:	8004      	strh	r4, [r0, #0]
90013770:	f3c3 030c 	ubfx	r3, r3, #0, #13
90013774:	8041      	strh	r1, [r0, #2]
90013776:	8082      	strh	r2, [r0, #4]
90013778:	80c3      	strh	r3, [r0, #6]
9001377a:	e00e      	b.n	9001379a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
9001377c:	4917      	ldr	r1, [pc, #92]	; (900137dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
9001377e:	8809      	ldrh	r1, [r1, #0]
90013780:	4411      	add	r1, r2
90013782:	428b      	cmp	r3, r1
90013784:	da0a      	bge.n	9001379c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
90013786:	1a9b      	subs	r3, r3, r2
90013788:	4a15      	ldr	r2, [pc, #84]	; (900137e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
9001378a:	210e      	movs	r1, #14
9001378c:	6812      	ldr	r2, [r2, #0]
9001378e:	fb01 2303 	mla	r3, r1, r3, r2
90013792:	681a      	ldr	r2, [r3, #0]
90013794:	6002      	str	r2, [r0, #0]
90013796:	685a      	ldr	r2, [r3, #4]
90013798:	6042      	str	r2, [r0, #4]
9001379a:	bd10      	pop	{r4, pc}
9001379c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
900137a0:	4293      	cmp	r3, r2
900137a2:	d10b      	bne.n	900137bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
900137a4:	4b0f      	ldr	r3, [pc, #60]	; (900137e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
900137a6:	f9b3 1000 	ldrsh.w	r1, [r3]
900137aa:	4b0f      	ldr	r3, [pc, #60]	; (900137e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
900137ac:	8081      	strh	r1, [r0, #4]
900137ae:	f9b3 2000 	ldrsh.w	r2, [r3]
900137b2:	2300      	movs	r3, #0
900137b4:	80c2      	strh	r2, [r0, #6]
900137b6:	8003      	strh	r3, [r0, #0]
900137b8:	8043      	strh	r3, [r0, #2]
900137ba:	e7ee      	b.n	9001379a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
900137bc:	2300      	movs	r3, #0
900137be:	8003      	strh	r3, [r0, #0]
900137c0:	8043      	strh	r3, [r0, #2]
900137c2:	8083      	strh	r3, [r0, #4]
900137c4:	e7d8      	b.n	90013778 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
900137c6:	bf00      	nop
900137c8:	24012b68 	.word	0x24012b68
900137cc:	900226a8 	.word	0x900226a8
900137d0:	90023300 	.word	0x90023300
900137d4:	9002323c 	.word	0x9002323c
900137d8:	24012b60 	.word	0x24012b60
900137dc:	24012b64 	.word	0x24012b64
900137e0:	24012b48 	.word	0x24012b48
900137e4:	24012ad4 	.word	0x24012ad4
900137e8:	24012ad6 	.word	0x24012ad6

900137ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
900137ec:	4b18      	ldr	r3, [pc, #96]	; (90013850 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
900137ee:	681b      	ldr	r3, [r3, #0]
900137f0:	b34b      	cbz	r3, 90013846 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
900137f2:	4a18      	ldr	r2, [pc, #96]	; (90013854 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
900137f4:	8800      	ldrh	r0, [r0, #0]
900137f6:	8812      	ldrh	r2, [r2, #0]
900137f8:	4290      	cmp	r0, r2
900137fa:	d211      	bcs.n	90013820 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
900137fc:	2214      	movs	r2, #20
900137fe:	fb02 3300 	mla	r3, r2, r0, r3
90013802:	8a1a      	ldrh	r2, [r3, #16]
90013804:	8919      	ldrh	r1, [r3, #8]
90013806:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001380a:	428a      	cmp	r2, r1
9001380c:	db1d      	blt.n	9001384a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
9001380e:	8a58      	ldrh	r0, [r3, #18]
90013810:	f3c0 000c 	ubfx	r0, r0, #0, #13
90013814:	895b      	ldrh	r3, [r3, #10]
90013816:	4298      	cmp	r0, r3
90013818:	bfac      	ite	ge
9001381a:	2000      	movge	r0, #0
9001381c:	2001      	movlt	r0, #1
9001381e:	4770      	bx	lr
90013820:	4b0d      	ldr	r3, [pc, #52]	; (90013858 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
90013822:	881b      	ldrh	r3, [r3, #0]
90013824:	4413      	add	r3, r2
90013826:	4298      	cmp	r0, r3
90013828:	da0d      	bge.n	90013846 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
9001382a:	4b0c      	ldr	r3, [pc, #48]	; (9001385c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
9001382c:	1a80      	subs	r0, r0, r2
9001382e:	220e      	movs	r2, #14
90013830:	681b      	ldr	r3, [r3, #0]
90013832:	fb02 3300 	mla	r3, r2, r0, r3
90013836:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001383a:	891a      	ldrh	r2, [r3, #8]
9001383c:	4291      	cmp	r1, r2
9001383e:	db04      	blt.n	9001384a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
90013840:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
90013844:	e7e6      	b.n	90013814 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
90013846:	2000      	movs	r0, #0
90013848:	4770      	bx	lr
9001384a:	2001      	movs	r0, #1
9001384c:	4770      	bx	lr
9001384e:	bf00      	nop
90013850:	24012b68 	.word	0x24012b68
90013854:	24012b60 	.word	0x24012b60
90013858:	24012b64 	.word	0x24012b64
9001385c:	24012b48 	.word	0x24012b48

90013860 <_ZNK8touchgfx6Bitmap7getDataEv>:
90013860:	b508      	push	{r3, lr}
90013862:	4b12      	ldr	r3, [pc, #72]	; (900138ac <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
90013864:	6819      	ldr	r1, [r3, #0]
90013866:	b931      	cbnz	r1, 90013876 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
90013868:	4b11      	ldr	r3, [pc, #68]	; (900138b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001386a:	f240 31d3 	movw	r1, #979	; 0x3d3
9001386e:	4a11      	ldr	r2, [pc, #68]	; (900138b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
90013870:	4811      	ldr	r0, [pc, #68]	; (900138b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
90013872:	f00b fd17 	bl	9001f2a4 <__assert_func>
90013876:	8803      	ldrh	r3, [r0, #0]
90013878:	f64f 72ff 	movw	r2, #65535	; 0xffff
9001387c:	4293      	cmp	r3, r2
9001387e:	d012      	beq.n	900138a6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
90013880:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90013884:	4293      	cmp	r3, r2
90013886:	d103      	bne.n	90013890 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
90013888:	4b0c      	ldr	r3, [pc, #48]	; (900138bc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001388a:	681b      	ldr	r3, [r3, #0]
9001388c:	6c58      	ldr	r0, [r3, #68]	; 0x44
9001388e:	bd08      	pop	{r3, pc}
90013890:	4a0b      	ldr	r2, [pc, #44]	; (900138c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
90013892:	6812      	ldr	r2, [r2, #0]
90013894:	b11a      	cbz	r2, 9001389e <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
90013896:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001389a:	2800      	cmp	r0, #0
9001389c:	d1f7      	bne.n	9001388e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
9001389e:	2214      	movs	r2, #20
900138a0:	4353      	muls	r3, r2
900138a2:	58c8      	ldr	r0, [r1, r3]
900138a4:	e7f3      	b.n	9001388e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
900138a6:	2000      	movs	r0, #0
900138a8:	e7f1      	b.n	9001388e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
900138aa:	bf00      	nop
900138ac:	24012b68 	.word	0x24012b68
900138b0:	900226a8 	.word	0x900226a8
900138b4:	90023336 	.word	0x90023336
900138b8:	9002323c 	.word	0x9002323c
900138bc:	24012ae0 	.word	0x24012ae0
900138c0:	24012b44 	.word	0x24012b44

900138c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
900138c4:	8802      	ldrh	r2, [r0, #0]
900138c6:	f64f 73fd 	movw	r3, #65533	; 0xfffd
900138ca:	429a      	cmp	r2, r3
900138cc:	d845      	bhi.n	9001395a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
900138ce:	4b24      	ldr	r3, [pc, #144]	; (90013960 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
900138d0:	8818      	ldrh	r0, [r3, #0]
900138d2:	4282      	cmp	r2, r0
900138d4:	d221      	bcs.n	9001391a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
900138d6:	4b23      	ldr	r3, [pc, #140]	; (90013964 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
900138d8:	6819      	ldr	r1, [r3, #0]
900138da:	2314      	movs	r3, #20
900138dc:	fb03 1302 	mla	r3, r3, r2, r1
900138e0:	6858      	ldr	r0, [r3, #4]
900138e2:	2800      	cmp	r0, #0
900138e4:	d03a      	beq.n	9001395c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
900138e6:	4920      	ldr	r1, [pc, #128]	; (90013968 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
900138e8:	6809      	ldr	r1, [r1, #0]
900138ea:	2900      	cmp	r1, #0
900138ec:	d036      	beq.n	9001395c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
900138ee:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
900138f2:	2900      	cmp	r1, #0
900138f4:	d032      	beq.n	9001395c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
900138f6:	891a      	ldrh	r2, [r3, #8]
900138f8:	8958      	ldrh	r0, [r3, #10]
900138fa:	4350      	muls	r0, r2
900138fc:	7c5a      	ldrb	r2, [r3, #17]
900138fe:	7cdb      	ldrb	r3, [r3, #19]
90013900:	0952      	lsrs	r2, r2, #5
90013902:	f3c3 1342 	ubfx	r3, r3, #5, #3
90013906:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001390a:	2b0b      	cmp	r3, #11
9001390c:	bf18      	it	ne
9001390e:	0040      	lslne	r0, r0, #1
90013910:	3003      	adds	r0, #3
90013912:	f020 0003 	bic.w	r0, r0, #3
90013916:	4408      	add	r0, r1
90013918:	4770      	bx	lr
9001391a:	4b14      	ldr	r3, [pc, #80]	; (9001396c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
9001391c:	881b      	ldrh	r3, [r3, #0]
9001391e:	4403      	add	r3, r0
90013920:	429a      	cmp	r2, r3
90013922:	da1a      	bge.n	9001395a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
90013924:	4b12      	ldr	r3, [pc, #72]	; (90013970 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
90013926:	1a10      	subs	r0, r2, r0
90013928:	210e      	movs	r1, #14
9001392a:	681b      	ldr	r3, [r3, #0]
9001392c:	fb01 3000 	mla	r0, r1, r0, r3
90013930:	7b03      	ldrb	r3, [r0, #12]
90013932:	f003 031f 	and.w	r3, r3, #31
90013936:	2b0b      	cmp	r3, #11
90013938:	d10b      	bne.n	90013952 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001393a:	8903      	ldrh	r3, [r0, #8]
9001393c:	8940      	ldrh	r0, [r0, #10]
9001393e:	4358      	muls	r0, r3
90013940:	4b09      	ldr	r3, [pc, #36]	; (90013968 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
90013942:	3003      	adds	r0, #3
90013944:	6819      	ldr	r1, [r3, #0]
90013946:	f020 0303 	bic.w	r3, r0, #3
9001394a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001394e:	4418      	add	r0, r3
90013950:	4770      	bx	lr
90013952:	2b0d      	cmp	r3, #13
90013954:	d101      	bne.n	9001395a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
90013956:	300d      	adds	r0, #13
90013958:	4770      	bx	lr
9001395a:	2000      	movs	r0, #0
9001395c:	4770      	bx	lr
9001395e:	bf00      	nop
90013960:	24012b60 	.word	0x24012b60
90013964:	24012b68 	.word	0x24012b68
90013968:	24012b44 	.word	0x24012b44
9001396c:	24012b64 	.word	0x24012b64
90013970:	24012b48 	.word	0x24012b48

90013974 <_ZNK8touchgfx6Bitmap9getFormatEv>:
90013974:	4b19      	ldr	r3, [pc, #100]	; (900139dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
90013976:	6819      	ldr	r1, [r3, #0]
90013978:	8803      	ldrh	r3, [r0, #0]
9001397a:	b1e9      	cbz	r1, 900139b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
9001397c:	4a18      	ldr	r2, [pc, #96]	; (900139e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
9001397e:	8812      	ldrh	r2, [r2, #0]
90013980:	429a      	cmp	r2, r3
90013982:	d90a      	bls.n	9001399a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
90013984:	2214      	movs	r2, #20
90013986:	fb02 1303 	mla	r3, r2, r3, r1
9001398a:	7c58      	ldrb	r0, [r3, #17]
9001398c:	0942      	lsrs	r2, r0, #5
9001398e:	7cd8      	ldrb	r0, [r3, #19]
90013990:	f3c0 1042 	ubfx	r0, r0, #5, #3
90013994:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
90013998:	4770      	bx	lr
9001399a:	4912      	ldr	r1, [pc, #72]	; (900139e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
9001399c:	8809      	ldrh	r1, [r1, #0]
9001399e:	4411      	add	r1, r2
900139a0:	428b      	cmp	r3, r1
900139a2:	da09      	bge.n	900139b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
900139a4:	1a9b      	subs	r3, r3, r2
900139a6:	4a10      	ldr	r2, [pc, #64]	; (900139e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
900139a8:	210e      	movs	r1, #14
900139aa:	6812      	ldr	r2, [r2, #0]
900139ac:	fb01 2303 	mla	r3, r1, r3, r2
900139b0:	7b18      	ldrb	r0, [r3, #12]
900139b2:	f000 001f 	and.w	r0, r0, #31
900139b6:	4770      	bx	lr
900139b8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
900139bc:	4293      	cmp	r3, r2
900139be:	d10a      	bne.n	900139d6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
900139c0:	4b0a      	ldr	r3, [pc, #40]	; (900139ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
900139c2:	681b      	ldr	r3, [r3, #0]
900139c4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
900139c8:	b10a      	cbz	r2, 900139ce <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
900139ca:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900139cc:	b900      	cbnz	r0, 900139d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
900139ce:	6898      	ldr	r0, [r3, #8]
900139d0:	6803      	ldr	r3, [r0, #0]
900139d2:	6a1b      	ldr	r3, [r3, #32]
900139d4:	4718      	bx	r3
900139d6:	2000      	movs	r0, #0
900139d8:	4770      	bx	lr
900139da:	bf00      	nop
900139dc:	24012b68 	.word	0x24012b68
900139e0:	24012b60 	.word	0x24012b60
900139e4:	24012b64 	.word	0x24012b64
900139e8:	24012b48 	.word	0x24012b48
900139ec:	24012ae0 	.word	0x24012ae0

900139f0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
900139f0:	2010      	movs	r0, #16
900139f2:	4770      	bx	lr

900139f4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
900139f4:	2000      	movs	r0, #0
900139f6:	4770      	bx	lr

900139f8 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
900139f8:	00d2      	lsls	r2, r2, #3
900139fa:	0209      	lsls	r1, r1, #8
900139fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90013a00:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
90013a04:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
90013a08:	4310      	orrs	r0, r2
90013a0a:	4770      	bx	lr

90013a0c <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
90013a0c:	0a09      	lsrs	r1, r1, #8
90013a0e:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
90013a12:	4770      	bx	lr

90013a14 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
90013a14:	08c9      	lsrs	r1, r1, #3
90013a16:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
90013a1a:	4770      	bx	lr

90013a1c <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
90013a1c:	00c9      	lsls	r1, r1, #3
90013a1e:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
90013a22:	4770      	bx	lr

90013a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
90013a24:	2bff      	cmp	r3, #255	; 0xff
90013a26:	d050      	beq.n	90013aca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
90013a28:	2a0b      	cmp	r2, #11
90013a2a:	d04a      	beq.n	90013ac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
90013a2c:	d80e      	bhi.n	90013a4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
90013a2e:	2a03      	cmp	r2, #3
90013a30:	d03f      	beq.n	90013ab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
90013a32:	d804      	bhi.n	90013a3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
90013a34:	2a01      	cmp	r2, #1
90013a36:	d03e      	beq.n	90013ab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
90013a38:	d93f      	bls.n	90013aba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
90013a3a:	6b80      	ldr	r0, [r0, #56]	; 0x38
90013a3c:	4770      	bx	lr
90013a3e:	2a09      	cmp	r2, #9
90013a40:	d03f      	beq.n	90013ac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
90013a42:	d83c      	bhi.n	90013abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
90013a44:	2a08      	cmp	r2, #8
90013a46:	d03a      	beq.n	90013abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
90013a48:	2000      	movs	r0, #0
90013a4a:	4770      	bx	lr
90013a4c:	2a2f      	cmp	r2, #47	; 0x2f
90013a4e:	d024      	beq.n	90013a9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
90013a50:	d80d      	bhi.n	90013a6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
90013a52:	2a2d      	cmp	r2, #45	; 0x2d
90013a54:	d014      	beq.n	90013a80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
90013a56:	d826      	bhi.n	90013aa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
90013a58:	2a2c      	cmp	r2, #44	; 0x2c
90013a5a:	d1f5      	bne.n	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013a5c:	684b      	ldr	r3, [r1, #4]
90013a5e:	781b      	ldrb	r3, [r3, #0]
90013a60:	2b01      	cmp	r3, #1
90013a62:	d018      	beq.n	90013a96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
90013a64:	d323      	bcc.n	90013aae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
90013a66:	2b02      	cmp	r3, #2
90013a68:	d1ee      	bne.n	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013a6a:	6880      	ldr	r0, [r0, #8]
90013a6c:	4770      	bx	lr
90013a6e:	2a31      	cmp	r2, #49	; 0x31
90013a70:	d004      	beq.n	90013a7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
90013a72:	d328      	bcc.n	90013ac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
90013a74:	2a32      	cmp	r2, #50	; 0x32
90013a76:	d026      	beq.n	90013ac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
90013a78:	2a33      	cmp	r2, #51	; 0x33
90013a7a:	d1e5      	bne.n	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013a7c:	6f00      	ldr	r0, [r0, #112]	; 0x70
90013a7e:	4770      	bx	lr
90013a80:	684b      	ldr	r3, [r1, #4]
90013a82:	781b      	ldrb	r3, [r3, #0]
90013a84:	2b01      	cmp	r3, #1
90013a86:	d004      	beq.n	90013a92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
90013a88:	d30b      	bcc.n	90013aa2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90013a8a:	2b02      	cmp	r3, #2
90013a8c:	d1dc      	bne.n	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013a8e:	6900      	ldr	r0, [r0, #16]
90013a90:	4770      	bx	lr
90013a92:	6a00      	ldr	r0, [r0, #32]
90013a94:	4770      	bx	lr
90013a96:	6980      	ldr	r0, [r0, #24]
90013a98:	4770      	bx	lr
90013a9a:	684b      	ldr	r3, [r1, #4]
90013a9c:	781b      	ldrb	r3, [r3, #0]
90013a9e:	2b00      	cmp	r3, #0
90013aa0:	d1d2      	bne.n	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013aa2:	6b00      	ldr	r0, [r0, #48]	; 0x30
90013aa4:	4770      	bx	lr
90013aa6:	684b      	ldr	r3, [r1, #4]
90013aa8:	781b      	ldrb	r3, [r3, #0]
90013aaa:	2b00      	cmp	r3, #0
90013aac:	d1cc      	bne.n	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013aae:	6a80      	ldr	r0, [r0, #40]	; 0x28
90013ab0:	4770      	bx	lr
90013ab2:	6c80      	ldr	r0, [r0, #72]	; 0x48
90013ab4:	4770      	bx	lr
90013ab6:	6d00      	ldr	r0, [r0, #80]	; 0x50
90013ab8:	4770      	bx	lr
90013aba:	6c00      	ldr	r0, [r0, #64]	; 0x40
90013abc:	4770      	bx	lr
90013abe:	6d80      	ldr	r0, [r0, #88]	; 0x58
90013ac0:	4770      	bx	lr
90013ac2:	6e00      	ldr	r0, [r0, #96]	; 0x60
90013ac4:	4770      	bx	lr
90013ac6:	6e80      	ldr	r0, [r0, #104]	; 0x68
90013ac8:	4770      	bx	lr
90013aca:	2a0b      	cmp	r2, #11
90013acc:	d049      	beq.n	90013b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
90013ace:	d80e      	bhi.n	90013aee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
90013ad0:	2a03      	cmp	r2, #3
90013ad2:	d040      	beq.n	90013b56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
90013ad4:	d804      	bhi.n	90013ae0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
90013ad6:	2a01      	cmp	r2, #1
90013ad8:	d03f      	beq.n	90013b5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
90013ada:	d940      	bls.n	90013b5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
90013adc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90013ade:	4770      	bx	lr
90013ae0:	2a09      	cmp	r2, #9
90013ae2:	d03e      	beq.n	90013b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
90013ae4:	d801      	bhi.n	90013aea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
90013ae6:	2a08      	cmp	r2, #8
90013ae8:	d1ae      	bne.n	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013aea:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
90013aec:	4770      	bx	lr
90013aee:	2a2f      	cmp	r2, #47	; 0x2f
90013af0:	d024      	beq.n	90013b3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
90013af2:	d80d      	bhi.n	90013b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
90013af4:	2a2d      	cmp	r2, #45	; 0x2d
90013af6:	d014      	beq.n	90013b22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
90013af8:	d826      	bhi.n	90013b48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
90013afa:	2a2c      	cmp	r2, #44	; 0x2c
90013afc:	d1a4      	bne.n	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013afe:	684b      	ldr	r3, [r1, #4]
90013b00:	781b      	ldrb	r3, [r3, #0]
90013b02:	2b01      	cmp	r3, #1
90013b04:	d018      	beq.n	90013b38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
90013b06:	d324      	bcc.n	90013b52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
90013b08:	2b02      	cmp	r3, #2
90013b0a:	d19d      	bne.n	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013b0c:	68c0      	ldr	r0, [r0, #12]
90013b0e:	4770      	bx	lr
90013b10:	2a31      	cmp	r2, #49	; 0x31
90013b12:	d004      	beq.n	90013b1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
90013b14:	d327      	bcc.n	90013b66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
90013b16:	2a32      	cmp	r2, #50	; 0x32
90013b18:	d025      	beq.n	90013b66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
90013b1a:	2a33      	cmp	r2, #51	; 0x33
90013b1c:	d194      	bne.n	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013b1e:	6f40      	ldr	r0, [r0, #116]	; 0x74
90013b20:	4770      	bx	lr
90013b22:	684b      	ldr	r3, [r1, #4]
90013b24:	781b      	ldrb	r3, [r3, #0]
90013b26:	2b01      	cmp	r3, #1
90013b28:	d004      	beq.n	90013b34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
90013b2a:	d30b      	bcc.n	90013b44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
90013b2c:	2b02      	cmp	r3, #2
90013b2e:	d18b      	bne.n	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013b30:	6940      	ldr	r0, [r0, #20]
90013b32:	4770      	bx	lr
90013b34:	6a40      	ldr	r0, [r0, #36]	; 0x24
90013b36:	4770      	bx	lr
90013b38:	69c0      	ldr	r0, [r0, #28]
90013b3a:	4770      	bx	lr
90013b3c:	684b      	ldr	r3, [r1, #4]
90013b3e:	781b      	ldrb	r3, [r3, #0]
90013b40:	2b00      	cmp	r3, #0
90013b42:	d181      	bne.n	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013b44:	6b40      	ldr	r0, [r0, #52]	; 0x34
90013b46:	4770      	bx	lr
90013b48:	684b      	ldr	r3, [r1, #4]
90013b4a:	781b      	ldrb	r3, [r3, #0]
90013b4c:	2b00      	cmp	r3, #0
90013b4e:	f47f af7b 	bne.w	90013a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90013b52:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90013b54:	4770      	bx	lr
90013b56:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
90013b58:	4770      	bx	lr
90013b5a:	6d40      	ldr	r0, [r0, #84]	; 0x54
90013b5c:	4770      	bx	lr
90013b5e:	6c40      	ldr	r0, [r0, #68]	; 0x44
90013b60:	4770      	bx	lr
90013b62:	6e40      	ldr	r0, [r0, #100]	; 0x64
90013b64:	4770      	bx	lr
90013b66:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
90013b68:	4770      	bx	lr

90013b6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90013b6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013b6e:	b087      	sub	sp, #28
90013b70:	9815      	ldr	r0, [sp, #84]	; 0x54
90013b72:	9205      	str	r2, [sp, #20]
90013b74:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90013b78:	9101      	str	r1, [sp, #4]
90013b7a:	9202      	str	r2, [sp, #8]
90013b7c:	6841      	ldr	r1, [r0, #4]
90013b7e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
90013b82:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
90013b86:	fb01 2404 	mla	r4, r1, r4, r2
90013b8a:	6802      	ldr	r2, [r0, #0]
90013b8c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90013b90:	f8de 2000 	ldr.w	r2, [lr]
90013b94:	9203      	str	r2, [sp, #12]
90013b96:	f8de 2004 	ldr.w	r2, [lr, #4]
90013b9a:	3204      	adds	r2, #4
90013b9c:	9204      	str	r2, [sp, #16]
90013b9e:	9a02      	ldr	r2, [sp, #8]
90013ba0:	43d6      	mvns	r6, r2
90013ba2:	b2f6      	uxtb	r6, r6
90013ba4:	9a01      	ldr	r2, [sp, #4]
90013ba6:	2a00      	cmp	r2, #0
90013ba8:	dc03      	bgt.n	90013bb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90013baa:	9a05      	ldr	r2, [sp, #20]
90013bac:	2a00      	cmp	r2, #0
90013bae:	f340 8129 	ble.w	90013e04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90013bb2:	9a11      	ldr	r2, [sp, #68]	; 0x44
90013bb4:	f9be c008 	ldrsh.w	ip, [lr, #8]
90013bb8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90013bbc:	9a12      	ldr	r2, [sp, #72]	; 0x48
90013bbe:	f9be 700c 	ldrsh.w	r7, [lr, #12]
90013bc2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90013bc6:	2b00      	cmp	r3, #0
90013bc8:	dd0e      	ble.n	90013be8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90013bca:	1408      	asrs	r0, r1, #16
90013bcc:	d405      	bmi.n	90013bda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90013bce:	4560      	cmp	r0, ip
90013bd0:	da03      	bge.n	90013bda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90013bd2:	1410      	asrs	r0, r2, #16
90013bd4:	d401      	bmi.n	90013bda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90013bd6:	42b8      	cmp	r0, r7
90013bd8:	db07      	blt.n	90013bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90013bda:	9813      	ldr	r0, [sp, #76]	; 0x4c
90013bdc:	3b01      	subs	r3, #1
90013bde:	3402      	adds	r4, #2
90013be0:	4401      	add	r1, r0
90013be2:	9814      	ldr	r0, [sp, #80]	; 0x50
90013be4:	4402      	add	r2, r0
90013be6:	e7ee      	b.n	90013bc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
90013be8:	d071      	beq.n	90013cce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90013bea:	1e58      	subs	r0, r3, #1
90013bec:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90013bee:	fb05 1500 	mla	r5, r5, r0, r1
90013bf2:	142d      	asrs	r5, r5, #16
90013bf4:	d45f      	bmi.n	90013cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90013bf6:	4565      	cmp	r5, ip
90013bf8:	da5d      	bge.n	90013cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90013bfa:	9d14      	ldr	r5, [sp, #80]	; 0x50
90013bfc:	fb05 2000 	mla	r0, r5, r0, r2
90013c00:	1400      	asrs	r0, r0, #16
90013c02:	d458      	bmi.n	90013cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90013c04:	42b8      	cmp	r0, r7
90013c06:	da56      	bge.n	90013cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90013c08:	4699      	mov	r9, r3
90013c0a:	46a2      	mov	sl, r4
90013c0c:	f8bd b008 	ldrh.w	fp, [sp, #8]
90013c10:	f1b9 0f00 	cmp.w	r9, #0
90013c14:	dd57      	ble.n	90013cc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
90013c16:	ea4f 4c22 	mov.w	ip, r2, asr #16
90013c1a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90013c1e:	9803      	ldr	r0, [sp, #12]
90013c20:	140d      	asrs	r5, r1, #16
90013c22:	f109 39ff 	add.w	r9, r9, #4294967295
90013c26:	fb07 000c 	mla	r0, r7, ip, r0
90013c2a:	5d40      	ldrb	r0, [r0, r5]
90013c2c:	9d04      	ldr	r5, [sp, #16]
90013c2e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90013c32:	f8ba 5000 	ldrh.w	r5, [sl]
90013c36:	ea4f 2c20 	mov.w	ip, r0, asr #8
90013c3a:	122f      	asrs	r7, r5, #8
90013c3c:	ea4f 08e5 	mov.w	r8, r5, asr #3
90013c40:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90013c44:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90013c48:	00ed      	lsls	r5, r5, #3
90013c4a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
90013c4e:	fb17 f706 	smulbb	r7, r7, r6
90013c52:	b2ed      	uxtb	r5, r5
90013c54:	fb18 f806 	smulbb	r8, r8, r6
90013c58:	fb0c 7c0b 	mla	ip, ip, fp, r7
90013c5c:	10c7      	asrs	r7, r0, #3
90013c5e:	fb15 f506 	smulbb	r5, r5, r6
90013c62:	00c0      	lsls	r0, r0, #3
90013c64:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90013c68:	fa1f fc8c 	uxth.w	ip, ip
90013c6c:	b2c0      	uxtb	r0, r0
90013c6e:	fb07 870b 	mla	r7, r7, fp, r8
90013c72:	fb00 500b 	mla	r0, r0, fp, r5
90013c76:	f10c 0501 	add.w	r5, ip, #1
90013c7a:	b2bf      	uxth	r7, r7
90013c7c:	b280      	uxth	r0, r0
90013c7e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90013c82:	f107 0801 	add.w	r8, r7, #1
90013c86:	1c45      	adds	r5, r0, #1
90013c88:	eb08 2817 	add.w	r8, r8, r7, lsr #8
90013c8c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90013c90:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90013c94:	9813      	ldr	r0, [sp, #76]	; 0x4c
90013c96:	ea4f 1858 	mov.w	r8, r8, lsr #5
90013c9a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90013c9e:	4401      	add	r1, r0
90013ca0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90013ca4:	9814      	ldr	r0, [sp, #80]	; 0x50
90013ca6:	ea4c 0c05 	orr.w	ip, ip, r5
90013caa:	4402      	add	r2, r0
90013cac:	ea4c 0c08 	orr.w	ip, ip, r8
90013cb0:	f82a cb02 	strh.w	ip, [sl], #2
90013cb4:	e7ac      	b.n	90013c10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90013cb6:	f04f 0800 	mov.w	r8, #0
90013cba:	f8bd a008 	ldrh.w	sl, [sp, #8]
90013cbe:	eb03 0008 	add.w	r0, r3, r8
90013cc2:	2800      	cmp	r0, #0
90013cc4:	dc41      	bgt.n	90013d4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90013cc6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90013cca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90013cce:	9b01      	ldr	r3, [sp, #4]
90013cd0:	2b00      	cmp	r3, #0
90013cd2:	f340 8097 	ble.w	90013e04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90013cd6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90013cda:	9b10      	ldr	r3, [sp, #64]	; 0x40
90013cdc:	ee30 0a04 	vadd.f32	s0, s0, s8
90013ce0:	ee70 0aa4 	vadd.f32	s1, s1, s9
90013ce4:	eef0 6a62 	vmov.f32	s13, s5
90013ce8:	eec7 7a00 	vdiv.f32	s15, s14, s0
90013cec:	ee31 1a05 	vadd.f32	s2, s2, s10
90013cf0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90013cf4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
90013cf8:	eef0 6a43 	vmov.f32	s13, s6
90013cfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90013d00:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
90013d04:	ee20 7aa7 	vmul.f32	s14, s1, s15
90013d08:	ee61 7a27 	vmul.f32	s15, s2, s15
90013d0c:	ee77 2a62 	vsub.f32	s5, s14, s5
90013d10:	ee37 3ac3 	vsub.f32	s6, s15, s6
90013d14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90013d18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90013d1c:	ee12 2a90 	vmov	r2, s5
90013d20:	eef0 2a47 	vmov.f32	s5, s14
90013d24:	fb92 f3f3 	sdiv	r3, r2, r3
90013d28:	ee13 2a10 	vmov	r2, s6
90013d2c:	9313      	str	r3, [sp, #76]	; 0x4c
90013d2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90013d30:	eeb0 3a67 	vmov.f32	s6, s15
90013d34:	fb92 f3f3 	sdiv	r3, r2, r3
90013d38:	9314      	str	r3, [sp, #80]	; 0x50
90013d3a:	9b01      	ldr	r3, [sp, #4]
90013d3c:	9a05      	ldr	r2, [sp, #20]
90013d3e:	3b01      	subs	r3, #1
90013d40:	9301      	str	r3, [sp, #4]
90013d42:	9b10      	ldr	r3, [sp, #64]	; 0x40
90013d44:	bf08      	it	eq
90013d46:	4613      	moveq	r3, r2
90013d48:	e72c      	b.n	90013ba4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90013d4a:	140f      	asrs	r7, r1, #16
90013d4c:	d453      	bmi.n	90013df6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90013d4e:	f8de 5008 	ldr.w	r5, [lr, #8]
90013d52:	42bd      	cmp	r5, r7
90013d54:	dd4f      	ble.n	90013df6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90013d56:	ea5f 4c22 	movs.w	ip, r2, asr #16
90013d5a:	d44c      	bmi.n	90013df6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90013d5c:	f8de 000c 	ldr.w	r0, [lr, #12]
90013d60:	4560      	cmp	r0, ip
90013d62:	dd48      	ble.n	90013df6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90013d64:	9803      	ldr	r0, [sp, #12]
90013d66:	b22d      	sxth	r5, r5
90013d68:	fb0c 0505 	mla	r5, ip, r5, r0
90013d6c:	5de8      	ldrb	r0, [r5, r7]
90013d6e:	9d04      	ldr	r5, [sp, #16]
90013d70:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90013d74:	f06f 0501 	mvn.w	r5, #1
90013d78:	fb05 fb08 	mul.w	fp, r5, r8
90013d7c:	ea4f 2c20 	mov.w	ip, r0, asr #8
90013d80:	f834 500b 	ldrh.w	r5, [r4, fp]
90013d84:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90013d88:	122f      	asrs	r7, r5, #8
90013d8a:	ea4f 09e5 	mov.w	r9, r5, asr #3
90013d8e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90013d92:	00ed      	lsls	r5, r5, #3
90013d94:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90013d98:	fb17 f706 	smulbb	r7, r7, r6
90013d9c:	b2ed      	uxtb	r5, r5
90013d9e:	fb19 f906 	smulbb	r9, r9, r6
90013da2:	fb0c 7c0a 	mla	ip, ip, sl, r7
90013da6:	10c7      	asrs	r7, r0, #3
90013da8:	fb15 f506 	smulbb	r5, r5, r6
90013dac:	00c0      	lsls	r0, r0, #3
90013dae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90013db2:	fa1f fc8c 	uxth.w	ip, ip
90013db6:	b2c0      	uxtb	r0, r0
90013db8:	fb07 970a 	mla	r7, r7, sl, r9
90013dbc:	fb00 500a 	mla	r0, r0, sl, r5
90013dc0:	f10c 0501 	add.w	r5, ip, #1
90013dc4:	b2bf      	uxth	r7, r7
90013dc6:	b280      	uxth	r0, r0
90013dc8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90013dcc:	f107 0901 	add.w	r9, r7, #1
90013dd0:	1c45      	adds	r5, r0, #1
90013dd2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
90013dd6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90013dda:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90013dde:	ea4f 1959 	mov.w	r9, r9, lsr #5
90013de2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90013de6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90013dea:	ea4c 0c05 	orr.w	ip, ip, r5
90013dee:	ea4c 0c09 	orr.w	ip, ip, r9
90013df2:	f824 c00b 	strh.w	ip, [r4, fp]
90013df6:	9813      	ldr	r0, [sp, #76]	; 0x4c
90013df8:	f108 38ff 	add.w	r8, r8, #4294967295
90013dfc:	4401      	add	r1, r0
90013dfe:	9814      	ldr	r0, [sp, #80]	; 0x50
90013e00:	4402      	add	r2, r0
90013e02:	e75c      	b.n	90013cbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90013e04:	b007      	add	sp, #28
90013e06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90013e0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90013e0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013e0e:	b085      	sub	sp, #20
90013e10:	4693      	mov	fp, r2
90013e12:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90013e16:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90013e18:	9d16      	ldr	r5, [sp, #88]	; 0x58
90013e1a:	6870      	ldr	r0, [r6, #4]
90013e1c:	9100      	str	r1, [sp, #0]
90013e1e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90013e22:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
90013e26:	fb00 2404 	mla	r4, r0, r4, r2
90013e2a:	6832      	ldr	r2, [r6, #0]
90013e2c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90013e30:	682a      	ldr	r2, [r5, #0]
90013e32:	9201      	str	r2, [sp, #4]
90013e34:	686a      	ldr	r2, [r5, #4]
90013e36:	3204      	adds	r2, #4
90013e38:	9202      	str	r2, [sp, #8]
90013e3a:	9a00      	ldr	r2, [sp, #0]
90013e3c:	2a00      	cmp	r2, #0
90013e3e:	dc03      	bgt.n	90013e48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90013e40:	f1bb 0f00 	cmp.w	fp, #0
90013e44:	f340 80a0 	ble.w	90013f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90013e48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90013e4a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90013e4e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90013e52:	9a10      	ldr	r2, [sp, #64]	; 0x40
90013e54:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90013e58:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90013e5c:	2b00      	cmp	r3, #0
90013e5e:	dd0c      	ble.n	90013e7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90013e60:	1406      	asrs	r6, r0, #16
90013e62:	d405      	bmi.n	90013e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90013e64:	454e      	cmp	r6, r9
90013e66:	da03      	bge.n	90013e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90013e68:	1416      	asrs	r6, r2, #16
90013e6a:	d401      	bmi.n	90013e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90013e6c:	4546      	cmp	r6, r8
90013e6e:	db05      	blt.n	90013e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90013e70:	4470      	add	r0, lr
90013e72:	4462      	add	r2, ip
90013e74:	3b01      	subs	r3, #1
90013e76:	3402      	adds	r4, #2
90013e78:	e7f0      	b.n	90013e5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90013e7a:	d00f      	beq.n	90013e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90013e7c:	1e5e      	subs	r6, r3, #1
90013e7e:	fb0e 0706 	mla	r7, lr, r6, r0
90013e82:	143f      	asrs	r7, r7, #16
90013e84:	d541      	bpl.n	90013f0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
90013e86:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90013e8a:	4698      	mov	r8, r3
90013e8c:	9603      	str	r6, [sp, #12]
90013e8e:	f1b8 0f00 	cmp.w	r8, #0
90013e92:	dc59      	bgt.n	90013f48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90013e94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90013e98:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90013e9c:	9b00      	ldr	r3, [sp, #0]
90013e9e:	2b00      	cmp	r3, #0
90013ea0:	dd72      	ble.n	90013f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90013ea2:	ee30 0a04 	vadd.f32	s0, s0, s8
90013ea6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90013ea8:	ee70 0aa4 	vadd.f32	s1, s1, s9
90013eac:	eeb0 6a62 	vmov.f32	s12, s5
90013eb0:	eec6 7a80 	vdiv.f32	s15, s13, s0
90013eb4:	ee31 1a05 	vadd.f32	s2, s2, s10
90013eb8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90013ebc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90013ec0:	eeb0 6a43 	vmov.f32	s12, s6
90013ec4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90013ec8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90013ecc:	ee20 7aa7 	vmul.f32	s14, s1, s15
90013ed0:	ee61 7a27 	vmul.f32	s15, s2, s15
90013ed4:	ee77 2a62 	vsub.f32	s5, s14, s5
90013ed8:	ee37 3ac3 	vsub.f32	s6, s15, s6
90013edc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90013ee0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90013ee4:	ee12 2a90 	vmov	r2, s5
90013ee8:	eef0 2a47 	vmov.f32	s5, s14
90013eec:	fb92 fef3 	sdiv	lr, r2, r3
90013ef0:	ee13 2a10 	vmov	r2, s6
90013ef4:	eeb0 3a67 	vmov.f32	s6, s15
90013ef8:	fb92 fcf3 	sdiv	ip, r2, r3
90013efc:	9b00      	ldr	r3, [sp, #0]
90013efe:	3b01      	subs	r3, #1
90013f00:	9300      	str	r3, [sp, #0]
90013f02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90013f04:	bf08      	it	eq
90013f06:	465b      	moveq	r3, fp
90013f08:	e797      	b.n	90013e3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90013f0a:	454f      	cmp	r7, r9
90013f0c:	dabb      	bge.n	90013e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90013f0e:	fb0c 2606 	mla	r6, ip, r6, r2
90013f12:	1436      	asrs	r6, r6, #16
90013f14:	d4b7      	bmi.n	90013e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90013f16:	4546      	cmp	r6, r8
90013f18:	dab5      	bge.n	90013e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90013f1a:	461e      	mov	r6, r3
90013f1c:	46a0      	mov	r8, r4
90013f1e:	2e00      	cmp	r6, #0
90013f20:	ddb8      	ble.n	90013e94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90013f22:	1417      	asrs	r7, r2, #16
90013f24:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90013f28:	9901      	ldr	r1, [sp, #4]
90013f2a:	ea4f 4920 	mov.w	r9, r0, asr #16
90013f2e:	4462      	add	r2, ip
90013f30:	4470      	add	r0, lr
90013f32:	fb0a 1707 	mla	r7, sl, r7, r1
90013f36:	9902      	ldr	r1, [sp, #8]
90013f38:	3e01      	subs	r6, #1
90013f3a:	f817 7009 	ldrb.w	r7, [r7, r9]
90013f3e:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90013f42:	f828 7b02 	strh.w	r7, [r8], #2
90013f46:	e7ea      	b.n	90013f1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
90013f48:	ea5f 4920 	movs.w	r9, r0, asr #16
90013f4c:	d417      	bmi.n	90013f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90013f4e:	68ae      	ldr	r6, [r5, #8]
90013f50:	454e      	cmp	r6, r9
90013f52:	dd14      	ble.n	90013f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90013f54:	ea5f 4a22 	movs.w	sl, r2, asr #16
90013f58:	d411      	bmi.n	90013f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90013f5a:	68ef      	ldr	r7, [r5, #12]
90013f5c:	4557      	cmp	r7, sl
90013f5e:	dd0e      	ble.n	90013f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90013f60:	9f01      	ldr	r7, [sp, #4]
90013f62:	b236      	sxth	r6, r6
90013f64:	f06f 0101 	mvn.w	r1, #1
90013f68:	fb0a 7606 	mla	r6, sl, r6, r7
90013f6c:	9f02      	ldr	r7, [sp, #8]
90013f6e:	f816 6009 	ldrb.w	r6, [r6, r9]
90013f72:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
90013f76:	fb01 f608 	mul.w	r6, r1, r8
90013f7a:	9903      	ldr	r1, [sp, #12]
90013f7c:	538f      	strh	r7, [r1, r6]
90013f7e:	4470      	add	r0, lr
90013f80:	4462      	add	r2, ip
90013f82:	f108 38ff 	add.w	r8, r8, #4294967295
90013f86:	e782      	b.n	90013e8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90013f88:	b005      	add	sp, #20
90013f8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90013f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90013f8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013f92:	b087      	sub	sp, #28
90013f94:	9c15      	ldr	r4, [sp, #84]	; 0x54
90013f96:	9205      	str	r2, [sp, #20]
90013f98:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90013f9c:	9102      	str	r1, [sp, #8]
90013f9e:	9203      	str	r2, [sp, #12]
90013fa0:	6861      	ldr	r1, [r4, #4]
90013fa2:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
90013fa6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
90013faa:	fb01 2000 	mla	r0, r1, r0, r2
90013fae:	6822      	ldr	r2, [r4, #0]
90013fb0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
90013fb4:	9200      	str	r2, [sp, #0]
90013fb6:	f8dc 2000 	ldr.w	r2, [ip]
90013fba:	9204      	str	r2, [sp, #16]
90013fbc:	f8dc 2004 	ldr.w	r2, [ip, #4]
90013fc0:	3204      	adds	r2, #4
90013fc2:	9201      	str	r2, [sp, #4]
90013fc4:	9a03      	ldr	r2, [sp, #12]
90013fc6:	43d5      	mvns	r5, r2
90013fc8:	b2ed      	uxtb	r5, r5
90013fca:	9a02      	ldr	r2, [sp, #8]
90013fcc:	2a00      	cmp	r2, #0
90013fce:	dc03      	bgt.n	90013fd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90013fd0:	9a05      	ldr	r2, [sp, #20]
90013fd2:	2a00      	cmp	r2, #0
90013fd4:	f340 812c 	ble.w	90014230 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90013fd8:	9a11      	ldr	r2, [sp, #68]	; 0x44
90013fda:	f9bc e008 	ldrsh.w	lr, [ip, #8]
90013fde:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90013fe2:	9a12      	ldr	r2, [sp, #72]	; 0x48
90013fe4:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
90013fe8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90013fec:	2b00      	cmp	r3, #0
90013fee:	dd10      	ble.n	90014012 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90013ff0:	140c      	asrs	r4, r1, #16
90013ff2:	d405      	bmi.n	90014000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90013ff4:	4574      	cmp	r4, lr
90013ff6:	da03      	bge.n	90014000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90013ff8:	1414      	asrs	r4, r2, #16
90013ffa:	d401      	bmi.n	90014000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90013ffc:	42bc      	cmp	r4, r7
90013ffe:	db09      	blt.n	90014014 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90014000:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90014002:	3b01      	subs	r3, #1
90014004:	9800      	ldr	r0, [sp, #0]
90014006:	4421      	add	r1, r4
90014008:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001400a:	3002      	adds	r0, #2
9001400c:	4422      	add	r2, r4
9001400e:	9000      	str	r0, [sp, #0]
90014010:	e7ec      	b.n	90013fec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
90014012:	d071      	beq.n	900140f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
90014014:	1e5c      	subs	r4, r3, #1
90014016:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90014018:	fb06 1604 	mla	r6, r6, r4, r1
9001401c:	1436      	asrs	r6, r6, #16
9001401e:	d45d      	bmi.n	900140dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90014020:	4576      	cmp	r6, lr
90014022:	da5b      	bge.n	900140dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90014024:	9e14      	ldr	r6, [sp, #80]	; 0x50
90014026:	fb06 2404 	mla	r4, r6, r4, r2
9001402a:	1424      	asrs	r4, r4, #16
9001402c:	d456      	bmi.n	900140dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001402e:	42bc      	cmp	r4, r7
90014030:	da54      	bge.n	900140dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90014032:	4698      	mov	r8, r3
90014034:	f8dd 9000 	ldr.w	r9, [sp]
90014038:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001403c:	f1b8 0f00 	cmp.w	r8, #0
90014040:	dd54      	ble.n	900140ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
90014042:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90014046:	1414      	asrs	r4, r2, #16
90014048:	9804      	ldr	r0, [sp, #16]
9001404a:	140e      	asrs	r6, r1, #16
9001404c:	f108 38ff 	add.w	r8, r8, #4294967295
90014050:	fb07 0404 	mla	r4, r7, r4, r0
90014054:	9801      	ldr	r0, [sp, #4]
90014056:	f814 e006 	ldrb.w	lr, [r4, r6]
9001405a:	f8b9 4000 	ldrh.w	r4, [r9]
9001405e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90014062:	1227      	asrs	r7, r4, #8
90014064:	eb00 0b0e 	add.w	fp, r0, lr
90014068:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001406c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90014070:	9813      	ldr	r0, [sp, #76]	; 0x4c
90014072:	f89b 6002 	ldrb.w	r6, [fp, #2]
90014076:	f89b b001 	ldrb.w	fp, [fp, #1]
9001407a:	4401      	add	r1, r0
9001407c:	fb16 f60a 	smulbb	r6, r6, sl
90014080:	9814      	ldr	r0, [sp, #80]	; 0x50
90014082:	fb1b fb0a 	smulbb	fp, fp, sl
90014086:	fb07 6705 	mla	r7, r7, r5, r6
9001408a:	10e6      	asrs	r6, r4, #3
9001408c:	00e4      	lsls	r4, r4, #3
9001408e:	4402      	add	r2, r0
90014090:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90014094:	b2bf      	uxth	r7, r7
90014096:	b2e4      	uxtb	r4, r4
90014098:	fb06 b605 	mla	r6, r6, r5, fp
9001409c:	fb14 f405 	smulbb	r4, r4, r5
900140a0:	b2b6      	uxth	r6, r6
900140a2:	fb0e 4e0a 	mla	lr, lr, sl, r4
900140a6:	1c7c      	adds	r4, r7, #1
900140a8:	f106 0b01 	add.w	fp, r6, #1
900140ac:	fa1f fe8e 	uxth.w	lr, lr
900140b0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
900140b4:	f10e 0401 	add.w	r4, lr, #1
900140b8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
900140bc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
900140c0:	eb04 241e 	add.w	r4, r4, lr, lsr #8
900140c4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
900140c8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
900140cc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
900140d0:	4327      	orrs	r7, r4
900140d2:	ea47 070b 	orr.w	r7, r7, fp
900140d6:	f829 7b02 	strh.w	r7, [r9], #2
900140da:	e7af      	b.n	9001403c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
900140dc:	f04f 0e00 	mov.w	lr, #0
900140e0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
900140e4:	eb03 040e 	add.w	r4, r3, lr
900140e8:	2c00      	cmp	r4, #0
900140ea:	dc43      	bgt.n	90014174 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
900140ec:	9a00      	ldr	r2, [sp, #0]
900140ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900140f2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900140f6:	9300      	str	r3, [sp, #0]
900140f8:	9b02      	ldr	r3, [sp, #8]
900140fa:	2b00      	cmp	r3, #0
900140fc:	f340 8098 	ble.w	90014230 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90014100:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90014104:	9b10      	ldr	r3, [sp, #64]	; 0x40
90014106:	ee30 0a04 	vadd.f32	s0, s0, s8
9001410a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001410e:	eef0 6a62 	vmov.f32	s13, s5
90014112:	eec7 7a00 	vdiv.f32	s15, s14, s0
90014116:	ee31 1a05 	vadd.f32	s2, s2, s10
9001411a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001411e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
90014122:	eef0 6a43 	vmov.f32	s13, s6
90014126:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001412a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001412e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90014132:	ee61 7a27 	vmul.f32	s15, s2, s15
90014136:	ee77 2a62 	vsub.f32	s5, s14, s5
9001413a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001413e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90014142:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90014146:	ee12 2a90 	vmov	r2, s5
9001414a:	eef0 2a47 	vmov.f32	s5, s14
9001414e:	fb92 f3f3 	sdiv	r3, r2, r3
90014152:	ee13 2a10 	vmov	r2, s6
90014156:	9313      	str	r3, [sp, #76]	; 0x4c
90014158:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001415a:	eeb0 3a67 	vmov.f32	s6, s15
9001415e:	fb92 f3f3 	sdiv	r3, r2, r3
90014162:	9314      	str	r3, [sp, #80]	; 0x50
90014164:	9b02      	ldr	r3, [sp, #8]
90014166:	9a05      	ldr	r2, [sp, #20]
90014168:	3b01      	subs	r3, #1
9001416a:	9302      	str	r3, [sp, #8]
9001416c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001416e:	bf08      	it	eq
90014170:	4613      	moveq	r3, r2
90014172:	e72a      	b.n	90013fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90014174:	140f      	asrs	r7, r1, #16
90014176:	d454      	bmi.n	90014222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90014178:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001417c:	42be      	cmp	r6, r7
9001417e:	dd50      	ble.n	90014222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90014180:	ea5f 4822 	movs.w	r8, r2, asr #16
90014184:	d44d      	bmi.n	90014222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90014186:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001418a:	4544      	cmp	r4, r8
9001418c:	dd49      	ble.n	90014222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001418e:	9c04      	ldr	r4, [sp, #16]
90014190:	b236      	sxth	r6, r6
90014192:	f06f 0001 	mvn.w	r0, #1
90014196:	fb08 4606 	mla	r6, r8, r6, r4
9001419a:	9c01      	ldr	r4, [sp, #4]
9001419c:	fb00 fa0e 	mul.w	sl, r0, lr
900141a0:	9800      	ldr	r0, [sp, #0]
900141a2:	f816 8007 	ldrb.w	r8, [r6, r7]
900141a6:	eb08 0848 	add.w	r8, r8, r8, lsl #1
900141aa:	eb04 0b08 	add.w	fp, r4, r8
900141ae:	f830 400a 	ldrh.w	r4, [r0, sl]
900141b2:	9801      	ldr	r0, [sp, #4]
900141b4:	f89b 6002 	ldrb.w	r6, [fp, #2]
900141b8:	1227      	asrs	r7, r4, #8
900141ba:	f89b b001 	ldrb.w	fp, [fp, #1]
900141be:	fb16 f609 	smulbb	r6, r6, r9
900141c2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900141c6:	f810 8008 	ldrb.w	r8, [r0, r8]
900141ca:	fb1b fb09 	smulbb	fp, fp, r9
900141ce:	fb07 6705 	mla	r7, r7, r5, r6
900141d2:	10e6      	asrs	r6, r4, #3
900141d4:	00e4      	lsls	r4, r4, #3
900141d6:	9800      	ldr	r0, [sp, #0]
900141d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900141dc:	b2bf      	uxth	r7, r7
900141de:	b2e4      	uxtb	r4, r4
900141e0:	fb06 b605 	mla	r6, r6, r5, fp
900141e4:	fb14 f405 	smulbb	r4, r4, r5
900141e8:	b2b6      	uxth	r6, r6
900141ea:	fb08 4809 	mla	r8, r8, r9, r4
900141ee:	1c7c      	adds	r4, r7, #1
900141f0:	f106 0b01 	add.w	fp, r6, #1
900141f4:	fa1f f888 	uxth.w	r8, r8
900141f8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
900141fc:	f108 0401 	add.w	r4, r8, #1
90014200:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90014204:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90014208:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001420c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90014210:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90014214:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90014218:	4327      	orrs	r7, r4
9001421a:	ea47 070b 	orr.w	r7, r7, fp
9001421e:	f820 700a 	strh.w	r7, [r0, sl]
90014222:	9813      	ldr	r0, [sp, #76]	; 0x4c
90014224:	f10e 3eff 	add.w	lr, lr, #4294967295
90014228:	4401      	add	r1, r0
9001422a:	9814      	ldr	r0, [sp, #80]	; 0x50
9001422c:	4402      	add	r2, r0
9001422e:	e759      	b.n	900140e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90014230:	b007      	add	sp, #28
90014232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90014238 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90014238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001423c:	b085      	sub	sp, #20
9001423e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90014242:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90014244:	9d16      	ldr	r5, [sp, #88]	; 0x58
90014246:	9203      	str	r2, [sp, #12]
90014248:	6870      	ldr	r0, [r6, #4]
9001424a:	686f      	ldr	r7, [r5, #4]
9001424c:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
90014250:	3704      	adds	r7, #4
90014252:	9101      	str	r1, [sp, #4]
90014254:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90014258:	fb00 2404 	mla	r4, r0, r4, r2
9001425c:	6832      	ldr	r2, [r6, #0]
9001425e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90014262:	682a      	ldr	r2, [r5, #0]
90014264:	9202      	str	r2, [sp, #8]
90014266:	9a01      	ldr	r2, [sp, #4]
90014268:	2a00      	cmp	r2, #0
9001426a:	dc03      	bgt.n	90014274 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001426c:	9a03      	ldr	r2, [sp, #12]
9001426e:	2a00      	cmp	r2, #0
90014270:	f340 80cc 	ble.w	9001440c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90014274:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90014276:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001427a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001427e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90014280:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90014284:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90014288:	2b00      	cmp	r3, #0
9001428a:	dd0d      	ble.n	900142a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001428c:	1406      	asrs	r6, r0, #16
9001428e:	d405      	bmi.n	9001429c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90014290:	454e      	cmp	r6, r9
90014292:	da03      	bge.n	9001429c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90014294:	1416      	asrs	r6, r2, #16
90014296:	d401      	bmi.n	9001429c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90014298:	4546      	cmp	r6, r8
9001429a:	db06      	blt.n	900142aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001429c:	9e12      	ldr	r6, [sp, #72]	; 0x48
9001429e:	4460      	add	r0, ip
900142a0:	3b01      	subs	r3, #1
900142a2:	3402      	adds	r4, #2
900142a4:	4432      	add	r2, r6
900142a6:	e7ef      	b.n	90014288 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
900142a8:	d00f      	beq.n	900142ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900142aa:	1e5e      	subs	r6, r3, #1
900142ac:	fb0c 0e06 	mla	lr, ip, r6, r0
900142b0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
900142b4:	d543      	bpl.n	9001433e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
900142b6:	4698      	mov	r8, r3
900142b8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
900142bc:	f1b8 0f00 	cmp.w	r8, #0
900142c0:	dc71      	bgt.n	900143a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
900142c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900142c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900142ca:	9b01      	ldr	r3, [sp, #4]
900142cc:	2b00      	cmp	r3, #0
900142ce:	f340 809d 	ble.w	9001440c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
900142d2:	ee30 0a04 	vadd.f32	s0, s0, s8
900142d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900142d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900142dc:	eeb0 6a62 	vmov.f32	s12, s5
900142e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
900142e4:	ee31 1a05 	vadd.f32	s2, s2, s10
900142e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900142ec:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
900142f0:	eeb0 6a43 	vmov.f32	s12, s6
900142f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900142f8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
900142fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
90014300:	ee61 7a27 	vmul.f32	s15, s2, s15
90014304:	ee77 2a62 	vsub.f32	s5, s14, s5
90014308:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001430c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90014310:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90014314:	ee12 2a90 	vmov	r2, s5
90014318:	eef0 2a47 	vmov.f32	s5, s14
9001431c:	fb92 fcf3 	sdiv	ip, r2, r3
90014320:	ee13 2a10 	vmov	r2, s6
90014324:	eeb0 3a67 	vmov.f32	s6, s15
90014328:	fb92 f3f3 	sdiv	r3, r2, r3
9001432c:	9312      	str	r3, [sp, #72]	; 0x48
9001432e:	9b01      	ldr	r3, [sp, #4]
90014330:	9a03      	ldr	r2, [sp, #12]
90014332:	3b01      	subs	r3, #1
90014334:	9301      	str	r3, [sp, #4]
90014336:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90014338:	bf08      	it	eq
9001433a:	4613      	moveq	r3, r2
9001433c:	e793      	b.n	90014266 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001433e:	45ce      	cmp	lr, r9
90014340:	dab9      	bge.n	900142b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90014342:	9912      	ldr	r1, [sp, #72]	; 0x48
90014344:	fb01 2606 	mla	r6, r1, r6, r2
90014348:	1436      	asrs	r6, r6, #16
9001434a:	d4b4      	bmi.n	900142b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001434c:	4546      	cmp	r6, r8
9001434e:	dab2      	bge.n	900142b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90014350:	4698      	mov	r8, r3
90014352:	46a2      	mov	sl, r4
90014354:	f1b8 0f00 	cmp.w	r8, #0
90014358:	ddb3      	ble.n	900142c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001435a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001435e:	1416      	asrs	r6, r2, #16
90014360:	9902      	ldr	r1, [sp, #8]
90014362:	ea4f 4e20 	mov.w	lr, r0, asr #16
90014366:	f108 38ff 	add.w	r8, r8, #4294967295
9001436a:	4460      	add	r0, ip
9001436c:	fb09 1606 	mla	r6, r9, r6, r1
90014370:	4928      	ldr	r1, [pc, #160]	; (90014414 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
90014372:	f816 e00e 	ldrb.w	lr, [r6, lr]
90014376:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001437a:	eb07 0b0e 	add.w	fp, r7, lr
9001437e:	f89b 6001 	ldrb.w	r6, [fp, #1]
90014382:	f89b 9002 	ldrb.w	r9, [fp, #2]
90014386:	00f6      	lsls	r6, r6, #3
90014388:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001438c:	9912      	ldr	r1, [sp, #72]	; 0x48
9001438e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90014392:	440a      	add	r2, r1
90014394:	ea49 0606 	orr.w	r6, r9, r6
90014398:	f817 900e 	ldrb.w	r9, [r7, lr]
9001439c:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
900143a0:	f82a 6b02 	strh.w	r6, [sl], #2
900143a4:	e7d6      	b.n	90014354 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900143a6:	ea5f 4920 	movs.w	r9, r0, asr #16
900143aa:	d429      	bmi.n	90014400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900143ac:	68ae      	ldr	r6, [r5, #8]
900143ae:	454e      	cmp	r6, r9
900143b0:	dd26      	ble.n	90014400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900143b2:	ea5f 4b22 	movs.w	fp, r2, asr #16
900143b6:	d423      	bmi.n	90014400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900143b8:	68e9      	ldr	r1, [r5, #12]
900143ba:	4559      	cmp	r1, fp
900143bc:	dd20      	ble.n	90014400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900143be:	fa0f fe86 	sxth.w	lr, r6
900143c2:	9902      	ldr	r1, [sp, #8]
900143c4:	fb0b 1e0e 	mla	lr, fp, lr, r1
900143c8:	f06f 0101 	mvn.w	r1, #1
900143cc:	f81e e009 	ldrb.w	lr, [lr, r9]
900143d0:	fb01 f908 	mul.w	r9, r1, r8
900143d4:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
900143d8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
900143dc:	eb07 060e 	add.w	r6, r7, lr
900143e0:	f896 b002 	ldrb.w	fp, [r6, #2]
900143e4:	7876      	ldrb	r6, [r6, #1]
900143e6:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
900143ea:	00f6      	lsls	r6, r6, #3
900143ec:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
900143f0:	ea4b 0606 	orr.w	r6, fp, r6
900143f4:	f817 b00e 	ldrb.w	fp, [r7, lr]
900143f8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
900143fc:	f82a 6009 	strh.w	r6, [sl, r9]
90014400:	9912      	ldr	r1, [sp, #72]	; 0x48
90014402:	4460      	add	r0, ip
90014404:	f108 38ff 	add.w	r8, r8, #4294967295
90014408:	440a      	add	r2, r1
9001440a:	e757      	b.n	900142bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001440c:	b005      	add	sp, #20
9001440e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014412:	bf00      	nop
90014414:	fffff800 	.word	0xfffff800

90014418 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90014418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001441c:	b087      	sub	sp, #28
9001441e:	468b      	mov	fp, r1
90014420:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90014424:	9815      	ldr	r0, [sp, #84]	; 0x54
90014426:	9204      	str	r2, [sp, #16]
90014428:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001442c:	6841      	ldr	r1, [r0, #4]
9001442e:	9205      	str	r2, [sp, #20]
90014430:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
90014434:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
90014438:	fb01 2404 	mla	r4, r1, r4, r2
9001443c:	6802      	ldr	r2, [r0, #0]
9001443e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90014442:	f8dc 2000 	ldr.w	r2, [ip]
90014446:	9201      	str	r2, [sp, #4]
90014448:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001444c:	3204      	adds	r2, #4
9001444e:	9202      	str	r2, [sp, #8]
90014450:	f1bb 0f00 	cmp.w	fp, #0
90014454:	dc03      	bgt.n	9001445e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90014456:	9a04      	ldr	r2, [sp, #16]
90014458:	2a00      	cmp	r2, #0
9001445a:	f340 8138 	ble.w	900146ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001445e:	9a11      	ldr	r2, [sp, #68]	; 0x44
90014460:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90014464:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90014468:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001446a:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001446e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90014472:	2b00      	cmp	r3, #0
90014474:	dd0e      	ble.n	90014494 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90014476:	1402      	asrs	r2, r0, #16
90014478:	d405      	bmi.n	90014486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001447a:	42ba      	cmp	r2, r7
9001447c:	da03      	bge.n	90014486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001447e:	140a      	asrs	r2, r1, #16
90014480:	d401      	bmi.n	90014486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90014482:	42b2      	cmp	r2, r6
90014484:	db07      	blt.n	90014496 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90014486:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90014488:	3b01      	subs	r3, #1
9001448a:	3402      	adds	r4, #2
9001448c:	4410      	add	r0, r2
9001448e:	9a14      	ldr	r2, [sp, #80]	; 0x50
90014490:	4411      	add	r1, r2
90014492:	e7ee      	b.n	90014472 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90014494:	d019      	beq.n	900144ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
90014496:	1e5a      	subs	r2, r3, #1
90014498:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001449a:	fb05 0502 	mla	r5, r5, r2, r0
9001449e:	142d      	asrs	r5, r5, #16
900144a0:	d409      	bmi.n	900144b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
900144a2:	42bd      	cmp	r5, r7
900144a4:	da07      	bge.n	900144b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
900144a6:	9d14      	ldr	r5, [sp, #80]	; 0x50
900144a8:	fb05 1202 	mla	r2, r5, r2, r1
900144ac:	1412      	asrs	r2, r2, #16
900144ae:	d402      	bmi.n	900144b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
900144b0:	42b2      	cmp	r2, r6
900144b2:	f2c0 80ac 	blt.w	9001460e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
900144b6:	f04f 0e00 	mov.w	lr, #0
900144ba:	eb03 020e 	add.w	r2, r3, lr
900144be:	2a00      	cmp	r2, #0
900144c0:	dc3e      	bgt.n	90014540 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
900144c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900144c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900144ca:	f1bb 0f00 	cmp.w	fp, #0
900144ce:	f340 80fe 	ble.w	900146ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900144d2:	ee30 0a04 	vadd.f32	s0, s0, s8
900144d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
900144d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900144dc:	f1bb 0b01 	subs.w	fp, fp, #1
900144e0:	eeb0 6a62 	vmov.f32	s12, s5
900144e4:	eec6 7a80 	vdiv.f32	s15, s13, s0
900144e8:	ee31 1a05 	vadd.f32	s2, s2, s10
900144ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900144f0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
900144f4:	eeb0 6a43 	vmov.f32	s12, s6
900144f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900144fc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90014500:	ee20 7aa7 	vmul.f32	s14, s1, s15
90014504:	ee61 7a27 	vmul.f32	s15, s2, s15
90014508:	ee77 2a62 	vsub.f32	s5, s14, s5
9001450c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90014510:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90014514:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90014518:	ee12 2a90 	vmov	r2, s5
9001451c:	eef0 2a47 	vmov.f32	s5, s14
90014520:	fb92 f3f3 	sdiv	r3, r2, r3
90014524:	ee13 2a10 	vmov	r2, s6
90014528:	9313      	str	r3, [sp, #76]	; 0x4c
9001452a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001452c:	eeb0 3a67 	vmov.f32	s6, s15
90014530:	fb92 f3f3 	sdiv	r3, r2, r3
90014534:	9a04      	ldr	r2, [sp, #16]
90014536:	9314      	str	r3, [sp, #80]	; 0x50
90014538:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001453a:	bf08      	it	eq
9001453c:	4613      	moveq	r3, r2
9001453e:	e787      	b.n	90014450 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90014540:	1406      	asrs	r6, r0, #16
90014542:	d45d      	bmi.n	90014600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90014544:	f8dc 5008 	ldr.w	r5, [ip, #8]
90014548:	42b5      	cmp	r5, r6
9001454a:	dd59      	ble.n	90014600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001454c:	140f      	asrs	r7, r1, #16
9001454e:	d457      	bmi.n	90014600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90014550:	f8dc 200c 	ldr.w	r2, [ip, #12]
90014554:	42ba      	cmp	r2, r7
90014556:	dd53      	ble.n	90014600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90014558:	9a01      	ldr	r2, [sp, #4]
9001455a:	b22d      	sxth	r5, r5
9001455c:	fb07 2505 	mla	r5, r7, r5, r2
90014560:	5daa      	ldrb	r2, [r5, r6]
90014562:	9d02      	ldr	r5, [sp, #8]
90014564:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
90014568:	0e2e      	lsrs	r6, r5, #24
9001456a:	d049      	beq.n	90014600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001456c:	f06f 0201 	mvn.w	r2, #1
90014570:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90014574:	fb02 f20e 	mul.w	r2, r2, lr
90014578:	f834 8002 	ldrh.w	r8, [r4, r2]
9001457c:	9203      	str	r2, [sp, #12]
9001457e:	9a05      	ldr	r2, [sp, #20]
90014580:	ea4f 2728 	mov.w	r7, r8, asr #8
90014584:	4356      	muls	r6, r2
90014586:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001458a:	1c72      	adds	r2, r6, #1
9001458c:	eb02 2226 	add.w	r2, r2, r6, asr #8
90014590:	f3c5 4607 	ubfx	r6, r5, #16, #8
90014594:	b2ed      	uxtb	r5, r5
90014596:	1212      	asrs	r2, r2, #8
90014598:	fa1f f982 	uxth.w	r9, r2
9001459c:	43d2      	mvns	r2, r2
9001459e:	fb16 f609 	smulbb	r6, r6, r9
900145a2:	b2d2      	uxtb	r2, r2
900145a4:	fb15 f509 	smulbb	r5, r5, r9
900145a8:	fb07 6702 	mla	r7, r7, r2, r6
900145ac:	ea4f 06e8 	mov.w	r6, r8, asr #3
900145b0:	fb1a fa09 	smulbb	sl, sl, r9
900145b4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
900145b8:	b2bf      	uxth	r7, r7
900145ba:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900145be:	fa5f f888 	uxtb.w	r8, r8
900145c2:	fb06 a602 	mla	r6, r6, r2, sl
900145c6:	fb08 5502 	mla	r5, r8, r2, r5
900145ca:	1c7a      	adds	r2, r7, #1
900145cc:	b2b6      	uxth	r6, r6
900145ce:	b2ad      	uxth	r5, r5
900145d0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
900145d4:	9a03      	ldr	r2, [sp, #12]
900145d6:	f105 0a01 	add.w	sl, r5, #1
900145da:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
900145de:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900145e2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900145e6:	ea47 070a 	orr.w	r7, r7, sl
900145ea:	f106 0a01 	add.w	sl, r6, #1
900145ee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
900145f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900145f6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900145fa:	ea47 070a 	orr.w	r7, r7, sl
900145fe:	52a7      	strh	r7, [r4, r2]
90014600:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90014602:	f10e 3eff 	add.w	lr, lr, #4294967295
90014606:	4410      	add	r0, r2
90014608:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001460a:	4411      	add	r1, r2
9001460c:	e755      	b.n	900144ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001460e:	f04f 0800 	mov.w	r8, #0
90014612:	eba3 0208 	sub.w	r2, r3, r8
90014616:	2a00      	cmp	r2, #0
90014618:	f77f af53 	ble.w	900144c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001461c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
90014620:	140a      	asrs	r2, r1, #16
90014622:	9f01      	ldr	r7, [sp, #4]
90014624:	1405      	asrs	r5, r0, #16
90014626:	fb06 7202 	mla	r2, r6, r2, r7
9001462a:	5d52      	ldrb	r2, [r2, r5]
9001462c:	9d02      	ldr	r5, [sp, #8]
9001462e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
90014632:	0e2e      	lsrs	r6, r5, #24
90014634:	d044      	beq.n	900146c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
90014636:	9a05      	ldr	r2, [sp, #20]
90014638:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001463c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
90014640:	4356      	muls	r6, r2
90014642:	ea4f 272e 	mov.w	r7, lr, asr #8
90014646:	1c72      	adds	r2, r6, #1
90014648:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001464c:	eb02 2226 	add.w	r2, r2, r6, asr #8
90014650:	f3c5 4607 	ubfx	r6, r5, #16, #8
90014654:	b2ed      	uxtb	r5, r5
90014656:	1212      	asrs	r2, r2, #8
90014658:	fa1f f982 	uxth.w	r9, r2
9001465c:	43d2      	mvns	r2, r2
9001465e:	fb16 f609 	smulbb	r6, r6, r9
90014662:	b2d2      	uxtb	r2, r2
90014664:	fb15 f509 	smulbb	r5, r5, r9
90014668:	fb07 6702 	mla	r7, r7, r2, r6
9001466c:	ea4f 06ee 	mov.w	r6, lr, asr #3
90014670:	fb1a fa09 	smulbb	sl, sl, r9
90014674:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90014678:	b2bf      	uxth	r7, r7
9001467a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001467e:	fa5f fe8e 	uxtb.w	lr, lr
90014682:	fb06 a602 	mla	r6, r6, r2, sl
90014686:	fb0e 5502 	mla	r5, lr, r2, r5
9001468a:	1c7a      	adds	r2, r7, #1
9001468c:	b2b6      	uxth	r6, r6
9001468e:	b2ad      	uxth	r5, r5
90014690:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90014694:	f105 0a01 	add.w	sl, r5, #1
90014698:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001469c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900146a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900146a4:	ea47 070a 	orr.w	r7, r7, sl
900146a8:	f106 0a01 	add.w	sl, r6, #1
900146ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
900146b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900146b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900146b8:	ea47 070a 	orr.w	r7, r7, sl
900146bc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
900146c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900146c2:	f108 0801 	add.w	r8, r8, #1
900146c6:	4410      	add	r0, r2
900146c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
900146ca:	4411      	add	r1, r2
900146cc:	e7a1      	b.n	90014612 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
900146ce:	b007      	add	sp, #28
900146d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900146d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900146d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900146d8:	b085      	sub	sp, #20
900146da:	468b      	mov	fp, r1
900146dc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
900146e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
900146e2:	9203      	str	r2, [sp, #12]
900146e4:	6841      	ldr	r1, [r0, #4]
900146e6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
900146ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
900146ee:	fb01 2404 	mla	r4, r1, r4, r2
900146f2:	6802      	ldr	r2, [r0, #0]
900146f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900146f8:	f8de 2000 	ldr.w	r2, [lr]
900146fc:	9200      	str	r2, [sp, #0]
900146fe:	f8de 2004 	ldr.w	r2, [lr, #4]
90014702:	3204      	adds	r2, #4
90014704:	9201      	str	r2, [sp, #4]
90014706:	f1bb 0f00 	cmp.w	fp, #0
9001470a:	dc03      	bgt.n	90014714 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001470c:	9a03      	ldr	r2, [sp, #12]
9001470e:	2a00      	cmp	r2, #0
90014710:	f340 8153 	ble.w	900149ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
90014714:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90014716:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001471a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001471e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90014720:	f9be 600c 	ldrsh.w	r6, [lr, #12]
90014724:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90014728:	2b00      	cmp	r3, #0
9001472a:	dd0e      	ble.n	9001474a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001472c:	1408      	asrs	r0, r1, #16
9001472e:	d405      	bmi.n	9001473c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90014730:	42b8      	cmp	r0, r7
90014732:	da03      	bge.n	9001473c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90014734:	1410      	asrs	r0, r2, #16
90014736:	d401      	bmi.n	9001473c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90014738:	42b0      	cmp	r0, r6
9001473a:	db07      	blt.n	9001474c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001473c:	9811      	ldr	r0, [sp, #68]	; 0x44
9001473e:	3b01      	subs	r3, #1
90014740:	3402      	adds	r4, #2
90014742:	4401      	add	r1, r0
90014744:	9812      	ldr	r0, [sp, #72]	; 0x48
90014746:	4402      	add	r2, r0
90014748:	e7ee      	b.n	90014728 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001474a:	d017      	beq.n	9001477c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001474c:	1e58      	subs	r0, r3, #1
9001474e:	9d11      	ldr	r5, [sp, #68]	; 0x44
90014750:	fb05 1500 	mla	r5, r5, r0, r1
90014754:	142d      	asrs	r5, r5, #16
90014756:	d409      	bmi.n	9001476c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90014758:	42bd      	cmp	r5, r7
9001475a:	da07      	bge.n	9001476c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001475c:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001475e:	fb05 2000 	mla	r0, r5, r0, r2
90014762:	1400      	asrs	r0, r0, #16
90014764:	d402      	bmi.n	9001476c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90014766:	42b0      	cmp	r0, r6
90014768:	f2c0 80bc 	blt.w	900148e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001476c:	2600      	movs	r6, #0
9001476e:	1998      	adds	r0, r3, r6
90014770:	2800      	cmp	r0, #0
90014772:	dc3e      	bgt.n	900147f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
90014774:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90014778:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001477c:	f1bb 0f00 	cmp.w	fp, #0
90014780:	f340 811b 	ble.w	900149ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
90014784:	ee30 0a04 	vadd.f32	s0, s0, s8
90014788:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001478a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001478e:	f1bb 0b01 	subs.w	fp, fp, #1
90014792:	eeb0 6a62 	vmov.f32	s12, s5
90014796:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001479a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001479e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900147a2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
900147a6:	eeb0 6a43 	vmov.f32	s12, s6
900147aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900147ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
900147b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900147b6:	ee61 7a27 	vmul.f32	s15, s2, s15
900147ba:	ee77 2a62 	vsub.f32	s5, s14, s5
900147be:	ee37 3ac3 	vsub.f32	s6, s15, s6
900147c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900147c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900147ca:	ee12 2a90 	vmov	r2, s5
900147ce:	eef0 2a47 	vmov.f32	s5, s14
900147d2:	fb92 f3f3 	sdiv	r3, r2, r3
900147d6:	ee13 2a10 	vmov	r2, s6
900147da:	9311      	str	r3, [sp, #68]	; 0x44
900147dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900147de:	eeb0 3a67 	vmov.f32	s6, s15
900147e2:	fb92 f3f3 	sdiv	r3, r2, r3
900147e6:	9a03      	ldr	r2, [sp, #12]
900147e8:	9312      	str	r3, [sp, #72]	; 0x48
900147ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900147ec:	bf08      	it	eq
900147ee:	4613      	moveq	r3, r2
900147f0:	e789      	b.n	90014706 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
900147f2:	140f      	asrs	r7, r1, #16
900147f4:	d45e      	bmi.n	900148b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900147f6:	f8de 5008 	ldr.w	r5, [lr, #8]
900147fa:	42bd      	cmp	r5, r7
900147fc:	dd5a      	ble.n	900148b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900147fe:	ea5f 4c22 	movs.w	ip, r2, asr #16
90014802:	d457      	bmi.n	900148b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90014804:	f8de 000c 	ldr.w	r0, [lr, #12]
90014808:	4560      	cmp	r0, ip
9001480a:	dd53      	ble.n	900148b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001480c:	9800      	ldr	r0, [sp, #0]
9001480e:	b22d      	sxth	r5, r5
90014810:	fb0c 0505 	mla	r5, ip, r5, r0
90014814:	5de8      	ldrb	r0, [r5, r7]
90014816:	9d01      	ldr	r5, [sp, #4]
90014818:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001481c:	0e07      	lsrs	r7, r0, #24
9001481e:	2fff      	cmp	r7, #255	; 0xff
90014820:	d04e      	beq.n	900148c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90014822:	b2fd      	uxtb	r5, r7
90014824:	2f00      	cmp	r7, #0
90014826:	d045      	beq.n	900148b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90014828:	f06f 0701 	mvn.w	r7, #1
9001482c:	fa1f f985 	uxth.w	r9, r5
90014830:	43ed      	mvns	r5, r5
90014832:	f3c0 2a07 	ubfx	sl, r0, #8, #8
90014836:	4377      	muls	r7, r6
90014838:	fb1a fa09 	smulbb	sl, sl, r9
9001483c:	b2ed      	uxtb	r5, r5
9001483e:	f834 8007 	ldrh.w	r8, [r4, r7]
90014842:	9702      	str	r7, [sp, #8]
90014844:	f3c0 4707 	ubfx	r7, r0, #16, #8
90014848:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001484c:	fb17 f709 	smulbb	r7, r7, r9
90014850:	b2c0      	uxtb	r0, r0
90014852:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90014856:	fb10 f009 	smulbb	r0, r0, r9
9001485a:	fb0c 7c05 	mla	ip, ip, r5, r7
9001485e:	ea4f 07e8 	mov.w	r7, r8, asr #3
90014862:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90014866:	fa1f fc8c 	uxth.w	ip, ip
9001486a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001486e:	fa5f f888 	uxtb.w	r8, r8
90014872:	fb07 a705 	mla	r7, r7, r5, sl
90014876:	fb08 0005 	mla	r0, r8, r5, r0
9001487a:	f10c 0501 	add.w	r5, ip, #1
9001487e:	b2bf      	uxth	r7, r7
90014880:	b280      	uxth	r0, r0
90014882:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90014886:	f100 0a01 	add.w	sl, r0, #1
9001488a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001488e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
90014892:	9802      	ldr	r0, [sp, #8]
90014894:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90014898:	ea4c 0c0a 	orr.w	ip, ip, sl
9001489c:	f107 0a01 	add.w	sl, r7, #1
900148a0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
900148a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900148a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900148ac:	ea4c 0c0a 	orr.w	ip, ip, sl
900148b0:	f824 c000 	strh.w	ip, [r4, r0]
900148b4:	9811      	ldr	r0, [sp, #68]	; 0x44
900148b6:	3e01      	subs	r6, #1
900148b8:	4401      	add	r1, r0
900148ba:	9812      	ldr	r0, [sp, #72]	; 0x48
900148bc:	4402      	add	r2, r0
900148be:	e756      	b.n	9001476e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900148c0:	f06f 0501 	mvn.w	r5, #1
900148c4:	fb05 f706 	mul.w	r7, r5, r6
900148c8:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
900148cc:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
900148d0:	0945      	lsrs	r5, r0, #5
900148d2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
900148d6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900148da:	ea4c 0505 	orr.w	r5, ip, r5
900148de:	4305      	orrs	r5, r0
900148e0:	53e5      	strh	r5, [r4, r7]
900148e2:	e7e7      	b.n	900148b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900148e4:	f04f 0800 	mov.w	r8, #0
900148e8:	eba3 0008 	sub.w	r0, r3, r8
900148ec:	2800      	cmp	r0, #0
900148ee:	f77f af41 	ble.w	90014774 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
900148f2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
900148f6:	1410      	asrs	r0, r2, #16
900148f8:	9f00      	ldr	r7, [sp, #0]
900148fa:	140d      	asrs	r5, r1, #16
900148fc:	fb06 7000 	mla	r0, r6, r0, r7
90014900:	5d40      	ldrb	r0, [r0, r5]
90014902:	9d01      	ldr	r5, [sp, #4]
90014904:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
90014908:	0e06      	lsrs	r6, r0, #24
9001490a:	2eff      	cmp	r6, #255	; 0xff
9001490c:	d048      	beq.n	900149a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
9001490e:	b2f5      	uxtb	r5, r6
90014910:	2e00      	cmp	r6, #0
90014912:	d03e      	beq.n	90014992 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
90014914:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
90014918:	fa1f f985 	uxth.w	r9, r5
9001491c:	f3c0 4607 	ubfx	r6, r0, #16, #8
90014920:	43ed      	mvns	r5, r5
90014922:	ea4f 272c 	mov.w	r7, ip, asr #8
90014926:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001492a:	fb16 f609 	smulbb	r6, r6, r9
9001492e:	b2ed      	uxtb	r5, r5
90014930:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90014934:	b2c0      	uxtb	r0, r0
90014936:	fb1a fa09 	smulbb	sl, sl, r9
9001493a:	fb07 6705 	mla	r7, r7, r5, r6
9001493e:	ea4f 06ec 	mov.w	r6, ip, asr #3
90014942:	fb10 f009 	smulbb	r0, r0, r9
90014946:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001494a:	b2bf      	uxth	r7, r7
9001494c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90014950:	fa5f fc8c 	uxtb.w	ip, ip
90014954:	fb06 a605 	mla	r6, r6, r5, sl
90014958:	fb0c 0005 	mla	r0, ip, r5, r0
9001495c:	1c7d      	adds	r5, r7, #1
9001495e:	b2b6      	uxth	r6, r6
90014960:	b280      	uxth	r0, r0
90014962:	eb05 2717 	add.w	r7, r5, r7, lsr #8
90014966:	f100 0a01 	add.w	sl, r0, #1
9001496a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001496e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
90014972:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90014976:	ea47 070a 	orr.w	r7, r7, sl
9001497a:	f106 0a01 	add.w	sl, r6, #1
9001497e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90014982:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90014986:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001498a:	ea47 070a 	orr.w	r7, r7, sl
9001498e:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90014992:	9811      	ldr	r0, [sp, #68]	; 0x44
90014994:	f108 0801 	add.w	r8, r8, #1
90014998:	4401      	add	r1, r0
9001499a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001499c:	4402      	add	r2, r0
9001499e:	e7a3      	b.n	900148e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900149a0:	4d07      	ldr	r5, [pc, #28]	; (900149c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
900149a2:	ea05 2610 	and.w	r6, r5, r0, lsr #8
900149a6:	0945      	lsrs	r5, r0, #5
900149a8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
900149ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900149b0:	4335      	orrs	r5, r6
900149b2:	4305      	orrs	r5, r0
900149b4:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
900149b8:	e7eb      	b.n	90014992 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
900149ba:	b005      	add	sp, #20
900149bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900149c0:	fffff800 	.word	0xfffff800

900149c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900149c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900149c8:	b087      	sub	sp, #28
900149ca:	468b      	mov	fp, r1
900149cc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
900149d0:	9c15      	ldr	r4, [sp, #84]	; 0x54
900149d2:	9204      	str	r2, [sp, #16]
900149d4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
900149d8:	6861      	ldr	r1, [r4, #4]
900149da:	9205      	str	r2, [sp, #20]
900149dc:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
900149e0:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
900149e4:	fb01 2000 	mla	r0, r1, r0, r2
900149e8:	6822      	ldr	r2, [r4, #0]
900149ea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
900149ee:	f8de 2000 	ldr.w	r2, [lr]
900149f2:	9201      	str	r2, [sp, #4]
900149f4:	f8de 2004 	ldr.w	r2, [lr, #4]
900149f8:	9202      	str	r2, [sp, #8]
900149fa:	f1bb 0f00 	cmp.w	fp, #0
900149fe:	dc03      	bgt.n	90014a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
90014a00:	9a04      	ldr	r2, [sp, #16]
90014a02:	2a00      	cmp	r2, #0
90014a04:	f340 8142 	ble.w	90014c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
90014a08:	9a11      	ldr	r2, [sp, #68]	; 0x44
90014a0a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90014a0e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90014a12:	9a12      	ldr	r2, [sp, #72]	; 0x48
90014a14:	f9be 600c 	ldrsh.w	r6, [lr, #12]
90014a18:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90014a1c:	2b00      	cmp	r3, #0
90014a1e:	dd0e      	ble.n	90014a3e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90014a20:	140c      	asrs	r4, r1, #16
90014a22:	d405      	bmi.n	90014a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90014a24:	42bc      	cmp	r4, r7
90014a26:	da03      	bge.n	90014a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90014a28:	1414      	asrs	r4, r2, #16
90014a2a:	d401      	bmi.n	90014a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90014a2c:	42b4      	cmp	r4, r6
90014a2e:	db07      	blt.n	90014a40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90014a30:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90014a32:	3b01      	subs	r3, #1
90014a34:	3002      	adds	r0, #2
90014a36:	4421      	add	r1, r4
90014a38:	9c14      	ldr	r4, [sp, #80]	; 0x50
90014a3a:	4422      	add	r2, r4
90014a3c:	e7ee      	b.n	90014a1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90014a3e:	d019      	beq.n	90014a74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
90014a40:	1e5c      	subs	r4, r3, #1
90014a42:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90014a44:	fb05 1504 	mla	r5, r5, r4, r1
90014a48:	142d      	asrs	r5, r5, #16
90014a4a:	d409      	bmi.n	90014a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90014a4c:	42bd      	cmp	r5, r7
90014a4e:	da07      	bge.n	90014a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90014a50:	9d14      	ldr	r5, [sp, #80]	; 0x50
90014a52:	fb05 2404 	mla	r4, r5, r4, r2
90014a56:	1424      	asrs	r4, r4, #16
90014a58:	d402      	bmi.n	90014a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90014a5a:	42b4      	cmp	r4, r6
90014a5c:	f2c0 80b1 	blt.w	90014bc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90014a60:	f04f 0800 	mov.w	r8, #0
90014a64:	eb03 0408 	add.w	r4, r3, r8
90014a68:	2c00      	cmp	r4, #0
90014a6a:	dc3e      	bgt.n	90014aea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
90014a6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90014a70:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90014a74:	f1bb 0f00 	cmp.w	fp, #0
90014a78:	f340 8108 	ble.w	90014c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
90014a7c:	ee30 0a04 	vadd.f32	s0, s0, s8
90014a80:	9b10      	ldr	r3, [sp, #64]	; 0x40
90014a82:	ee70 0aa4 	vadd.f32	s1, s1, s9
90014a86:	f1bb 0b01 	subs.w	fp, fp, #1
90014a8a:	eeb0 6a62 	vmov.f32	s12, s5
90014a8e:	eec6 7a80 	vdiv.f32	s15, s13, s0
90014a92:	ee31 1a05 	vadd.f32	s2, s2, s10
90014a96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90014a9a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90014a9e:	eeb0 6a43 	vmov.f32	s12, s6
90014aa2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90014aa6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90014aaa:	ee20 7aa7 	vmul.f32	s14, s1, s15
90014aae:	ee61 7a27 	vmul.f32	s15, s2, s15
90014ab2:	ee77 2a62 	vsub.f32	s5, s14, s5
90014ab6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90014aba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90014abe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90014ac2:	ee12 2a90 	vmov	r2, s5
90014ac6:	eef0 2a47 	vmov.f32	s5, s14
90014aca:	fb92 f3f3 	sdiv	r3, r2, r3
90014ace:	ee13 2a10 	vmov	r2, s6
90014ad2:	9313      	str	r3, [sp, #76]	; 0x4c
90014ad4:	9b10      	ldr	r3, [sp, #64]	; 0x40
90014ad6:	eeb0 3a67 	vmov.f32	s6, s15
90014ada:	fb92 f3f3 	sdiv	r3, r2, r3
90014ade:	9a04      	ldr	r2, [sp, #16]
90014ae0:	9314      	str	r3, [sp, #80]	; 0x50
90014ae2:	9b10      	ldr	r3, [sp, #64]	; 0x40
90014ae4:	bf08      	it	eq
90014ae6:	4613      	moveq	r3, r2
90014ae8:	e787      	b.n	900149fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
90014aea:	140e      	asrs	r6, r1, #16
90014aec:	d462      	bmi.n	90014bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90014aee:	f8de 5008 	ldr.w	r5, [lr, #8]
90014af2:	42b5      	cmp	r5, r6
90014af4:	dd5e      	ble.n	90014bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90014af6:	1417      	asrs	r7, r2, #16
90014af8:	d45c      	bmi.n	90014bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90014afa:	f8de 400c 	ldr.w	r4, [lr, #12]
90014afe:	42bc      	cmp	r4, r7
90014b00:	dd58      	ble.n	90014bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90014b02:	b22d      	sxth	r5, r5
90014b04:	9c02      	ldr	r4, [sp, #8]
90014b06:	fb07 6505 	mla	r5, r7, r5, r6
90014b0a:	5d66      	ldrb	r6, [r4, r5]
90014b0c:	2e00      	cmp	r6, #0
90014b0e:	d051      	beq.n	90014bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90014b10:	9c01      	ldr	r4, [sp, #4]
90014b12:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
90014b16:	f06f 0401 	mvn.w	r4, #1
90014b1a:	fb04 f408 	mul.w	r4, r4, r8
90014b1e:	ea4f 2c29 	mov.w	ip, r9, asr #8
90014b22:	5b05      	ldrh	r5, [r0, r4]
90014b24:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90014b28:	9403      	str	r4, [sp, #12]
90014b2a:	9c05      	ldr	r4, [sp, #20]
90014b2c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90014b30:	4366      	muls	r6, r4
90014b32:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
90014b36:	1c74      	adds	r4, r6, #1
90014b38:	eb04 2416 	add.w	r4, r4, r6, lsr #8
90014b3c:	122e      	asrs	r6, r5, #8
90014b3e:	1224      	asrs	r4, r4, #8
90014b40:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90014b44:	00ed      	lsls	r5, r5, #3
90014b46:	b2a7      	uxth	r7, r4
90014b48:	43e4      	mvns	r4, r4
90014b4a:	b2ed      	uxtb	r5, r5
90014b4c:	b2e4      	uxtb	r4, r4
90014b4e:	fb16 f604 	smulbb	r6, r6, r4
90014b52:	fb15 f504 	smulbb	r5, r5, r4
90014b56:	fb0c 6c07 	mla	ip, ip, r7, r6
90014b5a:	ea4f 06e9 	mov.w	r6, r9, asr #3
90014b5e:	fb1a fa04 	smulbb	sl, sl, r4
90014b62:	ea4f 09c9 	mov.w	r9, r9, lsl #3
90014b66:	fa1f fc8c 	uxth.w	ip, ip
90014b6a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90014b6e:	fa5f f989 	uxtb.w	r9, r9
90014b72:	fb06 a607 	mla	r6, r6, r7, sl
90014b76:	f10c 0401 	add.w	r4, ip, #1
90014b7a:	fb09 5507 	mla	r5, r9, r7, r5
90014b7e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
90014b82:	9c03      	ldr	r4, [sp, #12]
90014b84:	b2ad      	uxth	r5, r5
90014b86:	b2b6      	uxth	r6, r6
90014b88:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90014b8c:	f105 0a01 	add.w	sl, r5, #1
90014b90:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90014b94:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90014b98:	ea4c 0c0a 	orr.w	ip, ip, sl
90014b9c:	f106 0a01 	add.w	sl, r6, #1
90014ba0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90014ba4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90014ba8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90014bac:	ea4c 0c0a 	orr.w	ip, ip, sl
90014bb0:	f820 c004 	strh.w	ip, [r0, r4]
90014bb4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90014bb6:	f108 38ff 	add.w	r8, r8, #4294967295
90014bba:	4421      	add	r1, r4
90014bbc:	9c14      	ldr	r4, [sp, #80]	; 0x50
90014bbe:	4422      	add	r2, r4
90014bc0:	e750      	b.n	90014a64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
90014bc2:	f04f 0900 	mov.w	r9, #0
90014bc6:	eba3 0409 	sub.w	r4, r3, r9
90014bca:	2c00      	cmp	r4, #0
90014bcc:	f77f af4e 	ble.w	90014a6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
90014bd0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
90014bd4:	140d      	asrs	r5, r1, #16
90014bd6:	1414      	asrs	r4, r2, #16
90014bd8:	fb06 5404 	mla	r4, r6, r4, r5
90014bdc:	9d02      	ldr	r5, [sp, #8]
90014bde:	5d2e      	ldrb	r6, [r5, r4]
90014be0:	2e00      	cmp	r6, #0
90014be2:	d04c      	beq.n	90014c7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
90014be4:	9d01      	ldr	r5, [sp, #4]
90014be6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
90014bea:	9c05      	ldr	r4, [sp, #20]
90014bec:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
90014bf0:	ea4f 2c28 	mov.w	ip, r8, asr #8
90014bf4:	4366      	muls	r6, r4
90014bf6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90014bfa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90014bfe:	1c74      	adds	r4, r6, #1
90014c00:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
90014c04:	eb04 2416 	add.w	r4, r4, r6, lsr #8
90014c08:	122e      	asrs	r6, r5, #8
90014c0a:	1224      	asrs	r4, r4, #8
90014c0c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90014c10:	00ed      	lsls	r5, r5, #3
90014c12:	b2a7      	uxth	r7, r4
90014c14:	43e4      	mvns	r4, r4
90014c16:	b2ed      	uxtb	r5, r5
90014c18:	b2e4      	uxtb	r4, r4
90014c1a:	fb16 f604 	smulbb	r6, r6, r4
90014c1e:	fb15 f504 	smulbb	r5, r5, r4
90014c22:	fb0c 6c07 	mla	ip, ip, r7, r6
90014c26:	ea4f 06e8 	mov.w	r6, r8, asr #3
90014c2a:	fb1a fa04 	smulbb	sl, sl, r4
90014c2e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90014c32:	fa1f fc8c 	uxth.w	ip, ip
90014c36:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90014c3a:	fa5f f888 	uxtb.w	r8, r8
90014c3e:	fb06 a607 	mla	r6, r6, r7, sl
90014c42:	f10c 0401 	add.w	r4, ip, #1
90014c46:	fb08 5507 	mla	r5, r8, r7, r5
90014c4a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
90014c4e:	b2ad      	uxth	r5, r5
90014c50:	b2b6      	uxth	r6, r6
90014c52:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90014c56:	f105 0a01 	add.w	sl, r5, #1
90014c5a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90014c5e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90014c62:	ea4c 0c0a 	orr.w	ip, ip, sl
90014c66:	f106 0a01 	add.w	sl, r6, #1
90014c6a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90014c6e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90014c72:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90014c76:	ea4c 0c0a 	orr.w	ip, ip, sl
90014c7a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
90014c7e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90014c80:	f109 0901 	add.w	r9, r9, #1
90014c84:	4421      	add	r1, r4
90014c86:	9c14      	ldr	r4, [sp, #80]	; 0x50
90014c88:	4422      	add	r2, r4
90014c8a:	e79c      	b.n	90014bc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
90014c8c:	b007      	add	sp, #28
90014c8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90014c92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90014c92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014c96:	b085      	sub	sp, #20
90014c98:	468b      	mov	fp, r1
90014c9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90014c9e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90014ca0:	9203      	str	r2, [sp, #12]
90014ca2:	6861      	ldr	r1, [r4, #4]
90014ca4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
90014ca8:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
90014cac:	fb01 2000 	mla	r0, r1, r0, r2
90014cb0:	6822      	ldr	r2, [r4, #0]
90014cb2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90014cb6:	f8d8 2000 	ldr.w	r2, [r8]
90014cba:	9200      	str	r2, [sp, #0]
90014cbc:	f8d8 2004 	ldr.w	r2, [r8, #4]
90014cc0:	9201      	str	r2, [sp, #4]
90014cc2:	f1bb 0f00 	cmp.w	fp, #0
90014cc6:	dc03      	bgt.n	90014cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90014cc8:	9a03      	ldr	r2, [sp, #12]
90014cca:	2a00      	cmp	r2, #0
90014ccc:	f340 8146 	ble.w	90014f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
90014cd0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90014cd2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
90014cd6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90014cda:	9a10      	ldr	r2, [sp, #64]	; 0x40
90014cdc:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
90014ce0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90014ce4:	2b00      	cmp	r3, #0
90014ce6:	dd0e      	ble.n	90014d06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90014ce8:	140c      	asrs	r4, r1, #16
90014cea:	d405      	bmi.n	90014cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90014cec:	42bc      	cmp	r4, r7
90014cee:	da03      	bge.n	90014cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90014cf0:	1414      	asrs	r4, r2, #16
90014cf2:	d401      	bmi.n	90014cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90014cf4:	42b4      	cmp	r4, r6
90014cf6:	db07      	blt.n	90014d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90014cf8:	9c11      	ldr	r4, [sp, #68]	; 0x44
90014cfa:	3b01      	subs	r3, #1
90014cfc:	3002      	adds	r0, #2
90014cfe:	4421      	add	r1, r4
90014d00:	9c12      	ldr	r4, [sp, #72]	; 0x48
90014d02:	4422      	add	r2, r4
90014d04:	e7ee      	b.n	90014ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90014d06:	d017      	beq.n	90014d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90014d08:	1e5c      	subs	r4, r3, #1
90014d0a:	9d11      	ldr	r5, [sp, #68]	; 0x44
90014d0c:	fb05 1504 	mla	r5, r5, r4, r1
90014d10:	142d      	asrs	r5, r5, #16
90014d12:	d409      	bmi.n	90014d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90014d14:	42bd      	cmp	r5, r7
90014d16:	da07      	bge.n	90014d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90014d18:	9d12      	ldr	r5, [sp, #72]	; 0x48
90014d1a:	fb05 2404 	mla	r4, r5, r4, r2
90014d1e:	1424      	asrs	r4, r4, #16
90014d20:	d402      	bmi.n	90014d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90014d22:	42b4      	cmp	r4, r6
90014d24:	f2c0 80b3 	blt.w	90014e8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90014d28:	2600      	movs	r6, #0
90014d2a:	199c      	adds	r4, r3, r6
90014d2c:	2c00      	cmp	r4, #0
90014d2e:	dc3e      	bgt.n	90014dae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90014d30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90014d34:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90014d38:	f1bb 0f00 	cmp.w	fp, #0
90014d3c:	f340 810e 	ble.w	90014f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
90014d40:	ee30 0a04 	vadd.f32	s0, s0, s8
90014d44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90014d46:	ee70 0aa4 	vadd.f32	s1, s1, s9
90014d4a:	f1bb 0b01 	subs.w	fp, fp, #1
90014d4e:	eeb0 6a62 	vmov.f32	s12, s5
90014d52:	eec6 7a80 	vdiv.f32	s15, s13, s0
90014d56:	ee31 1a05 	vadd.f32	s2, s2, s10
90014d5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90014d5e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90014d62:	eeb0 6a43 	vmov.f32	s12, s6
90014d66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90014d6a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90014d6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90014d72:	ee61 7a27 	vmul.f32	s15, s2, s15
90014d76:	ee77 2a62 	vsub.f32	s5, s14, s5
90014d7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90014d7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90014d82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90014d86:	ee12 2a90 	vmov	r2, s5
90014d8a:	eef0 2a47 	vmov.f32	s5, s14
90014d8e:	fb92 f3f3 	sdiv	r3, r2, r3
90014d92:	ee13 2a10 	vmov	r2, s6
90014d96:	9311      	str	r3, [sp, #68]	; 0x44
90014d98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90014d9a:	eeb0 3a67 	vmov.f32	s6, s15
90014d9e:	fb92 f3f3 	sdiv	r3, r2, r3
90014da2:	9a03      	ldr	r2, [sp, #12]
90014da4:	9312      	str	r3, [sp, #72]	; 0x48
90014da6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90014da8:	bf08      	it	eq
90014daa:	4613      	moveq	r3, r2
90014dac:	e789      	b.n	90014cc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90014dae:	140f      	asrs	r7, r1, #16
90014db0:	d45f      	bmi.n	90014e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90014db2:	f8d8 5008 	ldr.w	r5, [r8, #8]
90014db6:	42bd      	cmp	r5, r7
90014db8:	dd5b      	ble.n	90014e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90014dba:	ea5f 4c22 	movs.w	ip, r2, asr #16
90014dbe:	d458      	bmi.n	90014e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90014dc0:	f8d8 400c 	ldr.w	r4, [r8, #12]
90014dc4:	4564      	cmp	r4, ip
90014dc6:	dd54      	ble.n	90014e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90014dc8:	b22d      	sxth	r5, r5
90014dca:	9c01      	ldr	r4, [sp, #4]
90014dcc:	fb0c 7505 	mla	r5, ip, r5, r7
90014dd0:	5d64      	ldrb	r4, [r4, r5]
90014dd2:	2cff      	cmp	r4, #255	; 0xff
90014dd4:	d053      	beq.n	90014e7e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90014dd6:	2c00      	cmp	r4, #0
90014dd8:	d04b      	beq.n	90014e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90014dda:	9f00      	ldr	r7, [sp, #0]
90014ddc:	fa1f fc84 	uxth.w	ip, r4
90014de0:	43e4      	mvns	r4, r4
90014de2:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
90014de6:	f06f 0501 	mvn.w	r5, #1
90014dea:	b2e4      	uxtb	r4, r4
90014dec:	4375      	muls	r5, r6
90014dee:	ea4f 2e29 	mov.w	lr, r9, asr #8
90014df2:	9502      	str	r5, [sp, #8]
90014df4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90014df8:	5b45      	ldrh	r5, [r0, r5]
90014dfa:	122f      	asrs	r7, r5, #8
90014dfc:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90014e00:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90014e04:	00ed      	lsls	r5, r5, #3
90014e06:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
90014e0a:	fb17 f704 	smulbb	r7, r7, r4
90014e0e:	b2ed      	uxtb	r5, r5
90014e10:	fb1a fa04 	smulbb	sl, sl, r4
90014e14:	fb0e 7e0c 	mla	lr, lr, ip, r7
90014e18:	ea4f 07e9 	mov.w	r7, r9, asr #3
90014e1c:	fb15 f504 	smulbb	r5, r5, r4
90014e20:	ea4f 09c9 	mov.w	r9, r9, lsl #3
90014e24:	fa1f fe8e 	uxth.w	lr, lr
90014e28:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90014e2c:	fa5f f989 	uxtb.w	r9, r9
90014e30:	fb07 a70c 	mla	r7, r7, ip, sl
90014e34:	f10e 0401 	add.w	r4, lr, #1
90014e38:	fb09 550c 	mla	r5, r9, ip, r5
90014e3c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
90014e40:	9c02      	ldr	r4, [sp, #8]
90014e42:	b2ad      	uxth	r5, r5
90014e44:	b2bf      	uxth	r7, r7
90014e46:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
90014e4a:	f105 0a01 	add.w	sl, r5, #1
90014e4e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90014e52:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90014e56:	ea4e 0e0a 	orr.w	lr, lr, sl
90014e5a:	f107 0a01 	add.w	sl, r7, #1
90014e5e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
90014e62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90014e66:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90014e6a:	ea4e 0e0a 	orr.w	lr, lr, sl
90014e6e:	f820 e004 	strh.w	lr, [r0, r4]
90014e72:	9c11      	ldr	r4, [sp, #68]	; 0x44
90014e74:	3e01      	subs	r6, #1
90014e76:	4421      	add	r1, r4
90014e78:	9c12      	ldr	r4, [sp, #72]	; 0x48
90014e7a:	4422      	add	r2, r4
90014e7c:	e755      	b.n	90014d2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90014e7e:	9c00      	ldr	r4, [sp, #0]
90014e80:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
90014e84:	f06f 0401 	mvn.w	r4, #1
90014e88:	4374      	muls	r4, r6
90014e8a:	5305      	strh	r5, [r0, r4]
90014e8c:	e7f1      	b.n	90014e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90014e8e:	f04f 0900 	mov.w	r9, #0
90014e92:	eba3 0409 	sub.w	r4, r3, r9
90014e96:	2c00      	cmp	r4, #0
90014e98:	f77f af4a 	ble.w	90014d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90014e9c:	1414      	asrs	r4, r2, #16
90014e9e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
90014ea2:	140d      	asrs	r5, r1, #16
90014ea4:	fb06 5504 	mla	r5, r6, r4, r5
90014ea8:	9c01      	ldr	r4, [sp, #4]
90014eaa:	5d64      	ldrb	r4, [r4, r5]
90014eac:	2cff      	cmp	r4, #255	; 0xff
90014eae:	d04f      	beq.n	90014f50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
90014eb0:	2c00      	cmp	r4, #0
90014eb2:	d046      	beq.n	90014f42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90014eb4:	9e00      	ldr	r6, [sp, #0]
90014eb6:	b2a7      	uxth	r7, r4
90014eb8:	43e4      	mvns	r4, r4
90014eba:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
90014ebe:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
90014ec2:	b2e4      	uxtb	r4, r4
90014ec4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90014ec8:	122e      	asrs	r6, r5, #8
90014eca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90014ece:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90014ed2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90014ed6:	00ed      	lsls	r5, r5, #3
90014ed8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
90014edc:	fb16 f604 	smulbb	r6, r6, r4
90014ee0:	b2ed      	uxtb	r5, r5
90014ee2:	fb1a fa04 	smulbb	sl, sl, r4
90014ee6:	fb0c 6c07 	mla	ip, ip, r7, r6
90014eea:	ea4f 06ee 	mov.w	r6, lr, asr #3
90014eee:	fb15 f504 	smulbb	r5, r5, r4
90014ef2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90014ef6:	fa1f fc8c 	uxth.w	ip, ip
90014efa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90014efe:	fa5f fe8e 	uxtb.w	lr, lr
90014f02:	fb06 a607 	mla	r6, r6, r7, sl
90014f06:	f10c 0401 	add.w	r4, ip, #1
90014f0a:	fb0e 5507 	mla	r5, lr, r7, r5
90014f0e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
90014f12:	b2ad      	uxth	r5, r5
90014f14:	b2b6      	uxth	r6, r6
90014f16:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90014f1a:	f105 0a01 	add.w	sl, r5, #1
90014f1e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90014f22:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90014f26:	ea4c 0c0a 	orr.w	ip, ip, sl
90014f2a:	f106 0a01 	add.w	sl, r6, #1
90014f2e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90014f32:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90014f36:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90014f3a:	ea4c 0c0a 	orr.w	ip, ip, sl
90014f3e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
90014f42:	9c11      	ldr	r4, [sp, #68]	; 0x44
90014f44:	f109 0901 	add.w	r9, r9, #1
90014f48:	4421      	add	r1, r4
90014f4a:	9c12      	ldr	r4, [sp, #72]	; 0x48
90014f4c:	4422      	add	r2, r4
90014f4e:	e7a0      	b.n	90014e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90014f50:	9c00      	ldr	r4, [sp, #0]
90014f52:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
90014f56:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
90014f5a:	e7f2      	b.n	90014f42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90014f5c:	b005      	add	sp, #20
90014f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90014f62 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90014f62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014f66:	b085      	sub	sp, #20
90014f68:	9813      	ldr	r0, [sp, #76]	; 0x4c
90014f6a:	9203      	str	r2, [sp, #12]
90014f6c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
90014f70:	9100      	str	r1, [sp, #0]
90014f72:	9201      	str	r2, [sp, #4]
90014f74:	6841      	ldr	r1, [r0, #4]
90014f76:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
90014f7a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90014f7e:	fb01 2404 	mla	r4, r1, r4, r2
90014f82:	6802      	ldr	r2, [r0, #0]
90014f84:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90014f88:	f8de 2000 	ldr.w	r2, [lr]
90014f8c:	9202      	str	r2, [sp, #8]
90014f8e:	9a01      	ldr	r2, [sp, #4]
90014f90:	43d6      	mvns	r6, r2
90014f92:	b2f6      	uxtb	r6, r6
90014f94:	9a00      	ldr	r2, [sp, #0]
90014f96:	2a00      	cmp	r2, #0
90014f98:	dc03      	bgt.n	90014fa2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90014f9a:	9a03      	ldr	r2, [sp, #12]
90014f9c:	2a00      	cmp	r2, #0
90014f9e:	f340 8124 	ble.w	900151ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
90014fa2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90014fa4:	f9be c008 	ldrsh.w	ip, [lr, #8]
90014fa8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90014fac:	9a10      	ldr	r2, [sp, #64]	; 0x40
90014fae:	f9be 700c 	ldrsh.w	r7, [lr, #12]
90014fb2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90014fb6:	2b00      	cmp	r3, #0
90014fb8:	dd0e      	ble.n	90014fd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90014fba:	1408      	asrs	r0, r1, #16
90014fbc:	d405      	bmi.n	90014fca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90014fbe:	4560      	cmp	r0, ip
90014fc0:	da03      	bge.n	90014fca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90014fc2:	1410      	asrs	r0, r2, #16
90014fc4:	d401      	bmi.n	90014fca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90014fc6:	42b8      	cmp	r0, r7
90014fc8:	db07      	blt.n	90014fda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90014fca:	9811      	ldr	r0, [sp, #68]	; 0x44
90014fcc:	3b01      	subs	r3, #1
90014fce:	3402      	adds	r4, #2
90014fd0:	4401      	add	r1, r0
90014fd2:	9812      	ldr	r0, [sp, #72]	; 0x48
90014fd4:	4402      	add	r2, r0
90014fd6:	e7ee      	b.n	90014fb6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90014fd8:	d06e      	beq.n	900150b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90014fda:	1e58      	subs	r0, r3, #1
90014fdc:	9d11      	ldr	r5, [sp, #68]	; 0x44
90014fde:	fb05 1500 	mla	r5, r5, r0, r1
90014fe2:	142d      	asrs	r5, r5, #16
90014fe4:	d45c      	bmi.n	900150a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90014fe6:	4565      	cmp	r5, ip
90014fe8:	da5a      	bge.n	900150a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90014fea:	9d12      	ldr	r5, [sp, #72]	; 0x48
90014fec:	fb05 2000 	mla	r0, r5, r0, r2
90014ff0:	1400      	asrs	r0, r0, #16
90014ff2:	d455      	bmi.n	900150a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90014ff4:	42b8      	cmp	r0, r7
90014ff6:	da53      	bge.n	900150a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90014ff8:	4699      	mov	r9, r3
90014ffa:	46a2      	mov	sl, r4
90014ffc:	f8bd b004 	ldrh.w	fp, [sp, #4]
90015000:	f1b9 0f00 	cmp.w	r9, #0
90015004:	dd54      	ble.n	900150b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90015006:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001500a:	140d      	asrs	r5, r1, #16
9001500c:	1410      	asrs	r0, r2, #16
9001500e:	f109 39ff 	add.w	r9, r9, #4294967295
90015012:	fb07 5000 	mla	r0, r7, r0, r5
90015016:	9d02      	ldr	r5, [sp, #8]
90015018:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001501c:	f8ba 5000 	ldrh.w	r5, [sl]
90015020:	ea4f 2c20 	mov.w	ip, r0, asr #8
90015024:	122f      	asrs	r7, r5, #8
90015026:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001502a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001502e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90015032:	00ed      	lsls	r5, r5, #3
90015034:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
90015038:	fb17 f706 	smulbb	r7, r7, r6
9001503c:	b2ed      	uxtb	r5, r5
9001503e:	fb18 f806 	smulbb	r8, r8, r6
90015042:	fb0c 7c0b 	mla	ip, ip, fp, r7
90015046:	10c7      	asrs	r7, r0, #3
90015048:	fb15 f506 	smulbb	r5, r5, r6
9001504c:	00c0      	lsls	r0, r0, #3
9001504e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90015052:	fa1f fc8c 	uxth.w	ip, ip
90015056:	b2c0      	uxtb	r0, r0
90015058:	fb07 870b 	mla	r7, r7, fp, r8
9001505c:	fb00 500b 	mla	r0, r0, fp, r5
90015060:	f10c 0501 	add.w	r5, ip, #1
90015064:	b2bf      	uxth	r7, r7
90015066:	b280      	uxth	r0, r0
90015068:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001506c:	f107 0801 	add.w	r8, r7, #1
90015070:	1c45      	adds	r5, r0, #1
90015072:	eb08 2817 	add.w	r8, r8, r7, lsr #8
90015076:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001507a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001507e:	9811      	ldr	r0, [sp, #68]	; 0x44
90015080:	ea4f 1858 	mov.w	r8, r8, lsr #5
90015084:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90015088:	4401      	add	r1, r0
9001508a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001508e:	9812      	ldr	r0, [sp, #72]	; 0x48
90015090:	ea4c 0c05 	orr.w	ip, ip, r5
90015094:	4402      	add	r2, r0
90015096:	ea4c 0c08 	orr.w	ip, ip, r8
9001509a:	f82a cb02 	strh.w	ip, [sl], #2
9001509e:	e7af      	b.n	90015000 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
900150a0:	f04f 0800 	mov.w	r8, #0
900150a4:	f8bd a004 	ldrh.w	sl, [sp, #4]
900150a8:	eb03 0008 	add.w	r0, r3, r8
900150ac:	2800      	cmp	r0, #0
900150ae:	dc41      	bgt.n	90015134 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
900150b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900150b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900150b8:	9b00      	ldr	r3, [sp, #0]
900150ba:	2b00      	cmp	r3, #0
900150bc:	f340 8095 	ble.w	900151ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
900150c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900150c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900150c6:	ee30 0a04 	vadd.f32	s0, s0, s8
900150ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
900150ce:	eef0 6a62 	vmov.f32	s13, s5
900150d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900150d6:	ee31 1a05 	vadd.f32	s2, s2, s10
900150da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900150de:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
900150e2:	eef0 6a43 	vmov.f32	s13, s6
900150e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900150ea:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
900150ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
900150f2:	ee61 7a27 	vmul.f32	s15, s2, s15
900150f6:	ee77 2a62 	vsub.f32	s5, s14, s5
900150fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
900150fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90015102:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90015106:	ee12 2a90 	vmov	r2, s5
9001510a:	eef0 2a47 	vmov.f32	s5, s14
9001510e:	fb92 f3f3 	sdiv	r3, r2, r3
90015112:	ee13 2a10 	vmov	r2, s6
90015116:	9311      	str	r3, [sp, #68]	; 0x44
90015118:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001511a:	eeb0 3a67 	vmov.f32	s6, s15
9001511e:	fb92 f3f3 	sdiv	r3, r2, r3
90015122:	9312      	str	r3, [sp, #72]	; 0x48
90015124:	9b00      	ldr	r3, [sp, #0]
90015126:	9a03      	ldr	r2, [sp, #12]
90015128:	3b01      	subs	r3, #1
9001512a:	9300      	str	r3, [sp, #0]
9001512c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001512e:	bf08      	it	eq
90015130:	4613      	moveq	r3, r2
90015132:	e72f      	b.n	90014f94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90015134:	140f      	asrs	r7, r1, #16
90015136:	d451      	bmi.n	900151dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90015138:	f8de 5008 	ldr.w	r5, [lr, #8]
9001513c:	42bd      	cmp	r5, r7
9001513e:	dd4d      	ble.n	900151dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90015140:	ea5f 4c22 	movs.w	ip, r2, asr #16
90015144:	d44a      	bmi.n	900151dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90015146:	f8de 000c 	ldr.w	r0, [lr, #12]
9001514a:	4560      	cmp	r0, ip
9001514c:	dd46      	ble.n	900151dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001514e:	b22d      	sxth	r5, r5
90015150:	9802      	ldr	r0, [sp, #8]
90015152:	fb0c 7505 	mla	r5, ip, r5, r7
90015156:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001515a:	f06f 0501 	mvn.w	r5, #1
9001515e:	fb05 fb08 	mul.w	fp, r5, r8
90015162:	ea4f 2c20 	mov.w	ip, r0, asr #8
90015166:	f834 500b 	ldrh.w	r5, [r4, fp]
9001516a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001516e:	122f      	asrs	r7, r5, #8
90015170:	ea4f 09e5 	mov.w	r9, r5, asr #3
90015174:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90015178:	00ed      	lsls	r5, r5, #3
9001517a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001517e:	fb17 f706 	smulbb	r7, r7, r6
90015182:	b2ed      	uxtb	r5, r5
90015184:	fb19 f906 	smulbb	r9, r9, r6
90015188:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001518c:	10c7      	asrs	r7, r0, #3
9001518e:	fb15 f506 	smulbb	r5, r5, r6
90015192:	00c0      	lsls	r0, r0, #3
90015194:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90015198:	fa1f fc8c 	uxth.w	ip, ip
9001519c:	b2c0      	uxtb	r0, r0
9001519e:	fb07 970a 	mla	r7, r7, sl, r9
900151a2:	fb00 500a 	mla	r0, r0, sl, r5
900151a6:	f10c 0501 	add.w	r5, ip, #1
900151aa:	b2bf      	uxth	r7, r7
900151ac:	b280      	uxth	r0, r0
900151ae:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
900151b2:	f107 0901 	add.w	r9, r7, #1
900151b6:	1c45      	adds	r5, r0, #1
900151b8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
900151bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900151c0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
900151c4:	ea4f 1959 	mov.w	r9, r9, lsr #5
900151c8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
900151cc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900151d0:	ea4c 0c05 	orr.w	ip, ip, r5
900151d4:	ea4c 0c09 	orr.w	ip, ip, r9
900151d8:	f824 c00b 	strh.w	ip, [r4, fp]
900151dc:	9811      	ldr	r0, [sp, #68]	; 0x44
900151de:	f108 38ff 	add.w	r8, r8, #4294967295
900151e2:	4401      	add	r1, r0
900151e4:	9812      	ldr	r0, [sp, #72]	; 0x48
900151e6:	4402      	add	r2, r0
900151e8:	e75e      	b.n	900150a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
900151ea:	b005      	add	sp, #20
900151ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900151f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900151f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900151f4:	b085      	sub	sp, #20
900151f6:	4693      	mov	fp, r2
900151f8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
900151fc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
900151fe:	9d16      	ldr	r5, [sp, #88]	; 0x58
90015200:	6870      	ldr	r0, [r6, #4]
90015202:	9101      	str	r1, [sp, #4]
90015204:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90015208:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001520c:	fb00 2404 	mla	r4, r0, r4, r2
90015210:	6832      	ldr	r2, [r6, #0]
90015212:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90015216:	682a      	ldr	r2, [r5, #0]
90015218:	9202      	str	r2, [sp, #8]
9001521a:	9a01      	ldr	r2, [sp, #4]
9001521c:	2a00      	cmp	r2, #0
9001521e:	dc03      	bgt.n	90015228 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90015220:	f1bb 0f00 	cmp.w	fp, #0
90015224:	f340 809a 	ble.w	9001535c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90015228:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001522a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001522e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90015232:	9a10      	ldr	r2, [sp, #64]	; 0x40
90015234:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90015238:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001523c:	2b00      	cmp	r3, #0
9001523e:	dd0c      	ble.n	9001525a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
90015240:	1406      	asrs	r6, r0, #16
90015242:	d405      	bmi.n	90015250 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90015244:	454e      	cmp	r6, r9
90015246:	da03      	bge.n	90015250 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90015248:	1416      	asrs	r6, r2, #16
9001524a:	d401      	bmi.n	90015250 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001524c:	4546      	cmp	r6, r8
9001524e:	db05      	blt.n	9001525c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90015250:	4470      	add	r0, lr
90015252:	4462      	add	r2, ip
90015254:	3b01      	subs	r3, #1
90015256:	3402      	adds	r4, #2
90015258:	e7f0      	b.n	9001523c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001525a:	d00f      	beq.n	9001527c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001525c:	1e5e      	subs	r6, r3, #1
9001525e:	fb0e 0706 	mla	r7, lr, r6, r0
90015262:	143f      	asrs	r7, r7, #16
90015264:	d541      	bpl.n	900152ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
90015266:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001526a:	4698      	mov	r8, r3
9001526c:	9603      	str	r6, [sp, #12]
9001526e:	f1b8 0f00 	cmp.w	r8, #0
90015272:	dc56      	bgt.n	90015322 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
90015274:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90015278:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001527c:	9b01      	ldr	r3, [sp, #4]
9001527e:	2b00      	cmp	r3, #0
90015280:	dd6c      	ble.n	9001535c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90015282:	ee30 0a04 	vadd.f32	s0, s0, s8
90015286:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90015288:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001528c:	eeb0 6a62 	vmov.f32	s12, s5
90015290:	eec6 7a80 	vdiv.f32	s15, s13, s0
90015294:	ee31 1a05 	vadd.f32	s2, s2, s10
90015298:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001529c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
900152a0:	eeb0 6a43 	vmov.f32	s12, s6
900152a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900152a8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
900152ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
900152b0:	ee61 7a27 	vmul.f32	s15, s2, s15
900152b4:	ee77 2a62 	vsub.f32	s5, s14, s5
900152b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
900152bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900152c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900152c4:	ee12 2a90 	vmov	r2, s5
900152c8:	eef0 2a47 	vmov.f32	s5, s14
900152cc:	fb92 fef3 	sdiv	lr, r2, r3
900152d0:	ee13 2a10 	vmov	r2, s6
900152d4:	eeb0 3a67 	vmov.f32	s6, s15
900152d8:	fb92 fcf3 	sdiv	ip, r2, r3
900152dc:	9b01      	ldr	r3, [sp, #4]
900152de:	3b01      	subs	r3, #1
900152e0:	9301      	str	r3, [sp, #4]
900152e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900152e4:	bf08      	it	eq
900152e6:	465b      	moveq	r3, fp
900152e8:	e797      	b.n	9001521a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
900152ea:	454f      	cmp	r7, r9
900152ec:	dabb      	bge.n	90015266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900152ee:	fb0c 2606 	mla	r6, ip, r6, r2
900152f2:	1436      	asrs	r6, r6, #16
900152f4:	d4b7      	bmi.n	90015266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900152f6:	4546      	cmp	r6, r8
900152f8:	dab5      	bge.n	90015266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900152fa:	461e      	mov	r6, r3
900152fc:	46a0      	mov	r8, r4
900152fe:	2e00      	cmp	r6, #0
90015300:	ddb8      	ble.n	90015274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90015302:	1417      	asrs	r7, r2, #16
90015304:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90015308:	ea4f 4920 	mov.w	r9, r0, asr #16
9001530c:	9902      	ldr	r1, [sp, #8]
9001530e:	4470      	add	r0, lr
90015310:	4462      	add	r2, ip
90015312:	fb0a 9707 	mla	r7, sl, r7, r9
90015316:	3e01      	subs	r6, #1
90015318:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001531c:	f828 7b02 	strh.w	r7, [r8], #2
90015320:	e7ed      	b.n	900152fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
90015322:	ea5f 4920 	movs.w	r9, r0, asr #16
90015326:	d414      	bmi.n	90015352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90015328:	68ae      	ldr	r6, [r5, #8]
9001532a:	454e      	cmp	r6, r9
9001532c:	dd11      	ble.n	90015352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001532e:	ea5f 4a22 	movs.w	sl, r2, asr #16
90015332:	d40e      	bmi.n	90015352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90015334:	68ef      	ldr	r7, [r5, #12]
90015336:	4557      	cmp	r7, sl
90015338:	dd0b      	ble.n	90015352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001533a:	b236      	sxth	r6, r6
9001533c:	f06f 0101 	mvn.w	r1, #1
90015340:	9f02      	ldr	r7, [sp, #8]
90015342:	fb0a 9606 	mla	r6, sl, r6, r9
90015346:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001534a:	fb01 f608 	mul.w	r6, r1, r8
9001534e:	9903      	ldr	r1, [sp, #12]
90015350:	538f      	strh	r7, [r1, r6]
90015352:	4470      	add	r0, lr
90015354:	4462      	add	r2, ip
90015356:	f108 38ff 	add.w	r8, r8, #4294967295
9001535a:	e788      	b.n	9001526e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001535c:	b005      	add	sp, #20
9001535e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90015362 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90015362:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015366:	b085      	sub	sp, #20
90015368:	468b      	mov	fp, r1
9001536a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001536e:	9813      	ldr	r0, [sp, #76]	; 0x4c
90015370:	9202      	str	r2, [sp, #8]
90015372:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
90015376:	6841      	ldr	r1, [r0, #4]
90015378:	9203      	str	r2, [sp, #12]
9001537a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001537e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90015382:	fb01 2404 	mla	r4, r1, r4, r2
90015386:	6802      	ldr	r2, [r0, #0]
90015388:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001538c:	f8d8 2000 	ldr.w	r2, [r8]
90015390:	9200      	str	r2, [sp, #0]
90015392:	f1bb 0f00 	cmp.w	fp, #0
90015396:	dc03      	bgt.n	900153a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90015398:	9a02      	ldr	r2, [sp, #8]
9001539a:	2a00      	cmp	r2, #0
9001539c:	f340 8134 	ble.w	90015608 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900153a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900153a2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
900153a6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
900153aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
900153ac:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
900153b0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
900153b4:	2b00      	cmp	r3, #0
900153b6:	dd0e      	ble.n	900153d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900153b8:	1402      	asrs	r2, r0, #16
900153ba:	d405      	bmi.n	900153c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900153bc:	42ba      	cmp	r2, r7
900153be:	da03      	bge.n	900153c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900153c0:	140a      	asrs	r2, r1, #16
900153c2:	d401      	bmi.n	900153c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900153c4:	42b2      	cmp	r2, r6
900153c6:	db07      	blt.n	900153d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900153c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
900153ca:	3b01      	subs	r3, #1
900153cc:	3402      	adds	r4, #2
900153ce:	4410      	add	r0, r2
900153d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
900153d2:	4411      	add	r1, r2
900153d4:	e7ee      	b.n	900153b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900153d6:	d019      	beq.n	9001540c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
900153d8:	1e5a      	subs	r2, r3, #1
900153da:	9d11      	ldr	r5, [sp, #68]	; 0x44
900153dc:	fb05 0502 	mla	r5, r5, r2, r0
900153e0:	142d      	asrs	r5, r5, #16
900153e2:	d409      	bmi.n	900153f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900153e4:	42bd      	cmp	r5, r7
900153e6:	da07      	bge.n	900153f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900153e8:	9d12      	ldr	r5, [sp, #72]	; 0x48
900153ea:	fb05 1202 	mla	r2, r5, r2, r1
900153ee:	1412      	asrs	r2, r2, #16
900153f0:	d402      	bmi.n	900153f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900153f2:	42b2      	cmp	r2, r6
900153f4:	f2c0 80aa 	blt.w	9001554c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
900153f8:	f04f 0c00 	mov.w	ip, #0
900153fc:	eb03 020c 	add.w	r2, r3, ip
90015400:	2a00      	cmp	r2, #0
90015402:	dc3e      	bgt.n	90015482 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
90015404:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90015408:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001540c:	f1bb 0f00 	cmp.w	fp, #0
90015410:	f340 80fa 	ble.w	90015608 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90015414:	ee30 0a04 	vadd.f32	s0, s0, s8
90015418:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001541a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001541e:	f1bb 0b01 	subs.w	fp, fp, #1
90015422:	eeb0 6a62 	vmov.f32	s12, s5
90015426:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001542a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001542e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90015432:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90015436:	eeb0 6a43 	vmov.f32	s12, s6
9001543a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001543e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90015442:	ee20 7aa7 	vmul.f32	s14, s1, s15
90015446:	ee61 7a27 	vmul.f32	s15, s2, s15
9001544a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001544e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90015452:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90015456:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001545a:	ee12 2a90 	vmov	r2, s5
9001545e:	eef0 2a47 	vmov.f32	s5, s14
90015462:	fb92 f3f3 	sdiv	r3, r2, r3
90015466:	ee13 2a10 	vmov	r2, s6
9001546a:	9311      	str	r3, [sp, #68]	; 0x44
9001546c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001546e:	eeb0 3a67 	vmov.f32	s6, s15
90015472:	fb92 f3f3 	sdiv	r3, r2, r3
90015476:	9a02      	ldr	r2, [sp, #8]
90015478:	9312      	str	r3, [sp, #72]	; 0x48
9001547a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001547c:	bf08      	it	eq
9001547e:	4613      	moveq	r3, r2
90015480:	e787      	b.n	90015392 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90015482:	1406      	asrs	r6, r0, #16
90015484:	d45b      	bmi.n	9001553e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
90015486:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001548a:	42b5      	cmp	r5, r6
9001548c:	dd57      	ble.n	9001553e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
9001548e:	140f      	asrs	r7, r1, #16
90015490:	d455      	bmi.n	9001553e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
90015492:	f8d8 200c 	ldr.w	r2, [r8, #12]
90015496:	42ba      	cmp	r2, r7
90015498:	dd51      	ble.n	9001553e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
9001549a:	b22d      	sxth	r5, r5
9001549c:	9a00      	ldr	r2, [sp, #0]
9001549e:	fb07 6505 	mla	r5, r7, r5, r6
900154a2:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
900154a6:	0e2e      	lsrs	r6, r5, #24
900154a8:	d049      	beq.n	9001553e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
900154aa:	f06f 0201 	mvn.w	r2, #1
900154ae:	f3c5 2a07 	ubfx	sl, r5, #8, #8
900154b2:	fb02 f20c 	mul.w	r2, r2, ip
900154b6:	f834 e002 	ldrh.w	lr, [r4, r2]
900154ba:	9201      	str	r2, [sp, #4]
900154bc:	9a03      	ldr	r2, [sp, #12]
900154be:	ea4f 272e 	mov.w	r7, lr, asr #8
900154c2:	4356      	muls	r6, r2
900154c4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900154c8:	1c72      	adds	r2, r6, #1
900154ca:	eb02 2226 	add.w	r2, r2, r6, asr #8
900154ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
900154d2:	b2ed      	uxtb	r5, r5
900154d4:	1212      	asrs	r2, r2, #8
900154d6:	fa1f f982 	uxth.w	r9, r2
900154da:	43d2      	mvns	r2, r2
900154dc:	fb16 f609 	smulbb	r6, r6, r9
900154e0:	b2d2      	uxtb	r2, r2
900154e2:	fb15 f509 	smulbb	r5, r5, r9
900154e6:	fb07 6702 	mla	r7, r7, r2, r6
900154ea:	ea4f 06ee 	mov.w	r6, lr, asr #3
900154ee:	fb1a fa09 	smulbb	sl, sl, r9
900154f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900154f6:	b2bf      	uxth	r7, r7
900154f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900154fc:	fa5f fe8e 	uxtb.w	lr, lr
90015500:	fb06 a602 	mla	r6, r6, r2, sl
90015504:	fb0e 5502 	mla	r5, lr, r2, r5
90015508:	1c7a      	adds	r2, r7, #1
9001550a:	b2b6      	uxth	r6, r6
9001550c:	b2ad      	uxth	r5, r5
9001550e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90015512:	9a01      	ldr	r2, [sp, #4]
90015514:	f105 0a01 	add.w	sl, r5, #1
90015518:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001551c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90015520:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90015524:	ea47 070a 	orr.w	r7, r7, sl
90015528:	f106 0a01 	add.w	sl, r6, #1
9001552c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90015530:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90015534:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90015538:	ea47 070a 	orr.w	r7, r7, sl
9001553c:	52a7      	strh	r7, [r4, r2]
9001553e:	9a11      	ldr	r2, [sp, #68]	; 0x44
90015540:	f10c 3cff 	add.w	ip, ip, #4294967295
90015544:	4410      	add	r0, r2
90015546:	9a12      	ldr	r2, [sp, #72]	; 0x48
90015548:	4411      	add	r1, r2
9001554a:	e757      	b.n	900153fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001554c:	f04f 0e00 	mov.w	lr, #0
90015550:	eba3 020e 	sub.w	r2, r3, lr
90015554:	2a00      	cmp	r2, #0
90015556:	f77f af55 	ble.w	90015404 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001555a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001555e:	1405      	asrs	r5, r0, #16
90015560:	140a      	asrs	r2, r1, #16
90015562:	fb06 5202 	mla	r2, r6, r2, r5
90015566:	9d00      	ldr	r5, [sp, #0]
90015568:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001556c:	0e2e      	lsrs	r6, r5, #24
9001556e:	d044      	beq.n	900155fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
90015570:	9a03      	ldr	r2, [sp, #12]
90015572:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90015576:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001557a:	4356      	muls	r6, r2
9001557c:	ea4f 272c 	mov.w	r7, ip, asr #8
90015580:	1c72      	adds	r2, r6, #1
90015582:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90015586:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001558a:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001558e:	b2ed      	uxtb	r5, r5
90015590:	1212      	asrs	r2, r2, #8
90015592:	fa1f f982 	uxth.w	r9, r2
90015596:	43d2      	mvns	r2, r2
90015598:	fb16 f609 	smulbb	r6, r6, r9
9001559c:	b2d2      	uxtb	r2, r2
9001559e:	fb15 f509 	smulbb	r5, r5, r9
900155a2:	fb07 6702 	mla	r7, r7, r2, r6
900155a6:	ea4f 06ec 	mov.w	r6, ip, asr #3
900155aa:	fb1a fa09 	smulbb	sl, sl, r9
900155ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900155b2:	b2bf      	uxth	r7, r7
900155b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900155b8:	fa5f fc8c 	uxtb.w	ip, ip
900155bc:	fb06 a602 	mla	r6, r6, r2, sl
900155c0:	fb0c 5502 	mla	r5, ip, r2, r5
900155c4:	1c7a      	adds	r2, r7, #1
900155c6:	b2b6      	uxth	r6, r6
900155c8:	b2ad      	uxth	r5, r5
900155ca:	eb02 2717 	add.w	r7, r2, r7, lsr #8
900155ce:	f105 0a01 	add.w	sl, r5, #1
900155d2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
900155d6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900155da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900155de:	ea47 070a 	orr.w	r7, r7, sl
900155e2:	f106 0a01 	add.w	sl, r6, #1
900155e6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
900155ea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900155ee:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900155f2:	ea47 070a 	orr.w	r7, r7, sl
900155f6:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
900155fa:	9a11      	ldr	r2, [sp, #68]	; 0x44
900155fc:	f10e 0e01 	add.w	lr, lr, #1
90015600:	4410      	add	r0, r2
90015602:	9a12      	ldr	r2, [sp, #72]	; 0x48
90015604:	4411      	add	r1, r2
90015606:	e7a3      	b.n	90015550 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90015608:	b005      	add	sp, #20
9001560a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90015610 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90015610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015614:	b085      	sub	sp, #20
90015616:	468b      	mov	fp, r1
90015618:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001561c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001561e:	9203      	str	r2, [sp, #12]
90015620:	6861      	ldr	r1, [r4, #4]
90015622:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
90015626:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
9001562a:	fb01 2000 	mla	r0, r1, r0, r2
9001562e:	6822      	ldr	r2, [r4, #0]
90015630:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90015634:	f8d9 2000 	ldr.w	r2, [r9]
90015638:	9200      	str	r2, [sp, #0]
9001563a:	f1bb 0f00 	cmp.w	fp, #0
9001563e:	dc03      	bgt.n	90015648 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90015640:	9a03      	ldr	r2, [sp, #12]
90015642:	2a00      	cmp	r2, #0
90015644:	f340 8154 	ble.w	900158f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90015648:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001564a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001564e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90015652:	9a10      	ldr	r2, [sp, #64]	; 0x40
90015654:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
90015658:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001565c:	2b00      	cmp	r3, #0
9001565e:	dd0e      	ble.n	9001567e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90015660:	140c      	asrs	r4, r1, #16
90015662:	d405      	bmi.n	90015670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90015664:	42bc      	cmp	r4, r7
90015666:	da03      	bge.n	90015670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90015668:	1414      	asrs	r4, r2, #16
9001566a:	d401      	bmi.n	90015670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001566c:	42b4      	cmp	r4, r6
9001566e:	db07      	blt.n	90015680 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90015670:	9c11      	ldr	r4, [sp, #68]	; 0x44
90015672:	3b01      	subs	r3, #1
90015674:	3002      	adds	r0, #2
90015676:	4421      	add	r1, r4
90015678:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001567a:	4422      	add	r2, r4
9001567c:	e7ee      	b.n	9001565c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001567e:	d017      	beq.n	900156b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
90015680:	1e5c      	subs	r4, r3, #1
90015682:	9d11      	ldr	r5, [sp, #68]	; 0x44
90015684:	fb05 1504 	mla	r5, r5, r4, r1
90015688:	142d      	asrs	r5, r5, #16
9001568a:	d409      	bmi.n	900156a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001568c:	42bd      	cmp	r5, r7
9001568e:	da07      	bge.n	900156a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90015690:	9d12      	ldr	r5, [sp, #72]	; 0x48
90015692:	fb05 2404 	mla	r4, r5, r4, r2
90015696:	1424      	asrs	r4, r4, #16
90015698:	d402      	bmi.n	900156a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001569a:	42b4      	cmp	r4, r6
9001569c:	f2c0 80c0 	blt.w	90015820 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
900156a0:	2700      	movs	r7, #0
900156a2:	19dc      	adds	r4, r3, r7
900156a4:	2c00      	cmp	r4, #0
900156a6:	dc3e      	bgt.n	90015726 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900156a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900156ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900156b0:	f1bb 0f00 	cmp.w	fp, #0
900156b4:	f340 811c 	ble.w	900158f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
900156b8:	ee30 0a04 	vadd.f32	s0, s0, s8
900156bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900156be:	ee70 0aa4 	vadd.f32	s1, s1, s9
900156c2:	f1bb 0b01 	subs.w	fp, fp, #1
900156c6:	eeb0 6a62 	vmov.f32	s12, s5
900156ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
900156ce:	ee31 1a05 	vadd.f32	s2, s2, s10
900156d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900156d6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
900156da:	eeb0 6a43 	vmov.f32	s12, s6
900156de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900156e2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
900156e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900156ea:	ee61 7a27 	vmul.f32	s15, s2, s15
900156ee:	ee77 2a62 	vsub.f32	s5, s14, s5
900156f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900156f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900156fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900156fe:	ee12 2a90 	vmov	r2, s5
90015702:	eef0 2a47 	vmov.f32	s5, s14
90015706:	fb92 f3f3 	sdiv	r3, r2, r3
9001570a:	ee13 2a10 	vmov	r2, s6
9001570e:	9311      	str	r3, [sp, #68]	; 0x44
90015710:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90015712:	eeb0 3a67 	vmov.f32	s6, s15
90015716:	fb92 f3f3 	sdiv	r3, r2, r3
9001571a:	9a03      	ldr	r2, [sp, #12]
9001571c:	9312      	str	r3, [sp, #72]	; 0x48
9001571e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90015720:	bf08      	it	eq
90015722:	4613      	moveq	r3, r2
90015724:	e789      	b.n	9001563a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90015726:	140e      	asrs	r6, r1, #16
90015728:	d461      	bmi.n	900157ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
9001572a:	f8d9 5008 	ldr.w	r5, [r9, #8]
9001572e:	42b5      	cmp	r5, r6
90015730:	dd5d      	ble.n	900157ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
90015732:	ea5f 4c22 	movs.w	ip, r2, asr #16
90015736:	d45a      	bmi.n	900157ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
90015738:	f8d9 400c 	ldr.w	r4, [r9, #12]
9001573c:	4564      	cmp	r4, ip
9001573e:	dd56      	ble.n	900157ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
90015740:	b22d      	sxth	r5, r5
90015742:	9c00      	ldr	r4, [sp, #0]
90015744:	fb0c 6505 	mla	r5, ip, r5, r6
90015748:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
9001574c:	ea5f 6e14 	movs.w	lr, r4, lsr #24
90015750:	d04d      	beq.n	900157ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
90015752:	0a26      	lsrs	r6, r4, #8
90015754:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90015758:	fa5f f58e 	uxtb.w	r5, lr
9001575c:	ea4f 4c14 	mov.w	ip, r4, lsr #16
90015760:	9601      	str	r6, [sp, #4]
90015762:	d04a      	beq.n	900157fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90015764:	f06f 0601 	mvn.w	r6, #1
90015768:	fa1f fa85 	uxth.w	sl, r5
9001576c:	fa5f fc8c 	uxtb.w	ip, ip
90015770:	43ed      	mvns	r5, r5
90015772:	437e      	muls	r6, r7
90015774:	b2e4      	uxtb	r4, r4
90015776:	fb1c fc0a 	smulbb	ip, ip, sl
9001577a:	b2ed      	uxtb	r5, r5
9001577c:	f830 8006 	ldrh.w	r8, [r0, r6]
90015780:	fb14 f40a 	smulbb	r4, r4, sl
90015784:	9602      	str	r6, [sp, #8]
90015786:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001578a:	f89d 6004 	ldrb.w	r6, [sp, #4]
9001578e:	fb16 f60a 	smulbb	r6, r6, sl
90015792:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90015796:	fb0e cc05 	mla	ip, lr, r5, ip
9001579a:	ea4f 0ee8 	mov.w	lr, r8, asr #3
9001579e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
900157a2:	fa1f fc8c 	uxth.w	ip, ip
900157a6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
900157aa:	fa5f f888 	uxtb.w	r8, r8
900157ae:	fb0e 6e05 	mla	lr, lr, r5, r6
900157b2:	fb08 4405 	mla	r4, r8, r5, r4
900157b6:	f10c 0501 	add.w	r5, ip, #1
900157ba:	fa1f fe8e 	uxth.w	lr, lr
900157be:	b2a4      	uxth	r4, r4
900157c0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
900157c4:	1c66      	adds	r6, r4, #1
900157c6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900157ca:	eb06 2614 	add.w	r6, r6, r4, lsr #8
900157ce:	9c02      	ldr	r4, [sp, #8]
900157d0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
900157d4:	ea4c 0c06 	orr.w	ip, ip, r6
900157d8:	f10e 0601 	add.w	r6, lr, #1
900157dc:	eb06 261e 	add.w	r6, r6, lr, lsr #8
900157e0:	0976      	lsrs	r6, r6, #5
900157e2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
900157e6:	ea4c 0c06 	orr.w	ip, ip, r6
900157ea:	f820 c004 	strh.w	ip, [r0, r4]
900157ee:	9c11      	ldr	r4, [sp, #68]	; 0x44
900157f0:	3f01      	subs	r7, #1
900157f2:	4421      	add	r1, r4
900157f4:	9c12      	ldr	r4, [sp, #72]	; 0x48
900157f6:	4422      	add	r2, r4
900157f8:	e753      	b.n	900156a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900157fa:	4e3f      	ldr	r6, [pc, #252]	; (900158f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
900157fc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90015800:	f06f 0501 	mvn.w	r5, #1
90015804:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
90015808:	437d      	muls	r5, r7
9001580a:	ea4c 0c04 	orr.w	ip, ip, r4
9001580e:	9c01      	ldr	r4, [sp, #4]
90015810:	00e6      	lsls	r6, r4, #3
90015812:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
90015816:	ea4c 0c04 	orr.w	ip, ip, r4
9001581a:	f820 c005 	strh.w	ip, [r0, r5]
9001581e:	e7e6      	b.n	900157ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
90015820:	f04f 0800 	mov.w	r8, #0
90015824:	eba3 0408 	sub.w	r4, r3, r8
90015828:	2c00      	cmp	r4, #0
9001582a:	f77f af3d 	ble.w	900156a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001582e:	140d      	asrs	r5, r1, #16
90015830:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
90015834:	1414      	asrs	r4, r2, #16
90015836:	fb06 5404 	mla	r4, r6, r4, r5
9001583a:	9d00      	ldr	r5, [sp, #0]
9001583c:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
90015840:	ea5f 6c14 	movs.w	ip, r4, lsr #24
90015844:	d042      	beq.n	900158cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
90015846:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9001584a:	fa5f f58c 	uxtb.w	r5, ip
9001584e:	ea4f 4714 	mov.w	r7, r4, lsr #16
90015852:	ea4f 2614 	mov.w	r6, r4, lsr #8
90015856:	d040      	beq.n	900158da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
90015858:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
9001585c:	fa1f fa85 	uxth.w	sl, r5
90015860:	b2ff      	uxtb	r7, r7
90015862:	43ed      	mvns	r5, r5
90015864:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90015868:	fb17 f70a 	smulbb	r7, r7, sl
9001586c:	b2ed      	uxtb	r5, r5
9001586e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90015872:	b2e4      	uxtb	r4, r4
90015874:	b2f6      	uxtb	r6, r6
90015876:	fb0c 7705 	mla	r7, ip, r5, r7
9001587a:	ea4f 0cee 	mov.w	ip, lr, asr #3
9001587e:	fb14 f40a 	smulbb	r4, r4, sl
90015882:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90015886:	b2bf      	uxth	r7, r7
90015888:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001588c:	fb16 f60a 	smulbb	r6, r6, sl
90015890:	fa5f fe8e 	uxtb.w	lr, lr
90015894:	fb0e 4405 	mla	r4, lr, r5, r4
90015898:	fb0c 6c05 	mla	ip, ip, r5, r6
9001589c:	1c7d      	adds	r5, r7, #1
9001589e:	b2a4      	uxth	r4, r4
900158a0:	eb05 2717 	add.w	r7, r5, r7, lsr #8
900158a4:	1c66      	adds	r6, r4, #1
900158a6:	fa1f fc8c 	uxth.w	ip, ip
900158aa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
900158ae:	eb06 2614 	add.w	r6, r6, r4, lsr #8
900158b2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
900158b6:	4337      	orrs	r7, r6
900158b8:	f10c 0601 	add.w	r6, ip, #1
900158bc:	eb06 261c 	add.w	r6, r6, ip, lsr #8
900158c0:	0976      	lsrs	r6, r6, #5
900158c2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
900158c6:	4337      	orrs	r7, r6
900158c8:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
900158cc:	9c11      	ldr	r4, [sp, #68]	; 0x44
900158ce:	f108 0801 	add.w	r8, r8, #1
900158d2:	4421      	add	r1, r4
900158d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
900158d6:	4422      	add	r2, r4
900158d8:	e7a4      	b.n	90015824 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900158da:	4d07      	ldr	r5, [pc, #28]	; (900158f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
900158dc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
900158e0:	00f6      	lsls	r6, r6, #3
900158e2:	ea05 2707 	and.w	r7, r5, r7, lsl #8
900158e6:	4327      	orrs	r7, r4
900158e8:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
900158ec:	4327      	orrs	r7, r4
900158ee:	e7eb      	b.n	900158c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
900158f0:	b005      	add	sp, #20
900158f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900158f6:	bf00      	nop
900158f8:	fffff800 	.word	0xfffff800

900158fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900158fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015900:	b087      	sub	sp, #28
90015902:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90015906:	9815      	ldr	r0, [sp, #84]	; 0x54
90015908:	9204      	str	r2, [sp, #16]
9001590a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001590e:	9101      	str	r1, [sp, #4]
90015910:	9205      	str	r2, [sp, #20]
90015912:	6841      	ldr	r1, [r0, #4]
90015914:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
90015918:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001591c:	fb01 2404 	mla	r4, r1, r4, r2
90015920:	6802      	ldr	r2, [r0, #0]
90015922:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90015926:	f8d8 2008 	ldr.w	r2, [r8, #8]
9001592a:	3201      	adds	r2, #1
9001592c:	f022 0201 	bic.w	r2, r2, #1
90015930:	9202      	str	r2, [sp, #8]
90015932:	f8d8 2000 	ldr.w	r2, [r8]
90015936:	9203      	str	r2, [sp, #12]
90015938:	9a01      	ldr	r2, [sp, #4]
9001593a:	2a00      	cmp	r2, #0
9001593c:	dc03      	bgt.n	90015946 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001593e:	9a04      	ldr	r2, [sp, #16]
90015940:	2a00      	cmp	r2, #0
90015942:	f340 814d 	ble.w	90015be0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90015946:	9a11      	ldr	r2, [sp, #68]	; 0x44
90015948:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001594c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90015950:	9a12      	ldr	r2, [sp, #72]	; 0x48
90015952:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
90015956:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001595a:	2b00      	cmp	r3, #0
9001595c:	dd0e      	ble.n	9001597c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001595e:	1402      	asrs	r2, r0, #16
90015960:	d405      	bmi.n	9001596e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90015962:	42ba      	cmp	r2, r7
90015964:	da03      	bge.n	9001596e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90015966:	140a      	asrs	r2, r1, #16
90015968:	d401      	bmi.n	9001596e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001596a:	42b2      	cmp	r2, r6
9001596c:	db07      	blt.n	9001597e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001596e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90015970:	3b01      	subs	r3, #1
90015972:	3402      	adds	r4, #2
90015974:	4410      	add	r0, r2
90015976:	9a14      	ldr	r2, [sp, #80]	; 0x50
90015978:	4411      	add	r1, r2
9001597a:	e7ee      	b.n	9001595a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001597c:	d019      	beq.n	900159b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
9001597e:	1e5a      	subs	r2, r3, #1
90015980:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90015982:	fb05 0502 	mla	r5, r5, r2, r0
90015986:	142d      	asrs	r5, r5, #16
90015988:	d409      	bmi.n	9001599e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001598a:	42bd      	cmp	r5, r7
9001598c:	da07      	bge.n	9001599e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001598e:	9d14      	ldr	r5, [sp, #80]	; 0x50
90015990:	fb05 1202 	mla	r2, r5, r2, r1
90015994:	1412      	asrs	r2, r2, #16
90015996:	d402      	bmi.n	9001599e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
90015998:	42b2      	cmp	r2, r6
9001599a:	f2c0 80b7 	blt.w	90015b0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001599e:	f04f 0c00 	mov.w	ip, #0
900159a2:	eb03 020c 	add.w	r2, r3, ip
900159a6:	2a00      	cmp	r2, #0
900159a8:	dc3f      	bgt.n	90015a2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
900159aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900159ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900159b2:	9b01      	ldr	r3, [sp, #4]
900159b4:	2b00      	cmp	r3, #0
900159b6:	f340 8113 	ble.w	90015be0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900159ba:	ee30 0a04 	vadd.f32	s0, s0, s8
900159be:	9b10      	ldr	r3, [sp, #64]	; 0x40
900159c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
900159c4:	eeb0 6a62 	vmov.f32	s12, s5
900159c8:	eec6 7a80 	vdiv.f32	s15, s13, s0
900159cc:	ee31 1a05 	vadd.f32	s2, s2, s10
900159d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900159d4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
900159d8:	eeb0 6a43 	vmov.f32	s12, s6
900159dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900159e0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
900159e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
900159e8:	ee61 7a27 	vmul.f32	s15, s2, s15
900159ec:	ee77 2a62 	vsub.f32	s5, s14, s5
900159f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
900159f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900159f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900159fc:	ee12 2a90 	vmov	r2, s5
90015a00:	eef0 2a47 	vmov.f32	s5, s14
90015a04:	fb92 f3f3 	sdiv	r3, r2, r3
90015a08:	ee13 2a10 	vmov	r2, s6
90015a0c:	9313      	str	r3, [sp, #76]	; 0x4c
90015a0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90015a10:	eeb0 3a67 	vmov.f32	s6, s15
90015a14:	fb92 f3f3 	sdiv	r3, r2, r3
90015a18:	9314      	str	r3, [sp, #80]	; 0x50
90015a1a:	9b01      	ldr	r3, [sp, #4]
90015a1c:	9a04      	ldr	r2, [sp, #16]
90015a1e:	3b01      	subs	r3, #1
90015a20:	9301      	str	r3, [sp, #4]
90015a22:	9b10      	ldr	r3, [sp, #64]	; 0x40
90015a24:	bf08      	it	eq
90015a26:	4613      	moveq	r3, r2
90015a28:	e786      	b.n	90015938 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90015a2a:	1405      	asrs	r5, r0, #16
90015a2c:	d467      	bmi.n	90015afe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
90015a2e:	f8d8 2008 	ldr.w	r2, [r8, #8]
90015a32:	42aa      	cmp	r2, r5
90015a34:	dd63      	ble.n	90015afe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
90015a36:	140e      	asrs	r6, r1, #16
90015a38:	d461      	bmi.n	90015afe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
90015a3a:	f8d8 200c 	ldr.w	r2, [r8, #12]
90015a3e:	42b2      	cmp	r2, r6
90015a40:	dd5d      	ble.n	90015afe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
90015a42:	9a02      	ldr	r2, [sp, #8]
90015a44:	fb06 5502 	mla	r5, r6, r2, r5
90015a48:	9e03      	ldr	r6, [sp, #12]
90015a4a:	086a      	lsrs	r2, r5, #1
90015a4c:	5cb2      	ldrb	r2, [r6, r2]
90015a4e:	07ee      	lsls	r6, r5, #31
90015a50:	bf54      	ite	pl
90015a52:	f002 020f 	andpl.w	r2, r2, #15
90015a56:	1112      	asrmi	r2, r2, #4
90015a58:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90015a5c:	b2d2      	uxtb	r2, r2
90015a5e:	2a00      	cmp	r2, #0
90015a60:	d04d      	beq.n	90015afe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
90015a62:	f06f 0601 	mvn.w	r6, #1
90015a66:	4d60      	ldr	r5, [pc, #384]	; (90015be8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
90015a68:	fb06 fb0c 	mul.w	fp, r6, ip
90015a6c:	9e05      	ldr	r6, [sp, #20]
90015a6e:	682d      	ldr	r5, [r5, #0]
90015a70:	4372      	muls	r2, r6
90015a72:	f834 e00b 	ldrh.w	lr, [r4, fp]
90015a76:	0a2f      	lsrs	r7, r5, #8
90015a78:	1c56      	adds	r6, r2, #1
90015a7a:	ea4f 09d5 	mov.w	r9, r5, lsr #3
90015a7e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90015a82:	00ed      	lsls	r5, r5, #3
90015a84:	eb06 2222 	add.w	r2, r6, r2, asr #8
90015a88:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90015a8c:	ea4f 262e 	mov.w	r6, lr, asr #8
90015a90:	1212      	asrs	r2, r2, #8
90015a92:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90015a96:	b2ed      	uxtb	r5, r5
90015a98:	fa1f fa82 	uxth.w	sl, r2
90015a9c:	43d2      	mvns	r2, r2
90015a9e:	fb17 f70a 	smulbb	r7, r7, sl
90015aa2:	b2d2      	uxtb	r2, r2
90015aa4:	fb19 f90a 	smulbb	r9, r9, sl
90015aa8:	fb06 7602 	mla	r6, r6, r2, r7
90015aac:	ea4f 07ee 	mov.w	r7, lr, asr #3
90015ab0:	fb15 f50a 	smulbb	r5, r5, sl
90015ab4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90015ab8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90015abc:	b2b6      	uxth	r6, r6
90015abe:	fa5f fe8e 	uxtb.w	lr, lr
90015ac2:	fb07 9702 	mla	r7, r7, r2, r9
90015ac6:	fb0e 5502 	mla	r5, lr, r2, r5
90015aca:	b2bf      	uxth	r7, r7
90015acc:	b2ad      	uxth	r5, r5
90015ace:	f107 0901 	add.w	r9, r7, #1
90015ad2:	f105 0e01 	add.w	lr, r5, #1
90015ad6:	eb09 2717 	add.w	r7, r9, r7, lsr #8
90015ada:	f106 0901 	add.w	r9, r6, #1
90015ade:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
90015ae2:	097f      	lsrs	r7, r7, #5
90015ae4:	eb09 2616 	add.w	r6, r9, r6, lsr #8
90015ae8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90015aec:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90015af0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
90015af4:	4337      	orrs	r7, r6
90015af6:	ea47 070e 	orr.w	r7, r7, lr
90015afa:	f824 700b 	strh.w	r7, [r4, fp]
90015afe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90015b00:	f10c 3cff 	add.w	ip, ip, #4294967295
90015b04:	4410      	add	r0, r2
90015b06:	9a14      	ldr	r2, [sp, #80]	; 0x50
90015b08:	4411      	add	r1, r2
90015b0a:	e74a      	b.n	900159a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90015b0c:	f04f 0e00 	mov.w	lr, #0
90015b10:	eba3 020e 	sub.w	r2, r3, lr
90015b14:	2a00      	cmp	r2, #0
90015b16:	f77f af48 	ble.w	900159aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
90015b1a:	1402      	asrs	r2, r0, #16
90015b1c:	9e02      	ldr	r6, [sp, #8]
90015b1e:	140d      	asrs	r5, r1, #16
90015b20:	fb06 2505 	mla	r5, r6, r5, r2
90015b24:	9e03      	ldr	r6, [sp, #12]
90015b26:	086a      	lsrs	r2, r5, #1
90015b28:	07ed      	lsls	r5, r5, #31
90015b2a:	5cb2      	ldrb	r2, [r6, r2]
90015b2c:	bf54      	ite	pl
90015b2e:	f002 020f 	andpl.w	r2, r2, #15
90015b32:	1112      	asrmi	r2, r2, #4
90015b34:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90015b38:	b2d2      	uxtb	r2, r2
90015b3a:	2a00      	cmp	r2, #0
90015b3c:	d049      	beq.n	90015bd2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90015b3e:	9e05      	ldr	r6, [sp, #20]
90015b40:	4d29      	ldr	r5, [pc, #164]	; (90015be8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
90015b42:	4372      	muls	r2, r6
90015b44:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
90015b48:	682d      	ldr	r5, [r5, #0]
90015b4a:	1c56      	adds	r6, r2, #1
90015b4c:	0a2f      	lsrs	r7, r5, #8
90015b4e:	eb06 2222 	add.w	r2, r6, r2, asr #8
90015b52:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90015b56:	ea4f 262c 	mov.w	r6, ip, asr #8
90015b5a:	1212      	asrs	r2, r2, #8
90015b5c:	ea4f 09d5 	mov.w	r9, r5, lsr #3
90015b60:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90015b64:	fa1f fa82 	uxth.w	sl, r2
90015b68:	43d2      	mvns	r2, r2
90015b6a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90015b6e:	00ed      	lsls	r5, r5, #3
90015b70:	fb17 f70a 	smulbb	r7, r7, sl
90015b74:	b2d2      	uxtb	r2, r2
90015b76:	fb19 f90a 	smulbb	r9, r9, sl
90015b7a:	b2ed      	uxtb	r5, r5
90015b7c:	fb06 7602 	mla	r6, r6, r2, r7
90015b80:	ea4f 07ec 	mov.w	r7, ip, asr #3
90015b84:	fb15 f50a 	smulbb	r5, r5, sl
90015b88:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90015b8c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90015b90:	b2b6      	uxth	r6, r6
90015b92:	fa5f fc8c 	uxtb.w	ip, ip
90015b96:	fb07 9702 	mla	r7, r7, r2, r9
90015b9a:	f106 0b01 	add.w	fp, r6, #1
90015b9e:	fb0c 5502 	mla	r5, ip, r2, r5
90015ba2:	b2bf      	uxth	r7, r7
90015ba4:	b2ad      	uxth	r5, r5
90015ba6:	f107 0901 	add.w	r9, r7, #1
90015baa:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
90015bae:	f105 0c01 	add.w	ip, r5, #1
90015bb2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
90015bb6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
90015bba:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
90015bbe:	097f      	lsrs	r7, r7, #5
90015bc0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90015bc4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90015bc8:	4337      	orrs	r7, r6
90015bca:	ea47 070c 	orr.w	r7, r7, ip
90015bce:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
90015bd2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90015bd4:	f10e 0e01 	add.w	lr, lr, #1
90015bd8:	4410      	add	r0, r2
90015bda:	9a14      	ldr	r2, [sp, #80]	; 0x50
90015bdc:	4411      	add	r1, r2
90015bde:	e797      	b.n	90015b10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90015be0:	b007      	add	sp, #28
90015be2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015be6:	bf00      	nop
90015be8:	24012ae8 	.word	0x24012ae8

90015bec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90015bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015bf0:	b087      	sub	sp, #28
90015bf2:	468b      	mov	fp, r1
90015bf4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90015bf8:	9815      	ldr	r0, [sp, #84]	; 0x54
90015bfa:	9205      	str	r2, [sp, #20]
90015bfc:	6841      	ldr	r1, [r0, #4]
90015bfe:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
90015c02:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
90015c06:	fb01 2404 	mla	r4, r1, r4, r2
90015c0a:	6802      	ldr	r2, [r0, #0]
90015c0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90015c10:	f8d8 2008 	ldr.w	r2, [r8, #8]
90015c14:	3201      	adds	r2, #1
90015c16:	f022 0201 	bic.w	r2, r2, #1
90015c1a:	9201      	str	r2, [sp, #4]
90015c1c:	f8d8 2000 	ldr.w	r2, [r8]
90015c20:	9202      	str	r2, [sp, #8]
90015c22:	f1bb 0f00 	cmp.w	fp, #0
90015c26:	dc03      	bgt.n	90015c30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
90015c28:	9a05      	ldr	r2, [sp, #20]
90015c2a:	2a00      	cmp	r2, #0
90015c2c:	f340 8158 	ble.w	90015ee0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90015c30:	9a11      	ldr	r2, [sp, #68]	; 0x44
90015c32:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
90015c36:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90015c3a:	9a12      	ldr	r2, [sp, #72]	; 0x48
90015c3c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
90015c40:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90015c44:	2b00      	cmp	r3, #0
90015c46:	dd0e      	ble.n	90015c66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90015c48:	1402      	asrs	r2, r0, #16
90015c4a:	d405      	bmi.n	90015c58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90015c4c:	42ba      	cmp	r2, r7
90015c4e:	da03      	bge.n	90015c58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90015c50:	140a      	asrs	r2, r1, #16
90015c52:	d401      	bmi.n	90015c58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90015c54:	42b2      	cmp	r2, r6
90015c56:	db07      	blt.n	90015c68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90015c58:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90015c5a:	3b01      	subs	r3, #1
90015c5c:	3402      	adds	r4, #2
90015c5e:	4410      	add	r0, r2
90015c60:	9a14      	ldr	r2, [sp, #80]	; 0x50
90015c62:	4411      	add	r1, r2
90015c64:	e7ee      	b.n	90015c44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90015c66:	d017      	beq.n	90015c98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
90015c68:	1e5a      	subs	r2, r3, #1
90015c6a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90015c6c:	fb05 0502 	mla	r5, r5, r2, r0
90015c70:	142d      	asrs	r5, r5, #16
90015c72:	d409      	bmi.n	90015c88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90015c74:	42bd      	cmp	r5, r7
90015c76:	da07      	bge.n	90015c88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90015c78:	9d14      	ldr	r5, [sp, #80]	; 0x50
90015c7a:	fb05 1202 	mla	r2, r5, r2, r1
90015c7e:	1412      	asrs	r2, r2, #16
90015c80:	d402      	bmi.n	90015c88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90015c82:	42b2      	cmp	r2, r6
90015c84:	f2c0 80c0 	blt.w	90015e08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21c>
90015c88:	2600      	movs	r6, #0
90015c8a:	199a      	adds	r2, r3, r6
90015c8c:	2a00      	cmp	r2, #0
90015c8e:	dc3e      	bgt.n	90015d0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
90015c90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90015c94:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90015c98:	f1bb 0f00 	cmp.w	fp, #0
90015c9c:	f340 8120 	ble.w	90015ee0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90015ca0:	ee30 0a04 	vadd.f32	s0, s0, s8
90015ca4:	9b10      	ldr	r3, [sp, #64]	; 0x40
90015ca6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90015caa:	f1bb 0b01 	subs.w	fp, fp, #1
90015cae:	eeb0 6a62 	vmov.f32	s12, s5
90015cb2:	eec6 7a80 	vdiv.f32	s15, s13, s0
90015cb6:	ee31 1a05 	vadd.f32	s2, s2, s10
90015cba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90015cbe:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90015cc2:	eeb0 6a43 	vmov.f32	s12, s6
90015cc6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90015cca:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90015cce:	ee20 7aa7 	vmul.f32	s14, s1, s15
90015cd2:	ee61 7a27 	vmul.f32	s15, s2, s15
90015cd6:	ee77 2a62 	vsub.f32	s5, s14, s5
90015cda:	ee37 3ac3 	vsub.f32	s6, s15, s6
90015cde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90015ce2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90015ce6:	ee12 2a90 	vmov	r2, s5
90015cea:	eef0 2a47 	vmov.f32	s5, s14
90015cee:	fb92 f3f3 	sdiv	r3, r2, r3
90015cf2:	ee13 2a10 	vmov	r2, s6
90015cf6:	9313      	str	r3, [sp, #76]	; 0x4c
90015cf8:	9b10      	ldr	r3, [sp, #64]	; 0x40
90015cfa:	eeb0 3a67 	vmov.f32	s6, s15
90015cfe:	fb92 f3f3 	sdiv	r3, r2, r3
90015d02:	9a05      	ldr	r2, [sp, #20]
90015d04:	9314      	str	r3, [sp, #80]	; 0x50
90015d06:	9b10      	ldr	r3, [sp, #64]	; 0x40
90015d08:	bf08      	it	eq
90015d0a:	4613      	moveq	r3, r2
90015d0c:	e789      	b.n	90015c22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
90015d0e:	1405      	asrs	r5, r0, #16
90015d10:	d467      	bmi.n	90015de2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90015d12:	f8d8 2008 	ldr.w	r2, [r8, #8]
90015d16:	42aa      	cmp	r2, r5
90015d18:	dd63      	ble.n	90015de2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90015d1a:	140f      	asrs	r7, r1, #16
90015d1c:	d461      	bmi.n	90015de2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90015d1e:	f8d8 200c 	ldr.w	r2, [r8, #12]
90015d22:	42ba      	cmp	r2, r7
90015d24:	dd5d      	ble.n	90015de2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90015d26:	9a01      	ldr	r2, [sp, #4]
90015d28:	fb07 5502 	mla	r5, r7, r2, r5
90015d2c:	9f02      	ldr	r7, [sp, #8]
90015d2e:	086a      	lsrs	r2, r5, #1
90015d30:	5cba      	ldrb	r2, [r7, r2]
90015d32:	07ef      	lsls	r7, r5, #31
90015d34:	bf54      	ite	pl
90015d36:	f002 020f 	andpl.w	r2, r2, #15
90015d3a:	1112      	asrmi	r2, r2, #4
90015d3c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90015d40:	b2d2      	uxtb	r2, r2
90015d42:	2a00      	cmp	r2, #0
90015d44:	d04d      	beq.n	90015de2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90015d46:	4d68      	ldr	r5, [pc, #416]	; (90015ee8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
90015d48:	2aff      	cmp	r2, #255	; 0xff
90015d4a:	682f      	ldr	r7, [r5, #0]
90015d4c:	ea4f 05d7 	mov.w	r5, r7, lsr #3
90015d50:	ea4f 2917 	mov.w	r9, r7, lsr #8
90015d54:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90015d58:	ea4f 07c7 	mov.w	r7, r7, lsl #3
90015d5c:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
90015d60:	9503      	str	r5, [sp, #12]
90015d62:	b2ff      	uxtb	r7, r7
90015d64:	d043      	beq.n	90015dee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
90015d66:	f06f 0501 	mvn.w	r5, #1
90015d6a:	fa1f fa82 	uxth.w	sl, r2
90015d6e:	43d2      	mvns	r2, r2
90015d70:	fb19 f90a 	smulbb	r9, r9, sl
90015d74:	4375      	muls	r5, r6
90015d76:	fb17 f70a 	smulbb	r7, r7, sl
90015d7a:	b2d2      	uxtb	r2, r2
90015d7c:	f834 e005 	ldrh.w	lr, [r4, r5]
90015d80:	9504      	str	r5, [sp, #16]
90015d82:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90015d86:	9d03      	ldr	r5, [sp, #12]
90015d88:	fb15 f50a 	smulbb	r5, r5, sl
90015d8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90015d90:	fb0c 9c02 	mla	ip, ip, r2, r9
90015d94:	ea4f 09ee 	mov.w	r9, lr, asr #3
90015d98:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90015d9c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90015da0:	fa1f fc8c 	uxth.w	ip, ip
90015da4:	fa5f fe8e 	uxtb.w	lr, lr
90015da8:	fb09 5502 	mla	r5, r9, r2, r5
90015dac:	fb0e 7702 	mla	r7, lr, r2, r7
90015db0:	b2ad      	uxth	r5, r5
90015db2:	b2bf      	uxth	r7, r7
90015db4:	f105 0901 	add.w	r9, r5, #1
90015db8:	1c7a      	adds	r2, r7, #1
90015dba:	eb09 2515 	add.w	r5, r9, r5, lsr #8
90015dbe:	f10c 0901 	add.w	r9, ip, #1
90015dc2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90015dc6:	9a04      	ldr	r2, [sp, #16]
90015dc8:	096d      	lsrs	r5, r5, #5
90015dca:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
90015dce:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90015dd2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90015dd6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90015dda:	ea45 050c 	orr.w	r5, r5, ip
90015dde:	433d      	orrs	r5, r7
90015de0:	52a5      	strh	r5, [r4, r2]
90015de2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90015de4:	3e01      	subs	r6, #1
90015de6:	4410      	add	r0, r2
90015de8:	9a14      	ldr	r2, [sp, #80]	; 0x50
90015dea:	4411      	add	r1, r2
90015dec:	e74d      	b.n	90015c8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90015dee:	f06f 0201 	mvn.w	r2, #1
90015df2:	fb02 fe06 	mul.w	lr, r2, r6
90015df6:	9a03      	ldr	r2, [sp, #12]
90015df8:	00d5      	lsls	r5, r2, #3
90015dfa:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
90015dfe:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
90015e02:	f824 500e 	strh.w	r5, [r4, lr]
90015e06:	e7ec      	b.n	90015de2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90015e08:	f04f 0e00 	mov.w	lr, #0
90015e0c:	eba3 020e 	sub.w	r2, r3, lr
90015e10:	2a00      	cmp	r2, #0
90015e12:	f77f af3d 	ble.w	90015c90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
90015e16:	1402      	asrs	r2, r0, #16
90015e18:	9e01      	ldr	r6, [sp, #4]
90015e1a:	140d      	asrs	r5, r1, #16
90015e1c:	fb06 2505 	mla	r5, r6, r5, r2
90015e20:	9e02      	ldr	r6, [sp, #8]
90015e22:	086a      	lsrs	r2, r5, #1
90015e24:	07ed      	lsls	r5, r5, #31
90015e26:	5cb2      	ldrb	r2, [r6, r2]
90015e28:	bf54      	ite	pl
90015e2a:	f002 020f 	andpl.w	r2, r2, #15
90015e2e:	1112      	asrmi	r2, r2, #4
90015e30:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90015e34:	b2d2      	uxtb	r2, r2
90015e36:	2a00      	cmp	r2, #0
90015e38:	d045      	beq.n	90015ec6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90015e3a:	4d2b      	ldr	r5, [pc, #172]	; (90015ee8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
90015e3c:	2aff      	cmp	r2, #255	; 0xff
90015e3e:	682e      	ldr	r6, [r5, #0]
90015e40:	ea4f 2916 	mov.w	r9, r6, lsr #8
90015e44:	ea4f 05d6 	mov.w	r5, r6, lsr #3
90015e48:	ea4f 06c6 	mov.w	r6, r6, lsl #3
90015e4c:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
90015e50:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90015e54:	b2f6      	uxtb	r6, r6
90015e56:	d03d      	beq.n	90015ed4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90015e58:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
90015e5c:	fa1f fa82 	uxth.w	sl, r2
90015e60:	43d2      	mvns	r2, r2
90015e62:	fb19 f90a 	smulbb	r9, r9, sl
90015e66:	ea4f 272c 	mov.w	r7, ip, asr #8
90015e6a:	fb15 f50a 	smulbb	r5, r5, sl
90015e6e:	b2d2      	uxtb	r2, r2
90015e70:	fb16 f60a 	smulbb	r6, r6, sl
90015e74:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90015e78:	fb07 9702 	mla	r7, r7, r2, r9
90015e7c:	ea4f 09ec 	mov.w	r9, ip, asr #3
90015e80:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90015e84:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90015e88:	b2bf      	uxth	r7, r7
90015e8a:	fa5f fc8c 	uxtb.w	ip, ip
90015e8e:	fb09 5502 	mla	r5, r9, r2, r5
90015e92:	fb0c 6602 	mla	r6, ip, r2, r6
90015e96:	b2ad      	uxth	r5, r5
90015e98:	b2b6      	uxth	r6, r6
90015e9a:	f105 0901 	add.w	r9, r5, #1
90015e9e:	1c72      	adds	r2, r6, #1
90015ea0:	eb09 2515 	add.w	r5, r9, r5, lsr #8
90015ea4:	f107 0901 	add.w	r9, r7, #1
90015ea8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90015eac:	096d      	lsrs	r5, r5, #5
90015eae:	eb09 2717 	add.w	r7, r9, r7, lsr #8
90015eb2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
90015eb6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90015eba:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90015ebe:	433d      	orrs	r5, r7
90015ec0:	4335      	orrs	r5, r6
90015ec2:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
90015ec6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90015ec8:	f10e 0e01 	add.w	lr, lr, #1
90015ecc:	4410      	add	r0, r2
90015ece:	9a14      	ldr	r2, [sp, #80]	; 0x50
90015ed0:	4411      	add	r1, r2
90015ed2:	e79b      	b.n	90015e0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
90015ed4:	00ed      	lsls	r5, r5, #3
90015ed6:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
90015eda:	ea45 05d6 	orr.w	r5, r5, r6, lsr #3
90015ede:	e7f0      	b.n	90015ec2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90015ee0:	b007      	add	sp, #28
90015ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015ee6:	bf00      	nop
90015ee8:	24012ae8 	.word	0x24012ae8

90015eec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
90015eec:	4770      	bx	lr

90015eee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
90015eee:	4770      	bx	lr

90015ef0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
90015ef0:	4770      	bx	lr

90015ef2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
90015ef2:	4770      	bx	lr

90015ef4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
90015ef4:	4770      	bx	lr

90015ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
90015ef6:	4770      	bx	lr

90015ef8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
90015ef8:	4770      	bx	lr

90015efa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
90015efa:	4770      	bx	lr

90015efc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
90015efc:	4770      	bx	lr

90015efe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
90015efe:	4770      	bx	lr

90015f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
90015f00:	4770      	bx	lr

90015f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
90015f02:	4770      	bx	lr

90015f04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
90015f04:	4770      	bx	lr

90015f06 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
90015f06:	4770      	bx	lr

90015f08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
90015f08:	4770      	bx	lr

90015f0a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
90015f0a:	4770      	bx	lr

90015f0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
90015f0c:	4770      	bx	lr

90015f0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
90015f0e:	4770      	bx	lr

90015f10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
90015f10:	4770      	bx	lr

90015f12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
90015f12:	4770      	bx	lr

90015f14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
90015f14:	4770      	bx	lr

90015f16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
90015f16:	4770      	bx	lr

90015f18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
90015f18:	4770      	bx	lr

90015f1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
90015f1a:	4770      	bx	lr

90015f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
90015f1c:	4770      	bx	lr

90015f1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
90015f1e:	4770      	bx	lr

90015f20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
90015f20:	4770      	bx	lr

90015f22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
90015f22:	4770      	bx	lr

90015f24 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
90015f24:	b508      	push	{r3, lr}
90015f26:	4b06      	ldr	r3, [pc, #24]	; (90015f40 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
90015f28:	8818      	ldrh	r0, [r3, #0]
90015f2a:	b928      	cbnz	r0, 90015f38 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
90015f2c:	4b05      	ldr	r3, [pc, #20]	; (90015f44 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
90015f2e:	2154      	movs	r1, #84	; 0x54
90015f30:	4a05      	ldr	r2, [pc, #20]	; (90015f48 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
90015f32:	4806      	ldr	r0, [pc, #24]	; (90015f4c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
90015f34:	f009 f9b6 	bl	9001f2a4 <__assert_func>
90015f38:	0040      	lsls	r0, r0, #1
90015f3a:	b280      	uxth	r0, r0
90015f3c:	bd08      	pop	{r3, pc}
90015f3e:	bf00      	nop
90015f40:	24012ada 	.word	0x24012ada
90015f44:	9002378d 	.word	0x9002378d
90015f48:	90023d17 	.word	0x90023d17
90015f4c:	900237cf 	.word	0x900237cf

90015f50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
90015f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015f54:	b08b      	sub	sp, #44	; 0x2c
90015f56:	460f      	mov	r7, r1
90015f58:	4616      	mov	r6, r2
90015f5a:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
90015f5e:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
90015f62:	f1bb 0f00 	cmp.w	fp, #0
90015f66:	d046      	beq.n	90015ff6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
90015f68:	6810      	ldr	r0, [r2, #0]
90015f6a:	ad06      	add	r5, sp, #24
90015f6c:	6851      	ldr	r1, [r2, #4]
90015f6e:	c503      	stmia	r5!, {r0, r1}
90015f70:	6818      	ldr	r0, [r3, #0]
90015f72:	ad08      	add	r5, sp, #32
90015f74:	6859      	ldr	r1, [r3, #4]
90015f76:	c503      	stmia	r5!, {r0, r1}
90015f78:	a806      	add	r0, sp, #24
90015f7a:	f7fa f9d3 	bl	90010324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90015f7e:	4631      	mov	r1, r6
90015f80:	a808      	add	r0, sp, #32
90015f82:	f7fa f9b7 	bl	900102f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90015f86:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90015f8a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
90015f8e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
90015f92:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
90015f96:	fb16 2103 	smlabb	r1, r6, r3, r2
90015f9a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
90015f9e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
90015fa2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
90015fa6:	4f5d      	ldr	r7, [pc, #372]	; (9001611c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
90015fa8:	440a      	add	r2, r1
90015faa:	6838      	ldr	r0, [r7, #0]
90015fac:	46b9      	mov	r9, r7
90015fae:	f8ad 2020 	strh.w	r2, [sp, #32]
90015fb2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90015fb6:	4413      	add	r3, r2
90015fb8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90015fbc:	6803      	ldr	r3, [r0, #0]
90015fbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90015fc0:	4798      	blx	r3
90015fc2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
90015fc6:	d019      	beq.n	90015ffc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
90015fc8:	f010 0f04 	tst.w	r0, #4
90015fcc:	d01a      	beq.n	90016004 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
90015fce:	f8d9 0000 	ldr.w	r0, [r9]
90015fd2:	b2ad      	uxth	r5, r5
90015fd4:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
90015fd8:	6801      	ldr	r1, [r0, #0]
90015fda:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90015fde:	9501      	str	r5, [sp, #4]
90015fe0:	e9cd b403 	strd	fp, r4, [sp, #12]
90015fe4:	f8bd 401c 	ldrh.w	r4, [sp, #28]
90015fe8:	9402      	str	r4, [sp, #8]
90015fea:	fa1f f488 	uxth.w	r4, r8
90015fee:	9400      	str	r4, [sp, #0]
90015ff0:	6b8c      	ldr	r4, [r1, #56]	; 0x38
90015ff2:	4631      	mov	r1, r6
90015ff4:	47a0      	blx	r4
90015ff6:	b00b      	add	sp, #44	; 0x2c
90015ff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015ffc:	b914      	cbnz	r4, 90016004 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
90015ffe:	f010 0f01 	tst.w	r0, #1
90016002:	e7e3      	b.n	90015fcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
90016004:	f8d9 0000 	ldr.w	r0, [r9]
90016008:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001600c:	6803      	ldr	r3, [r0, #0]
9001600e:	6a1b      	ldr	r3, [r3, #32]
90016010:	4798      	blx	r3
90016012:	4b43      	ldr	r3, [pc, #268]	; (90016120 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
90016014:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
90016018:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001601c:	881a      	ldrh	r2, [r3, #0]
9001601e:	469a      	mov	sl, r3
90016020:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
90016024:	fb05 f502 	mul.w	r5, r5, r2
90016028:	fb02 1404 	mla	r4, r2, r4, r1
9001602c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90016030:	d058      	beq.n	900160e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x194>
90016032:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
90016036:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001603a:	fa1f f28b 	uxth.w	r2, fp
9001603e:	469e      	mov	lr, r3
90016040:	fa1f f989 	uxth.w	r9, r9
90016044:	42ac      	cmp	r4, r5
90016046:	d263      	bcs.n	90016110 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
90016048:	eb04 0a07 	add.w	sl, r4, r7
9001604c:	4554      	cmp	r4, sl
9001604e:	d23c      	bcs.n	900160ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17a>
90016050:	8821      	ldrh	r1, [r4, #0]
90016052:	f836 3b02 	ldrh.w	r3, [r6], #2
90016056:	1208      	asrs	r0, r1, #8
90016058:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001605c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90016060:	ea4f 0be1 	mov.w	fp, r1, asr #3
90016064:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90016068:	00c9      	lsls	r1, r1, #3
9001606a:	fb10 f009 	smulbb	r0, r0, r9
9001606e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
90016072:	b2c9      	uxtb	r1, r1
90016074:	fb0c 0c02 	mla	ip, ip, r2, r0
90016078:	10d8      	asrs	r0, r3, #3
9001607a:	fb11 f109 	smulbb	r1, r1, r9
9001607e:	00db      	lsls	r3, r3, #3
90016080:	fa1f fc8c 	uxth.w	ip, ip
90016084:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90016088:	fb1b fb09 	smulbb	fp, fp, r9
9001608c:	b2db      	uxtb	r3, r3
9001608e:	fb03 1302 	mla	r3, r3, r2, r1
90016092:	f10c 0101 	add.w	r1, ip, #1
90016096:	fb00 b002 	mla	r0, r0, r2, fp
9001609a:	b29b      	uxth	r3, r3
9001609c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900160a0:	1c59      	adds	r1, r3, #1
900160a2:	b280      	uxth	r0, r0
900160a4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900160a8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900160ac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900160b0:	ea4c 0c03 	orr.w	ip, ip, r3
900160b4:	1c43      	adds	r3, r0, #1
900160b6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900160ba:	0940      	lsrs	r0, r0, #5
900160bc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900160c0:	ea4c 0c00 	orr.w	ip, ip, r0
900160c4:	f824 cb02 	strh.w	ip, [r4], #2
900160c8:	e7c0      	b.n	9001604c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
900160ca:	f8be 3000 	ldrh.w	r3, [lr]
900160ce:	eba3 0308 	sub.w	r3, r3, r8
900160d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900160d6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900160da:	eba3 0308 	sub.w	r3, r3, r8
900160de:	eb06 0643 	add.w	r6, r6, r3, lsl #1
900160e2:	e7af      	b.n	90016044 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
900160e4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
900160e8:	f8d9 0000 	ldr.w	r0, [r9]
900160ec:	42ac      	cmp	r4, r5
900160ee:	6803      	ldr	r3, [r0, #0]
900160f0:	d20e      	bcs.n	90016110 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
900160f2:	f8d3 802c 	ldr.w	r8, [r3, #44]	; 0x2c
900160f6:	4632      	mov	r2, r6
900160f8:	463b      	mov	r3, r7
900160fa:	4621      	mov	r1, r4
900160fc:	47c0      	blx	r8
900160fe:	f8ba 3000 	ldrh.w	r3, [sl]
90016102:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90016106:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001610a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001610e:	e7eb      	b.n	900160e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x198>
90016110:	4b02      	ldr	r3, [pc, #8]	; (9001611c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
90016112:	6818      	ldr	r0, [r3, #0]
90016114:	6803      	ldr	r3, [r0, #0]
90016116:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90016118:	4798      	blx	r3
9001611a:	e76c      	b.n	90015ff6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
9001611c:	24012ae0 	.word	0x24012ae0
90016120:	24012ada 	.word	0x24012ada

90016124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
90016124:	b510      	push	{r4, lr}
90016126:	4604      	mov	r4, r0
90016128:	2104      	movs	r1, #4
9001612a:	f009 f88c 	bl	9001f246 <_ZdlPvj>
9001612e:	4620      	mov	r0, r4
90016130:	bd10      	pop	{r4, pc}

90016132 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
90016132:	b510      	push	{r4, lr}
90016134:	4604      	mov	r4, r0
90016136:	2104      	movs	r1, #4
90016138:	f009 f885 	bl	9001f246 <_ZdlPvj>
9001613c:	4620      	mov	r0, r4
9001613e:	bd10      	pop	{r4, pc}

90016140 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
90016140:	b510      	push	{r4, lr}
90016142:	4604      	mov	r4, r0
90016144:	2104      	movs	r1, #4
90016146:	f009 f87e 	bl	9001f246 <_ZdlPvj>
9001614a:	4620      	mov	r0, r4
9001614c:	bd10      	pop	{r4, pc}

9001614e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001614e:	b510      	push	{r4, lr}
90016150:	4604      	mov	r4, r0
90016152:	2104      	movs	r1, #4
90016154:	f009 f877 	bl	9001f246 <_ZdlPvj>
90016158:	4620      	mov	r0, r4
9001615a:	bd10      	pop	{r4, pc}

9001615c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001615c:	b510      	push	{r4, lr}
9001615e:	4604      	mov	r4, r0
90016160:	2104      	movs	r1, #4
90016162:	f009 f870 	bl	9001f246 <_ZdlPvj>
90016166:	4620      	mov	r0, r4
90016168:	bd10      	pop	{r4, pc}

9001616a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001616a:	b510      	push	{r4, lr}
9001616c:	4604      	mov	r4, r0
9001616e:	2104      	movs	r1, #4
90016170:	f009 f869 	bl	9001f246 <_ZdlPvj>
90016174:	4620      	mov	r0, r4
90016176:	bd10      	pop	{r4, pc}

90016178 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
90016178:	b510      	push	{r4, lr}
9001617a:	4604      	mov	r4, r0
9001617c:	2104      	movs	r1, #4
9001617e:	f009 f862 	bl	9001f246 <_ZdlPvj>
90016182:	4620      	mov	r0, r4
90016184:	bd10      	pop	{r4, pc}

90016186 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
90016186:	b510      	push	{r4, lr}
90016188:	4604      	mov	r4, r0
9001618a:	2104      	movs	r1, #4
9001618c:	f009 f85b 	bl	9001f246 <_ZdlPvj>
90016190:	4620      	mov	r0, r4
90016192:	bd10      	pop	{r4, pc}

90016194 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
90016194:	b510      	push	{r4, lr}
90016196:	4604      	mov	r4, r0
90016198:	2104      	movs	r1, #4
9001619a:	f009 f854 	bl	9001f246 <_ZdlPvj>
9001619e:	4620      	mov	r0, r4
900161a0:	bd10      	pop	{r4, pc}

900161a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
900161a2:	b510      	push	{r4, lr}
900161a4:	4604      	mov	r4, r0
900161a6:	2104      	movs	r1, #4
900161a8:	f009 f84d 	bl	9001f246 <_ZdlPvj>
900161ac:	4620      	mov	r0, r4
900161ae:	bd10      	pop	{r4, pc}

900161b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
900161b0:	b510      	push	{r4, lr}
900161b2:	4604      	mov	r4, r0
900161b4:	2104      	movs	r1, #4
900161b6:	f009 f846 	bl	9001f246 <_ZdlPvj>
900161ba:	4620      	mov	r0, r4
900161bc:	bd10      	pop	{r4, pc}

900161be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
900161be:	b510      	push	{r4, lr}
900161c0:	4604      	mov	r4, r0
900161c2:	2104      	movs	r1, #4
900161c4:	f009 f83f 	bl	9001f246 <_ZdlPvj>
900161c8:	4620      	mov	r0, r4
900161ca:	bd10      	pop	{r4, pc}

900161cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
900161cc:	b510      	push	{r4, lr}
900161ce:	4604      	mov	r4, r0
900161d0:	2104      	movs	r1, #4
900161d2:	f009 f838 	bl	9001f246 <_ZdlPvj>
900161d6:	4620      	mov	r0, r4
900161d8:	bd10      	pop	{r4, pc}

900161da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
900161da:	b510      	push	{r4, lr}
900161dc:	4604      	mov	r4, r0
900161de:	2104      	movs	r1, #4
900161e0:	f009 f831 	bl	9001f246 <_ZdlPvj>
900161e4:	4620      	mov	r0, r4
900161e6:	bd10      	pop	{r4, pc}

900161e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
900161e8:	b510      	push	{r4, lr}
900161ea:	4604      	mov	r4, r0
900161ec:	2104      	movs	r1, #4
900161ee:	f009 f82a 	bl	9001f246 <_ZdlPvj>
900161f2:	4620      	mov	r0, r4
900161f4:	bd10      	pop	{r4, pc}

900161f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
900161f6:	b510      	push	{r4, lr}
900161f8:	4604      	mov	r4, r0
900161fa:	2104      	movs	r1, #4
900161fc:	f009 f823 	bl	9001f246 <_ZdlPvj>
90016200:	4620      	mov	r0, r4
90016202:	bd10      	pop	{r4, pc}

90016204 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
90016204:	b510      	push	{r4, lr}
90016206:	4604      	mov	r4, r0
90016208:	2104      	movs	r1, #4
9001620a:	f009 f81c 	bl	9001f246 <_ZdlPvj>
9001620e:	4620      	mov	r0, r4
90016210:	bd10      	pop	{r4, pc}

90016212 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
90016212:	b510      	push	{r4, lr}
90016214:	4604      	mov	r4, r0
90016216:	2104      	movs	r1, #4
90016218:	f009 f815 	bl	9001f246 <_ZdlPvj>
9001621c:	4620      	mov	r0, r4
9001621e:	bd10      	pop	{r4, pc}

90016220 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
90016220:	b510      	push	{r4, lr}
90016222:	4604      	mov	r4, r0
90016224:	2104      	movs	r1, #4
90016226:	f009 f80e 	bl	9001f246 <_ZdlPvj>
9001622a:	4620      	mov	r0, r4
9001622c:	bd10      	pop	{r4, pc}

9001622e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001622e:	b510      	push	{r4, lr}
90016230:	4604      	mov	r4, r0
90016232:	2104      	movs	r1, #4
90016234:	f009 f807 	bl	9001f246 <_ZdlPvj>
90016238:	4620      	mov	r0, r4
9001623a:	bd10      	pop	{r4, pc}

9001623c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001623c:	b510      	push	{r4, lr}
9001623e:	4604      	mov	r4, r0
90016240:	2104      	movs	r1, #4
90016242:	f009 f800 	bl	9001f246 <_ZdlPvj>
90016246:	4620      	mov	r0, r4
90016248:	bd10      	pop	{r4, pc}

9001624a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001624a:	b510      	push	{r4, lr}
9001624c:	4604      	mov	r4, r0
9001624e:	2104      	movs	r1, #4
90016250:	f008 fff9 	bl	9001f246 <_ZdlPvj>
90016254:	4620      	mov	r0, r4
90016256:	bd10      	pop	{r4, pc}

90016258 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
90016258:	b510      	push	{r4, lr}
9001625a:	4604      	mov	r4, r0
9001625c:	2104      	movs	r1, #4
9001625e:	f008 fff2 	bl	9001f246 <_ZdlPvj>
90016262:	4620      	mov	r0, r4
90016264:	bd10      	pop	{r4, pc}

90016266 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
90016266:	b510      	push	{r4, lr}
90016268:	4604      	mov	r4, r0
9001626a:	2104      	movs	r1, #4
9001626c:	f008 ffeb 	bl	9001f246 <_ZdlPvj>
90016270:	4620      	mov	r0, r4
90016272:	bd10      	pop	{r4, pc}

90016274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
90016274:	b510      	push	{r4, lr}
90016276:	4604      	mov	r4, r0
90016278:	2104      	movs	r1, #4
9001627a:	f008 ffe4 	bl	9001f246 <_ZdlPvj>
9001627e:	4620      	mov	r0, r4
90016280:	bd10      	pop	{r4, pc}

90016282 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
90016282:	b510      	push	{r4, lr}
90016284:	4604      	mov	r4, r0
90016286:	2104      	movs	r1, #4
90016288:	f008 ffdd 	bl	9001f246 <_ZdlPvj>
9001628c:	4620      	mov	r0, r4
9001628e:	bd10      	pop	{r4, pc}

90016290 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
90016290:	b510      	push	{r4, lr}
90016292:	4604      	mov	r4, r0
90016294:	2104      	movs	r1, #4
90016296:	f008 ffd6 	bl	9001f246 <_ZdlPvj>
9001629a:	4620      	mov	r0, r4
9001629c:	bd10      	pop	{r4, pc}

9001629e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001629e:	b510      	push	{r4, lr}
900162a0:	4604      	mov	r4, r0
900162a2:	2104      	movs	r1, #4
900162a4:	f008 ffcf 	bl	9001f246 <_ZdlPvj>
900162a8:	4620      	mov	r0, r4
900162aa:	bd10      	pop	{r4, pc}

900162ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
900162ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900162b0:	460d      	mov	r5, r1
900162b2:	b087      	sub	sp, #28
900162b4:	4614      	mov	r4, r2
900162b6:	4698      	mov	r8, r3
900162b8:	b333      	cbz	r3, 90016308 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
900162ba:	4608      	mov	r0, r1
900162bc:	f7f7 f90d 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
900162c0:	bb10      	cbnz	r0, 90016308 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
900162c2:	6828      	ldr	r0, [r5, #0]
900162c4:	ab04      	add	r3, sp, #16
900162c6:	6869      	ldr	r1, [r5, #4]
900162c8:	4e72      	ldr	r6, [pc, #456]	; (90016494 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1e8>)
900162ca:	c303      	stmia	r3!, {r0, r1}
900162cc:	a804      	add	r0, sp, #16
900162ce:	f7fa f829 	bl	90010324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900162d2:	6830      	ldr	r0, [r6, #0]
900162d4:	6803      	ldr	r3, [r0, #0]
900162d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900162d8:	4798      	blx	r3
900162da:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
900162de:	d016      	beq.n	9001630e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
900162e0:	f010 0f08 	tst.w	r0, #8
900162e4:	d016      	beq.n	90016314 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x68>
900162e6:	f8bd 5016 	ldrh.w	r5, [sp, #22]
900162ea:	6830      	ldr	r0, [r6, #0]
900162ec:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900162f0:	6801      	ldr	r1, [r0, #0]
900162f2:	9501      	str	r5, [sp, #4]
900162f4:	f8bd 5014 	ldrh.w	r5, [sp, #20]
900162f8:	f8cd 8008 	str.w	r8, [sp, #8]
900162fc:	9500      	str	r5, [sp, #0]
900162fe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90016302:	6c8d      	ldr	r5, [r1, #72]	; 0x48
90016304:	4621      	mov	r1, r4
90016306:	47a8      	blx	r5
90016308:	b007      	add	sp, #28
9001630a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001630e:	f010 0f02 	tst.w	r0, #2
90016312:	e7e7      	b.n	900162e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x38>
90016314:	6830      	ldr	r0, [r6, #0]
90016316:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001631a:	6803      	ldr	r3, [r0, #0]
9001631c:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90016320:	6a1b      	ldr	r3, [r3, #32]
90016322:	4798      	blx	r3
90016324:	495c      	ldr	r1, [pc, #368]	; (90016498 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ec>)
90016326:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
9001632a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9001632e:	880b      	ldrh	r3, [r1, #0]
90016330:	468e      	mov	lr, r1
90016332:	f9bd c010 	ldrsh.w	ip, [sp, #16]
90016336:	fb03 c202 	mla	r2, r3, r2, ip
9001633a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001633e:	fb07 f203 	mul.w	r2, r7, r3
90016342:	d053      	beq.n	900163ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
90016344:	fa1f f388 	uxth.w	r3, r8
90016348:	f1c8 07ff 	rsb	r7, r8, #255	; 0xff
9001634c:	ea4f 09d4 	mov.w	r9, r4, lsr #3
90016350:	ea4f 2814 	mov.w	r8, r4, lsr #8
90016354:	00e4      	lsls	r4, r4, #3
90016356:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001635a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001635e:	eb00 0142 	add.w	r1, r0, r2, lsl #1
90016362:	b2e4      	uxtb	r4, r4
90016364:	fb09 f903 	mul.w	r9, r9, r3
90016368:	fb08 f803 	mul.w	r8, r8, r3
9001636c:	006d      	lsls	r5, r5, #1
9001636e:	4363      	muls	r3, r4
90016370:	b2bc      	uxth	r4, r7
90016372:	4288      	cmp	r0, r1
90016374:	f080 8088 	bcs.w	90016488 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
90016378:	eb00 0a05 	add.w	sl, r0, r5
9001637c:	4550      	cmp	r0, sl
9001637e:	d22f      	bcs.n	900163e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x134>
90016380:	8802      	ldrh	r2, [r0, #0]
90016382:	ea4f 2c22 	mov.w	ip, r2, asr #8
90016386:	10d7      	asrs	r7, r2, #3
90016388:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001638c:	00d2      	lsls	r2, r2, #3
9001638e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90016392:	fb1c fc04 	smulbb	ip, ip, r4
90016396:	b2d2      	uxtb	r2, r2
90016398:	fb17 f704 	smulbb	r7, r7, r4
9001639c:	fb12 f204 	smulbb	r2, r2, r4
900163a0:	44c4      	add	ip, r8
900163a2:	444f      	add	r7, r9
900163a4:	fa1f fc8c 	uxth.w	ip, ip
900163a8:	441a      	add	r2, r3
900163aa:	b2bf      	uxth	r7, r7
900163ac:	b292      	uxth	r2, r2
900163ae:	f10c 0b01 	add.w	fp, ip, #1
900163b2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
900163b6:	f102 0b01 	add.w	fp, r2, #1
900163ba:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900163be:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900163c2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900163c6:	ea4c 0202 	orr.w	r2, ip, r2
900163ca:	f107 0c01 	add.w	ip, r7, #1
900163ce:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
900163d2:	097f      	lsrs	r7, r7, #5
900163d4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900163d8:	433a      	orrs	r2, r7
900163da:	f820 2b02 	strh.w	r2, [r0], #2
900163de:	e7cd      	b.n	9001637c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd0>
900163e0:	f8be 2000 	ldrh.w	r2, [lr]
900163e4:	ebc5 0242 	rsb	r2, r5, r2, lsl #1
900163e8:	4410      	add	r0, r2
900163ea:	e7c2      	b.n	90016372 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xc6>
900163ec:	07db      	lsls	r3, r3, #31
900163ee:	eb00 0242 	add.w	r2, r0, r2, lsl #1
900163f2:	d50e      	bpl.n	90016412 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x166>
900163f4:	006d      	lsls	r5, r5, #1
900163f6:	4290      	cmp	r0, r2
900163f8:	d246      	bcs.n	90016488 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
900163fa:	1943      	adds	r3, r0, r5
900163fc:	4298      	cmp	r0, r3
900163fe:	d202      	bcs.n	90016406 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x15a>
90016400:	f820 4b02 	strh.w	r4, [r0], #2
90016404:	e7fa      	b.n	900163fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x150>
90016406:	f8be 3000 	ldrh.w	r3, [lr]
9001640a:	ebc5 0343 	rsb	r3, r5, r3, lsl #1
9001640e:	4418      	add	r0, r3
90016410:	e7f1      	b.n	900163f6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x14a>
90016412:	0787      	lsls	r7, r0, #30
90016414:	462b      	mov	r3, r5
90016416:	d00a      	beq.n	9001642e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x182>
90016418:	4603      	mov	r3, r0
9001641a:	4293      	cmp	r3, r2
9001641c:	d205      	bcs.n	9001642a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x17e>
9001641e:	801c      	strh	r4, [r3, #0]
90016420:	f8be 1000 	ldrh.w	r1, [lr]
90016424:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90016428:	e7f7      	b.n	9001641a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x16e>
9001642a:	3002      	adds	r0, #2
9001642c:	1e6b      	subs	r3, r5, #1
9001642e:	07dd      	lsls	r5, r3, #31
90016430:	d50d      	bpl.n	9001644e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a2>
90016432:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
90016436:	3901      	subs	r1, #1
90016438:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001643c:	4291      	cmp	r1, r2
9001643e:	d205      	bcs.n	9001644c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a0>
90016440:	800c      	strh	r4, [r1, #0]
90016442:	f8be 5000 	ldrh.w	r5, [lr]
90016446:	eb01 0145 	add.w	r1, r1, r5, lsl #1
9001644a:	e7f7      	b.n	9001643c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x190>
9001644c:	3b01      	subs	r3, #1
9001644e:	b1db      	cbz	r3, 90016488 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
90016450:	b2a1      	uxth	r1, r4
90016452:	105b      	asrs	r3, r3, #1
90016454:	ea41 4404 	orr.w	r4, r1, r4, lsl #16
90016458:	009b      	lsls	r3, r3, #2
9001645a:	4290      	cmp	r0, r2
9001645c:	d214      	bcs.n	90016488 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
9001645e:	0781      	lsls	r1, r0, #30
90016460:	d006      	beq.n	90016470 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c4>
90016462:	4b0e      	ldr	r3, [pc, #56]	; (9001649c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f0>)
90016464:	f44f 7162 	mov.w	r1, #904	; 0x388
90016468:	4a0d      	ldr	r2, [pc, #52]	; (900164a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f4>)
9001646a:	480e      	ldr	r0, [pc, #56]	; (900164a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f8>)
9001646c:	f008 ff1a 	bl	9001f2a4 <__assert_func>
90016470:	18c5      	adds	r5, r0, r3
90016472:	4601      	mov	r1, r0
90016474:	42a9      	cmp	r1, r5
90016476:	d202      	bcs.n	9001647e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1d2>
90016478:	f841 4b04 	str.w	r4, [r1], #4
9001647c:	e7fa      	b.n	90016474 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c8>
9001647e:	f8be 1000 	ldrh.w	r1, [lr]
90016482:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90016486:	e7e8      	b.n	9001645a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ae>
90016488:	6830      	ldr	r0, [r6, #0]
9001648a:	6803      	ldr	r3, [r0, #0]
9001648c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9001648e:	4798      	blx	r3
90016490:	e73a      	b.n	90016308 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90016492:	bf00      	nop
90016494:	24012ae0 	.word	0x24012ae0
90016498:	24012ada 	.word	0x24012ada
9001649c:	9002372c 	.word	0x9002372c
900164a0:	90023ee4 	.word	0x90023ee4
900164a4:	9002375b 	.word	0x9002375b

900164a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
900164a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900164ac:	4f97      	ldr	r7, [pc, #604]	; (9001670c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
900164ae:	4616      	mov	r6, r2
900164b0:	b08f      	sub	sp, #60	; 0x3c
900164b2:	4604      	mov	r4, r0
900164b4:	683a      	ldr	r2, [r7, #0]
900164b6:	4689      	mov	r9, r1
900164b8:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
900164bc:	2a02      	cmp	r2, #2
900164be:	d106      	bne.n	900164ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
900164c0:	4b93      	ldr	r3, [pc, #588]	; (90016710 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
900164c2:	f44f 7132 	mov.w	r1, #712	; 0x2c8
900164c6:	4a93      	ldr	r2, [pc, #588]	; (90016714 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
900164c8:	4893      	ldr	r0, [pc, #588]	; (90016718 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
900164ca:	f008 feeb 	bl	9001f2a4 <__assert_func>
900164ce:	ad0e      	add	r5, sp, #56	; 0x38
900164d0:	f825 3d24 	strh.w	r3, [r5, #-36]!
900164d4:	4628      	mov	r0, r5
900164d6:	f7fd fa4d 	bl	90013974 <_ZNK8touchgfx6Bitmap9getFormatEv>
900164da:	6823      	ldr	r3, [r4, #0]
900164dc:	4680      	mov	r8, r0
900164de:	4620      	mov	r0, r4
900164e0:	6a1b      	ldr	r3, [r3, #32]
900164e2:	4798      	blx	r3
900164e4:	4580      	cmp	r8, r0
900164e6:	d004      	beq.n	900164f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
900164e8:	4b8c      	ldr	r3, [pc, #560]	; (9001671c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
900164ea:	f240 21ca 	movw	r1, #714	; 0x2ca
900164ee:	4a89      	ldr	r2, [pc, #548]	; (90016714 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
900164f0:	e7ea      	b.n	900164c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
900164f2:	4628      	mov	r0, r5
900164f4:	f7fd f9b4 	bl	90013860 <_ZNK8touchgfx6Bitmap7getDataEv>
900164f8:	4680      	mov	r8, r0
900164fa:	b920      	cbnz	r0, 90016506 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
900164fc:	4b88      	ldr	r3, [pc, #544]	; (90016720 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
900164fe:	f44f 7133 	mov.w	r1, #716	; 0x2cc
90016502:	4a84      	ldr	r2, [pc, #528]	; (90016714 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
90016504:	e7e0      	b.n	900164c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
90016506:	6830      	ldr	r0, [r6, #0]
90016508:	ab06      	add	r3, sp, #24
9001650a:	6871      	ldr	r1, [r6, #4]
9001650c:	f10d 0b20 	add.w	fp, sp, #32
90016510:	f9b6 a000 	ldrsh.w	sl, [r6]
90016514:	c303      	stmia	r3!, {r0, r1}
90016516:	f8d9 1004 	ldr.w	r1, [r9, #4]
9001651a:	ab08      	add	r3, sp, #32
9001651c:	f8d9 0000 	ldr.w	r0, [r9]
90016520:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90016524:	c303      	stmia	r3!, {r0, r1}
90016526:	4628      	mov	r0, r5
90016528:	f7fd f892 	bl	90013650 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001652c:	4606      	mov	r6, r0
9001652e:	4628      	mov	r0, r5
90016530:	4d7c      	ldr	r5, [pc, #496]	; (90016724 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
90016532:	f7fd f8c7 	bl	900136c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90016536:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
9001653a:	a806      	add	r0, sp, #24
9001653c:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
90016540:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
90016544:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90016548:	f7f9 feec 	bl	90010324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001654c:	4658      	mov	r0, fp
9001654e:	f7f9 fee9 	bl	90010324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90016552:	a80a      	add	r0, sp, #40	; 0x28
90016554:	f7f9 fee6 	bl	90010324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90016558:	4b73      	ldr	r3, [pc, #460]	; (90016728 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
9001655a:	2100      	movs	r1, #0
9001655c:	f9b5 2000 	ldrsh.w	r2, [r5]
90016560:	f9b3 3000 	ldrsh.w	r3, [r3]
90016564:	4658      	mov	r0, fp
90016566:	910c      	str	r1, [sp, #48]	; 0x30
90016568:	a90c      	add	r1, sp, #48	; 0x30
9001656a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
9001656e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90016572:	f7f6 ff6f 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
90016576:	4658      	mov	r0, fp
90016578:	f7f6 ffaf 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
9001657c:	2800      	cmp	r0, #0
9001657e:	f040 809a 	bne.w	900166b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
90016582:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
90016586:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
9001658a:	4288      	cmp	r0, r1
9001658c:	db38      	blt.n	90016600 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x158>
9001658e:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
90016592:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90016596:	429a      	cmp	r2, r3
90016598:	db32      	blt.n	90016600 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x158>
9001659a:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
9001659e:	4430      	add	r0, r6
900165a0:	f8bd 601c 	ldrh.w	r6, [sp, #28]
900165a4:	4431      	add	r1, r6
900165a6:	b200      	sxth	r0, r0
900165a8:	b209      	sxth	r1, r1
900165aa:	4288      	cmp	r0, r1
900165ac:	dc28      	bgt.n	90016600 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x158>
900165ae:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
900165b2:	440a      	add	r2, r1
900165b4:	f8bd 101e 	ldrh.w	r1, [sp, #30]
900165b8:	440b      	add	r3, r1
900165ba:	b212      	sxth	r2, r2
900165bc:	b21b      	sxth	r3, r3
900165be:	429a      	cmp	r2, r3
900165c0:	dc1e      	bgt.n	90016600 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x158>
900165c2:	6823      	ldr	r3, [r4, #0]
900165c4:	4620      	mov	r0, r4
900165c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900165c8:	4798      	blx	r3
900165ca:	4682      	mov	sl, r0
900165cc:	6838      	ldr	r0, [r7, #0]
900165ce:	6803      	ldr	r3, [r0, #0]
900165d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900165d2:	4798      	blx	r3
900165d4:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
900165d8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900165dc:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
900165e0:	1a5b      	subs	r3, r3, r1
900165e2:	b29b      	uxth	r3, r3
900165e4:	b21c      	sxth	r4, r3
900165e6:	2c00      	cmp	r4, #0
900165e8:	dc0f      	bgt.n	9001660a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x162>
900165ea:	bf18      	it	ne
900165ec:	f8ad 1020 	strhne.w	r1, [sp, #32]
900165f0:	4644      	mov	r4, r8
900165f2:	bf1e      	ittt	ne
900165f4:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
900165f8:	185b      	addne	r3, r3, r1
900165fa:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
900165fe:	e009      	b.n	90016614 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16c>
90016600:	4b4a      	ldr	r3, [pc, #296]	; (9001672c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
90016602:	f240 21da 	movw	r1, #730	; 0x2da
90016606:	4a43      	ldr	r2, [pc, #268]	; (90016714 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
90016608:	e75e      	b.n	900164c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
9001660a:	1ad3      	subs	r3, r2, r3
9001660c:	eb08 0444 	add.w	r4, r8, r4, lsl #1
90016610:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
90016614:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
90016618:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001661c:	1b9b      	subs	r3, r3, r6
9001661e:	b29b      	uxth	r3, r3
90016620:	b219      	sxth	r1, r3
90016622:	2900      	cmp	r1, #0
90016624:	dd4b      	ble.n	900166be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x216>
90016626:	4351      	muls	r1, r2
90016628:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001662c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
90016630:	1acb      	subs	r3, r1, r3
90016632:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90016636:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001663a:	2e00      	cmp	r6, #0
9001663c:	dd3b      	ble.n	900166b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
9001663e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
90016642:	2b00      	cmp	r3, #0
90016644:	dd37      	ble.n	900166b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
90016646:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
9001664a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001664e:	fb0a f90c 	mul.w	r9, sl, ip
90016652:	eb09 0941 	add.w	r9, r9, r1, lsl #1
90016656:	4481      	add	r9, r0
90016658:	8828      	ldrh	r0, [r5, #0]
9001665a:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
9001665e:	1a41      	subs	r1, r0, r1
90016660:	42ae      	cmp	r6, r5
90016662:	bfa8      	it	ge
90016664:	462e      	movge	r6, r5
90016666:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001666a:	428e      	cmp	r6, r1
9001666c:	bfa8      	it	ge
9001666e:	460e      	movge	r6, r1
90016670:	429d      	cmp	r5, r3
90016672:	bfa8      	it	ge
90016674:	461d      	movge	r5, r3
90016676:	4b2c      	ldr	r3, [pc, #176]	; (90016728 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
90016678:	881b      	ldrh	r3, [r3, #0]
9001667a:	eba3 030c 	sub.w	r3, r3, ip
9001667e:	429d      	cmp	r5, r3
90016680:	bfa8      	it	ge
90016682:	461d      	movge	r5, r3
90016684:	42b0      	cmp	r0, r6
90016686:	d12c      	bne.n	900166e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x23a>
90016688:	4290      	cmp	r0, r2
9001668a:	d12a      	bne.n	900166e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x23a>
9001668c:	6838      	ldr	r0, [r7, #0]
9001668e:	9203      	str	r2, [sp, #12]
90016690:	6803      	ldr	r3, [r0, #0]
90016692:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90016694:	4798      	blx	r3
90016696:	07c3      	lsls	r3, r0, #31
90016698:	d51a      	bpl.n	900166d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x228>
9001669a:	9a03      	ldr	r2, [sp, #12]
9001669c:	6838      	ldr	r0, [r7, #0]
9001669e:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
900166a2:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
900166a6:	6803      	ldr	r3, [r0, #0]
900166a8:	9200      	str	r2, [sp, #0]
900166aa:	6d5d      	ldr	r5, [r3, #84]	; 0x54
900166ac:	4623      	mov	r3, r4
900166ae:	e89b 0006 	ldmia.w	fp, {r1, r2}
900166b2:	47a8      	blx	r5
900166b4:	4680      	mov	r8, r0
900166b6:	4640      	mov	r0, r8
900166b8:	b00f      	add	sp, #60	; 0x3c
900166ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900166be:	bf1f      	itttt	ne
900166c0:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
900166c4:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
900166c8:	185b      	addne	r3, r3, r1
900166ca:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
900166ce:	e7b2      	b.n	90016636 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18e>
900166d0:	6838      	ldr	r0, [r7, #0]
900166d2:	464a      	mov	r2, r9
900166d4:	4621      	mov	r1, r4
900166d6:	6803      	ldr	r3, [r0, #0]
900166d8:	6ade      	ldr	r6, [r3, #44]	; 0x2c
900166da:	fb05 f30a 	mul.w	r3, r5, sl
900166de:	47b0      	blx	r6
900166e0:	e7e9      	b.n	900166b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
900166e2:	4355      	muls	r5, r2
900166e4:	0076      	lsls	r6, r6, #1
900166e6:	ea4f 0b42 	mov.w	fp, r2, lsl #1
900166ea:	eb04 0345 	add.w	r3, r4, r5, lsl #1
900166ee:	9303      	str	r3, [sp, #12]
900166f0:	9b03      	ldr	r3, [sp, #12]
900166f2:	429c      	cmp	r4, r3
900166f4:	d2df      	bcs.n	900166b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
900166f6:	6838      	ldr	r0, [r7, #0]
900166f8:	464a      	mov	r2, r9
900166fa:	4621      	mov	r1, r4
900166fc:	44d1      	add	r9, sl
900166fe:	6803      	ldr	r3, [r0, #0]
90016700:	445c      	add	r4, fp
90016702:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016704:	461d      	mov	r5, r3
90016706:	4633      	mov	r3, r6
90016708:	47a8      	blx	r5
9001670a:	e7f1      	b.n	900166f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x248>
9001670c:	24012ae0 	.word	0x24012ae0
90016710:	90023552 	.word	0x90023552
90016714:	90023dc7 	.word	0x90023dc7
90016718:	9002375b 	.word	0x9002375b
9001671c:	90023604 	.word	0x90023604
90016720:	90023659 	.word	0x90023659
90016724:	24012ada 	.word	0x24012ada
90016728:	24012adc 	.word	0x24012adc
9001672c:	90023697 	.word	0x90023697

90016730 <_ZN8touchgfx8LCD16bppC1Ev>:
90016730:	2200      	movs	r2, #0
90016732:	4910      	ldr	r1, [pc, #64]	; (90016774 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
90016734:	6042      	str	r2, [r0, #4]
90016736:	6001      	str	r1, [r0, #0]
90016738:	e9c0 2202 	strd	r2, r2, [r0, #8]
9001673c:	e9c0 2204 	strd	r2, r2, [r0, #16]
90016740:	e9c0 2206 	strd	r2, r2, [r0, #24]
90016744:	e9c0 2208 	strd	r2, r2, [r0, #32]
90016748:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
9001674c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
90016750:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
90016754:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
90016758:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
9001675c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
90016760:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
90016764:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
90016768:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
9001676c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
90016770:	4770      	bx	lr
90016772:	bf00      	nop
90016774:	90023a3c 	.word	0x90023a3c

90016778 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
90016778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001677c:	b08b      	sub	sp, #44	; 0x2c
9001677e:	460d      	mov	r5, r1
90016780:	4604      	mov	r4, r0
90016782:	4699      	mov	r9, r3
90016784:	6808      	ldr	r0, [r1, #0]
90016786:	ab06      	add	r3, sp, #24
90016788:	6849      	ldr	r1, [r1, #4]
9001678a:	c303      	stmia	r3!, {r0, r1}
9001678c:	6810      	ldr	r0, [r2, #0]
9001678e:	ab08      	add	r3, sp, #32
90016790:	6851      	ldr	r1, [r2, #4]
90016792:	c303      	stmia	r3!, {r0, r1}
90016794:	a806      	add	r0, sp, #24
90016796:	f7f9 fdc5 	bl	90010324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001679a:	4629      	mov	r1, r5
9001679c:	a808      	add	r0, sp, #32
9001679e:	4d63      	ldr	r5, [pc, #396]	; (9001692c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
900167a0:	f7f9 fda8 	bl	900102f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900167a4:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
900167a8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
900167ac:	f8bd 101c 	ldrh.w	r1, [sp, #28]
900167b0:	6828      	ldr	r0, [r5, #0]
900167b2:	fb11 2103 	smlabb	r1, r1, r3, r2
900167b6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
900167ba:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
900167be:	eb04 0481 	add.w	r4, r4, r1, lsl #2
900167c2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
900167c6:	440a      	add	r2, r1
900167c8:	f8ad 2020 	strh.w	r2, [sp, #32]
900167cc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
900167d0:	4413      	add	r3, r2
900167d2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
900167d6:	6803      	ldr	r3, [r0, #0]
900167d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900167da:	4798      	blx	r3
900167dc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900167e0:	d118      	bne.n	90016814 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
900167e2:	f010 0f20 	tst.w	r0, #32
900167e6:	6828      	ldr	r0, [r5, #0]
900167e8:	d017      	beq.n	9001681a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
900167ea:	f8bd 501c 	ldrh.w	r5, [sp, #28]
900167ee:	b2b6      	uxth	r6, r6
900167f0:	6801      	ldr	r1, [r0, #0]
900167f2:	9502      	str	r5, [sp, #8]
900167f4:	fa1f f588 	uxth.w	r5, r8
900167f8:	f8cd 900c 	str.w	r9, [sp, #12]
900167fc:	9601      	str	r6, [sp, #4]
900167fe:	9500      	str	r5, [sp, #0]
90016800:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
90016804:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
90016806:	4621      	mov	r1, r4
90016808:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001680c:	47a8      	blx	r5
9001680e:	b00b      	add	sp, #44	; 0x2c
90016810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016814:	f010 0f40 	tst.w	r0, #64	; 0x40
90016818:	e7e5      	b.n	900167e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001681a:	6803      	ldr	r3, [r0, #0]
9001681c:	6a1b      	ldr	r3, [r3, #32]
9001681e:	4798      	blx	r3
90016820:	4a43      	ldr	r2, [pc, #268]	; (90016930 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
90016822:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
90016826:	f8b2 e000 	ldrh.w	lr, [r2]
9001682a:	4692      	mov	sl, r2
9001682c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
90016830:	fb0e 1303 	mla	r3, lr, r3, r1
90016834:	fb0e fe06 	mul.w	lr, lr, r6
90016838:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001683c:	ea4f 0348 	mov.w	r3, r8, lsl #1
90016840:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
90016844:	9305      	str	r3, [sp, #20]
90016846:	4570      	cmp	r0, lr
90016848:	d26a      	bcs.n	90016920 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1a8>
9001684a:	9b05      	ldr	r3, [sp, #20]
9001684c:	4621      	mov	r1, r4
9001684e:	eb00 0b03 	add.w	fp, r0, r3
90016852:	4558      	cmp	r0, fp
90016854:	d257      	bcs.n	90016906 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18e>
90016856:	f851 4b04 	ldr.w	r4, [r1], #4
9001685a:	0e22      	lsrs	r2, r4, #24
9001685c:	d012      	beq.n	90016884 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
9001685e:	2aff      	cmp	r2, #255	; 0xff
90016860:	ea4f 2714 	mov.w	r7, r4, lsr #8
90016864:	d110      	bne.n	90016888 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
90016866:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001686a:	d10d      	bne.n	90016888 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
9001686c:	0963      	lsrs	r3, r4, #5
9001686e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
90016872:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90016876:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001687a:	f027 0707 	bic.w	r7, r7, #7
9001687e:	431f      	orrs	r7, r3
90016880:	433c      	orrs	r4, r7
90016882:	8004      	strh	r4, [r0, #0]
90016884:	3002      	adds	r0, #2
90016886:	e7e4      	b.n	90016852 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
90016888:	fb09 f302 	mul.w	r3, r9, r2
9001688c:	f8b0 c000 	ldrh.w	ip, [r0]
90016890:	f3c4 4507 	ubfx	r5, r4, #16, #8
90016894:	b2ff      	uxtb	r7, r7
90016896:	1c5a      	adds	r2, r3, #1
90016898:	ea4f 262c 	mov.w	r6, ip, asr #8
9001689c:	b2e4      	uxtb	r4, r4
9001689e:	eb02 2223 	add.w	r2, r2, r3, asr #8
900168a2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
900168a6:	1212      	asrs	r2, r2, #8
900168a8:	b293      	uxth	r3, r2
900168aa:	43d2      	mvns	r2, r2
900168ac:	fb15 f503 	smulbb	r5, r5, r3
900168b0:	b2d2      	uxtb	r2, r2
900168b2:	fb17 f703 	smulbb	r7, r7, r3
900168b6:	fb06 5602 	mla	r6, r6, r2, r5
900168ba:	ea4f 05ec 	mov.w	r5, ip, asr #3
900168be:	fb14 f403 	smulbb	r4, r4, r3
900168c2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900168c6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
900168ca:	b2b6      	uxth	r6, r6
900168cc:	fa5f fc8c 	uxtb.w	ip, ip
900168d0:	fb05 7702 	mla	r7, r5, r2, r7
900168d4:	1c73      	adds	r3, r6, #1
900168d6:	fb0c 4202 	mla	r2, ip, r2, r4
900168da:	b2bf      	uxth	r7, r7
900168dc:	b292      	uxth	r2, r2
900168de:	1c7d      	adds	r5, r7, #1
900168e0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
900168e4:	f102 0c01 	add.w	ip, r2, #1
900168e8:	eb05 2717 	add.w	r7, r5, r7, lsr #8
900168ec:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
900168f0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
900168f4:	097f      	lsrs	r7, r7, #5
900168f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900168fa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900168fe:	4316      	orrs	r6, r2
90016900:	433e      	orrs	r6, r7
90016902:	8006      	strh	r6, [r0, #0]
90016904:	e7be      	b.n	90016884 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
90016906:	f8ba 3000 	ldrh.w	r3, [sl]
9001690a:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
9001690e:	eba3 0308 	sub.w	r3, r3, r8
90016912:	eba4 0408 	sub.w	r4, r4, r8
90016916:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001691a:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001691e:	e792      	b.n	90016846 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
90016920:	4b02      	ldr	r3, [pc, #8]	; (9001692c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
90016922:	6818      	ldr	r0, [r3, #0]
90016924:	6803      	ldr	r3, [r0, #0]
90016926:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90016928:	4798      	blx	r3
9001692a:	e770      	b.n	9001680e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
9001692c:	24012ae0 	.word	0x24012ae0
90016930:	24012ada 	.word	0x24012ada

90016934 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
90016934:	b570      	push	{r4, r5, r6, lr}
90016936:	9d04      	ldr	r5, [sp, #16]
90016938:	460c      	mov	r4, r1
9001693a:	f89d 6018 	ldrb.w	r6, [sp, #24]
9001693e:	4619      	mov	r1, r3
90016940:	f89d 3014 	ldrb.w	r3, [sp, #20]
90016944:	2a0d      	cmp	r2, #13
90016946:	d820      	bhi.n	9001698a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
90016948:	e8df f002 	tbb	[pc, r2]
9001694c:	18121807 	.word	0x18121807
90016950:	18181818 	.word	0x18181818
90016954:	18181818 	.word	0x18181818
90016958:	1818      	.short	0x1818
9001695a:	6802      	ldr	r2, [r0, #0]
9001695c:	e9cd 3604 	strd	r3, r6, [sp, #16]
90016960:	68d6      	ldr	r6, [r2, #12]
90016962:	462b      	mov	r3, r5
90016964:	460a      	mov	r2, r1
90016966:	4621      	mov	r1, r4
90016968:	46b4      	mov	ip, r6
9001696a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001696e:	4760      	bx	ip
90016970:	462a      	mov	r2, r5
90016972:	4620      	mov	r0, r4
90016974:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016978:	f7ff befe 	b.w	90016778 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001697c:	4b03      	ldr	r3, [pc, #12]	; (9001698c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
9001697e:	f240 21c1 	movw	r1, #705	; 0x2c1
90016982:	4a03      	ldr	r2, [pc, #12]	; (90016990 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
90016984:	4803      	ldr	r0, [pc, #12]	; (90016994 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
90016986:	f008 fc8d 	bl	9001f2a4 <__assert_func>
9001698a:	bd70      	pop	{r4, r5, r6, pc}
9001698c:	900236f7 	.word	0x900236f7
90016990:	90023e4d 	.word	0x90023e4d
90016994:	9002375b 	.word	0x9002375b

90016998 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
90016998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001699c:	b093      	sub	sp, #76	; 0x4c
9001699e:	880f      	ldrh	r7, [r1, #0]
900169a0:	4604      	mov	r4, r0
900169a2:	4688      	mov	r8, r1
900169a4:	4616      	mov	r6, r2
900169a6:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
900169aa:	b12f      	cbz	r7, 900169b8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
900169ac:	4b6f      	ldr	r3, [pc, #444]	; (90016b6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d4>)
900169ae:	21e2      	movs	r1, #226	; 0xe2
900169b0:	4a6f      	ldr	r2, [pc, #444]	; (90016b70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
900169b2:	4870      	ldr	r0, [pc, #448]	; (90016b74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
900169b4:	f008 fc76 	bl	9001f2a4 <__assert_func>
900169b8:	6810      	ldr	r0, [r2, #0]
900169ba:	ad0e      	add	r5, sp, #56	; 0x38
900169bc:	6851      	ldr	r1, [r2, #4]
900169be:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 90016b7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>
900169c2:	c503      	stmia	r5!, {r0, r1}
900169c4:	6818      	ldr	r0, [r3, #0]
900169c6:	ad10      	add	r5, sp, #64	; 0x40
900169c8:	6859      	ldr	r1, [r3, #4]
900169ca:	c503      	stmia	r5!, {r0, r1}
900169cc:	a80e      	add	r0, sp, #56	; 0x38
900169ce:	f7f9 fca9 	bl	90010324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900169d2:	4631      	mov	r1, r6
900169d4:	a810      	add	r0, sp, #64	; 0x40
900169d6:	4e68      	ldr	r6, [pc, #416]	; (90016b78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
900169d8:	f7f9 fc8c 	bl	900102f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900169dc:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
900169e0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
900169e4:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
900169e8:	f8db 0000 	ldr.w	r0, [fp]
900169ec:	fb11 2103 	smlabb	r1, r1, r3, r2
900169f0:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	; 0x44
900169f4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
900169f8:	440c      	add	r4, r1
900169fa:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
900169fe:	440a      	add	r2, r1
90016a00:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
90016a04:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
90016a08:	4413      	add	r3, r2
90016a0a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
90016a0e:	6803      	ldr	r3, [r0, #0]
90016a10:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90016a14:	4798      	blx	r3
90016a16:	2801      	cmp	r0, #1
90016a18:	d11d      	bne.n	90016a56 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
90016a1a:	220b      	movs	r2, #11
90016a1c:	9708      	str	r7, [sp, #32]
90016a1e:	b2ad      	uxth	r5, r5
90016a20:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90016a24:	9207      	str	r2, [sp, #28]
90016a26:	4621      	mov	r1, r4
90016a28:	8832      	ldrh	r2, [r6, #0]
90016a2a:	f8cd a010 	str.w	sl, [sp, #16]
90016a2e:	9502      	str	r5, [sp, #8]
90016a30:	e9cd 0205 	strd	r0, r2, [sp, #20]
90016a34:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
90016a38:	9203      	str	r2, [sp, #12]
90016a3a:	fa1f f289 	uxth.w	r2, r9
90016a3e:	9201      	str	r2, [sp, #4]
90016a40:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
90016a44:	9200      	str	r2, [sp, #0]
90016a46:	4642      	mov	r2, r8
90016a48:	f8db 0000 	ldr.w	r0, [fp]
90016a4c:	f7f7 f94c 	bl	9000dce8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
90016a50:	b013      	add	sp, #76	; 0x4c
90016a52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016a56:	f8db 0000 	ldr.w	r0, [fp]
90016a5a:	6803      	ldr	r3, [r0, #0]
90016a5c:	6a1b      	ldr	r3, [r3, #32]
90016a5e:	4798      	blx	r3
90016a60:	8832      	ldrh	r2, [r6, #0]
90016a62:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
90016a66:	f04f 0e04 	mov.w	lr, #4
90016a6a:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
90016a6e:	4355      	muls	r5, r2
90016a70:	960d      	str	r6, [sp, #52]	; 0x34
90016a72:	fb02 1303 	mla	r3, r2, r3, r1
90016a76:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90016a7a:	eb00 0345 	add.w	r3, r0, r5, lsl #1
90016a7e:	930c      	str	r3, [sp, #48]	; 0x30
90016a80:	ea4f 0349 	mov.w	r3, r9, lsl #1
90016a84:	930b      	str	r3, [sp, #44]	; 0x2c
90016a86:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90016a88:	4298      	cmp	r0, r3
90016a8a:	d269      	bcs.n	90016b60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>
90016a8c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90016a8e:	4621      	mov	r1, r4
90016a90:	eb00 0b03 	add.w	fp, r0, r3
90016a94:	4558      	cmp	r0, fp
90016a96:	460b      	mov	r3, r1
90016a98:	d256      	bcs.n	90016b48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b0>
90016a9a:	781b      	ldrb	r3, [r3, #0]
90016a9c:	3101      	adds	r1, #1
90016a9e:	fb1e e303 	smlabb	r3, lr, r3, lr
90016aa2:	f858 2003 	ldr.w	r2, [r8, r3]
90016aa6:	0e14      	lsrs	r4, r2, #24
90016aa8:	d012      	beq.n	90016ad0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
90016aaa:	2cff      	cmp	r4, #255	; 0xff
90016aac:	ea4f 2612 	mov.w	r6, r2, lsr #8
90016ab0:	d110      	bne.n	90016ad4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
90016ab2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
90016ab6:	d10d      	bne.n	90016ad4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
90016ab8:	0953      	lsrs	r3, r2, #5
90016aba:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
90016abe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90016ac2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90016ac6:	f026 0607 	bic.w	r6, r6, #7
90016aca:	431e      	orrs	r6, r3
90016acc:	4332      	orrs	r2, r6
90016ace:	8002      	strh	r2, [r0, #0]
90016ad0:	3002      	adds	r0, #2
90016ad2:	e7df      	b.n	90016a94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xfc>
90016ad4:	fb0a f404 	mul.w	r4, sl, r4
90016ad8:	8807      	ldrh	r7, [r0, #0]
90016ada:	b2f6      	uxtb	r6, r6
90016adc:	1c63      	adds	r3, r4, #1
90016ade:	123d      	asrs	r5, r7, #8
90016ae0:	eb03 2324 	add.w	r3, r3, r4, asr #8
90016ae4:	f3c2 4407 	ubfx	r4, r2, #16, #8
90016ae8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90016aec:	b2d2      	uxtb	r2, r2
90016aee:	121b      	asrs	r3, r3, #8
90016af0:	fa1f fc83 	uxth.w	ip, r3
90016af4:	43db      	mvns	r3, r3
90016af6:	fb14 f40c 	smulbb	r4, r4, ip
90016afa:	b2db      	uxtb	r3, r3
90016afc:	fb12 f20c 	smulbb	r2, r2, ip
90016b00:	fb05 4503 	mla	r5, r5, r3, r4
90016b04:	10fc      	asrs	r4, r7, #3
90016b06:	fb16 f60c 	smulbb	r6, r6, ip
90016b0a:	00ff      	lsls	r7, r7, #3
90016b0c:	b2ad      	uxth	r5, r5
90016b0e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90016b12:	b2ff      	uxtb	r7, r7
90016b14:	fb04 6603 	mla	r6, r4, r3, r6
90016b18:	fb07 2203 	mla	r2, r7, r3, r2
90016b1c:	1c6b      	adds	r3, r5, #1
90016b1e:	b2b6      	uxth	r6, r6
90016b20:	b292      	uxth	r2, r2
90016b22:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90016b26:	1c54      	adds	r4, r2, #1
90016b28:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90016b2c:	eb04 2412 	add.w	r4, r4, r2, lsr #8
90016b30:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90016b34:	4325      	orrs	r5, r4
90016b36:	1c74      	adds	r4, r6, #1
90016b38:	eb04 2616 	add.w	r6, r4, r6, lsr #8
90016b3c:	0976      	lsrs	r6, r6, #5
90016b3e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90016b42:	4335      	orrs	r5, r6
90016b44:	8005      	strh	r5, [r0, #0]
90016b46:	e7c3      	b.n	90016ad0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
90016b48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90016b4a:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
90016b4e:	881b      	ldrh	r3, [r3, #0]
90016b50:	eba4 0409 	sub.w	r4, r4, r9
90016b54:	eba3 0309 	sub.w	r3, r3, r9
90016b58:	440c      	add	r4, r1
90016b5a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90016b5e:	e792      	b.n	90016a86 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
90016b60:	4b06      	ldr	r3, [pc, #24]	; (90016b7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
90016b62:	6818      	ldr	r0, [r3, #0]
90016b64:	6803      	ldr	r3, [r0, #0]
90016b66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90016b68:	4798      	blx	r3
90016b6a:	e771      	b.n	90016a50 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
90016b6c:	90023502 	.word	0x90023502
90016b70:	90023c1e 	.word	0x90023c1e
90016b74:	9002375b 	.word	0x9002375b
90016b78:	24012ada 	.word	0x24012ada
90016b7c:	24012ae0 	.word	0x24012ae0

90016b80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
90016b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016b84:	4614      	mov	r4, r2
90016b86:	880a      	ldrh	r2, [r1, #0]
90016b88:	b091      	sub	sp, #68	; 0x44
90016b8a:	4607      	mov	r7, r0
90016b8c:	2a02      	cmp	r2, #2
90016b8e:	4689      	mov	r9, r1
90016b90:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
90016b94:	d006      	beq.n	90016ba4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
90016b96:	4b77      	ldr	r3, [pc, #476]	; (90016d74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f4>)
90016b98:	f240 113b 	movw	r1, #315	; 0x13b
90016b9c:	4a76      	ldr	r2, [pc, #472]	; (90016d78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f8>)
90016b9e:	4877      	ldr	r0, [pc, #476]	; (90016d7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1fc>)
90016ba0:	f008 fb80 	bl	9001f2a4 <__assert_func>
90016ba4:	2e00      	cmp	r6, #0
90016ba6:	d04b      	beq.n	90016c40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
90016ba8:	6820      	ldr	r0, [r4, #0]
90016baa:	ad0c      	add	r5, sp, #48	; 0x30
90016bac:	6861      	ldr	r1, [r4, #4]
90016bae:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 90016d84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>
90016bb2:	c503      	stmia	r5!, {r0, r1}
90016bb4:	6818      	ldr	r0, [r3, #0]
90016bb6:	ad0e      	add	r5, sp, #56	; 0x38
90016bb8:	6859      	ldr	r1, [r3, #4]
90016bba:	c503      	stmia	r5!, {r0, r1}
90016bbc:	a80c      	add	r0, sp, #48	; 0x30
90016bbe:	f7f9 fbb1 	bl	90010324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90016bc2:	4621      	mov	r1, r4
90016bc4:	a80e      	add	r0, sp, #56	; 0x38
90016bc6:	f7f9 fb95 	bl	900102f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90016bca:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
90016bce:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
90016bd2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
90016bd6:	f8da 0000 	ldr.w	r0, [sl]
90016bda:	fb11 2103 	smlabb	r1, r1, r3, r2
90016bde:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
90016be2:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
90016be6:	187c      	adds	r4, r7, r1
90016be8:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
90016bec:	4f64      	ldr	r7, [pc, #400]	; (90016d80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
90016bee:	440a      	add	r2, r1
90016bf0:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
90016bf4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
90016bf8:	4413      	add	r3, r2
90016bfa:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
90016bfe:	6803      	ldr	r3, [r0, #0]
90016c00:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90016c04:	4798      	blx	r3
90016c06:	2801      	cmp	r0, #1
90016c08:	d11d      	bne.n	90016c46 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
90016c0a:	2200      	movs	r2, #0
90016c0c:	210b      	movs	r1, #11
90016c0e:	b2ad      	uxth	r5, r5
90016c10:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90016c14:	e9cd 1207 	strd	r1, r2, [sp, #28]
90016c18:	8839      	ldrh	r1, [r7, #0]
90016c1a:	9604      	str	r6, [sp, #16]
90016c1c:	9502      	str	r5, [sp, #8]
90016c1e:	e9cd 2105 	strd	r2, r1, [sp, #20]
90016c22:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
90016c26:	4621      	mov	r1, r4
90016c28:	9203      	str	r2, [sp, #12]
90016c2a:	fa1f f288 	uxth.w	r2, r8
90016c2e:	9201      	str	r2, [sp, #4]
90016c30:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
90016c34:	9200      	str	r2, [sp, #0]
90016c36:	464a      	mov	r2, r9
90016c38:	f8da 0000 	ldr.w	r0, [sl]
90016c3c:	f7f7 f854 	bl	9000dce8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
90016c40:	b011      	add	sp, #68	; 0x44
90016c42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016c46:	f8da 0000 	ldr.w	r0, [sl]
90016c4a:	ea4f 0b48 	mov.w	fp, r8, lsl #1
90016c4e:	6803      	ldr	r3, [r0, #0]
90016c50:	6a1b      	ldr	r3, [r3, #32]
90016c52:	4798      	blx	r3
90016c54:	8839      	ldrh	r1, [r7, #0]
90016c56:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
90016c5a:	2eff      	cmp	r6, #255	; 0xff
90016c5c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
90016c60:	fb05 f501 	mul.w	r5, r5, r1
90016c64:	fb01 2303 	mla	r3, r1, r3, r2
90016c68:	f109 0204 	add.w	r2, r9, #4
90016c6c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90016c70:	d05f      	beq.n	90016d32 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b2>
90016c72:	f1c6 09ff 	rsb	r9, r6, #255	; 0xff
90016c76:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90016c7a:	b2b6      	uxth	r6, r6
90016c7c:	970b      	str	r7, [sp, #44]	; 0x2c
90016c7e:	fa1f f989 	uxth.w	r9, r9
90016c82:	42a8      	cmp	r0, r5
90016c84:	d26f      	bcs.n	90016d66 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
90016c86:	eb00 010b 	add.w	r1, r0, fp
90016c8a:	4288      	cmp	r0, r1
90016c8c:	4623      	mov	r3, r4
90016c8e:	d244      	bcs.n	90016d1a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19a>
90016c90:	8807      	ldrh	r7, [r0, #0]
90016c92:	3401      	adds	r4, #1
90016c94:	781b      	ldrb	r3, [r3, #0]
90016c96:	ea4f 2c27 	mov.w	ip, r7, asr #8
90016c9a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
90016c9e:	ea4f 0ae7 	mov.w	sl, r7, asr #3
90016ca2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90016ca6:	00ff      	lsls	r7, r7, #3
90016ca8:	ea4f 2e23 	mov.w	lr, r3, asr #8
90016cac:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
90016cb0:	fb1c fc09 	smulbb	ip, ip, r9
90016cb4:	b2ff      	uxtb	r7, r7
90016cb6:	fb1a fa09 	smulbb	sl, sl, r9
90016cba:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90016cbe:	fb17 f709 	smulbb	r7, r7, r9
90016cc2:	fb0e ce06 	mla	lr, lr, r6, ip
90016cc6:	ea4f 0ce3 	mov.w	ip, r3, asr #3
90016cca:	00db      	lsls	r3, r3, #3
90016ccc:	fa1f fe8e 	uxth.w	lr, lr
90016cd0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
90016cd4:	b2db      	uxtb	r3, r3
90016cd6:	fb0c ac06 	mla	ip, ip, r6, sl
90016cda:	f10e 0a01 	add.w	sl, lr, #1
90016cde:	fb03 7306 	mla	r3, r3, r6, r7
90016ce2:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
90016ce6:	b29b      	uxth	r3, r3
90016ce8:	f40e 4a78 	and.w	sl, lr, #63488	; 0xf800
90016cec:	fa1f fc8c 	uxth.w	ip, ip
90016cf0:	f103 0e01 	add.w	lr, r3, #1
90016cf4:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
90016cf8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90016cfc:	ea4a 0e03 	orr.w	lr, sl, r3
90016d00:	f10c 0a01 	add.w	sl, ip, #1
90016d04:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
90016d08:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90016d0c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90016d10:	ea4e 0e0c 	orr.w	lr, lr, ip
90016d14:	f820 eb02 	strh.w	lr, [r0], #2
90016d18:	e7b7      	b.n	90016c8a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x10a>
90016d1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90016d1c:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
90016d20:	881b      	ldrh	r3, [r3, #0]
90016d22:	eba1 0108 	sub.w	r1, r1, r8
90016d26:	eba3 0308 	sub.w	r3, r3, r8
90016d2a:	440c      	add	r4, r1
90016d2c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90016d30:	e7a7      	b.n	90016c82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x102>
90016d32:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90016d36:	42a8      	cmp	r0, r5
90016d38:	d215      	bcs.n	90016d66 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
90016d3a:	eb00 010b 	add.w	r1, r0, fp
90016d3e:	4288      	cmp	r0, r1
90016d40:	d206      	bcs.n	90016d50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1d0>
90016d42:	f814 3b01 	ldrb.w	r3, [r4], #1
90016d46:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
90016d4a:	f820 3b02 	strh.w	r3, [r0], #2
90016d4e:	e7f6      	b.n	90016d3e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1be>
90016d50:	883b      	ldrh	r3, [r7, #0]
90016d52:	eba3 0308 	sub.w	r3, r3, r8
90016d56:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90016d5a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90016d5e:	eba3 0308 	sub.w	r3, r3, r8
90016d62:	441c      	add	r4, r3
90016d64:	e7e7      	b.n	90016d36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b6>
90016d66:	4b07      	ldr	r3, [pc, #28]	; (90016d84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
90016d68:	6818      	ldr	r0, [r3, #0]
90016d6a:	6803      	ldr	r3, [r0, #0]
90016d6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90016d6e:	4798      	blx	r3
90016d70:	e766      	b.n	90016c40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
90016d72:	bf00      	nop
90016d74:	900233c0 	.word	0x900233c0
90016d78:	90023a88 	.word	0x90023a88
90016d7c:	9002375b 	.word	0x9002375b
90016d80:	24012ada 	.word	0x24012ada
90016d84:	24012ae0 	.word	0x24012ae0

90016d88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
90016d88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016d8c:	4614      	mov	r4, r2
90016d8e:	880a      	ldrh	r2, [r1, #0]
90016d90:	b091      	sub	sp, #68	; 0x44
90016d92:	4606      	mov	r6, r0
90016d94:	2a01      	cmp	r2, #1
90016d96:	4688      	mov	r8, r1
90016d98:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
90016d9c:	d006      	beq.n	90016dac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
90016d9e:	4b7c      	ldr	r3, [pc, #496]	; (90016f90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x208>)
90016da0:	f240 1197 	movw	r1, #407	; 0x197
90016da4:	4a7b      	ldr	r2, [pc, #492]	; (90016f94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20c>)
90016da6:	487c      	ldr	r0, [pc, #496]	; (90016f98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x210>)
90016da8:	f008 fa7c 	bl	9001f2a4 <__assert_func>
90016dac:	2f00      	cmp	r7, #0
90016dae:	d04b      	beq.n	90016e48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
90016db0:	6820      	ldr	r0, [r4, #0]
90016db2:	ad0c      	add	r5, sp, #48	; 0x30
90016db4:	6861      	ldr	r1, [r4, #4]
90016db6:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 90016fa4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
90016dba:	c503      	stmia	r5!, {r0, r1}
90016dbc:	6818      	ldr	r0, [r3, #0]
90016dbe:	ad0e      	add	r5, sp, #56	; 0x38
90016dc0:	6859      	ldr	r1, [r3, #4]
90016dc2:	c503      	stmia	r5!, {r0, r1}
90016dc4:	a80c      	add	r0, sp, #48	; 0x30
90016dc6:	f7f9 faad 	bl	90010324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90016dca:	4621      	mov	r1, r4
90016dcc:	a80e      	add	r0, sp, #56	; 0x38
90016dce:	f7f9 fa91 	bl	900102f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90016dd2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
90016dd6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
90016dda:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
90016dde:	f8da 0000 	ldr.w	r0, [sl]
90016de2:	fb11 2103 	smlabb	r1, r1, r3, r2
90016de6:	f9bd 503c 	ldrsh.w	r5, [sp, #60]	; 0x3c
90016dea:	f9bd 903e 	ldrsh.w	r9, [sp, #62]	; 0x3e
90016dee:	1874      	adds	r4, r6, r1
90016df0:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
90016df4:	4e69      	ldr	r6, [pc, #420]	; (90016f9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x214>)
90016df6:	440a      	add	r2, r1
90016df8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
90016dfc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
90016e00:	4413      	add	r3, r2
90016e02:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
90016e06:	6803      	ldr	r3, [r0, #0]
90016e08:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90016e0c:	4798      	blx	r3
90016e0e:	2801      	cmp	r0, #1
90016e10:	d11d      	bne.n	90016e4e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
90016e12:	220b      	movs	r2, #11
90016e14:	2100      	movs	r1, #0
90016e16:	b2ad      	uxth	r5, r5
90016e18:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90016e1c:	e9cd 2107 	strd	r2, r1, [sp, #28]
90016e20:	8832      	ldrh	r2, [r6, #0]
90016e22:	4621      	mov	r1, r4
90016e24:	9704      	str	r7, [sp, #16]
90016e26:	9501      	str	r5, [sp, #4]
90016e28:	e9cd 0205 	strd	r0, r2, [sp, #20]
90016e2c:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
90016e30:	9203      	str	r2, [sp, #12]
90016e32:	fa1f f289 	uxth.w	r2, r9
90016e36:	9202      	str	r2, [sp, #8]
90016e38:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
90016e3c:	9200      	str	r2, [sp, #0]
90016e3e:	4642      	mov	r2, r8
90016e40:	f8da 0000 	ldr.w	r0, [sl]
90016e44:	f7f6 ff50 	bl	9000dce8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
90016e48:	b011      	add	sp, #68	; 0x44
90016e4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016e4e:	f8da 0000 	ldr.w	r0, [sl]
90016e52:	6803      	ldr	r3, [r0, #0]
90016e54:	6a1b      	ldr	r3, [r3, #32]
90016e56:	4798      	blx	r3
90016e58:	8832      	ldrh	r2, [r6, #0]
90016e5a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
90016e5e:	2fff      	cmp	r7, #255	; 0xff
90016e60:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
90016e64:	ea4f 0e45 	mov.w	lr, r5, lsl #1
90016e68:	fb09 f902 	mul.w	r9, r9, r2
90016e6c:	fb02 1303 	mla	r3, r2, r3, r1
90016e70:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90016e74:	d056      	beq.n	90016f24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
90016e76:	ea6f 0c07 	mvn.w	ip, r7
90016e7a:	eb00 0949 	add.w	r9, r0, r9, lsl #1
90016e7e:	b2bb      	uxth	r3, r7
90016e80:	960b      	str	r6, [sp, #44]	; 0x2c
90016e82:	fa5f fc8c 	uxtb.w	ip, ip
90016e86:	4548      	cmp	r0, r9
90016e88:	d27b      	bcs.n	90016f82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
90016e8a:	eb00 0a0e 	add.w	sl, r0, lr
90016e8e:	4550      	cmp	r0, sl
90016e90:	4622      	mov	r2, r4
90016e92:	d23d      	bcs.n	90016f10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x188>
90016e94:	7811      	ldrb	r1, [r2, #0]
90016e96:	2604      	movs	r6, #4
90016e98:	2203      	movs	r2, #3
90016e9a:	3401      	adds	r4, #1
90016e9c:	fb12 6101 	smlabb	r1, r2, r1, r6
90016ea0:	8802      	ldrh	r2, [r0, #0]
90016ea2:	eb08 0b01 	add.w	fp, r8, r1
90016ea6:	1217      	asrs	r7, r2, #8
90016ea8:	f818 1001 	ldrb.w	r1, [r8, r1]
90016eac:	f89b 6002 	ldrb.w	r6, [fp, #2]
90016eb0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90016eb4:	f89b b001 	ldrb.w	fp, [fp, #1]
90016eb8:	fb16 f603 	smulbb	r6, r6, r3
90016ebc:	fb1b fb03 	smulbb	fp, fp, r3
90016ec0:	fb07 670c 	mla	r7, r7, ip, r6
90016ec4:	10d6      	asrs	r6, r2, #3
90016ec6:	00d2      	lsls	r2, r2, #3
90016ec8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90016ecc:	b2bf      	uxth	r7, r7
90016ece:	b2d2      	uxtb	r2, r2
90016ed0:	fb06 b60c 	mla	r6, r6, ip, fp
90016ed4:	fb12 f20c 	smulbb	r2, r2, ip
90016ed8:	b2b6      	uxth	r6, r6
90016eda:	fb01 2103 	mla	r1, r1, r3, r2
90016ede:	1c7a      	adds	r2, r7, #1
90016ee0:	f106 0b01 	add.w	fp, r6, #1
90016ee4:	b289      	uxth	r1, r1
90016ee6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90016eea:	1c4a      	adds	r2, r1, #1
90016eec:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90016ef0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90016ef4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90016ef8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90016efc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90016f00:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90016f04:	4317      	orrs	r7, r2
90016f06:	ea47 070b 	orr.w	r7, r7, fp
90016f0a:	f820 7b02 	strh.w	r7, [r0], #2
90016f0e:	e7be      	b.n	90016e8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x106>
90016f10:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90016f12:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
90016f16:	8812      	ldrh	r2, [r2, #0]
90016f18:	1b49      	subs	r1, r1, r5
90016f1a:	1b52      	subs	r2, r2, r5
90016f1c:	440c      	add	r4, r1
90016f1e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90016f22:	e7b0      	b.n	90016e86 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xfe>
90016f24:	eb00 0949 	add.w	r9, r0, r9, lsl #1
90016f28:	2203      	movs	r2, #3
90016f2a:	2704      	movs	r7, #4
90016f2c:	491c      	ldr	r1, [pc, #112]	; (90016fa0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90016f2e:	4548      	cmp	r0, r9
90016f30:	d227      	bcs.n	90016f82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
90016f32:	eb00 0c0e 	add.w	ip, r0, lr
90016f36:	4560      	cmp	r0, ip
90016f38:	4623      	mov	r3, r4
90016f3a:	d219      	bcs.n	90016f70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1e8>
90016f3c:	f893 a000 	ldrb.w	sl, [r3]
90016f40:	3401      	adds	r4, #1
90016f42:	fb12 7a0a 	smlabb	sl, r2, sl, r7
90016f46:	eb08 0b0a 	add.w	fp, r8, sl
90016f4a:	f818 a00a 	ldrb.w	sl, [r8, sl]
90016f4e:	f89b 3002 	ldrb.w	r3, [fp, #2]
90016f52:	f89b b001 	ldrb.w	fp, [fp, #1]
90016f56:	ea01 2303 	and.w	r3, r1, r3, lsl #8
90016f5a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90016f5e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90016f62:	ea43 030b 	orr.w	r3, r3, fp
90016f66:	ea43 03da 	orr.w	r3, r3, sl, lsr #3
90016f6a:	f820 3b02 	strh.w	r3, [r0], #2
90016f6e:	e7e2      	b.n	90016f36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1ae>
90016f70:	8833      	ldrh	r3, [r6, #0]
90016f72:	1b5b      	subs	r3, r3, r5
90016f74:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90016f78:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90016f7c:	1b5b      	subs	r3, r3, r5
90016f7e:	441c      	add	r4, r3
90016f80:	e7d5      	b.n	90016f2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1a6>
90016f82:	4b08      	ldr	r3, [pc, #32]	; (90016fa4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
90016f84:	6818      	ldr	r0, [r3, #0]
90016f86:	6803      	ldr	r3, [r0, #0]
90016f88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90016f8a:	4798      	blx	r3
90016f8c:	e75c      	b.n	90016e48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
90016f8e:	bf00      	nop
90016f90:	9002340e 	.word	0x9002340e
90016f94:	90023b11 	.word	0x90023b11
90016f98:	9002375b 	.word	0x9002375b
90016f9c:	24012ada 	.word	0x24012ada
90016fa0:	fffff800 	.word	0xfffff800
90016fa4:	24012ae0 	.word	0x24012ae0

90016fa8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90016fa8:	b430      	push	{r4, r5}
90016faa:	780d      	ldrb	r5, [r1, #0]
90016fac:	f89d 4008 	ldrb.w	r4, [sp, #8]
90016fb0:	2d01      	cmp	r5, #1
90016fb2:	d00a      	beq.n	90016fca <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
90016fb4:	d305      	bcc.n	90016fc2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
90016fb6:	2d02      	cmp	r5, #2
90016fb8:	d10b      	bne.n	90016fd2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
90016fba:	9402      	str	r4, [sp, #8]
90016fbc:	bc30      	pop	{r4, r5}
90016fbe:	f7ff bddf 	b.w	90016b80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
90016fc2:	9402      	str	r4, [sp, #8]
90016fc4:	bc30      	pop	{r4, r5}
90016fc6:	f7ff bce7 	b.w	90016998 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
90016fca:	9402      	str	r4, [sp, #8]
90016fcc:	bc30      	pop	{r4, r5}
90016fce:	f7ff bedb 	b.w	90016d88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
90016fd2:	bc30      	pop	{r4, r5}
90016fd4:	4770      	bx	lr
	...

90016fd8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90016fd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016fdc:	b087      	sub	sp, #28
90016fde:	4604      	mov	r4, r0
90016fe0:	460e      	mov	r6, r1
90016fe2:	6810      	ldr	r0, [r2, #0]
90016fe4:	6851      	ldr	r1, [r2, #4]
90016fe6:	ad02      	add	r5, sp, #8
90016fe8:	4617      	mov	r7, r2
90016fea:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
90016fee:	f8df 9230 	ldr.w	r9, [pc, #560]	; 90017220 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
90016ff2:	c503      	stmia	r5!, {r0, r1}
90016ff4:	6818      	ldr	r0, [r3, #0]
90016ff6:	ad04      	add	r5, sp, #16
90016ff8:	6859      	ldr	r1, [r3, #4]
90016ffa:	c503      	stmia	r5!, {r0, r1}
90016ffc:	a802      	add	r0, sp, #8
90016ffe:	f7f9 f991 	bl	90010324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90017002:	4639      	mov	r1, r7
90017004:	a804      	add	r0, sp, #16
90017006:	f7f9 f975 	bl	900102f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001700a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001700e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90017012:	f8bd 100c 	ldrh.w	r1, [sp, #12]
90017016:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001701a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001701e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
90017022:	eb04 0441 	add.w	r4, r4, r1, lsl #1
90017026:	440e      	add	r6, r1
90017028:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001702c:	440a      	add	r2, r1
9001702e:	f8ad 2010 	strh.w	r2, [sp, #16]
90017032:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90017036:	4413      	add	r3, r2
90017038:	f8ad 3012 	strh.w	r3, [sp, #18]
9001703c:	4b77      	ldr	r3, [pc, #476]	; (9001721c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001703e:	6818      	ldr	r0, [r3, #0]
90017040:	6803      	ldr	r3, [r0, #0]
90017042:	6a1b      	ldr	r3, [r3, #32]
90017044:	4798      	blx	r3
90017046:	f8b9 b000 	ldrh.w	fp, [r9]
9001704a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001704e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
90017052:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90017056:	fb05 f50b 	mul.w	r5, r5, fp
9001705a:	fb0b 2303 	mla	r3, fp, r3, r2
9001705e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90017062:	ea4f 0348 	mov.w	r3, r8, lsl #1
90017066:	9300      	str	r3, [sp, #0]
90017068:	d068      	beq.n	9001713c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x164>
9001706a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001706e:	4558      	cmp	r0, fp
90017070:	f080 80cc 	bcs.w	9001720c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90017074:	9b00      	ldr	r3, [sp, #0]
90017076:	4631      	mov	r1, r6
90017078:	18c3      	adds	r3, r0, r3
9001707a:	9301      	str	r3, [sp, #4]
9001707c:	9b01      	ldr	r3, [sp, #4]
9001707e:	4298      	cmp	r0, r3
90017080:	d24e      	bcs.n	90017120 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x148>
90017082:	f811 2b01 	ldrb.w	r2, [r1], #1
90017086:	2a00      	cmp	r2, #0
90017088:	d047      	beq.n	9001711a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
9001708a:	fb0a f202 	mul.w	r2, sl, r2
9001708e:	1c53      	adds	r3, r2, #1
90017090:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90017094:	121b      	asrs	r3, r3, #8
90017096:	d040      	beq.n	9001711a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
90017098:	8802      	ldrh	r2, [r0, #0]
9001709a:	b29e      	uxth	r6, r3
9001709c:	f8b4 c000 	ldrh.w	ip, [r4]
900170a0:	43db      	mvns	r3, r3
900170a2:	1215      	asrs	r5, r2, #8
900170a4:	b2db      	uxtb	r3, r3
900170a6:	ea4f 272c 	mov.w	r7, ip, asr #8
900170aa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900170ae:	ea4f 0ee2 	mov.w	lr, r2, asr #3
900170b2:	fb15 f503 	smulbb	r5, r5, r3
900170b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900170ba:	00d2      	lsls	r2, r2, #3
900170bc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
900170c0:	fb07 5706 	mla	r7, r7, r6, r5
900170c4:	ea4f 05ec 	mov.w	r5, ip, asr #3
900170c8:	b2d2      	uxtb	r2, r2
900170ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900170ce:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
900170d2:	fb1e fe03 	smulbb	lr, lr, r3
900170d6:	b2bf      	uxth	r7, r7
900170d8:	fb12 f203 	smulbb	r2, r2, r3
900170dc:	fa5f fc8c 	uxtb.w	ip, ip
900170e0:	fb05 e506 	mla	r5, r5, r6, lr
900170e4:	1c7b      	adds	r3, r7, #1
900170e6:	fb0c 2c06 	mla	ip, ip, r6, r2
900170ea:	b2ad      	uxth	r5, r5
900170ec:	fa1f fc8c 	uxth.w	ip, ip
900170f0:	f105 0e01 	add.w	lr, r5, #1
900170f4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900170f8:	f10c 0601 	add.w	r6, ip, #1
900170fc:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
90017100:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90017104:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
90017108:	096d      	lsrs	r5, r5, #5
9001710a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001710e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90017112:	ea47 070c 	orr.w	r7, r7, ip
90017116:	432f      	orrs	r7, r5
90017118:	8007      	strh	r7, [r0, #0]
9001711a:	3002      	adds	r0, #2
9001711c:	3402      	adds	r4, #2
9001711e:	e7ad      	b.n	9001707c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
90017120:	f8b9 3000 	ldrh.w	r3, [r9]
90017124:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90017128:	eba3 0308 	sub.w	r3, r3, r8
9001712c:	eba6 0608 	sub.w	r6, r6, r8
90017130:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90017134:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90017138:	440e      	add	r6, r1
9001713a:	e798      	b.n	9001706e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001713c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90017140:	42a8      	cmp	r0, r5
90017142:	d263      	bcs.n	9001720c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90017144:	9b00      	ldr	r3, [sp, #0]
90017146:	4631      	mov	r1, r6
90017148:	eb00 0b03 	add.w	fp, r0, r3
9001714c:	4558      	cmp	r0, fp
9001714e:	d24f      	bcs.n	900171f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
90017150:	f811 3b01 	ldrb.w	r3, [r1], #1
90017154:	b12b      	cbz	r3, 90017162 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
90017156:	2bff      	cmp	r3, #255	; 0xff
90017158:	f8b4 e000 	ldrh.w	lr, [r4]
9001715c:	d104      	bne.n	90017168 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x190>
9001715e:	f8a0 e000 	strh.w	lr, [r0]
90017162:	3002      	adds	r0, #2
90017164:	3402      	adds	r4, #2
90017166:	e7f1      	b.n	9001714c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x174>
90017168:	8802      	ldrh	r2, [r0, #0]
9001716a:	b29f      	uxth	r7, r3
9001716c:	43db      	mvns	r3, r3
9001716e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90017172:	1216      	asrs	r6, r2, #8
90017174:	b2db      	uxtb	r3, r3
90017176:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001717a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001717e:	ea4f 0ae2 	mov.w	sl, r2, asr #3
90017182:	00d2      	lsls	r2, r2, #3
90017184:	fb16 f603 	smulbb	r6, r6, r3
90017188:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001718c:	b2d2      	uxtb	r2, r2
9001718e:	fb0c 6c07 	mla	ip, ip, r7, r6
90017192:	ea4f 06ee 	mov.w	r6, lr, asr #3
90017196:	fb1a fa03 	smulbb	sl, sl, r3
9001719a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001719e:	fb12 f303 	smulbb	r3, r2, r3
900171a2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900171a6:	fa5f fe8e 	uxtb.w	lr, lr
900171aa:	fb06 a607 	mla	r6, r6, r7, sl
900171ae:	fa1f fc8c 	uxth.w	ip, ip
900171b2:	fb0e 3e07 	mla	lr, lr, r7, r3
900171b6:	b2b6      	uxth	r6, r6
900171b8:	f10c 0201 	add.w	r2, ip, #1
900171bc:	fa1f fe8e 	uxth.w	lr, lr
900171c0:	f106 0a01 	add.w	sl, r6, #1
900171c4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
900171c8:	f10e 0301 	add.w	r3, lr, #1
900171cc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
900171d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900171d4:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
900171d8:	0976      	lsrs	r6, r6, #5
900171da:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900171de:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
900171e2:	ea4c 0c0e 	orr.w	ip, ip, lr
900171e6:	ea4c 0c06 	orr.w	ip, ip, r6
900171ea:	f8a0 c000 	strh.w	ip, [r0]
900171ee:	e7b8      	b.n	90017162 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
900171f0:	f8b9 3000 	ldrh.w	r3, [r9]
900171f4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
900171f8:	eba3 0308 	sub.w	r3, r3, r8
900171fc:	eba6 0608 	sub.w	r6, r6, r8
90017200:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90017204:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90017208:	440e      	add	r6, r1
9001720a:	e799      	b.n	90017140 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x168>
9001720c:	4b03      	ldr	r3, [pc, #12]	; (9001721c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001720e:	6818      	ldr	r0, [r3, #0]
90017210:	6803      	ldr	r3, [r0, #0]
90017212:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90017214:	4798      	blx	r3
90017216:	b007      	add	sp, #28
90017218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001721c:	24012ae0 	.word	0x24012ae0
90017220:	24012ada 	.word	0x24012ada

90017224 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
90017224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017228:	b089      	sub	sp, #36	; 0x24
9001722a:	4682      	mov	sl, r0
9001722c:	460d      	mov	r5, r1
9001722e:	4691      	mov	r9, r2
90017230:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
90017234:	4698      	mov	r8, r3
90017236:	9c12      	ldr	r4, [sp, #72]	; 0x48
90017238:	b3ae      	cbz	r6, 900172a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
9001723a:	4608      	mov	r0, r1
9001723c:	f7fc fa08 	bl	90013650 <_ZNK8touchgfx6Bitmap8getWidthEv>
90017240:	4607      	mov	r7, r0
90017242:	4628      	mov	r0, r5
90017244:	f7fc fa3e 	bl	900136c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90017248:	f8ad 000e 	strh.w	r0, [sp, #14]
9001724c:	4628      	mov	r0, r5
9001724e:	f8ad 9008 	strh.w	r9, [sp, #8]
90017252:	f8ad 800a 	strh.w	r8, [sp, #10]
90017256:	f8ad 700c 	strh.w	r7, [sp, #12]
9001725a:	f7fc fb8b 	bl	90013974 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001725e:	b178      	cbz	r0, 90017280 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
90017260:	4628      	mov	r0, r5
90017262:	f7fc fb87 	bl	90013974 <_ZNK8touchgfx6Bitmap9getFormatEv>
90017266:	2802      	cmp	r0, #2
90017268:	d00a      	beq.n	90017280 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
9001726a:	4628      	mov	r0, r5
9001726c:	f7fc fb82 	bl	90013974 <_ZNK8touchgfx6Bitmap9getFormatEv>
90017270:	280b      	cmp	r0, #11
90017272:	d005      	beq.n	90017280 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
90017274:	4b69      	ldr	r3, [pc, #420]	; (9001741c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
90017276:	214b      	movs	r1, #75	; 0x4b
90017278:	4a69      	ldr	r2, [pc, #420]	; (90017420 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
9001727a:	486a      	ldr	r0, [pc, #424]	; (90017424 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
9001727c:	f008 f812 	bl	9001f2a4 <__assert_func>
90017280:	4628      	mov	r0, r5
90017282:	f7fc faed 	bl	90013860 <_ZNK8touchgfx6Bitmap7getDataEv>
90017286:	4607      	mov	r7, r0
90017288:	4628      	mov	r0, r5
9001728a:	f7fc fb1b 	bl	900138c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001728e:	4681      	mov	r9, r0
90017290:	4628      	mov	r0, r5
90017292:	f7fc fb6f 	bl	90013974 <_ZNK8touchgfx6Bitmap9getFormatEv>
90017296:	2802      	cmp	r0, #2
90017298:	d108      	bne.n	900172ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9001729a:	4633      	mov	r3, r6
9001729c:	4622      	mov	r2, r4
9001729e:	a902      	add	r1, sp, #8
900172a0:	4638      	mov	r0, r7
900172a2:	f7ff fa69 	bl	90016778 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900172a6:	b009      	add	sp, #36	; 0x24
900172a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900172ac:	4628      	mov	r0, r5
900172ae:	f7fc fb61 	bl	90013974 <_ZNK8touchgfx6Bitmap9getFormatEv>
900172b2:	280b      	cmp	r0, #11
900172b4:	d107      	bne.n	900172c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
900172b6:	9600      	str	r6, [sp, #0]
900172b8:	4623      	mov	r3, r4
900172ba:	aa02      	add	r2, sp, #8
900172bc:	4649      	mov	r1, r9
900172be:	4638      	mov	r0, r7
900172c0:	f7ff fe72 	bl	90016fa8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
900172c4:	e7ef      	b.n	900172a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
900172c6:	4628      	mov	r0, r5
900172c8:	f7fc fa90 	bl	900137ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
900172cc:	b950      	cbnz	r0, 900172e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
900172ce:	f8da 3000 	ldr.w	r3, [sl]
900172d2:	aa02      	add	r2, sp, #8
900172d4:	4639      	mov	r1, r7
900172d6:	e9cd 6000 	strd	r6, r0, [sp]
900172da:	4650      	mov	r0, sl
900172dc:	68dd      	ldr	r5, [r3, #12]
900172de:	4623      	mov	r3, r4
900172e0:	47a8      	blx	r5
900172e2:	e7e0      	b.n	900172a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
900172e4:	f10d 0818 	add.w	r8, sp, #24
900172e8:	4629      	mov	r1, r5
900172ea:	ad04      	add	r5, sp, #16
900172ec:	4640      	mov	r0, r8
900172ee:	f7fc fa23 	bl	90013738 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900172f2:	e898 0003 	ldmia.w	r8, {r0, r1}
900172f6:	e885 0003 	stmia.w	r5, {r0, r1}
900172fa:	4628      	mov	r0, r5
900172fc:	4621      	mov	r1, r4
900172fe:	f7f6 f8a9 	bl	9000d454 <_ZN8touchgfx4RectaNERKS0_>
90017302:	4628      	mov	r0, r5
90017304:	f7f6 f8e9 	bl	9000d4da <_ZNK8touchgfx4Rect7isEmptyEv>
90017308:	b138      	cbz	r0, 9001731a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
9001730a:	4623      	mov	r3, r4
9001730c:	9600      	str	r6, [sp, #0]
9001730e:	aa02      	add	r2, sp, #8
90017310:	4649      	mov	r1, r9
90017312:	4638      	mov	r0, r7
90017314:	f7ff fe60 	bl	90016fd8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90017318:	e7c5      	b.n	900172a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
9001731a:	f8da 3000 	ldr.w	r3, [sl]
9001731e:	aa02      	add	r2, sp, #8
90017320:	4639      	mov	r1, r7
90017322:	e9cd 6000 	strd	r6, r0, [sp]
90017326:	4650      	mov	r0, sl
90017328:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001732c:	462b      	mov	r3, r5
9001732e:	47d8      	blx	fp
90017330:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90017334:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90017338:	4293      	cmp	r3, r2
9001733a:	dd13      	ble.n	90017364 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
9001733c:	f9b4 0000 	ldrsh.w	r0, [r4]
90017340:	1a9b      	subs	r3, r3, r2
90017342:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90017346:	f8ad 0018 	strh.w	r0, [sp, #24]
9001734a:	4638      	mov	r0, r7
9001734c:	f8ad 201a 	strh.w	r2, [sp, #26]
90017350:	aa02      	add	r2, sp, #8
90017352:	f8ad 101c 	strh.w	r1, [sp, #28]
90017356:	4649      	mov	r1, r9
90017358:	f8ad 301e 	strh.w	r3, [sp, #30]
9001735c:	4643      	mov	r3, r8
9001735e:	9600      	str	r6, [sp, #0]
90017360:	f7ff fe3a 	bl	90016fd8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90017364:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90017368:	f9b4 2000 	ldrsh.w	r2, [r4]
9001736c:	4293      	cmp	r3, r2
9001736e:	dd13      	ble.n	90017398 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
90017370:	1a9b      	subs	r3, r3, r2
90017372:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90017376:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001737a:	f8ad 2018 	strh.w	r2, [sp, #24]
9001737e:	aa02      	add	r2, sp, #8
90017380:	f8ad 001a 	strh.w	r0, [sp, #26]
90017384:	4638      	mov	r0, r7
90017386:	f8ad 301c 	strh.w	r3, [sp, #28]
9001738a:	4643      	mov	r3, r8
9001738c:	f8ad 101e 	strh.w	r1, [sp, #30]
90017390:	4649      	mov	r1, r9
90017392:	9600      	str	r6, [sp, #0]
90017394:	f7ff fe20 	bl	90016fd8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90017398:	88a2      	ldrh	r2, [r4, #4]
9001739a:	8823      	ldrh	r3, [r4, #0]
9001739c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
900173a0:	4413      	add	r3, r2
900173a2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900173a6:	440a      	add	r2, r1
900173a8:	b29b      	uxth	r3, r3
900173aa:	b292      	uxth	r2, r2
900173ac:	b218      	sxth	r0, r3
900173ae:	b211      	sxth	r1, r2
900173b0:	4288      	cmp	r0, r1
900173b2:	dd13      	ble.n	900173dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
900173b4:	1a9b      	subs	r3, r3, r2
900173b6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
900173ba:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
900173be:	aa02      	add	r2, sp, #8
900173c0:	f8ad 1018 	strh.w	r1, [sp, #24]
900173c4:	4649      	mov	r1, r9
900173c6:	f8ad 301c 	strh.w	r3, [sp, #28]
900173ca:	4643      	mov	r3, r8
900173cc:	f8ad 001e 	strh.w	r0, [sp, #30]
900173d0:	4638      	mov	r0, r7
900173d2:	9600      	str	r6, [sp, #0]
900173d4:	f8ad 501a 	strh.w	r5, [sp, #26]
900173d8:	f7ff fdfe 	bl	90016fd8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900173dc:	88e2      	ldrh	r2, [r4, #6]
900173de:	8863      	ldrh	r3, [r4, #2]
900173e0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
900173e4:	4413      	add	r3, r2
900173e6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
900173ea:	440a      	add	r2, r1
900173ec:	b29b      	uxth	r3, r3
900173ee:	b292      	uxth	r2, r2
900173f0:	b218      	sxth	r0, r3
900173f2:	b211      	sxth	r1, r2
900173f4:	4288      	cmp	r0, r1
900173f6:	f77f af56 	ble.w	900172a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
900173fa:	f9b4 5000 	ldrsh.w	r5, [r4]
900173fe:	1a9b      	subs	r3, r3, r2
90017400:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90017404:	f8ad 301e 	strh.w	r3, [sp, #30]
90017408:	4643      	mov	r3, r8
9001740a:	f8ad 5018 	strh.w	r5, [sp, #24]
9001740e:	f8ad 101a 	strh.w	r1, [sp, #26]
90017412:	f8ad 001c 	strh.w	r0, [sp, #28]
90017416:	9600      	str	r6, [sp, #0]
90017418:	e779      	b.n	9001730e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
9001741a:	bf00      	nop
9001741c:	9002345c 	.word	0x9002345c
90017420:	90023b9a 	.word	0x90023b9a
90017424:	9002375b 	.word	0x9002375b

90017428 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90017428:	b508      	push	{r3, lr}
9001742a:	b180      	cbz	r0, 9001744e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
9001742c:	2902      	cmp	r1, #2
9001742e:	d014      	beq.n	9001745a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
90017430:	2903      	cmp	r1, #3
90017432:	d01d      	beq.n	90017470 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
90017434:	2901      	cmp	r1, #1
90017436:	d101      	bne.n	9001743c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
90017438:	2001      	movs	r0, #1
9001743a:	bd08      	pop	{r3, pc}
9001743c:	4b0e      	ldr	r3, [pc, #56]	; (90017478 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001743e:	8818      	ldrh	r0, [r3, #0]
90017440:	b990      	cbnz	r0, 90017468 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90017442:	4b0e      	ldr	r3, [pc, #56]	; (9001747c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
90017444:	2154      	movs	r1, #84	; 0x54
90017446:	4a0e      	ldr	r2, [pc, #56]	; (90017480 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
90017448:	480e      	ldr	r0, [pc, #56]	; (90017484 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
9001744a:	f007 ff2b 	bl	9001f2a4 <__assert_func>
9001744e:	2902      	cmp	r1, #2
90017450:	d00e      	beq.n	90017470 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
90017452:	2903      	cmp	r1, #3
90017454:	d0f2      	beq.n	9001743c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
90017456:	2901      	cmp	r1, #1
90017458:	d1ee      	bne.n	90017438 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
9001745a:	4b07      	ldr	r3, [pc, #28]	; (90017478 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001745c:	8818      	ldrh	r0, [r3, #0]
9001745e:	2800      	cmp	r0, #0
90017460:	d0ef      	beq.n	90017442 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
90017462:	f3c0 000e 	ubfx	r0, r0, #0, #15
90017466:	e7e8      	b.n	9001743a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
90017468:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001746c:	4240      	negs	r0, r0
9001746e:	e7e4      	b.n	9001743a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
90017470:	f04f 30ff 	mov.w	r0, #4294967295
90017474:	e7e1      	b.n	9001743a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
90017476:	bf00      	nop
90017478:	24012ada 	.word	0x24012ada
9001747c:	9002378d 	.word	0x9002378d
90017480:	90023d17 	.word	0x90023d17
90017484:	900237cf 	.word	0x900237cf

90017488 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90017488:	b508      	push	{r3, lr}
9001748a:	b180      	cbz	r0, 900174ae <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
9001748c:	2902      	cmp	r1, #2
9001748e:	d014      	beq.n	900174ba <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
90017490:	2903      	cmp	r1, #3
90017492:	d018      	beq.n	900174c6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
90017494:	2901      	cmp	r1, #1
90017496:	d001      	beq.n	9001749c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
90017498:	2001      	movs	r0, #1
9001749a:	e013      	b.n	900174c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
9001749c:	4b0e      	ldr	r3, [pc, #56]	; (900174d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001749e:	8818      	ldrh	r0, [r3, #0]
900174a0:	b970      	cbnz	r0, 900174c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
900174a2:	4b0e      	ldr	r3, [pc, #56]	; (900174dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
900174a4:	2154      	movs	r1, #84	; 0x54
900174a6:	4a0e      	ldr	r2, [pc, #56]	; (900174e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
900174a8:	480e      	ldr	r0, [pc, #56]	; (900174e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
900174aa:	f007 fefb 	bl	9001f2a4 <__assert_func>
900174ae:	2902      	cmp	r1, #2
900174b0:	d009      	beq.n	900174c6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
900174b2:	2903      	cmp	r1, #3
900174b4:	d0f0      	beq.n	90017498 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
900174b6:	2901      	cmp	r1, #1
900174b8:	d1f0      	bne.n	9001749c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
900174ba:	f04f 30ff 	mov.w	r0, #4294967295
900174be:	e001      	b.n	900174c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
900174c0:	f3c0 000e 	ubfx	r0, r0, #0, #15
900174c4:	bd08      	pop	{r3, pc}
900174c6:	4b04      	ldr	r3, [pc, #16]	; (900174d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
900174c8:	8818      	ldrh	r0, [r3, #0]
900174ca:	2800      	cmp	r0, #0
900174cc:	d0e9      	beq.n	900174a2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
900174ce:	f3c0 000e 	ubfx	r0, r0, #0, #15
900174d2:	4240      	negs	r0, r0
900174d4:	e7f6      	b.n	900174c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
900174d6:	bf00      	nop
900174d8:	24012ada 	.word	0x24012ada
900174dc:	9002378d 	.word	0x9002378d
900174e0:	90023d17 	.word	0x90023d17
900174e4:	900237cf 	.word	0x900237cf

900174e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
900174e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900174ec:	b099      	sub	sp, #100	; 0x64
900174ee:	910b      	str	r1, [sp, #44]	; 0x2c
900174f0:	a914      	add	r1, sp, #80	; 0x50
900174f2:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
900174f6:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
900174fa:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
900174fe:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
90017502:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
90017506:	e881 000c 	stmia.w	r1, {r2, r3}
9001750a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
9001750e:	f89d 10a4 	ldrb.w	r1, [sp, #164]	; 0xa4
90017512:	9308      	str	r3, [sp, #32]
90017514:	910c      	str	r1, [sp, #48]	; 0x30
90017516:	f89d 10b0 	ldrb.w	r1, [sp, #176]	; 0xb0
9001751a:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
9001751e:	910d      	str	r1, [sp, #52]	; 0x34
90017520:	f893 b00d 	ldrb.w	fp, [r3, #13]
90017524:	7998      	ldrb	r0, [r3, #6]
90017526:	ea4f 114b 	mov.w	r1, fp, lsl #5
9001752a:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001752e:	4301      	orrs	r1, r0
90017530:	9109      	str	r1, [sp, #36]	; 0x24
90017532:	f000 81e4 	beq.w	900178fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
90017536:	ea4f 1b0b 	mov.w	fp, fp, lsl #4
9001753a:	79d9      	ldrb	r1, [r3, #7]
9001753c:	f40b 7b80 	and.w	fp, fp, #256	; 0x100
90017540:	ea51 0b0b 	orrs.w	fp, r1, fp
90017544:	f000 81db 	beq.w	900178fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
90017548:	f993 3009 	ldrsb.w	r3, [r3, #9]
9001754c:	b29b      	uxth	r3, r3
9001754e:	2e00      	cmp	r6, #0
90017550:	f000 80fd 	beq.w	9001774e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x266>
90017554:	1af6      	subs	r6, r6, r3
90017556:	b2b6      	uxth	r6, r6
90017558:	0433      	lsls	r3, r6, #16
9001755a:	d502      	bpl.n	90017562 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001755c:	1bad      	subs	r5, r5, r6
9001755e:	2600      	movs	r6, #0
90017560:	b22d      	sxth	r5, r5
90017562:	f9b2 1000 	ldrsh.w	r1, [r2]
90017566:	a814      	add	r0, sp, #80	; 0x50
90017568:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
9001756c:	428d      	cmp	r5, r1
9001756e:	b28b      	uxth	r3, r1
90017570:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
90017574:	bfbf      	itttt	lt
90017576:	18f6      	addlt	r6, r6, r3
90017578:	1b75      	sublt	r5, r6, r5
9001757a:	b2ae      	uxthlt	r6, r5
9001757c:	460d      	movlt	r5, r1
9001757e:	8891      	ldrh	r1, [r2, #4]
90017580:	440b      	add	r3, r1
90017582:	4629      	mov	r1, r5
90017584:	b21b      	sxth	r3, r3
90017586:	9311      	str	r3, [sp, #68]	; 0x44
90017588:	8853      	ldrh	r3, [r2, #2]
9001758a:	88d2      	ldrh	r2, [r2, #6]
9001758c:	4413      	add	r3, r2
9001758e:	9a08      	ldr	r2, [sp, #32]
90017590:	b21b      	sxth	r3, r3
90017592:	9310      	str	r3, [sp, #64]	; 0x40
90017594:	4bb1      	ldr	r3, [pc, #708]	; (9001785c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>)
90017596:	f893 9000 	ldrb.w	r9, [r3]
9001759a:	f109 3cff 	add.w	ip, r9, #4294967295
9001759e:	f1dc 0300 	rsbs	r3, ip, #0
900175a2:	eb43 030c 	adc.w	r3, r3, ip
900175a6:	930f      	str	r3, [sp, #60]	; 0x3c
900175a8:	4653      	mov	r3, sl
900175aa:	f7f8 fd14 	bl	9000ffd6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
900175ae:	4629      	mov	r1, r5
900175b0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
900175b4:	4653      	mov	r3, sl
900175b6:	9a08      	ldr	r2, [sp, #32]
900175b8:	a814      	add	r0, sp, #80	; 0x50
900175ba:	f7f8 fd24 	bl	90010006 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
900175be:	a918      	add	r1, sp, #96	; 0x60
900175c0:	f821 0d02 	strh.w	r0, [r1, #-2]!
900175c4:	a817      	add	r0, sp, #92	; 0x5c
900175c6:	f7f8 fe7f 	bl	900102c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
900175ca:	f1ba 0f00 	cmp.w	sl, #0
900175ce:	f040 80c1 	bne.w	90017754 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26c>
900175d2:	f1b9 0f01 	cmp.w	r9, #1
900175d6:	f040 80c5 	bne.w	90017764 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27c>
900175da:	2301      	movs	r3, #1
900175dc:	f1b8 0f01 	cmp.w	r8, #1
900175e0:	fa03 f308 	lsl.w	r3, r3, r8
900175e4:	f103 33ff 	add.w	r3, r3, #4294967295
900175e8:	b2db      	uxtb	r3, r3
900175ea:	930a      	str	r3, [sp, #40]	; 0x28
900175ec:	f000 80e5 	beq.w	900177ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d2>
900175f0:	f1b8 0f02 	cmp.w	r8, #2
900175f4:	f000 80e4 	beq.w	900177c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d8>
900175f8:	f1b8 0f04 	cmp.w	r8, #4
900175fc:	bf15      	itete	ne
900175fe:	46c1      	movne	r9, r8
90017600:	f04f 0904 	moveq.w	r9, #4
90017604:	2301      	movne	r3, #1
90017606:	2311      	moveq	r3, #17
90017608:	9307      	str	r3, [sp, #28]
9001760a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001760c:	b153      	cbz	r3, 90017624 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
9001760e:	2408      	movs	r4, #8
90017610:	9a09      	ldr	r2, [sp, #36]	; 0x24
90017612:	fb94 f3f9 	sdiv	r3, r4, r9
90017616:	1e5c      	subs	r4, r3, #1
90017618:	4414      	add	r4, r2
9001761a:	fb94 f4f3 	sdiv	r4, r4, r3
9001761e:	fb14 f403 	smulbb	r4, r4, r3
90017622:	b2a4      	uxth	r4, r4
90017624:	b906      	cbnz	r6, 90017628 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
90017626:	b16f      	cbz	r7, 90017644 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15c>
90017628:	fb07 6304 	mla	r3, r7, r4, r6
9001762c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
9001762e:	4639      	mov	r1, r7
90017630:	fb08 f303 	mul.w	r3, r8, r3
90017634:	f003 0707 	and.w	r7, r3, #7
90017638:	eb02 03d3 	add.w	r3, r2, r3, lsr #3
9001763c:	9328      	str	r3, [sp, #160]	; 0xa0
9001763e:	ebab 0301 	sub.w	r3, fp, r1
90017642:	930e      	str	r3, [sp, #56]	; 0x38
90017644:	4651      	mov	r1, sl
90017646:	980f      	ldr	r0, [sp, #60]	; 0x3c
90017648:	f7ff feee 	bl	90017428 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001764c:	4651      	mov	r1, sl
9001764e:	4683      	mov	fp, r0
90017650:	980f      	ldr	r0, [sp, #60]	; 0x3c
90017652:	f7ff ff19 	bl	90017488 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90017656:	9a08      	ldr	r2, [sp, #32]
90017658:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001765a:	4682      	mov	sl, r0
9001765c:	1a9b      	subs	r3, r3, r2
9001765e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90017660:	429a      	cmp	r2, r3
90017662:	bfa8      	it	ge
90017664:	461a      	movge	r2, r3
90017666:	2a00      	cmp	r2, #0
90017668:	9208      	str	r2, [sp, #32]
9001766a:	f340 8148 	ble.w	900178fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
9001766e:	1bad      	subs	r5, r5, r6
90017670:	9b11      	ldr	r3, [sp, #68]	; 0x44
90017672:	1b5d      	subs	r5, r3, r5
90017674:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017676:	429d      	cmp	r5, r3
90017678:	bfd4      	ite	le
9001767a:	ebc6 0605 	rsble	r6, r6, r5
9001767e:	ebc6 0603 	rsbgt	r6, r6, r3
90017682:	2e00      	cmp	r6, #0
90017684:	f340 813b 	ble.w	900178fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
90017688:	1ba4      	subs	r4, r4, r6
9001768a:	fb09 f304 	mul.w	r3, r9, r4
9001768e:	930e      	str	r3, [sp, #56]	; 0x38
90017690:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90017692:	2b00      	cmp	r3, #0
90017694:	f040 809d 	bne.w	900177d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ea>
90017698:	4b71      	ldr	r3, [pc, #452]	; (90017860 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
9001769a:	6818      	ldr	r0, [r3, #0]
9001769c:	6803      	ldr	r3, [r0, #0]
9001769e:	6a1b      	ldr	r3, [r3, #32]
900176a0:	4798      	blx	r3
900176a2:	4970      	ldr	r1, [pc, #448]	; (90017864 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
900176a4:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
900176a8:	880c      	ldrh	r4, [r1, #0]
900176aa:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	; 0x5c
900176ae:	fb04 1303 	mla	r3, r4, r3, r1
900176b2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900176b6:	9309      	str	r3, [sp, #36]	; 0x24
900176b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900176ba:	7819      	ldrb	r1, [r3, #0]
900176bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900176be:	4139      	asrs	r1, r7
900176c0:	0a1b      	lsrs	r3, r3, #8
900176c2:	b2c9      	uxtb	r1, r1
900176c4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900176c8:	930f      	str	r3, [sp, #60]	; 0x3c
900176ca:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900176cc:	08db      	lsrs	r3, r3, #3
900176ce:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900176d2:	9310      	str	r3, [sp, #64]	; 0x40
900176d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900176d6:	00db      	lsls	r3, r3, #3
900176d8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900176dc:	9311      	str	r3, [sp, #68]	; 0x44
900176de:	ea4f 034b 	mov.w	r3, fp, lsl #1
900176e2:	fb0b ab16 	mls	fp, fp, r6, sl
900176e6:	fb03 fa06 	mul.w	sl, r3, r6
900176ea:	930c      	str	r3, [sp, #48]	; 0x30
900176ec:	eb0a 034b 	add.w	r3, sl, fp, lsl #1
900176f0:	9312      	str	r3, [sp, #72]	; 0x48
900176f2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900176f4:	b29b      	uxth	r3, r3
900176f6:	9313      	str	r3, [sp, #76]	; 0x4c
900176f8:	9b08      	ldr	r3, [sp, #32]
900176fa:	3b01      	subs	r3, #1
900176fc:	9308      	str	r3, [sp, #32]
900176fe:	3301      	adds	r3, #1
90017700:	f000 80c4 	beq.w	9001788c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
90017704:	46b2      	mov	sl, r6
90017706:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
9001770a:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001770e:	f0c0 80ab 	bcc.w	90017868 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
90017712:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90017714:	400b      	ands	r3, r1
90017716:	d00a      	beq.n	9001772e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x246>
90017718:	9807      	ldr	r0, [sp, #28]
9001771a:	fb13 f300 	smulbb	r3, r3, r0
9001771e:	2bfe      	cmp	r3, #254	; 0xfe
90017720:	dd59      	ble.n	900177d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ee>
90017722:	980d      	ldr	r0, [sp, #52]	; 0x34
90017724:	28ff      	cmp	r0, #255	; 0xff
90017726:	d156      	bne.n	900177d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ee>
90017728:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001772a:	f8ae 4000 	strh.w	r4, [lr]
9001772e:	4447      	add	r7, r8
90017730:	b2bf      	uxth	r7, r7
90017732:	2f07      	cmp	r7, #7
90017734:	bf89      	itett	hi
90017736:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
90017738:	fa41 f109 	asrls.w	r1, r1, r9
9001773c:	2700      	movhi	r7, #0
9001773e:	7859      	ldrbhi	r1, [r3, #1]
90017740:	bf8a      	itet	hi
90017742:	3301      	addhi	r3, #1
90017744:	b2c9      	uxtbls	r1, r1
90017746:	9328      	strhi	r3, [sp, #160]	; 0xa0
90017748:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001774a:	449e      	add	lr, r3
9001774c:	e7dd      	b.n	9001770a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x222>
9001774e:	441d      	add	r5, r3
90017750:	b22d      	sxth	r5, r5
90017752:	e706      	b.n	90017562 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90017754:	f1ba 0f01 	cmp.w	sl, #1
90017758:	f47f af3f 	bne.w	900175da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
9001775c:	f1b9 0f01 	cmp.w	r9, #1
90017760:	f47f af3b 	bne.w	900175da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
90017764:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 90017860 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
90017768:	f8d9 0000 	ldr.w	r0, [r9]
9001776c:	6803      	ldr	r3, [r0, #0]
9001776e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90017770:	4798      	blx	r3
90017772:	f010 0380 	ands.w	r3, r0, #128	; 0x80
90017776:	464a      	mov	r2, r9
90017778:	d006      	beq.n	90017788 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a0>
9001777a:	f1b8 0f04 	cmp.w	r8, #4
9001777e:	d11a      	bne.n	900177b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
90017780:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90017782:	3300      	adds	r3, #0
90017784:	bf18      	it	ne
90017786:	2301      	movne	r3, #1
90017788:	05c0      	lsls	r0, r0, #23
9001778a:	f140 8088 	bpl.w	9001789e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b6>
9001778e:	f1b8 0f08 	cmp.w	r8, #8
90017792:	f040 8084 	bne.w	9001789e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b6>
90017796:	2b00      	cmp	r3, #0
90017798:	bf14      	ite	ne
9001779a:	2180      	movne	r1, #128	; 0x80
9001779c:	f44f 7180 	moveq.w	r1, #256	; 0x100
900177a0:	2e00      	cmp	r6, #0
900177a2:	f040 80af 	bne.w	90017904 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x41c>
900177a6:	2f00      	cmp	r7, #0
900177a8:	f000 8083 	beq.w	900178b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
900177ac:	23ff      	movs	r3, #255	; 0xff
900177ae:	46c1      	mov	r9, r8
900177b0:	930a      	str	r3, [sp, #40]	; 0x28
900177b2:	2301      	movs	r3, #1
900177b4:	e728      	b.n	90017608 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x120>
900177b6:	2300      	movs	r3, #0
900177b8:	e7e6      	b.n	90017788 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a0>
900177ba:	46c1      	mov	r9, r8
900177bc:	23ff      	movs	r3, #255	; 0xff
900177be:	e723      	b.n	90017608 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x120>
900177c0:	46c1      	mov	r9, r8
900177c2:	2355      	movs	r3, #85	; 0x55
900177c4:	e720      	b.n	90017608 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x120>
900177c6:	23ff      	movs	r3, #255	; 0xff
900177c8:	46c1      	mov	r9, r8
900177ca:	930a      	str	r3, [sp, #40]	; 0x28
900177cc:	2301      	movs	r3, #1
900177ce:	9307      	str	r3, [sp, #28]
900177d0:	e71d      	b.n	9001760e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x126>
900177d2:	980b      	ldr	r0, [sp, #44]	; 0x2c
900177d4:	e765      	b.n	900176a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ba>
900177d6:	980d      	ldr	r0, [sp, #52]	; 0x34
900177d8:	f8be 5000 	ldrh.w	r5, [lr]
900177dc:	fb10 f303 	smulbb	r3, r0, r3
900177e0:	9a10      	ldr	r2, [sp, #64]	; 0x40
900177e2:	122c      	asrs	r4, r5, #8
900177e4:	b29b      	uxth	r3, r3
900177e6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900177ea:	1c58      	adds	r0, r3, #1
900177ec:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900177f0:	980f      	ldr	r0, [sp, #60]	; 0x3c
900177f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
900177f6:	fa1f fc83 	uxth.w	ip, r3
900177fa:	43db      	mvns	r3, r3
900177fc:	fb10 f00c 	smulbb	r0, r0, ip
90017800:	b2db      	uxtb	r3, r3
90017802:	fb1c fb02 	smulbb	fp, ip, r2
90017806:	9a11      	ldr	r2, [sp, #68]	; 0x44
90017808:	fb04 0403 	mla	r4, r4, r3, r0
9001780c:	10e8      	asrs	r0, r5, #3
9001780e:	fb1c fc02 	smulbb	ip, ip, r2
90017812:	00ed      	lsls	r5, r5, #3
90017814:	b2a4      	uxth	r4, r4
90017816:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001781a:	b2ed      	uxtb	r5, r5
9001781c:	fb00 b003 	mla	r0, r0, r3, fp
90017820:	fb05 cc03 	mla	ip, r5, r3, ip
90017824:	1c63      	adds	r3, r4, #1
90017826:	b280      	uxth	r0, r0
90017828:	fa1f fc8c 	uxth.w	ip, ip
9001782c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90017830:	f10c 0b01 	add.w	fp, ip, #1
90017834:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90017838:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
9001783c:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90017840:	ea44 040b 	orr.w	r4, r4, fp
90017844:	f100 0b01 	add.w	fp, r0, #1
90017848:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9001784c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90017850:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90017854:	ea44 040b 	orr.w	r4, r4, fp
90017858:	e767      	b.n	9001772a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x242>
9001785a:	bf00      	nop
9001785c:	24012ad8 	.word	0x24012ad8
90017860:	24012ae0 	.word	0x24012ae0
90017864:	24012ada 	.word	0x24012ada
90017868:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001786a:	b153      	cbz	r3, 90017882 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
9001786c:	441f      	add	r7, r3
9001786e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90017870:	b2bf      	uxth	r7, r7
90017872:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
90017876:	f007 0707 	and.w	r7, r7, #7
9001787a:	7819      	ldrb	r1, [r3, #0]
9001787c:	9328      	str	r3, [sp, #160]	; 0xa0
9001787e:	4139      	asrs	r1, r7
90017880:	b2c9      	uxtb	r1, r1
90017882:	9a09      	ldr	r2, [sp, #36]	; 0x24
90017884:	9b12      	ldr	r3, [sp, #72]	; 0x48
90017886:	441a      	add	r2, r3
90017888:	9209      	str	r2, [sp, #36]	; 0x24
9001788a:	e735      	b.n	900176f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x210>
9001788c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001788e:	2b00      	cmp	r3, #0
90017890:	d135      	bne.n	900178fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
90017892:	4b21      	ldr	r3, [pc, #132]	; (90017918 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x430>)
90017894:	6818      	ldr	r0, [r3, #0]
90017896:	6803      	ldr	r3, [r0, #0]
90017898:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9001789a:	4798      	blx	r3
9001789c:	e02f      	b.n	900178fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
9001789e:	2b00      	cmp	r3, #0
900178a0:	f43f ae9b 	beq.w	900175da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
900178a4:	2e00      	cmp	r6, #0
900178a6:	f47f ae98 	bne.w	900175da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
900178aa:	2f00      	cmp	r7, #0
900178ac:	f47f ae95 	bne.w	900175da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
900178b0:	2180      	movs	r1, #128	; 0x80
900178b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900178b4:	9811      	ldr	r0, [sp, #68]	; 0x44
900178b6:	18eb      	adds	r3, r5, r3
900178b8:	4283      	cmp	r3, r0
900178ba:	f73f ae8e 	bgt.w	900175da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
900178be:	9b08      	ldr	r3, [sp, #32]
900178c0:	9810      	ldr	r0, [sp, #64]	; 0x40
900178c2:	445b      	add	r3, fp
900178c4:	4283      	cmp	r3, r0
900178c6:	f73f ae88 	bgt.w	900175da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
900178ca:	f1b8 0f08 	cmp.w	r8, #8
900178ce:	6810      	ldr	r0, [r2, #0]
900178d0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
900178d4:	bf18      	it	ne
900178d6:	3401      	addne	r4, #1
900178d8:	6805      	ldr	r5, [r0, #0]
900178da:	9105      	str	r1, [sp, #20]
900178dc:	bf18      	it	ne
900178de:	f024 0401 	bicne.w	r4, r4, #1
900178e2:	990d      	ldr	r1, [sp, #52]	; 0x34
900178e4:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
900178e8:	bf18      	it	ne
900178ea:	b2a4      	uxthne	r4, r4
900178ec:	9104      	str	r1, [sp, #16]
900178ee:	992a      	ldr	r1, [sp, #168]	; 0xa8
900178f0:	e9cd 4b00 	strd	r4, fp, [sp]
900178f4:	e9cd 4102 	strd	r4, r1, [sp, #8]
900178f8:	9928      	ldr	r1, [sp, #160]	; 0xa0
900178fa:	6c2c      	ldr	r4, [r5, #64]	; 0x40
900178fc:	47a0      	blx	r4
900178fe:	b019      	add	sp, #100	; 0x64
90017900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017904:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90017906:	2b00      	cmp	r3, #0
90017908:	f47f af5d 	bne.w	900177c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9001790c:	23ff      	movs	r3, #255	; 0xff
9001790e:	46c1      	mov	r9, r8
90017910:	930a      	str	r3, [sp, #40]	; 0x28
90017912:	2301      	movs	r3, #1
90017914:	9307      	str	r3, [sp, #28]
90017916:	e687      	b.n	90017628 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
90017918:	24012ae0 	.word	0x24012ae0

9001791c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001791c:	b538      	push	{r3, r4, r5, lr}
9001791e:	4c15      	ldr	r4, [pc, #84]	; (90017974 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90017920:	4605      	mov	r5, r0
90017922:	7823      	ldrb	r3, [r4, #0]
90017924:	f3bf 8f5b 	dmb	ish
90017928:	07da      	lsls	r2, r3, #31
9001792a:	d40b      	bmi.n	90017944 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001792c:	4620      	mov	r0, r4
9001792e:	f007 fc8c 	bl	9001f24a <__cxa_guard_acquire>
90017932:	b138      	cbz	r0, 90017944 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90017934:	4620      	mov	r0, r4
90017936:	f007 fc94 	bl	9001f262 <__cxa_guard_release>
9001793a:	4a0f      	ldr	r2, [pc, #60]	; (90017978 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001793c:	490f      	ldr	r1, [pc, #60]	; (9001797c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001793e:	4810      	ldr	r0, [pc, #64]	; (90017980 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90017940:	f007 fc7c 	bl	9001f23c <__aeabi_atexit>
90017944:	4c0f      	ldr	r4, [pc, #60]	; (90017984 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
90017946:	7823      	ldrb	r3, [r4, #0]
90017948:	f3bf 8f5b 	dmb	ish
9001794c:	07db      	lsls	r3, r3, #31
9001794e:	d40b      	bmi.n	90017968 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90017950:	4620      	mov	r0, r4
90017952:	f007 fc7a 	bl	9001f24a <__cxa_guard_acquire>
90017956:	b138      	cbz	r0, 90017968 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90017958:	4620      	mov	r0, r4
9001795a:	f007 fc82 	bl	9001f262 <__cxa_guard_release>
9001795e:	4a06      	ldr	r2, [pc, #24]	; (90017978 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90017960:	4909      	ldr	r1, [pc, #36]	; (90017988 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
90017962:	480a      	ldr	r0, [pc, #40]	; (9001798c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90017964:	f007 fc6a 	bl	9001f23c <__aeabi_atexit>
90017968:	4b05      	ldr	r3, [pc, #20]	; (90017980 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001796a:	612b      	str	r3, [r5, #16]
9001796c:	4b07      	ldr	r3, [pc, #28]	; (9001798c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001796e:	616b      	str	r3, [r5, #20]
90017970:	bd38      	pop	{r3, r4, r5, pc}
90017972:	bf00      	nop
90017974:	24012bac 	.word	0x24012bac
90017978:	24000000 	.word	0x24000000
9001797c:	90015f1f 	.word	0x90015f1f
90017980:	24000094 	.word	0x24000094
90017984:	24012bb0 	.word	0x24012bb0
90017988:	90015f1d 	.word	0x90015f1d
9001798c:	24000098 	.word	0x24000098

90017990 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
90017990:	b538      	push	{r3, r4, r5, lr}
90017992:	4c15      	ldr	r4, [pc, #84]	; (900179e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
90017994:	4605      	mov	r5, r0
90017996:	7823      	ldrb	r3, [r4, #0]
90017998:	f3bf 8f5b 	dmb	ish
9001799c:	07da      	lsls	r2, r3, #31
9001799e:	d40b      	bmi.n	900179b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
900179a0:	4620      	mov	r0, r4
900179a2:	f007 fc52 	bl	9001f24a <__cxa_guard_acquire>
900179a6:	b138      	cbz	r0, 900179b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
900179a8:	4620      	mov	r0, r4
900179aa:	f007 fc5a 	bl	9001f262 <__cxa_guard_release>
900179ae:	4a0f      	ldr	r2, [pc, #60]	; (900179ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
900179b0:	490f      	ldr	r1, [pc, #60]	; (900179f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
900179b2:	4810      	ldr	r0, [pc, #64]	; (900179f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
900179b4:	f007 fc42 	bl	9001f23c <__aeabi_atexit>
900179b8:	4c0f      	ldr	r4, [pc, #60]	; (900179f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
900179ba:	7823      	ldrb	r3, [r4, #0]
900179bc:	f3bf 8f5b 	dmb	ish
900179c0:	07db      	lsls	r3, r3, #31
900179c2:	d40b      	bmi.n	900179dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
900179c4:	4620      	mov	r0, r4
900179c6:	f007 fc40 	bl	9001f24a <__cxa_guard_acquire>
900179ca:	b138      	cbz	r0, 900179dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
900179cc:	4620      	mov	r0, r4
900179ce:	f007 fc48 	bl	9001f262 <__cxa_guard_release>
900179d2:	4a06      	ldr	r2, [pc, #24]	; (900179ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
900179d4:	4909      	ldr	r1, [pc, #36]	; (900179fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
900179d6:	480a      	ldr	r0, [pc, #40]	; (90017a00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
900179d8:	f007 fc30 	bl	9001f23c <__aeabi_atexit>
900179dc:	4b05      	ldr	r3, [pc, #20]	; (900179f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
900179de:	60ab      	str	r3, [r5, #8]
900179e0:	4b07      	ldr	r3, [pc, #28]	; (90017a00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
900179e2:	60eb      	str	r3, [r5, #12]
900179e4:	bd38      	pop	{r3, r4, r5, pc}
900179e6:	bf00      	nop
900179e8:	24012b84 	.word	0x24012b84
900179ec:	24000000 	.word	0x24000000
900179f0:	90015f23 	.word	0x90015f23
900179f4:	2400006c 	.word	0x2400006c
900179f8:	24012b88 	.word	0x24012b88
900179fc:	90015f21 	.word	0x90015f21
90017a00:	24000070 	.word	0x24000070

90017a04 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
90017a04:	b510      	push	{r4, lr}
90017a06:	4604      	mov	r4, r0
90017a08:	f7ff ff88 	bl	9001791c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
90017a0c:	4620      	mov	r0, r4
90017a0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90017a12:	f7ff bfbd 	b.w	90017990 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

90017a18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
90017a18:	b538      	push	{r3, r4, r5, lr}
90017a1a:	4c15      	ldr	r4, [pc, #84]	; (90017a70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
90017a1c:	4605      	mov	r5, r0
90017a1e:	7823      	ldrb	r3, [r4, #0]
90017a20:	f3bf 8f5b 	dmb	ish
90017a24:	07da      	lsls	r2, r3, #31
90017a26:	d40b      	bmi.n	90017a40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90017a28:	4620      	mov	r0, r4
90017a2a:	f007 fc0e 	bl	9001f24a <__cxa_guard_acquire>
90017a2e:	b138      	cbz	r0, 90017a40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90017a30:	4620      	mov	r0, r4
90017a32:	f007 fc16 	bl	9001f262 <__cxa_guard_release>
90017a36:	4a0f      	ldr	r2, [pc, #60]	; (90017a74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90017a38:	490f      	ldr	r1, [pc, #60]	; (90017a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
90017a3a:	4810      	ldr	r0, [pc, #64]	; (90017a7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90017a3c:	f007 fbfe 	bl	9001f23c <__aeabi_atexit>
90017a40:	4c0f      	ldr	r4, [pc, #60]	; (90017a80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
90017a42:	7823      	ldrb	r3, [r4, #0]
90017a44:	f3bf 8f5b 	dmb	ish
90017a48:	07db      	lsls	r3, r3, #31
90017a4a:	d40b      	bmi.n	90017a64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90017a4c:	4620      	mov	r0, r4
90017a4e:	f007 fbfc 	bl	9001f24a <__cxa_guard_acquire>
90017a52:	b138      	cbz	r0, 90017a64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90017a54:	4620      	mov	r0, r4
90017a56:	f007 fc04 	bl	9001f262 <__cxa_guard_release>
90017a5a:	4a06      	ldr	r2, [pc, #24]	; (90017a74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90017a5c:	4909      	ldr	r1, [pc, #36]	; (90017a84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
90017a5e:	480a      	ldr	r0, [pc, #40]	; (90017a88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90017a60:	f007 fbec 	bl	9001f23c <__aeabi_atexit>
90017a64:	4b05      	ldr	r3, [pc, #20]	; (90017a7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90017a66:	622b      	str	r3, [r5, #32]
90017a68:	4b07      	ldr	r3, [pc, #28]	; (90017a88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90017a6a:	626b      	str	r3, [r5, #36]	; 0x24
90017a6c:	bd38      	pop	{r3, r4, r5, pc}
90017a6e:	bf00      	nop
90017a70:	24012bb4 	.word	0x24012bb4
90017a74:	24000000 	.word	0x24000000
90017a78:	90015f17 	.word	0x90015f17
90017a7c:	2400009c 	.word	0x2400009c
90017a80:	24012bb8 	.word	0x24012bb8
90017a84:	90015f15 	.word	0x90015f15
90017a88:	240000a0 	.word	0x240000a0

90017a8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90017a8c:	b538      	push	{r3, r4, r5, lr}
90017a8e:	4c15      	ldr	r4, [pc, #84]	; (90017ae4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
90017a90:	4605      	mov	r5, r0
90017a92:	7823      	ldrb	r3, [r4, #0]
90017a94:	f3bf 8f5b 	dmb	ish
90017a98:	07da      	lsls	r2, r3, #31
90017a9a:	d40b      	bmi.n	90017ab4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90017a9c:	4620      	mov	r0, r4
90017a9e:	f007 fbd4 	bl	9001f24a <__cxa_guard_acquire>
90017aa2:	b138      	cbz	r0, 90017ab4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90017aa4:	4620      	mov	r0, r4
90017aa6:	f007 fbdc 	bl	9001f262 <__cxa_guard_release>
90017aaa:	4a0f      	ldr	r2, [pc, #60]	; (90017ae8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90017aac:	490f      	ldr	r1, [pc, #60]	; (90017aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
90017aae:	4810      	ldr	r0, [pc, #64]	; (90017af0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90017ab0:	f007 fbc4 	bl	9001f23c <__aeabi_atexit>
90017ab4:	4c0f      	ldr	r4, [pc, #60]	; (90017af4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
90017ab6:	7823      	ldrb	r3, [r4, #0]
90017ab8:	f3bf 8f5b 	dmb	ish
90017abc:	07db      	lsls	r3, r3, #31
90017abe:	d40b      	bmi.n	90017ad8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90017ac0:	4620      	mov	r0, r4
90017ac2:	f007 fbc2 	bl	9001f24a <__cxa_guard_acquire>
90017ac6:	b138      	cbz	r0, 90017ad8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90017ac8:	4620      	mov	r0, r4
90017aca:	f007 fbca 	bl	9001f262 <__cxa_guard_release>
90017ace:	4a06      	ldr	r2, [pc, #24]	; (90017ae8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90017ad0:	4909      	ldr	r1, [pc, #36]	; (90017af8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
90017ad2:	480a      	ldr	r0, [pc, #40]	; (90017afc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90017ad4:	f007 fbb2 	bl	9001f23c <__aeabi_atexit>
90017ad8:	4b05      	ldr	r3, [pc, #20]	; (90017af0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90017ada:	61ab      	str	r3, [r5, #24]
90017adc:	4b07      	ldr	r3, [pc, #28]	; (90017afc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90017ade:	61eb      	str	r3, [r5, #28]
90017ae0:	bd38      	pop	{r3, r4, r5, pc}
90017ae2:	bf00      	nop
90017ae4:	24012b8c 	.word	0x24012b8c
90017ae8:	24000000 	.word	0x24000000
90017aec:	90015f1b 	.word	0x90015f1b
90017af0:	24000074 	.word	0x24000074
90017af4:	24012b90 	.word	0x24012b90
90017af8:	90015f19 	.word	0x90015f19
90017afc:	24000078 	.word	0x24000078

90017b00 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
90017b00:	b510      	push	{r4, lr}
90017b02:	4604      	mov	r4, r0
90017b04:	f7ff ff88 	bl	90017a18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
90017b08:	4620      	mov	r0, r4
90017b0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90017b0e:	f7ff bfbd 	b.w	90017a8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

90017b14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
90017b14:	b538      	push	{r3, r4, r5, lr}
90017b16:	4c15      	ldr	r4, [pc, #84]	; (90017b6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
90017b18:	4605      	mov	r5, r0
90017b1a:	7823      	ldrb	r3, [r4, #0]
90017b1c:	f3bf 8f5b 	dmb	ish
90017b20:	07da      	lsls	r2, r3, #31
90017b22:	d40b      	bmi.n	90017b3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90017b24:	4620      	mov	r0, r4
90017b26:	f007 fb90 	bl	9001f24a <__cxa_guard_acquire>
90017b2a:	b138      	cbz	r0, 90017b3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90017b2c:	4620      	mov	r0, r4
90017b2e:	f007 fb98 	bl	9001f262 <__cxa_guard_release>
90017b32:	4a0f      	ldr	r2, [pc, #60]	; (90017b70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90017b34:	490f      	ldr	r1, [pc, #60]	; (90017b74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
90017b36:	4810      	ldr	r0, [pc, #64]	; (90017b78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90017b38:	f007 fb80 	bl	9001f23c <__aeabi_atexit>
90017b3c:	4c0f      	ldr	r4, [pc, #60]	; (90017b7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
90017b3e:	7823      	ldrb	r3, [r4, #0]
90017b40:	f3bf 8f5b 	dmb	ish
90017b44:	07db      	lsls	r3, r3, #31
90017b46:	d40b      	bmi.n	90017b60 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90017b48:	4620      	mov	r0, r4
90017b4a:	f007 fb7e 	bl	9001f24a <__cxa_guard_acquire>
90017b4e:	b138      	cbz	r0, 90017b60 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90017b50:	4620      	mov	r0, r4
90017b52:	f007 fb86 	bl	9001f262 <__cxa_guard_release>
90017b56:	4a06      	ldr	r2, [pc, #24]	; (90017b70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90017b58:	4909      	ldr	r1, [pc, #36]	; (90017b80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
90017b5a:	480a      	ldr	r0, [pc, #40]	; (90017b84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90017b5c:	f007 fb6e 	bl	9001f23c <__aeabi_atexit>
90017b60:	4b05      	ldr	r3, [pc, #20]	; (90017b78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90017b62:	632b      	str	r3, [r5, #48]	; 0x30
90017b64:	4b07      	ldr	r3, [pc, #28]	; (90017b84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90017b66:	636b      	str	r3, [r5, #52]	; 0x34
90017b68:	bd38      	pop	{r3, r4, r5, pc}
90017b6a:	bf00      	nop
90017b6c:	24012bc4 	.word	0x24012bc4
90017b70:	24000000 	.word	0x24000000
90017b74:	90015f0f 	.word	0x90015f0f
90017b78:	240000ac 	.word	0x240000ac
90017b7c:	24012bc8 	.word	0x24012bc8
90017b80:	90015f0d 	.word	0x90015f0d
90017b84:	240000b0 	.word	0x240000b0

90017b88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
90017b88:	b538      	push	{r3, r4, r5, lr}
90017b8a:	4c15      	ldr	r4, [pc, #84]	; (90017be0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90017b8c:	4605      	mov	r5, r0
90017b8e:	7823      	ldrb	r3, [r4, #0]
90017b90:	f3bf 8f5b 	dmb	ish
90017b94:	07da      	lsls	r2, r3, #31
90017b96:	d40b      	bmi.n	90017bb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90017b98:	4620      	mov	r0, r4
90017b9a:	f007 fb56 	bl	9001f24a <__cxa_guard_acquire>
90017b9e:	b138      	cbz	r0, 90017bb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90017ba0:	4620      	mov	r0, r4
90017ba2:	f007 fb5e 	bl	9001f262 <__cxa_guard_release>
90017ba6:	4a0f      	ldr	r2, [pc, #60]	; (90017be4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90017ba8:	490f      	ldr	r1, [pc, #60]	; (90017be8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90017baa:	4810      	ldr	r0, [pc, #64]	; (90017bec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90017bac:	f007 fb46 	bl	9001f23c <__aeabi_atexit>
90017bb0:	4c0f      	ldr	r4, [pc, #60]	; (90017bf0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
90017bb2:	7823      	ldrb	r3, [r4, #0]
90017bb4:	f3bf 8f5b 	dmb	ish
90017bb8:	07db      	lsls	r3, r3, #31
90017bba:	d40b      	bmi.n	90017bd4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90017bbc:	4620      	mov	r0, r4
90017bbe:	f007 fb44 	bl	9001f24a <__cxa_guard_acquire>
90017bc2:	b138      	cbz	r0, 90017bd4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90017bc4:	4620      	mov	r0, r4
90017bc6:	f007 fb4c 	bl	9001f262 <__cxa_guard_release>
90017bca:	4a06      	ldr	r2, [pc, #24]	; (90017be4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90017bcc:	4909      	ldr	r1, [pc, #36]	; (90017bf4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
90017bce:	480a      	ldr	r0, [pc, #40]	; (90017bf8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90017bd0:	f007 fb34 	bl	9001f23c <__aeabi_atexit>
90017bd4:	4b05      	ldr	r3, [pc, #20]	; (90017bec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90017bd6:	62ab      	str	r3, [r5, #40]	; 0x28
90017bd8:	4b07      	ldr	r3, [pc, #28]	; (90017bf8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90017bda:	62eb      	str	r3, [r5, #44]	; 0x2c
90017bdc:	bd38      	pop	{r3, r4, r5, pc}
90017bde:	bf00      	nop
90017be0:	24012b94 	.word	0x24012b94
90017be4:	24000000 	.word	0x24000000
90017be8:	90015f13 	.word	0x90015f13
90017bec:	2400007c 	.word	0x2400007c
90017bf0:	24012b98 	.word	0x24012b98
90017bf4:	90015f11 	.word	0x90015f11
90017bf8:	24000080 	.word	0x24000080

90017bfc <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90017bfc:	b510      	push	{r4, lr}
90017bfe:	4604      	mov	r4, r0
90017c00:	f7ff ff88 	bl	90017b14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
90017c04:	4620      	mov	r0, r4
90017c06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90017c0a:	f7ff bfbd 	b.w	90017b88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

90017c10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
90017c10:	b538      	push	{r3, r4, r5, lr}
90017c12:	4c15      	ldr	r4, [pc, #84]	; (90017c68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
90017c14:	4605      	mov	r5, r0
90017c16:	7823      	ldrb	r3, [r4, #0]
90017c18:	f3bf 8f5b 	dmb	ish
90017c1c:	07da      	lsls	r2, r3, #31
90017c1e:	d40b      	bmi.n	90017c38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90017c20:	4620      	mov	r0, r4
90017c22:	f007 fb12 	bl	9001f24a <__cxa_guard_acquire>
90017c26:	b138      	cbz	r0, 90017c38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90017c28:	4620      	mov	r0, r4
90017c2a:	f007 fb1a 	bl	9001f262 <__cxa_guard_release>
90017c2e:	4a0f      	ldr	r2, [pc, #60]	; (90017c6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90017c30:	490f      	ldr	r1, [pc, #60]	; (90017c70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
90017c32:	4810      	ldr	r0, [pc, #64]	; (90017c74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90017c34:	f007 fb02 	bl	9001f23c <__aeabi_atexit>
90017c38:	4c0f      	ldr	r4, [pc, #60]	; (90017c78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
90017c3a:	7823      	ldrb	r3, [r4, #0]
90017c3c:	f3bf 8f5b 	dmb	ish
90017c40:	07db      	lsls	r3, r3, #31
90017c42:	d40b      	bmi.n	90017c5c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90017c44:	4620      	mov	r0, r4
90017c46:	f007 fb00 	bl	9001f24a <__cxa_guard_acquire>
90017c4a:	b138      	cbz	r0, 90017c5c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90017c4c:	4620      	mov	r0, r4
90017c4e:	f007 fb08 	bl	9001f262 <__cxa_guard_release>
90017c52:	4a06      	ldr	r2, [pc, #24]	; (90017c6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90017c54:	4909      	ldr	r1, [pc, #36]	; (90017c7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
90017c56:	480a      	ldr	r0, [pc, #40]	; (90017c80 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90017c58:	f007 faf0 	bl	9001f23c <__aeabi_atexit>
90017c5c:	4b05      	ldr	r3, [pc, #20]	; (90017c74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90017c5e:	652b      	str	r3, [r5, #80]	; 0x50
90017c60:	4b07      	ldr	r3, [pc, #28]	; (90017c80 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90017c62:	656b      	str	r3, [r5, #84]	; 0x54
90017c64:	bd38      	pop	{r3, r4, r5, pc}
90017c66:	bf00      	nop
90017c68:	24012bcc 	.word	0x24012bcc
90017c6c:	24000000 	.word	0x24000000
90017c70:	90015eff 	.word	0x90015eff
90017c74:	240000b4 	.word	0x240000b4
90017c78:	24012bd0 	.word	0x24012bd0
90017c7c:	90015efd 	.word	0x90015efd
90017c80:	240000b8 	.word	0x240000b8

90017c84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
90017c84:	b538      	push	{r3, r4, r5, lr}
90017c86:	4c15      	ldr	r4, [pc, #84]	; (90017cdc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
90017c88:	4605      	mov	r5, r0
90017c8a:	7823      	ldrb	r3, [r4, #0]
90017c8c:	f3bf 8f5b 	dmb	ish
90017c90:	07da      	lsls	r2, r3, #31
90017c92:	d40b      	bmi.n	90017cac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90017c94:	4620      	mov	r0, r4
90017c96:	f007 fad8 	bl	9001f24a <__cxa_guard_acquire>
90017c9a:	b138      	cbz	r0, 90017cac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90017c9c:	4620      	mov	r0, r4
90017c9e:	f007 fae0 	bl	9001f262 <__cxa_guard_release>
90017ca2:	4a0f      	ldr	r2, [pc, #60]	; (90017ce0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90017ca4:	490f      	ldr	r1, [pc, #60]	; (90017ce4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
90017ca6:	4810      	ldr	r0, [pc, #64]	; (90017ce8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90017ca8:	f007 fac8 	bl	9001f23c <__aeabi_atexit>
90017cac:	4c0f      	ldr	r4, [pc, #60]	; (90017cec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90017cae:	7823      	ldrb	r3, [r4, #0]
90017cb0:	f3bf 8f5b 	dmb	ish
90017cb4:	07db      	lsls	r3, r3, #31
90017cb6:	d40b      	bmi.n	90017cd0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90017cb8:	4620      	mov	r0, r4
90017cba:	f007 fac6 	bl	9001f24a <__cxa_guard_acquire>
90017cbe:	b138      	cbz	r0, 90017cd0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90017cc0:	4620      	mov	r0, r4
90017cc2:	f007 face 	bl	9001f262 <__cxa_guard_release>
90017cc6:	4a06      	ldr	r2, [pc, #24]	; (90017ce0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90017cc8:	4909      	ldr	r1, [pc, #36]	; (90017cf0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90017cca:	480a      	ldr	r0, [pc, #40]	; (90017cf4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90017ccc:	f007 fab6 	bl	9001f23c <__aeabi_atexit>
90017cd0:	4b05      	ldr	r3, [pc, #20]	; (90017ce8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90017cd2:	64ab      	str	r3, [r5, #72]	; 0x48
90017cd4:	4b07      	ldr	r3, [pc, #28]	; (90017cf4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90017cd6:	64eb      	str	r3, [r5, #76]	; 0x4c
90017cd8:	bd38      	pop	{r3, r4, r5, pc}
90017cda:	bf00      	nop
90017cdc:	24012bd4 	.word	0x24012bd4
90017ce0:	24000000 	.word	0x24000000
90017ce4:	90015f03 	.word	0x90015f03
90017ce8:	240000bc 	.word	0x240000bc
90017cec:	24012bd8 	.word	0x24012bd8
90017cf0:	90015f01 	.word	0x90015f01
90017cf4:	240000c0 	.word	0x240000c0

90017cf8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90017cf8:	b538      	push	{r3, r4, r5, lr}
90017cfa:	4c15      	ldr	r4, [pc, #84]	; (90017d50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90017cfc:	4605      	mov	r5, r0
90017cfe:	7823      	ldrb	r3, [r4, #0]
90017d00:	f3bf 8f5b 	dmb	ish
90017d04:	07da      	lsls	r2, r3, #31
90017d06:	d40b      	bmi.n	90017d20 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90017d08:	4620      	mov	r0, r4
90017d0a:	f007 fa9e 	bl	9001f24a <__cxa_guard_acquire>
90017d0e:	b138      	cbz	r0, 90017d20 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90017d10:	4620      	mov	r0, r4
90017d12:	f007 faa6 	bl	9001f262 <__cxa_guard_release>
90017d16:	4a0f      	ldr	r2, [pc, #60]	; (90017d54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90017d18:	490f      	ldr	r1, [pc, #60]	; (90017d58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90017d1a:	4810      	ldr	r0, [pc, #64]	; (90017d5c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90017d1c:	f007 fa8e 	bl	9001f23c <__aeabi_atexit>
90017d20:	4c0f      	ldr	r4, [pc, #60]	; (90017d60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
90017d22:	7823      	ldrb	r3, [r4, #0]
90017d24:	f3bf 8f5b 	dmb	ish
90017d28:	07db      	lsls	r3, r3, #31
90017d2a:	d40b      	bmi.n	90017d44 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90017d2c:	4620      	mov	r0, r4
90017d2e:	f007 fa8c 	bl	9001f24a <__cxa_guard_acquire>
90017d32:	b138      	cbz	r0, 90017d44 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90017d34:	4620      	mov	r0, r4
90017d36:	f007 fa94 	bl	9001f262 <__cxa_guard_release>
90017d3a:	4a06      	ldr	r2, [pc, #24]	; (90017d54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90017d3c:	4909      	ldr	r1, [pc, #36]	; (90017d64 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
90017d3e:	480a      	ldr	r0, [pc, #40]	; (90017d68 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90017d40:	f007 fa7c 	bl	9001f23c <__aeabi_atexit>
90017d44:	4b05      	ldr	r3, [pc, #20]	; (90017d5c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90017d46:	642b      	str	r3, [r5, #64]	; 0x40
90017d48:	4b07      	ldr	r3, [pc, #28]	; (90017d68 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90017d4a:	646b      	str	r3, [r5, #68]	; 0x44
90017d4c:	bd38      	pop	{r3, r4, r5, pc}
90017d4e:	bf00      	nop
90017d50:	24012b9c 	.word	0x24012b9c
90017d54:	24000000 	.word	0x24000000
90017d58:	90015f07 	.word	0x90015f07
90017d5c:	24000084 	.word	0x24000084
90017d60:	24012ba0 	.word	0x24012ba0
90017d64:	90015f05 	.word	0x90015f05
90017d68:	24000088 	.word	0x24000088

90017d6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90017d6c:	b538      	push	{r3, r4, r5, lr}
90017d6e:	4c15      	ldr	r4, [pc, #84]	; (90017dc4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
90017d70:	4605      	mov	r5, r0
90017d72:	7823      	ldrb	r3, [r4, #0]
90017d74:	f3bf 8f5b 	dmb	ish
90017d78:	07da      	lsls	r2, r3, #31
90017d7a:	d40b      	bmi.n	90017d94 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90017d7c:	4620      	mov	r0, r4
90017d7e:	f007 fa64 	bl	9001f24a <__cxa_guard_acquire>
90017d82:	b138      	cbz	r0, 90017d94 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90017d84:	4620      	mov	r0, r4
90017d86:	f007 fa6c 	bl	9001f262 <__cxa_guard_release>
90017d8a:	4a0f      	ldr	r2, [pc, #60]	; (90017dc8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90017d8c:	490f      	ldr	r1, [pc, #60]	; (90017dcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90017d8e:	4810      	ldr	r0, [pc, #64]	; (90017dd0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90017d90:	f007 fa54 	bl	9001f23c <__aeabi_atexit>
90017d94:	4c0f      	ldr	r4, [pc, #60]	; (90017dd4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
90017d96:	7823      	ldrb	r3, [r4, #0]
90017d98:	f3bf 8f5b 	dmb	ish
90017d9c:	07db      	lsls	r3, r3, #31
90017d9e:	d40b      	bmi.n	90017db8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90017da0:	4620      	mov	r0, r4
90017da2:	f007 fa52 	bl	9001f24a <__cxa_guard_acquire>
90017da6:	b138      	cbz	r0, 90017db8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90017da8:	4620      	mov	r0, r4
90017daa:	f007 fa5a 	bl	9001f262 <__cxa_guard_release>
90017dae:	4a06      	ldr	r2, [pc, #24]	; (90017dc8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90017db0:	4909      	ldr	r1, [pc, #36]	; (90017dd8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
90017db2:	480a      	ldr	r0, [pc, #40]	; (90017ddc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90017db4:	f007 fa42 	bl	9001f23c <__aeabi_atexit>
90017db8:	4b05      	ldr	r3, [pc, #20]	; (90017dd0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90017dba:	63ab      	str	r3, [r5, #56]	; 0x38
90017dbc:	4b07      	ldr	r3, [pc, #28]	; (90017ddc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90017dbe:	63eb      	str	r3, [r5, #60]	; 0x3c
90017dc0:	bd38      	pop	{r3, r4, r5, pc}
90017dc2:	bf00      	nop
90017dc4:	24012bbc 	.word	0x24012bbc
90017dc8:	24000000 	.word	0x24000000
90017dcc:	90015f0b 	.word	0x90015f0b
90017dd0:	240000a4 	.word	0x240000a4
90017dd4:	24012bc0 	.word	0x24012bc0
90017dd8:	90015f09 	.word	0x90015f09
90017ddc:	240000a8 	.word	0x240000a8

90017de0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90017de0:	b510      	push	{r4, lr}
90017de2:	4604      	mov	r4, r0
90017de4:	f7ff ff14 	bl	90017c10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90017de8:	4620      	mov	r0, r4
90017dea:	f7ff ff85 	bl	90017cf8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90017dee:	4620      	mov	r0, r4
90017df0:	f7ff ff48 	bl	90017c84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90017df4:	4620      	mov	r0, r4
90017df6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90017dfa:	f7ff bfb7 	b.w	90017d6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90017e00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90017e00:	b538      	push	{r3, r4, r5, lr}
90017e02:	4c15      	ldr	r4, [pc, #84]	; (90017e58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90017e04:	4605      	mov	r5, r0
90017e06:	7823      	ldrb	r3, [r4, #0]
90017e08:	f3bf 8f5b 	dmb	ish
90017e0c:	07da      	lsls	r2, r3, #31
90017e0e:	d40b      	bmi.n	90017e28 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90017e10:	4620      	mov	r0, r4
90017e12:	f007 fa1a 	bl	9001f24a <__cxa_guard_acquire>
90017e16:	b138      	cbz	r0, 90017e28 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90017e18:	4620      	mov	r0, r4
90017e1a:	f007 fa22 	bl	9001f262 <__cxa_guard_release>
90017e1e:	4a0f      	ldr	r2, [pc, #60]	; (90017e5c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90017e20:	490f      	ldr	r1, [pc, #60]	; (90017e60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
90017e22:	4810      	ldr	r0, [pc, #64]	; (90017e64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90017e24:	f007 fa0a 	bl	9001f23c <__aeabi_atexit>
90017e28:	4c0f      	ldr	r4, [pc, #60]	; (90017e68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90017e2a:	7823      	ldrb	r3, [r4, #0]
90017e2c:	f3bf 8f5b 	dmb	ish
90017e30:	07db      	lsls	r3, r3, #31
90017e32:	d40b      	bmi.n	90017e4c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90017e34:	4620      	mov	r0, r4
90017e36:	f007 fa08 	bl	9001f24a <__cxa_guard_acquire>
90017e3a:	b138      	cbz	r0, 90017e4c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90017e3c:	4620      	mov	r0, r4
90017e3e:	f007 fa10 	bl	9001f262 <__cxa_guard_release>
90017e42:	4a06      	ldr	r2, [pc, #24]	; (90017e5c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90017e44:	4909      	ldr	r1, [pc, #36]	; (90017e6c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90017e46:	480a      	ldr	r0, [pc, #40]	; (90017e70 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90017e48:	f007 f9f8 	bl	9001f23c <__aeabi_atexit>
90017e4c:	4b05      	ldr	r3, [pc, #20]	; (90017e64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90017e4e:	662b      	str	r3, [r5, #96]	; 0x60
90017e50:	4b07      	ldr	r3, [pc, #28]	; (90017e70 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90017e52:	666b      	str	r3, [r5, #100]	; 0x64
90017e54:	bd38      	pop	{r3, r4, r5, pc}
90017e56:	bf00      	nop
90017e58:	24012ba4 	.word	0x24012ba4
90017e5c:	24000000 	.word	0x24000000
90017e60:	90015ef7 	.word	0x90015ef7
90017e64:	2400008c 	.word	0x2400008c
90017e68:	24012ba8 	.word	0x24012ba8
90017e6c:	90015ef5 	.word	0x90015ef5
90017e70:	24000090 	.word	0x24000090

90017e74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
90017e74:	b538      	push	{r3, r4, r5, lr}
90017e76:	4c15      	ldr	r4, [pc, #84]	; (90017ecc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90017e78:	4605      	mov	r5, r0
90017e7a:	7823      	ldrb	r3, [r4, #0]
90017e7c:	f3bf 8f5b 	dmb	ish
90017e80:	07da      	lsls	r2, r3, #31
90017e82:	d40b      	bmi.n	90017e9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90017e84:	4620      	mov	r0, r4
90017e86:	f007 f9e0 	bl	9001f24a <__cxa_guard_acquire>
90017e8a:	b138      	cbz	r0, 90017e9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90017e8c:	4620      	mov	r0, r4
90017e8e:	f007 f9e8 	bl	9001f262 <__cxa_guard_release>
90017e92:	4a0f      	ldr	r2, [pc, #60]	; (90017ed0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90017e94:	490f      	ldr	r1, [pc, #60]	; (90017ed4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
90017e96:	4810      	ldr	r0, [pc, #64]	; (90017ed8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90017e98:	f007 f9d0 	bl	9001f23c <__aeabi_atexit>
90017e9c:	4c0f      	ldr	r4, [pc, #60]	; (90017edc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90017e9e:	7823      	ldrb	r3, [r4, #0]
90017ea0:	f3bf 8f5b 	dmb	ish
90017ea4:	07db      	lsls	r3, r3, #31
90017ea6:	d40b      	bmi.n	90017ec0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90017ea8:	4620      	mov	r0, r4
90017eaa:	f007 f9ce 	bl	9001f24a <__cxa_guard_acquire>
90017eae:	b138      	cbz	r0, 90017ec0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90017eb0:	4620      	mov	r0, r4
90017eb2:	f007 f9d6 	bl	9001f262 <__cxa_guard_release>
90017eb6:	4a06      	ldr	r2, [pc, #24]	; (90017ed0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90017eb8:	4909      	ldr	r1, [pc, #36]	; (90017ee0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90017eba:	480a      	ldr	r0, [pc, #40]	; (90017ee4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90017ebc:	f007 f9be 	bl	9001f23c <__aeabi_atexit>
90017ec0:	4b05      	ldr	r3, [pc, #20]	; (90017ed8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90017ec2:	65ab      	str	r3, [r5, #88]	; 0x58
90017ec4:	4b07      	ldr	r3, [pc, #28]	; (90017ee4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90017ec6:	65eb      	str	r3, [r5, #92]	; 0x5c
90017ec8:	bd38      	pop	{r3, r4, r5, pc}
90017eca:	bf00      	nop
90017ecc:	24012b7c 	.word	0x24012b7c
90017ed0:	24000000 	.word	0x24000000
90017ed4:	90015efb 	.word	0x90015efb
90017ed8:	24000064 	.word	0x24000064
90017edc:	24012b80 	.word	0x24012b80
90017ee0:	90015ef9 	.word	0x90015ef9
90017ee4:	24000068 	.word	0x24000068

90017ee8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90017ee8:	b510      	push	{r4, lr}
90017eea:	4604      	mov	r4, r0
90017eec:	f7ff ff88 	bl	90017e00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
90017ef0:	4620      	mov	r0, r4
90017ef2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90017ef6:	f7ff bfbd 	b.w	90017e74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90017efc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90017efc:	b538      	push	{r3, r4, r5, lr}
90017efe:	4c15      	ldr	r4, [pc, #84]	; (90017f54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
90017f00:	4605      	mov	r5, r0
90017f02:	7823      	ldrb	r3, [r4, #0]
90017f04:	f3bf 8f5b 	dmb	ish
90017f08:	07da      	lsls	r2, r3, #31
90017f0a:	d40b      	bmi.n	90017f24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90017f0c:	4620      	mov	r0, r4
90017f0e:	f007 f99c 	bl	9001f24a <__cxa_guard_acquire>
90017f12:	b138      	cbz	r0, 90017f24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90017f14:	4620      	mov	r0, r4
90017f16:	f007 f9a4 	bl	9001f262 <__cxa_guard_release>
90017f1a:	4a0f      	ldr	r2, [pc, #60]	; (90017f58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90017f1c:	490f      	ldr	r1, [pc, #60]	; (90017f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
90017f1e:	4810      	ldr	r0, [pc, #64]	; (90017f60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90017f20:	f007 f98c 	bl	9001f23c <__aeabi_atexit>
90017f24:	4c0f      	ldr	r4, [pc, #60]	; (90017f64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
90017f26:	7823      	ldrb	r3, [r4, #0]
90017f28:	f3bf 8f5b 	dmb	ish
90017f2c:	07db      	lsls	r3, r3, #31
90017f2e:	d40b      	bmi.n	90017f48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90017f30:	4620      	mov	r0, r4
90017f32:	f007 f98a 	bl	9001f24a <__cxa_guard_acquire>
90017f36:	b138      	cbz	r0, 90017f48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90017f38:	4620      	mov	r0, r4
90017f3a:	f007 f992 	bl	9001f262 <__cxa_guard_release>
90017f3e:	4a06      	ldr	r2, [pc, #24]	; (90017f58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90017f40:	4909      	ldr	r1, [pc, #36]	; (90017f68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
90017f42:	480a      	ldr	r0, [pc, #40]	; (90017f6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90017f44:	f007 f97a 	bl	9001f23c <__aeabi_atexit>
90017f48:	4b05      	ldr	r3, [pc, #20]	; (90017f60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90017f4a:	672b      	str	r3, [r5, #112]	; 0x70
90017f4c:	4b07      	ldr	r3, [pc, #28]	; (90017f6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90017f4e:	676b      	str	r3, [r5, #116]	; 0x74
90017f50:	bd38      	pop	{r3, r4, r5, pc}
90017f52:	bf00      	nop
90017f54:	24012b74 	.word	0x24012b74
90017f58:	24000000 	.word	0x24000000
90017f5c:	90015eef 	.word	0x90015eef
90017f60:	2400005c 	.word	0x2400005c
90017f64:	24012b78 	.word	0x24012b78
90017f68:	90015eed 	.word	0x90015eed
90017f6c:	24000060 	.word	0x24000060

90017f70 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
90017f70:	b538      	push	{r3, r4, r5, lr}
90017f72:	4c15      	ldr	r4, [pc, #84]	; (90017fc8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
90017f74:	4605      	mov	r5, r0
90017f76:	7823      	ldrb	r3, [r4, #0]
90017f78:	f3bf 8f5b 	dmb	ish
90017f7c:	07da      	lsls	r2, r3, #31
90017f7e:	d40b      	bmi.n	90017f98 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90017f80:	4620      	mov	r0, r4
90017f82:	f007 f962 	bl	9001f24a <__cxa_guard_acquire>
90017f86:	b138      	cbz	r0, 90017f98 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90017f88:	4620      	mov	r0, r4
90017f8a:	f007 f96a 	bl	9001f262 <__cxa_guard_release>
90017f8e:	4a0f      	ldr	r2, [pc, #60]	; (90017fcc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90017f90:	490f      	ldr	r1, [pc, #60]	; (90017fd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
90017f92:	4810      	ldr	r0, [pc, #64]	; (90017fd4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90017f94:	f007 f952 	bl	9001f23c <__aeabi_atexit>
90017f98:	4c0f      	ldr	r4, [pc, #60]	; (90017fd8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90017f9a:	7823      	ldrb	r3, [r4, #0]
90017f9c:	f3bf 8f5b 	dmb	ish
90017fa0:	07db      	lsls	r3, r3, #31
90017fa2:	d40b      	bmi.n	90017fbc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90017fa4:	4620      	mov	r0, r4
90017fa6:	f007 f950 	bl	9001f24a <__cxa_guard_acquire>
90017faa:	b138      	cbz	r0, 90017fbc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90017fac:	4620      	mov	r0, r4
90017fae:	f007 f958 	bl	9001f262 <__cxa_guard_release>
90017fb2:	4a06      	ldr	r2, [pc, #24]	; (90017fcc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90017fb4:	4909      	ldr	r1, [pc, #36]	; (90017fdc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
90017fb6:	480a      	ldr	r0, [pc, #40]	; (90017fe0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90017fb8:	f007 f940 	bl	9001f23c <__aeabi_atexit>
90017fbc:	4b05      	ldr	r3, [pc, #20]	; (90017fd4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90017fbe:	66ab      	str	r3, [r5, #104]	; 0x68
90017fc0:	4b07      	ldr	r3, [pc, #28]	; (90017fe0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90017fc2:	66eb      	str	r3, [r5, #108]	; 0x6c
90017fc4:	bd38      	pop	{r3, r4, r5, pc}
90017fc6:	bf00      	nop
90017fc8:	24012b6c 	.word	0x24012b6c
90017fcc:	24000000 	.word	0x24000000
90017fd0:	90015ef3 	.word	0x90015ef3
90017fd4:	24000054 	.word	0x24000054
90017fd8:	24012b70 	.word	0x24012b70
90017fdc:	90015ef1 	.word	0x90015ef1
90017fe0:	24000058 	.word	0x24000058

90017fe4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90017fe4:	b510      	push	{r4, lr}
90017fe6:	4604      	mov	r4, r0
90017fe8:	f7ff ff88 	bl	90017efc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90017fec:	4620      	mov	r0, r4
90017fee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90017ff2:	f7ff bfbd 	b.w	90017f70 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90017ff6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90017ff6:	b510      	push	{r4, lr}
90017ff8:	4604      	mov	r4, r0
90017ffa:	f7ff fff3 	bl	90017fe4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
90017ffe:	4620      	mov	r0, r4
90018000:	f7ff ff72 	bl	90017ee8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90018004:	4620      	mov	r0, r4
90018006:	f7ff fdf9 	bl	90017bfc <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9001800a:	4620      	mov	r0, r4
9001800c:	f7ff fcfa 	bl	90017a04 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
90018010:	4620      	mov	r0, r4
90018012:	f7ff fd75 	bl	90017b00 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90018016:	4620      	mov	r0, r4
90018018:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001801c:	f7ff bee0 	b.w	90017de0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

90018020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90018020:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018024:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
90018028:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
9001802c:	f1be 0f00 	cmp.w	lr, #0
90018030:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
90018034:	fb0e 4708 	mla	r7, lr, r8, r4
90018038:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
9001803c:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
90018040:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
90018044:	eb02 0a07 	add.w	sl, r2, r7
90018048:	8808      	ldrh	r0, [r1, #0]
9001804a:	db37      	blt.n	900180bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
9001804c:	45f3      	cmp	fp, lr
9001804e:	dd35      	ble.n	900180bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
90018050:	2c00      	cmp	r4, #0
90018052:	db31      	blt.n	900180b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
90018054:	45a0      	cmp	r8, r4
90018056:	dd2f      	ble.n	900180b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
90018058:	5dd2      	ldrb	r2, [r2, r7]
9001805a:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
9001805e:	1c62      	adds	r2, r4, #1
90018060:	d42f      	bmi.n	900180c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
90018062:	4590      	cmp	r8, r2
90018064:	dd2d      	ble.n	900180c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
90018066:	b366      	cbz	r6, 900180c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
90018068:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001806c:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90018070:	f11e 0e01 	adds.w	lr, lr, #1
90018074:	d429      	bmi.n	900180ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
90018076:	45f3      	cmp	fp, lr
90018078:	dd27      	ble.n	900180ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
9001807a:	f1bc 0f00 	cmp.w	ip, #0
9001807e:	f000 80a0 	beq.w	900181c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
90018082:	2c00      	cmp	r4, #0
90018084:	db1f      	blt.n	900180c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90018086:	45a0      	cmp	r8, r4
90018088:	dd1d      	ble.n	900180c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9001808a:	f81a 2008 	ldrb.w	r2, [sl, r8]
9001808e:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
90018092:	3401      	adds	r4, #1
90018094:	d41c      	bmi.n	900180d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
90018096:	45a0      	cmp	r8, r4
90018098:	dd1a      	ble.n	900180d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
9001809a:	b1de      	cbz	r6, 900180d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
9001809c:	44d0      	add	r8, sl
9001809e:	f898 2001 	ldrb.w	r2, [r8, #1]
900180a2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
900180a6:	2e0f      	cmp	r6, #15
900180a8:	d915      	bls.n	900180d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
900180aa:	4b49      	ldr	r3, [pc, #292]	; (900181d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
900180ac:	f240 11ef 	movw	r1, #495	; 0x1ef
900180b0:	4a48      	ldr	r2, [pc, #288]	; (900181d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
900180b2:	4849      	ldr	r0, [pc, #292]	; (900181d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
900180b4:	f007 f8f6 	bl	9001f2a4 <__assert_func>
900180b8:	4681      	mov	r9, r0
900180ba:	e7d0      	b.n	9001805e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
900180bc:	4607      	mov	r7, r0
900180be:	4681      	mov	r9, r0
900180c0:	e7d6      	b.n	90018070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
900180c2:	4607      	mov	r7, r0
900180c4:	e7d4      	b.n	90018070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
900180c6:	4686      	mov	lr, r0
900180c8:	e7e3      	b.n	90018092 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
900180ca:	4603      	mov	r3, r0
900180cc:	4686      	mov	lr, r0
900180ce:	e7ea      	b.n	900180a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
900180d0:	4603      	mov	r3, r0
900180d2:	e7e8      	b.n	900180a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
900180d4:	4603      	mov	r3, r0
900180d6:	f1bc 0f0f 	cmp.w	ip, #15
900180da:	d8e6      	bhi.n	900180aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
900180dc:	fb16 f80c 	smulbb	r8, r6, ip
900180e0:	ea4f 4409 	mov.w	r4, r9, lsl #16
900180e4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900180e8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900180ec:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900180f0:	ea4f 08e8 	mov.w	r8, r8, asr #3
900180f4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900180f8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900180fc:	ea44 0909 	orr.w	r9, r4, r9
90018100:	f1cc 0410 	rsb	r4, ip, #16
90018104:	041a      	lsls	r2, r3, #16
90018106:	ea4a 0707 	orr.w	r7, sl, r7
9001810a:	1ba4      	subs	r4, r4, r6
9001810c:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
90018110:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90018114:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90018118:	4377      	muls	r7, r6
9001811a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
9001811e:	4313      	orrs	r3, r2
90018120:	ea4f 420e 	mov.w	r2, lr, lsl #16
90018124:	fb04 7409 	mla	r4, r4, r9, r7
90018128:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
9001812c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90018130:	b2af      	uxth	r7, r5
90018132:	fb08 4303 	mla	r3, r8, r3, r4
90018136:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
9001813a:	43ed      	mvns	r5, r5
9001813c:	10c6      	asrs	r6, r0, #3
9001813e:	4322      	orrs	r2, r4
90018140:	b2ed      	uxtb	r5, r5
90018142:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90018146:	fb0c 3202 	mla	r2, ip, r2, r3
9001814a:	fb16 f605 	smulbb	r6, r6, r5
9001814e:	0d53      	lsrs	r3, r2, #21
90018150:	0952      	lsrs	r2, r2, #5
90018152:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90018156:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001815a:	431a      	orrs	r2, r3
9001815c:	b293      	uxth	r3, r2
9001815e:	1202      	asrs	r2, r0, #8
90018160:	ea4f 2c23 	mov.w	ip, r3, asr #8
90018164:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90018168:	00dc      	lsls	r4, r3, #3
9001816a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001816e:	fb12 f205 	smulbb	r2, r2, r5
90018172:	b2e4      	uxtb	r4, r4
90018174:	fb0c 2c07 	mla	ip, ip, r7, r2
90018178:	10da      	asrs	r2, r3, #3
9001817a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001817e:	fa1f fc8c 	uxth.w	ip, ip
90018182:	fb02 6207 	mla	r2, r2, r7, r6
90018186:	f10c 0301 	add.w	r3, ip, #1
9001818a:	b296      	uxth	r6, r2
9001818c:	00c2      	lsls	r2, r0, #3
9001818e:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90018192:	b2d2      	uxtb	r2, r2
90018194:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90018198:	fb12 f205 	smulbb	r2, r2, r5
9001819c:	fb04 2207 	mla	r2, r4, r7, r2
900181a0:	b292      	uxth	r2, r2
900181a2:	1c50      	adds	r0, r2, #1
900181a4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
900181a8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900181ac:	4313      	orrs	r3, r2
900181ae:	1c72      	adds	r2, r6, #1
900181b0:	eb02 2216 	add.w	r2, r2, r6, lsr #8
900181b4:	0952      	lsrs	r2, r2, #5
900181b6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900181ba:	4313      	orrs	r3, r2
900181bc:	800b      	strh	r3, [r1, #0]
900181be:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
900181c2:	2e0f      	cmp	r6, #15
900181c4:	f63f af71 	bhi.w	900180aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
900181c8:	4603      	mov	r3, r0
900181ca:	4686      	mov	lr, r0
900181cc:	e786      	b.n	900180dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
900181ce:	bf00      	nop
900181d0:	900236e6 	.word	0x900236e6
900181d4:	90023d52 	.word	0x90023d52
900181d8:	900237cf 	.word	0x900237cf

900181dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900181dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900181e0:	ed2d 8b08 	vpush	{d8-d11}
900181e4:	b099      	sub	sp, #100	; 0x64
900181e6:	eeb0 aa40 	vmov.f32	s20, s0
900181ea:	eef0 9a60 	vmov.f32	s19, s1
900181ee:	9215      	str	r2, [sp, #84]	; 0x54
900181f0:	eeb0 9a41 	vmov.f32	s18, s2
900181f4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
900181f6:	eeb0 8a62 	vmov.f32	s16, s5
900181fa:	9309      	str	r3, [sp, #36]	; 0x24
900181fc:	eef0 8a43 	vmov.f32	s17, s6
90018200:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
90018204:	eef0 ba44 	vmov.f32	s23, s8
90018208:	9016      	str	r0, [sp, #88]	; 0x58
9001820a:	eeb0 ba64 	vmov.f32	s22, s9
9001820e:	930d      	str	r3, [sp, #52]	; 0x34
90018210:	eef0 aa45 	vmov.f32	s21, s10
90018214:	6850      	ldr	r0, [r2, #4]
90018216:	910c      	str	r1, [sp, #48]	; 0x30
90018218:	6812      	ldr	r2, [r2, #0]
9001821a:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
9001821e:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
90018222:	fb00 1303 	mla	r3, r0, r3, r1
90018226:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9001822a:	9b32      	ldr	r3, [sp, #200]	; 0xc8
9001822c:	681b      	ldr	r3, [r3, #0]
9001822e:	930b      	str	r3, [sp, #44]	; 0x2c
90018230:	9b32      	ldr	r3, [sp, #200]	; 0xc8
90018232:	685e      	ldr	r6, [r3, #4]
90018234:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90018236:	3604      	adds	r6, #4
90018238:	43db      	mvns	r3, r3
9001823a:	b2db      	uxtb	r3, r3
9001823c:	930a      	str	r3, [sp, #40]	; 0x28
9001823e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90018240:	2b00      	cmp	r3, #0
90018242:	dc03      	bgt.n	9001824c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018244:	9b15      	ldr	r3, [sp, #84]	; 0x54
90018246:	2b00      	cmp	r3, #0
90018248:	f340 8226 	ble.w	90018698 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
9001824c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
9001824e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90018252:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90018256:	1e48      	subs	r0, r1, #1
90018258:	1e57      	subs	r7, r2, #1
9001825a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001825c:	2b00      	cmp	r3, #0
9001825e:	f340 80e4 	ble.w	9001842a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90018262:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90018266:	ea4f 4325 	mov.w	r3, r5, asr #16
9001826a:	d406      	bmi.n	9001827a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001826c:	4584      	cmp	ip, r0
9001826e:	da04      	bge.n	9001827a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018270:	2b00      	cmp	r3, #0
90018272:	db02      	blt.n	9001827a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018274:	42bb      	cmp	r3, r7
90018276:	f2c0 80d9 	blt.w	9001842c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001827a:	f11c 0c01 	adds.w	ip, ip, #1
9001827e:	f100 80ca 	bmi.w	90018416 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90018282:	4561      	cmp	r1, ip
90018284:	f2c0 80c7 	blt.w	90018416 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90018288:	3301      	adds	r3, #1
9001828a:	f100 80c4 	bmi.w	90018416 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
9001828e:	429a      	cmp	r2, r3
90018290:	f2c0 80c1 	blt.w	90018416 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90018294:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90018298:	4647      	mov	r7, r8
9001829a:	f1bb 0f00 	cmp.w	fp, #0
9001829e:	f340 80e4 	ble.w	9001846a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
900182a2:	9a32      	ldr	r2, [sp, #200]	; 0xc8
900182a4:	ea4f 4c25 	mov.w	ip, r5, asr #16
900182a8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
900182aa:	f3ca 3003 	ubfx	r0, sl, #12, #4
900182ae:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900182b2:	ea5f 422a 	movs.w	r2, sl, asr #16
900182b6:	f3c5 3103 	ubfx	r1, r5, #12, #4
900182ba:	689b      	ldr	r3, [r3, #8]
900182bc:	f100 8122 	bmi.w	90018504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
900182c0:	f103 39ff 	add.w	r9, r3, #4294967295
900182c4:	454a      	cmp	r2, r9
900182c6:	f280 811d 	bge.w	90018504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
900182ca:	f1bc 0f00 	cmp.w	ip, #0
900182ce:	f2c0 8119 	blt.w	90018504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
900182d2:	f10e 39ff 	add.w	r9, lr, #4294967295
900182d6:	45cc      	cmp	ip, r9
900182d8:	f280 8114 	bge.w	90018504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
900182dc:	b21b      	sxth	r3, r3
900182de:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900182e0:	fb0c 2203 	mla	r2, ip, r3, r2
900182e4:	eb04 0902 	add.w	r9, r4, r2
900182e8:	5ca2      	ldrb	r2, [r4, r2]
900182ea:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
900182ee:	2800      	cmp	r0, #0
900182f0:	f000 80ff 	beq.w	900184f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
900182f4:	f899 2001 	ldrb.w	r2, [r9, #1]
900182f8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
900182fc:	9211      	str	r2, [sp, #68]	; 0x44
900182fe:	b151      	cbz	r1, 90018316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
90018300:	eb09 0203 	add.w	r2, r9, r3
90018304:	f819 3003 	ldrb.w	r3, [r9, r3]
90018308:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001830c:	930f      	str	r3, [sp, #60]	; 0x3c
9001830e:	7853      	ldrb	r3, [r2, #1]
90018310:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90018314:	9312      	str	r3, [sp, #72]	; 0x48
90018316:	9b11      	ldr	r3, [sp, #68]	; 0x44
90018318:	fb10 f201 	smulbb	r2, r0, r1
9001831c:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001831e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90018322:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90018326:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9001832a:	10d2      	asrs	r2, r2, #3
9001832c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90018330:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90018334:	ea4c 0c03 	orr.w	ip, ip, r3
90018338:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001833a:	041b      	lsls	r3, r3, #16
9001833c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90018340:	4323      	orrs	r3, r4
90018342:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90018344:	4353      	muls	r3, r2
90018346:	fb09 330c 	mla	r3, r9, ip, r3
9001834a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001834e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90018352:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90018356:	ea4c 0e0e 	orr.w	lr, ip, lr
9001835a:	f1c1 0c10 	rsb	ip, r1, #16
9001835e:	ebac 0c00 	sub.w	ip, ip, r0
90018362:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90018366:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001836a:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001836e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90018370:	0418      	lsls	r0, r3, #16
90018372:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90018376:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001837a:	4318      	orrs	r0, r3
9001837c:	fb02 c200 	mla	r2, r2, r0, ip
90018380:	f8b7 c000 	ldrh.w	ip, [r7]
90018384:	0d53      	lsrs	r3, r2, #21
90018386:	0952      	lsrs	r2, r2, #5
90018388:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001838c:	ea4f 212c 	mov.w	r1, ip, asr #8
90018390:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90018394:	ea4f 0eec 	mov.w	lr, ip, asr #3
90018398:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001839c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900183a0:	431a      	orrs	r2, r3
900183a2:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
900183a6:	fb11 f104 	smulbb	r1, r1, r4
900183aa:	fa5f fc8c 	uxtb.w	ip, ip
900183ae:	b292      	uxth	r2, r2
900183b0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
900183b4:	fb1c fc04 	smulbb	ip, ip, r4
900183b8:	fb1e fe04 	smulbb	lr, lr, r4
900183bc:	1210      	asrs	r0, r2, #8
900183be:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900183c2:	fb00 1003 	mla	r0, r0, r3, r1
900183c6:	10d1      	asrs	r1, r2, #3
900183c8:	00d2      	lsls	r2, r2, #3
900183ca:	b280      	uxth	r0, r0
900183cc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900183d0:	b2d2      	uxtb	r2, r2
900183d2:	fb01 e103 	mla	r1, r1, r3, lr
900183d6:	fb02 c203 	mla	r2, r2, r3, ip
900183da:	1c43      	adds	r3, r0, #1
900183dc:	b289      	uxth	r1, r1
900183de:	b292      	uxth	r2, r2
900183e0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900183e4:	f102 0c01 	add.w	ip, r2, #1
900183e8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
900183ec:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
900183f0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900183f4:	4313      	orrs	r3, r2
900183f6:	1c4a      	adds	r2, r1, #1
900183f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900183fc:	0949      	lsrs	r1, r1, #5
900183fe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90018402:	430b      	orrs	r3, r1
90018404:	803b      	strh	r3, [r7, #0]
90018406:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90018408:	3702      	adds	r7, #2
9001840a:	f10b 3bff 	add.w	fp, fp, #4294967295
9001840e:	449a      	add	sl, r3
90018410:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90018412:	441d      	add	r5, r3
90018414:	e741      	b.n	9001829a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
90018416:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90018418:	f108 0802 	add.w	r8, r8, #2
9001841c:	449a      	add	sl, r3
9001841e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90018420:	441d      	add	r5, r3
90018422:	9b09      	ldr	r3, [sp, #36]	; 0x24
90018424:	3b01      	subs	r3, #1
90018426:	9309      	str	r3, [sp, #36]	; 0x24
90018428:	e717      	b.n	9001825a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001842a:	d023      	beq.n	90018474 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
9001842c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001842e:	982d      	ldr	r0, [sp, #180]	; 0xb4
90018430:	3b01      	subs	r3, #1
90018432:	fb00 a003 	mla	r0, r0, r3, sl
90018436:	1400      	asrs	r0, r0, #16
90018438:	f53f af2c 	bmi.w	90018294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
9001843c:	3901      	subs	r1, #1
9001843e:	4288      	cmp	r0, r1
90018440:	f6bf af28 	bge.w	90018294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
90018444:	992e      	ldr	r1, [sp, #184]	; 0xb8
90018446:	fb01 5303 	mla	r3, r1, r3, r5
9001844a:	141b      	asrs	r3, r3, #16
9001844c:	f53f af22 	bmi.w	90018294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
90018450:	3a01      	subs	r2, #1
90018452:	4293      	cmp	r3, r2
90018454:	f6bf af1e 	bge.w	90018294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
90018458:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
9001845c:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
90018460:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
90018464:	f1be 0f00 	cmp.w	lr, #0
90018468:	dc6c      	bgt.n	90018544 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
9001846a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001846c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90018470:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90018474:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90018476:	2b00      	cmp	r3, #0
90018478:	f340 810e 	ble.w	90018698 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
9001847c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90018480:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90018482:	ee3a aa2b 	vadd.f32	s20, s20, s23
90018486:	ee79 9a8b 	vadd.f32	s19, s19, s22
9001848a:	eef0 6a48 	vmov.f32	s13, s16
9001848e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
90018492:	ee39 9a2a 	vadd.f32	s18, s18, s21
90018496:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001849a:	ee16 aa90 	vmov	sl, s13
9001849e:	eef0 6a68 	vmov.f32	s13, s17
900184a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900184a6:	ee16 5a90 	vmov	r5, s13
900184aa:	ee29 7aa7 	vmul.f32	s14, s19, s15
900184ae:	ee69 7a27 	vmul.f32	s15, s18, s15
900184b2:	ee37 8a48 	vsub.f32	s16, s14, s16
900184b6:	ee77 8ae8 	vsub.f32	s17, s15, s17
900184ba:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
900184be:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
900184c2:	ee18 2a10 	vmov	r2, s16
900184c6:	eeb0 8a47 	vmov.f32	s16, s14
900184ca:	fb92 f3f3 	sdiv	r3, r2, r3
900184ce:	ee18 2a90 	vmov	r2, s17
900184d2:	932d      	str	r3, [sp, #180]	; 0xb4
900184d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900184d6:	eef0 8a67 	vmov.f32	s17, s15
900184da:	fb92 f3f3 	sdiv	r3, r2, r3
900184de:	932e      	str	r3, [sp, #184]	; 0xb8
900184e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900184e2:	9a15      	ldr	r2, [sp, #84]	; 0x54
900184e4:	3b01      	subs	r3, #1
900184e6:	930c      	str	r3, [sp, #48]	; 0x30
900184e8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900184ea:	bf08      	it	eq
900184ec:	4613      	moveq	r3, r2
900184ee:	9309      	str	r3, [sp, #36]	; 0x24
900184f0:	e6a5      	b.n	9001823e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
900184f2:	2900      	cmp	r1, #0
900184f4:	f43f af0f 	beq.w	90018316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
900184f8:	f819 3003 	ldrb.w	r3, [r9, r3]
900184fc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90018500:	930f      	str	r3, [sp, #60]	; 0x3c
90018502:	e708      	b.n	90018316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
90018504:	f112 0901 	adds.w	r9, r2, #1
90018508:	f53f af7d 	bmi.w	90018406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001850c:	454b      	cmp	r3, r9
9001850e:	f6ff af7a 	blt.w	90018406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90018512:	f11c 0901 	adds.w	r9, ip, #1
90018516:	f53f af76 	bmi.w	90018406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001851a:	45ce      	cmp	lr, r9
9001851c:	f6ff af73 	blt.w	90018406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90018520:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90018522:	b21b      	sxth	r3, r3
90018524:	9202      	str	r2, [sp, #8]
90018526:	fa0f f28e 	sxth.w	r2, lr
9001852a:	9300      	str	r3, [sp, #0]
9001852c:	4633      	mov	r3, r6
9001852e:	9201      	str	r2, [sp, #4]
90018530:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90018532:	e9cd 1405 	strd	r1, r4, [sp, #20]
90018536:	e9cd c003 	strd	ip, r0, [sp, #12]
9001853a:	4639      	mov	r1, r7
9001853c:	9816      	ldr	r0, [sp, #88]	; 0x58
9001853e:	f7ff fd6f 	bl	90018020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
90018542:	e760      	b.n	90018406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90018544:	9b32      	ldr	r3, [sp, #200]	; 0xc8
90018546:	ea4f 422a 	mov.w	r2, sl, asr #16
9001854a:	1429      	asrs	r1, r5, #16
9001854c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001854e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90018552:	f3ca 3c03 	ubfx	ip, sl, #12, #4
90018556:	f3c5 3003 	ubfx	r0, r5, #12, #4
9001855a:	fb03 2101 	mla	r1, r3, r1, r2
9001855e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90018560:	440a      	add	r2, r1
90018562:	5c61      	ldrb	r1, [r4, r1]
90018564:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
90018568:	f1bc 0f00 	cmp.w	ip, #0
9001856c:	f000 808c 	beq.w	90018688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
90018570:	7857      	ldrb	r7, [r2, #1]
90018572:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90018576:	9413      	str	r4, [sp, #76]	; 0x4c
90018578:	b140      	cbz	r0, 9001858c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
9001857a:	18d7      	adds	r7, r2, r3
9001857c:	5cd3      	ldrb	r3, [r2, r3]
9001857e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90018582:	9310      	str	r3, [sp, #64]	; 0x40
90018584:	787b      	ldrb	r3, [r7, #1]
90018586:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001858a:	9314      	str	r3, [sp, #80]	; 0x50
9001858c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001858e:	fb1c f200 	smulbb	r2, ip, r0
90018592:	9c14      	ldr	r4, [sp, #80]	; 0x50
90018594:	f10e 3eff 	add.w	lr, lr, #4294967295
90018598:	041f      	lsls	r7, r3, #16
9001859a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001859e:	10d2      	asrs	r2, r2, #3
900185a0:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
900185a4:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
900185a8:	431f      	orrs	r7, r3
900185aa:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
900185ae:	9317      	str	r3, [sp, #92]	; 0x5c
900185b0:	9b14      	ldr	r3, [sp, #80]	; 0x50
900185b2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900185b4:	041b      	lsls	r3, r3, #16
900185b6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900185ba:	ea43 030b 	orr.w	r3, r3, fp
900185be:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900185c2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900185c6:	4353      	muls	r3, r2
900185c8:	fb04 3707 	mla	r7, r4, r7, r3
900185cc:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
900185d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900185d2:	ea43 0b01 	orr.w	fp, r3, r1
900185d6:	f1c0 0110 	rsb	r1, r0, #16
900185da:	9b10      	ldr	r3, [sp, #64]	; 0x40
900185dc:	eba1 0c0c 	sub.w	ip, r1, ip
900185e0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900185e4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
900185e8:	fb0c 770b 	mla	r7, ip, fp, r7
900185ec:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900185f0:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
900185f4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900185f8:	ea4c 0c0b 	orr.w	ip, ip, fp
900185fc:	fb02 770c 	mla	r7, r2, ip, r7
90018600:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90018602:	0d79      	lsrs	r1, r7, #21
90018604:	8812      	ldrh	r2, [r2, #0]
90018606:	097f      	lsrs	r7, r7, #5
90018608:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001860c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90018610:	430f      	orrs	r7, r1
90018612:	1211      	asrs	r1, r2, #8
90018614:	b2bb      	uxth	r3, r7
90018616:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001861a:	10d7      	asrs	r7, r2, #3
9001861c:	fb11 f104 	smulbb	r1, r1, r4
90018620:	1218      	asrs	r0, r3, #8
90018622:	00d2      	lsls	r2, r2, #3
90018624:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90018628:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001862c:	fb17 f704 	smulbb	r7, r7, r4
90018630:	b2d2      	uxtb	r2, r2
90018632:	fb00 1009 	mla	r0, r0, r9, r1
90018636:	10d9      	asrs	r1, r3, #3
90018638:	fb12 f204 	smulbb	r2, r2, r4
9001863c:	00db      	lsls	r3, r3, #3
9001863e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90018642:	b280      	uxth	r0, r0
90018644:	b2db      	uxtb	r3, r3
90018646:	fb01 7109 	mla	r1, r1, r9, r7
9001864a:	fb03 2309 	mla	r3, r3, r9, r2
9001864e:	1c42      	adds	r2, r0, #1
90018650:	b289      	uxth	r1, r1
90018652:	b29b      	uxth	r3, r3
90018654:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90018658:	1c4f      	adds	r7, r1, #1
9001865a:	1c5a      	adds	r2, r3, #1
9001865c:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90018660:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90018664:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90018668:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001866a:	0949      	lsrs	r1, r1, #5
9001866c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90018670:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90018674:	4310      	orrs	r0, r2
90018676:	4308      	orrs	r0, r1
90018678:	f823 0b02 	strh.w	r0, [r3], #2
9001867c:	930e      	str	r3, [sp, #56]	; 0x38
9001867e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90018680:	449a      	add	sl, r3
90018682:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90018684:	441d      	add	r5, r3
90018686:	e6ed      	b.n	90018464 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
90018688:	2800      	cmp	r0, #0
9001868a:	f43f af7f 	beq.w	9001858c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
9001868e:	5cd3      	ldrb	r3, [r2, r3]
90018690:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90018694:	9310      	str	r3, [sp, #64]	; 0x40
90018696:	e779      	b.n	9001858c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90018698:	b019      	add	sp, #100	; 0x64
9001869a:	ecbd 8b08 	vpop	{d8-d11}
9001869e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

900186a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900186a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900186a8:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
900186ac:	f9bd e020 	ldrsh.w	lr, [sp, #32]
900186b0:	2e00      	cmp	r6, #0
900186b2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
900186b6:	fb06 570e 	mla	r7, r6, lr, r5
900186ba:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
900186be:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
900186c2:	eb02 0807 	add.w	r8, r2, r7
900186c6:	8808      	ldrh	r0, [r1, #0]
900186c8:	db38      	blt.n	9001873c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
900186ca:	45b1      	cmp	r9, r6
900186cc:	dd36      	ble.n	9001873c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
900186ce:	2d00      	cmp	r5, #0
900186d0:	db32      	blt.n	90018738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
900186d2:	45ae      	cmp	lr, r5
900186d4:	dd30      	ble.n	90018738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
900186d6:	5dd2      	ldrb	r2, [r2, r7]
900186d8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
900186dc:	1c6a      	adds	r2, r5, #1
900186de:	d430      	bmi.n	90018742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
900186e0:	4596      	cmp	lr, r2
900186e2:	dd2e      	ble.n	90018742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
900186e4:	b36c      	cbz	r4, 90018742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
900186e6:	f898 2001 	ldrb.w	r2, [r8, #1]
900186ea:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
900186ee:	3601      	adds	r6, #1
900186f0:	d42b      	bmi.n	9001874a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
900186f2:	45b1      	cmp	r9, r6
900186f4:	dd29      	ble.n	9001874a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
900186f6:	f1bc 0f00 	cmp.w	ip, #0
900186fa:	d028      	beq.n	9001874e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
900186fc:	2d00      	cmp	r5, #0
900186fe:	db22      	blt.n	90018746 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
90018700:	45ae      	cmp	lr, r5
90018702:	dd20      	ble.n	90018746 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
90018704:	f818 600e 	ldrb.w	r6, [r8, lr]
90018708:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
9001870c:	3501      	adds	r5, #1
9001870e:	d407      	bmi.n	90018720 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
90018710:	45ae      	cmp	lr, r5
90018712:	dd05      	ble.n	90018720 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
90018714:	b134      	cbz	r4, 90018724 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90018716:	44c6      	add	lr, r8
90018718:	f89e 0001 	ldrb.w	r0, [lr, #1]
9001871c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90018720:	2c0f      	cmp	r4, #15
90018722:	d802      	bhi.n	9001872a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
90018724:	f1bc 0f0f 	cmp.w	ip, #15
90018728:	d914      	bls.n	90018754 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
9001872a:	4b26      	ldr	r3, [pc, #152]	; (900187c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
9001872c:	f240 11ef 	movw	r1, #495	; 0x1ef
90018730:	4a25      	ldr	r2, [pc, #148]	; (900187c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
90018732:	4826      	ldr	r0, [pc, #152]	; (900187cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
90018734:	f006 fdb6 	bl	9001f2a4 <__assert_func>
90018738:	4607      	mov	r7, r0
9001873a:	e7cf      	b.n	900186dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
9001873c:	4602      	mov	r2, r0
9001873e:	4607      	mov	r7, r0
90018740:	e7d5      	b.n	900186ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
90018742:	4602      	mov	r2, r0
90018744:	e7d3      	b.n	900186ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
90018746:	4606      	mov	r6, r0
90018748:	e7e0      	b.n	9001870c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
9001874a:	4606      	mov	r6, r0
9001874c:	e7e8      	b.n	90018720 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
9001874e:	2c0f      	cmp	r4, #15
90018750:	d8eb      	bhi.n	9001872a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
90018752:	4606      	mov	r6, r0
90018754:	fb14 f30c 	smulbb	r3, r4, ip
90018758:	043d      	lsls	r5, r7, #16
9001875a:	ea4f 4e02 	mov.w	lr, r2, lsl #16
9001875e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90018762:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
90018766:	10db      	asrs	r3, r3, #3
90018768:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9001876c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90018770:	432f      	orrs	r7, r5
90018772:	f1cc 0510 	rsb	r5, ip, #16
90018776:	ea4e 0202 	orr.w	r2, lr, r2
9001877a:	1b2d      	subs	r5, r5, r4
9001877c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
90018780:	eb03 0545 	add.w	r5, r3, r5, lsl #1
90018784:	4354      	muls	r4, r2
90018786:	fb05 4507 	mla	r5, r5, r7, r4
9001878a:	0404      	lsls	r4, r0, #16
9001878c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90018790:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90018794:	4320      	orrs	r0, r4
90018796:	fb03 5400 	mla	r4, r3, r0, r5
9001879a:	0430      	lsls	r0, r6, #16
9001879c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
900187a0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900187a4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900187a8:	4330      	orrs	r0, r6
900187aa:	fb03 4000 	mla	r0, r3, r0, r4
900187ae:	0d43      	lsrs	r3, r0, #21
900187b0:	0940      	lsrs	r0, r0, #5
900187b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900187b6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900187ba:	4318      	orrs	r0, r3
900187bc:	8008      	strh	r0, [r1, #0]
900187be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900187c2:	bf00      	nop
900187c4:	900236e6 	.word	0x900236e6
900187c8:	90023d52 	.word	0x90023d52
900187cc:	900237cf 	.word	0x900237cf

900187d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900187d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900187d4:	ed2d 8b0a 	vpush	{d8-d12}
900187d8:	b093      	sub	sp, #76	; 0x4c
900187da:	eeb0 aa40 	vmov.f32	s20, s0
900187de:	eef0 9a60 	vmov.f32	s19, s1
900187e2:	920f      	str	r2, [sp, #60]	; 0x3c
900187e4:	eeb0 9a41 	vmov.f32	s18, s2
900187e8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
900187ea:	eeb0 8a62 	vmov.f32	s16, s5
900187ee:	9010      	str	r0, [sp, #64]	; 0x40
900187f0:	eef0 8a43 	vmov.f32	s17, s6
900187f4:	6850      	ldr	r0, [r2, #4]
900187f6:	eeb0 ca44 	vmov.f32	s24, s8
900187fa:	9108      	str	r1, [sp, #32]
900187fc:	eef0 ba64 	vmov.f32	s23, s9
90018800:	9306      	str	r3, [sp, #24]
90018802:	eeb0 ba45 	vmov.f32	s22, s10
90018806:	6812      	ldr	r2, [r2, #0]
90018808:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
9001880c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
90018810:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
90018814:	fb00 1303 	mla	r3, r0, r3, r1
90018818:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9001881c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9001881e:	681b      	ldr	r3, [r3, #0]
90018820:	9307      	str	r3, [sp, #28]
90018822:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90018824:	685f      	ldr	r7, [r3, #4]
90018826:	3704      	adds	r7, #4
90018828:	9b08      	ldr	r3, [sp, #32]
9001882a:	2b00      	cmp	r3, #0
9001882c:	dc03      	bgt.n	90018836 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001882e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90018830:	2b00      	cmp	r3, #0
90018832:	f340 81b2 	ble.w	90018b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
90018836:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90018838:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001883c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90018840:	1e48      	subs	r0, r1, #1
90018842:	f102 3cff 	add.w	ip, r2, #4294967295
90018846:	9b06      	ldr	r3, [sp, #24]
90018848:	2b00      	cmp	r3, #0
9001884a:	f340 80a9 	ble.w	900189a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
9001884e:	ea5f 4e24 	movs.w	lr, r4, asr #16
90018852:	ea4f 4326 	mov.w	r3, r6, asr #16
90018856:	d406      	bmi.n	90018866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90018858:	4586      	cmp	lr, r0
9001885a:	da04      	bge.n	90018866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001885c:	2b00      	cmp	r3, #0
9001885e:	db02      	blt.n	90018866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90018860:	4563      	cmp	r3, ip
90018862:	f2c0 809e 	blt.w	900189a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90018866:	f11e 0e01 	adds.w	lr, lr, #1
9001886a:	f100 808f 	bmi.w	9001898c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
9001886e:	4571      	cmp	r1, lr
90018870:	f2c0 808c 	blt.w	9001898c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
90018874:	3301      	adds	r3, #1
90018876:	f100 8089 	bmi.w	9001898c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
9001887a:	429a      	cmp	r2, r3
9001887c:	f2c0 8086 	blt.w	9001898c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
90018880:	f8dd b018 	ldr.w	fp, [sp, #24]
90018884:	46c8      	mov	r8, r9
90018886:	f1bb 0f00 	cmp.w	fp, #0
9001888a:	f340 80a6 	ble.w	900189da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
9001888e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
90018890:	ea4f 4c26 	mov.w	ip, r6, asr #16
90018894:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90018896:	f3c4 3003 	ubfx	r0, r4, #12, #4
9001889a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001889e:	1422      	asrs	r2, r4, #16
900188a0:	f3c6 3103 	ubfx	r1, r6, #12, #4
900188a4:	689b      	ldr	r3, [r3, #8]
900188a6:	f100 80e3 	bmi.w	90018a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
900188aa:	f103 3aff 	add.w	sl, r3, #4294967295
900188ae:	4552      	cmp	r2, sl
900188b0:	f280 80de 	bge.w	90018a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
900188b4:	f1bc 0f00 	cmp.w	ip, #0
900188b8:	f2c0 80da 	blt.w	90018a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
900188bc:	f10e 3aff 	add.w	sl, lr, #4294967295
900188c0:	45d4      	cmp	ip, sl
900188c2:	f280 80d5 	bge.w	90018a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
900188c6:	b21b      	sxth	r3, r3
900188c8:	9d07      	ldr	r5, [sp, #28]
900188ca:	fb0c 2203 	mla	r2, ip, r3, r2
900188ce:	eb05 0a02 	add.w	sl, r5, r2
900188d2:	5caa      	ldrb	r2, [r5, r2]
900188d4:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
900188d8:	2800      	cmp	r0, #0
900188da:	f000 80c0 	beq.w	90018a5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
900188de:	f89a 2001 	ldrb.w	r2, [sl, #1]
900188e2:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
900188e6:	920b      	str	r2, [sp, #44]	; 0x2c
900188e8:	b151      	cbz	r1, 90018900 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
900188ea:	eb0a 0203 	add.w	r2, sl, r3
900188ee:	f81a 3003 	ldrb.w	r3, [sl, r3]
900188f2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900188f6:	9309      	str	r3, [sp, #36]	; 0x24
900188f8:	7853      	ldrb	r3, [r2, #1]
900188fa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900188fe:	930c      	str	r3, [sp, #48]	; 0x30
90018900:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90018902:	fb10 f201 	smulbb	r2, r0, r1
90018906:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90018908:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001890c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90018910:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90018914:	10d2      	asrs	r2, r2, #3
90018916:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001891a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9001891e:	ea4c 0c03 	orr.w	ip, ip, r3
90018922:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90018924:	041b      	lsls	r3, r3, #16
90018926:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001892a:	432b      	orrs	r3, r5
9001892c:	4353      	muls	r3, r2
9001892e:	fb0a 330c 	mla	r3, sl, ip, r3
90018932:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90018936:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001893a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001893e:	ea4c 0e0e 	orr.w	lr, ip, lr
90018942:	f1c1 0c10 	rsb	ip, r1, #16
90018946:	ebac 0c00 	sub.w	ip, ip, r0
9001894a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001894e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90018952:	fb0c 3c0e 	mla	ip, ip, lr, r3
90018956:	9b09      	ldr	r3, [sp, #36]	; 0x24
90018958:	0418      	lsls	r0, r3, #16
9001895a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001895e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90018962:	4318      	orrs	r0, r3
90018964:	fb02 c200 	mla	r2, r2, r0, ip
90018968:	0d53      	lsrs	r3, r2, #21
9001896a:	0952      	lsrs	r2, r2, #5
9001896c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90018970:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90018974:	431a      	orrs	r2, r3
90018976:	f8a8 2000 	strh.w	r2, [r8]
9001897a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001897c:	f108 0802 	add.w	r8, r8, #2
90018980:	f10b 3bff 	add.w	fp, fp, #4294967295
90018984:	441c      	add	r4, r3
90018986:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90018988:	441e      	add	r6, r3
9001898a:	e77c      	b.n	90018886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
9001898c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001898e:	f109 0902 	add.w	r9, r9, #2
90018992:	441c      	add	r4, r3
90018994:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90018996:	441e      	add	r6, r3
90018998:	9b06      	ldr	r3, [sp, #24]
9001899a:	3b01      	subs	r3, #1
9001899c:	9306      	str	r3, [sp, #24]
9001899e:	e752      	b.n	90018846 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900189a0:	d020      	beq.n	900189e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900189a2:	9b06      	ldr	r3, [sp, #24]
900189a4:	9829      	ldr	r0, [sp, #164]	; 0xa4
900189a6:	3b01      	subs	r3, #1
900189a8:	fb00 4003 	mla	r0, r0, r3, r4
900189ac:	1400      	asrs	r0, r0, #16
900189ae:	f53f af67 	bmi.w	90018880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
900189b2:	3901      	subs	r1, #1
900189b4:	4288      	cmp	r0, r1
900189b6:	f6bf af63 	bge.w	90018880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
900189ba:	992a      	ldr	r1, [sp, #168]	; 0xa8
900189bc:	fb01 6303 	mla	r3, r1, r3, r6
900189c0:	141b      	asrs	r3, r3, #16
900189c2:	f53f af5d 	bmi.w	90018880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
900189c6:	3a01      	subs	r2, #1
900189c8:	4293      	cmp	r3, r2
900189ca:	f6bf af59 	bge.w	90018880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
900189ce:	f8dd 8018 	ldr.w	r8, [sp, #24]
900189d2:	46ca      	mov	sl, r9
900189d4:	f1b8 0f00 	cmp.w	r8, #0
900189d8:	dc67      	bgt.n	90018aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900189da:	9b06      	ldr	r3, [sp, #24]
900189dc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900189e0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900189e4:	9b08      	ldr	r3, [sp, #32]
900189e6:	2b00      	cmp	r3, #0
900189e8:	f340 80d7 	ble.w	90018b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
900189ec:	ee3a aa0c 	vadd.f32	s20, s20, s24
900189f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
900189f2:	ee79 9aab 	vadd.f32	s19, s19, s23
900189f6:	eef0 6a48 	vmov.f32	s13, s16
900189fa:	eeca 7a8a 	vdiv.f32	s15, s21, s20
900189fe:	ee39 9a0b 	vadd.f32	s18, s18, s22
90018a02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018a06:	ee16 4a90 	vmov	r4, s13
90018a0a:	eef0 6a68 	vmov.f32	s13, s17
90018a0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018a12:	ee16 6a90 	vmov	r6, s13
90018a16:	ee29 7aa7 	vmul.f32	s14, s19, s15
90018a1a:	ee69 7a27 	vmul.f32	s15, s18, s15
90018a1e:	ee37 8a48 	vsub.f32	s16, s14, s16
90018a22:	ee77 8ae8 	vsub.f32	s17, s15, s17
90018a26:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
90018a2a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
90018a2e:	ee18 2a10 	vmov	r2, s16
90018a32:	eeb0 8a47 	vmov.f32	s16, s14
90018a36:	fb92 f3f3 	sdiv	r3, r2, r3
90018a3a:	ee18 2a90 	vmov	r2, s17
90018a3e:	9329      	str	r3, [sp, #164]	; 0xa4
90018a40:	9b26      	ldr	r3, [sp, #152]	; 0x98
90018a42:	eef0 8a67 	vmov.f32	s17, s15
90018a46:	fb92 f3f3 	sdiv	r3, r2, r3
90018a4a:	932a      	str	r3, [sp, #168]	; 0xa8
90018a4c:	9b08      	ldr	r3, [sp, #32]
90018a4e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90018a50:	3b01      	subs	r3, #1
90018a52:	9308      	str	r3, [sp, #32]
90018a54:	9b26      	ldr	r3, [sp, #152]	; 0x98
90018a56:	bf08      	it	eq
90018a58:	4613      	moveq	r3, r2
90018a5a:	9306      	str	r3, [sp, #24]
90018a5c:	e6e4      	b.n	90018828 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90018a5e:	2900      	cmp	r1, #0
90018a60:	f43f af4e 	beq.w	90018900 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
90018a64:	f81a 3003 	ldrb.w	r3, [sl, r3]
90018a68:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90018a6c:	9309      	str	r3, [sp, #36]	; 0x24
90018a6e:	e747      	b.n	90018900 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
90018a70:	f112 0a01 	adds.w	sl, r2, #1
90018a74:	d481      	bmi.n	9001897a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
90018a76:	4553      	cmp	r3, sl
90018a78:	f6ff af7f 	blt.w	9001897a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
90018a7c:	f11c 0a01 	adds.w	sl, ip, #1
90018a80:	f53f af7b 	bmi.w	9001897a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
90018a84:	45d6      	cmp	lr, sl
90018a86:	f6ff af78 	blt.w	9001897a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
90018a8a:	b21b      	sxth	r3, r3
90018a8c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
90018a90:	fa0f f28e 	sxth.w	r2, lr
90018a94:	9300      	str	r3, [sp, #0]
90018a96:	463b      	mov	r3, r7
90018a98:	9201      	str	r2, [sp, #4]
90018a9a:	9a07      	ldr	r2, [sp, #28]
90018a9c:	e9cd 0104 	strd	r0, r1, [sp, #16]
90018aa0:	4641      	mov	r1, r8
90018aa2:	9810      	ldr	r0, [sp, #64]	; 0x40
90018aa4:	f7ff fdfe 	bl	900186a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90018aa8:	e767      	b.n	9001897a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
90018aaa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90018aac:	1422      	asrs	r2, r4, #16
90018aae:	1431      	asrs	r1, r6, #16
90018ab0:	9d07      	ldr	r5, [sp, #28]
90018ab2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90018ab6:	f3c4 3e03 	ubfx	lr, r4, #12, #4
90018aba:	f3c6 3003 	ubfx	r0, r6, #12, #4
90018abe:	fb03 2101 	mla	r1, r3, r1, r2
90018ac2:	9a07      	ldr	r2, [sp, #28]
90018ac4:	440a      	add	r2, r1
90018ac6:	5c69      	ldrb	r1, [r5, r1]
90018ac8:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
90018acc:	f1be 0f00 	cmp.w	lr, #0
90018ad0:	d05c      	beq.n	90018b8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
90018ad2:	f892 c001 	ldrb.w	ip, [r2, #1]
90018ad6:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
90018ada:	950d      	str	r5, [sp, #52]	; 0x34
90018adc:	b150      	cbz	r0, 90018af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
90018ade:	eb02 0c03 	add.w	ip, r2, r3
90018ae2:	5cd3      	ldrb	r3, [r2, r3]
90018ae4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90018ae8:	930a      	str	r3, [sp, #40]	; 0x28
90018aea:	f89c 3001 	ldrb.w	r3, [ip, #1]
90018aee:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90018af2:	930e      	str	r3, [sp, #56]	; 0x38
90018af4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90018af6:	fb1e f200 	smulbb	r2, lr, r0
90018afa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90018afc:	f108 38ff 	add.w	r8, r8, #4294967295
90018b00:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90018b04:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90018b08:	10d2      	asrs	r2, r2, #3
90018b0a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
90018b0e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90018b12:	ea4c 0c03 	orr.w	ip, ip, r3
90018b16:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90018b1a:	9311      	str	r3, [sp, #68]	; 0x44
90018b1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018b1e:	9d11      	ldr	r5, [sp, #68]	; 0x44
90018b20:	041b      	lsls	r3, r3, #16
90018b22:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90018b26:	ea43 030b 	orr.w	r3, r3, fp
90018b2a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90018b2e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90018b32:	4353      	muls	r3, r2
90018b34:	fb05 3c0c 	mla	ip, r5, ip, r3
90018b38:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
90018b3c:	ea43 0b01 	orr.w	fp, r3, r1
90018b40:	f1c0 0110 	rsb	r1, r0, #16
90018b44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90018b46:	eba1 0e0e 	sub.w	lr, r1, lr
90018b4a:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90018b4e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90018b52:	fb0e cc0b 	mla	ip, lr, fp, ip
90018b56:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90018b5a:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
90018b5e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90018b62:	ea4b 0e0e 	orr.w	lr, fp, lr
90018b66:	fb02 cc0e 	mla	ip, r2, lr, ip
90018b6a:	ea4f 535c 	mov.w	r3, ip, lsr #21
90018b6e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90018b72:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90018b76:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90018b7a:	ea43 0c0c 	orr.w	ip, r3, ip
90018b7e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90018b80:	441c      	add	r4, r3
90018b82:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90018b84:	f82a cb02 	strh.w	ip, [sl], #2
90018b88:	441e      	add	r6, r3
90018b8a:	e723      	b.n	900189d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90018b8c:	2800      	cmp	r0, #0
90018b8e:	d0b1      	beq.n	90018af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
90018b90:	5cd3      	ldrb	r3, [r2, r3]
90018b92:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90018b96:	930a      	str	r3, [sp, #40]	; 0x28
90018b98:	e7ac      	b.n	90018af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
90018b9a:	b013      	add	sp, #76	; 0x4c
90018b9c:	ecbd 8b0a 	vpop	{d8-d12}
90018ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90018ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
90018ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018ba8:	468b      	mov	fp, r1
90018baa:	8809      	ldrh	r1, [r1, #0]
90018bac:	b089      	sub	sp, #36	; 0x24
90018bae:	10cd      	asrs	r5, r1, #3
90018bb0:	ea4f 2921 	mov.w	r9, r1, asr #8
90018bb4:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
90018bb8:	00c9      	lsls	r1, r1, #3
90018bba:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90018bbe:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
90018bc2:	9202      	str	r2, [sp, #8]
90018bc4:	b2c9      	uxtb	r1, r1
90018bc6:	9500      	str	r5, [sp, #0]
90018bc8:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
90018bcc:	9101      	str	r1, [sp, #4]
90018bce:	9900      	ldr	r1, [sp, #0]
90018bd0:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
90018bd4:	0209      	lsls	r1, r1, #8
90018bd6:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
90018bda:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
90018bde:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
90018be2:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
90018be6:	fb04 650e 	mla	r5, r4, lr, r6
90018bea:	2c00      	cmp	r4, #0
90018bec:	eb02 0805 	add.w	r8, r2, r5
90018bf0:	9a01      	ldr	r2, [sp, #4]
90018bf2:	ea41 0102 	orr.w	r1, r1, r2
90018bf6:	9107      	str	r1, [sp, #28]
90018bf8:	db43      	blt.n	90018c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xde>
90018bfa:	45a2      	cmp	sl, r4
90018bfc:	dd41      	ble.n	90018c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xde>
90018bfe:	2e00      	cmp	r6, #0
90018c00:	db3d      	blt.n	90018c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xda>
90018c02:	45b6      	cmp	lr, r6
90018c04:	dd3b      	ble.n	90018c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xda>
90018c06:	9a02      	ldr	r2, [sp, #8]
90018c08:	5d55      	ldrb	r5, [r2, r5]
90018c0a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90018c0e:	441d      	add	r5, r3
90018c10:	1c72      	adds	r2, r6, #1
90018c12:	d439      	bmi.n	90018c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe4>
90018c14:	4596      	cmp	lr, r2
90018c16:	dd37      	ble.n	90018c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe4>
90018c18:	2f00      	cmp	r7, #0
90018c1a:	d035      	beq.n	90018c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe4>
90018c1c:	f898 1001 	ldrb.w	r1, [r8, #1]
90018c20:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90018c24:	4419      	add	r1, r3
90018c26:	3401      	adds	r4, #1
90018c28:	d432      	bmi.n	90018c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xec>
90018c2a:	45a2      	cmp	sl, r4
90018c2c:	dd30      	ble.n	90018c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xec>
90018c2e:	b378      	cbz	r0, 90018c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xec>
90018c30:	2e00      	cmp	r6, #0
90018c32:	db2b      	blt.n	90018c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe8>
90018c34:	45b6      	cmp	lr, r6
90018c36:	dd29      	ble.n	90018c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe8>
90018c38:	f818 400e 	ldrb.w	r4, [r8, lr]
90018c3c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90018c40:	441c      	add	r4, r3
90018c42:	3601      	adds	r6, #1
90018c44:	d427      	bmi.n	90018c96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf2>
90018c46:	45b6      	cmp	lr, r6
90018c48:	dd25      	ble.n	90018c96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf2>
90018c4a:	b327      	cbz	r7, 90018c96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf2>
90018c4c:	44c6      	add	lr, r8
90018c4e:	f89e 2001 	ldrb.w	r2, [lr, #1]
90018c52:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90018c56:	4413      	add	r3, r2
90018c58:	782a      	ldrb	r2, [r5, #0]
90018c5a:	2f0f      	cmp	r7, #15
90018c5c:	9202      	str	r2, [sp, #8]
90018c5e:	780a      	ldrb	r2, [r1, #0]
90018c60:	9203      	str	r2, [sp, #12]
90018c62:	7822      	ldrb	r2, [r4, #0]
90018c64:	9204      	str	r2, [sp, #16]
90018c66:	781a      	ldrb	r2, [r3, #0]
90018c68:	9205      	str	r2, [sp, #20]
90018c6a:	d801      	bhi.n	90018c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xcc>
90018c6c:	280f      	cmp	r0, #15
90018c6e:	d914      	bls.n	90018c9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf6>
90018c70:	4b3f      	ldr	r3, [pc, #252]	; (90018d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
90018c72:	f240 210d 	movw	r1, #525	; 0x20d
90018c76:	4a3f      	ldr	r2, [pc, #252]	; (90018d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
90018c78:	483f      	ldr	r0, [pc, #252]	; (90018d78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>)
90018c7a:	f006 fb13 	bl	9001f2a4 <__assert_func>
90018c7e:	ad07      	add	r5, sp, #28
90018c80:	e7c6      	b.n	90018c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6c>
90018c82:	a907      	add	r1, sp, #28
90018c84:	460d      	mov	r5, r1
90018c86:	e7ce      	b.n	90018c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x82>
90018c88:	a907      	add	r1, sp, #28
90018c8a:	e7cc      	b.n	90018c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x82>
90018c8c:	ac07      	add	r4, sp, #28
90018c8e:	e7d8      	b.n	90018c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9e>
90018c90:	ab07      	add	r3, sp, #28
90018c92:	461c      	mov	r4, r3
90018c94:	e7e0      	b.n	90018c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90018c96:	ab07      	add	r3, sp, #28
90018c98:	e7de      	b.n	90018c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90018c9a:	b2ba      	uxth	r2, r7
90018c9c:	f891 8002 	ldrb.w	r8, [r1, #2]
90018ca0:	b280      	uxth	r0, r0
90018ca2:	7849      	ldrb	r1, [r1, #1]
90018ca4:	78ae      	ldrb	r6, [r5, #2]
90018ca6:	fa1f f78c 	uxth.w	r7, ip
90018caa:	fb02 fa00 	mul.w	sl, r2, r0
90018cae:	0112      	lsls	r2, r2, #4
90018cb0:	786d      	ldrb	r5, [r5, #1]
90018cb2:	ea6f 0c0c 	mvn.w	ip, ip
90018cb6:	ebca 1000 	rsb	r0, sl, r0, lsl #4
90018cba:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
90018cbe:	eba2 020a 	sub.w	r2, r2, sl
90018cc2:	fa5f fc8c 	uxtb.w	ip, ip
90018cc6:	b280      	uxth	r0, r0
90018cc8:	fb19 f90c 	smulbb	r9, r9, ip
90018ccc:	b292      	uxth	r2, r2
90018cce:	ebae 0e00 	sub.w	lr, lr, r0
90018cd2:	4351      	muls	r1, r2
90018cd4:	fa1f fe8e 	uxth.w	lr, lr
90018cd8:	fb02 f808 	mul.w	r8, r2, r8
90018cdc:	fb0e 1505 	mla	r5, lr, r5, r1
90018ce0:	7861      	ldrb	r1, [r4, #1]
90018ce2:	fb0e 8806 	mla	r8, lr, r6, r8
90018ce6:	78a6      	ldrb	r6, [r4, #2]
90018ce8:	fb00 5501 	mla	r5, r0, r1, r5
90018cec:	7859      	ldrb	r1, [r3, #1]
90018cee:	fb00 8806 	mla	r8, r0, r6, r8
90018cf2:	789e      	ldrb	r6, [r3, #2]
90018cf4:	9b00      	ldr	r3, [sp, #0]
90018cf6:	fb0a 5101 	mla	r1, sl, r1, r5
90018cfa:	fb0a 8606 	mla	r6, sl, r6, r8
90018cfe:	fb13 f50c 	smulbb	r5, r3, ip
90018d02:	9b03      	ldr	r3, [sp, #12]
90018d04:	f3c6 2607 	ubfx	r6, r6, #8, #8
90018d08:	f3c1 2107 	ubfx	r1, r1, #8, #8
90018d0c:	435a      	muls	r2, r3
90018d0e:	9b02      	ldr	r3, [sp, #8]
90018d10:	fb06 9607 	mla	r6, r6, r7, r9
90018d14:	fb0e 2203 	mla	r2, lr, r3, r2
90018d18:	9b04      	ldr	r3, [sp, #16]
90018d1a:	fb01 5107 	mla	r1, r1, r7, r5
90018d1e:	b2b6      	uxth	r6, r6
90018d20:	fb00 2003 	mla	r0, r0, r3, r2
90018d24:	9b05      	ldr	r3, [sp, #20]
90018d26:	b289      	uxth	r1, r1
90018d28:	f106 0901 	add.w	r9, r6, #1
90018d2c:	fb0a 0a03 	mla	sl, sl, r3, r0
90018d30:	9b01      	ldr	r3, [sp, #4]
90018d32:	1c4d      	adds	r5, r1, #1
90018d34:	eb09 2616 	add.w	r6, r9, r6, lsr #8
90018d38:	fb13 fc0c 	smulbb	ip, r3, ip
90018d3c:	f3ca 2a07 	ubfx	sl, sl, #8, #8
90018d40:	eb05 2111 	add.w	r1, r5, r1, lsr #8
90018d44:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
90018d48:	fb0a c707 	mla	r7, sl, r7, ip
90018d4c:	0949      	lsrs	r1, r1, #5
90018d4e:	b2bf      	uxth	r7, r7
90018d50:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90018d54:	f107 0c01 	add.w	ip, r7, #1
90018d58:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
90018d5c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90018d60:	433e      	orrs	r6, r7
90018d62:	430e      	orrs	r6, r1
90018d64:	f8ab 6000 	strh.w	r6, [fp]
90018d68:	b009      	add	sp, #36	; 0x24
90018d6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018d6e:	bf00      	nop
90018d70:	900236e6 	.word	0x900236e6
90018d74:	90023ca9 	.word	0x90023ca9
90018d78:	900237cf 	.word	0x900237cf

90018d7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018d80:	ed2d 8b08 	vpush	{d8-d11}
90018d84:	b095      	sub	sp, #84	; 0x54
90018d86:	eeb0 aa40 	vmov.f32	s20, s0
90018d8a:	eef0 9a60 	vmov.f32	s19, s1
90018d8e:	9212      	str	r2, [sp, #72]	; 0x48
90018d90:	eeb0 9a41 	vmov.f32	s18, s2
90018d94:	9a2b      	ldr	r2, [sp, #172]	; 0xac
90018d96:	eeb0 8a62 	vmov.f32	s16, s5
90018d9a:	9309      	str	r3, [sp, #36]	; 0x24
90018d9c:	eef0 8a43 	vmov.f32	s17, s6
90018da0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
90018da4:	eef0 ba44 	vmov.f32	s23, s8
90018da8:	9013      	str	r0, [sp, #76]	; 0x4c
90018daa:	eeb0 ba64 	vmov.f32	s22, s9
90018dae:	930f      	str	r3, [sp, #60]	; 0x3c
90018db0:	eef0 aa45 	vmov.f32	s21, s10
90018db4:	6850      	ldr	r0, [r2, #4]
90018db6:	910e      	str	r1, [sp, #56]	; 0x38
90018db8:	6812      	ldr	r2, [r2, #0]
90018dba:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
90018dbe:	fb00 1303 	mla	r3, r0, r3, r1
90018dc2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90018dc6:	930a      	str	r3, [sp, #40]	; 0x28
90018dc8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90018dca:	681b      	ldr	r3, [r3, #0]
90018dcc:	930d      	str	r3, [sp, #52]	; 0x34
90018dce:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90018dd0:	685c      	ldr	r4, [r3, #4]
90018dd2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90018dd4:	3404      	adds	r4, #4
90018dd6:	43db      	mvns	r3, r3
90018dd8:	b2db      	uxtb	r3, r3
90018dda:	930b      	str	r3, [sp, #44]	; 0x2c
90018ddc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018dde:	2b00      	cmp	r3, #0
90018de0:	dc03      	bgt.n	90018dea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90018de2:	9b12      	ldr	r3, [sp, #72]	; 0x48
90018de4:	2b00      	cmp	r3, #0
90018de6:	f340 8258 	ble.w	9001929a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
90018dea:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90018dec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90018df0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90018df4:	1e48      	subs	r0, r1, #1
90018df6:	1e55      	subs	r5, r2, #1
90018df8:	9b09      	ldr	r3, [sp, #36]	; 0x24
90018dfa:	2b00      	cmp	r3, #0
90018dfc:	f340 80fc 	ble.w	90018ff8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90018e00:	9e27      	ldr	r6, [sp, #156]	; 0x9c
90018e02:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90018e04:	1436      	asrs	r6, r6, #16
90018e06:	ea4f 4323 	mov.w	r3, r3, asr #16
90018e0a:	d406      	bmi.n	90018e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018e0c:	4286      	cmp	r6, r0
90018e0e:	da04      	bge.n	90018e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018e10:	2b00      	cmp	r3, #0
90018e12:	db02      	blt.n	90018e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018e14:	42ab      	cmp	r3, r5
90018e16:	f2c0 80f0 	blt.w	90018ffa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
90018e1a:	3601      	adds	r6, #1
90018e1c:	f100 80dd 	bmi.w	90018fda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
90018e20:	42b1      	cmp	r1, r6
90018e22:	f2c0 80da 	blt.w	90018fda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
90018e26:	3301      	adds	r3, #1
90018e28:	f100 80d7 	bmi.w	90018fda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
90018e2c:	429a      	cmp	r2, r3
90018e2e:	f2c0 80d4 	blt.w	90018fda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
90018e32:	9b09      	ldr	r3, [sp, #36]	; 0x24
90018e34:	9311      	str	r3, [sp, #68]	; 0x44
90018e36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90018e38:	930c      	str	r3, [sp, #48]	; 0x30
90018e3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
90018e3c:	2b00      	cmp	r3, #0
90018e3e:	f340 80fd 	ble.w	9001903c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
90018e42:	982e      	ldr	r0, [sp, #184]	; 0xb8
90018e44:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90018e46:	9a28      	ldr	r2, [sp, #160]	; 0xa0
90018e48:	68c6      	ldr	r6, [r0, #12]
90018e4a:	141d      	asrs	r5, r3, #16
90018e4c:	9827      	ldr	r0, [sp, #156]	; 0x9c
90018e4e:	f3c2 3103 	ubfx	r1, r2, #12, #4
90018e52:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90018e54:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
90018e56:	1400      	asrs	r0, r0, #16
90018e58:	f3c3 3303 	ubfx	r3, r3, #12, #4
90018e5c:	6892      	ldr	r2, [r2, #8]
90018e5e:	f100 8141 	bmi.w	900190e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90018e62:	1e57      	subs	r7, r2, #1
90018e64:	42b8      	cmp	r0, r7
90018e66:	f280 813d 	bge.w	900190e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90018e6a:	2d00      	cmp	r5, #0
90018e6c:	f2c0 813a 	blt.w	900190e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90018e70:	1e77      	subs	r7, r6, #1
90018e72:	42bd      	cmp	r5, r7
90018e74:	f280 8136 	bge.w	900190e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90018e78:	b212      	sxth	r2, r2
90018e7a:	fb05 0002 	mla	r0, r5, r2, r0
90018e7e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90018e80:	f815 a000 	ldrb.w	sl, [r5, r0]
90018e84:	182e      	adds	r6, r5, r0
90018e86:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90018e8a:	eb04 050a 	add.w	r5, r4, sl
90018e8e:	2b00      	cmp	r3, #0
90018e90:	f000 811a 	beq.w	900190c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
90018e94:	f896 c001 	ldrb.w	ip, [r6, #1]
90018e98:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90018e9c:	44a4      	add	ip, r4
90018e9e:	2900      	cmp	r1, #0
90018ea0:	f000 811a 	beq.w	900190d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
90018ea4:	18b0      	adds	r0, r6, r2
90018ea6:	5cb2      	ldrb	r2, [r6, r2]
90018ea8:	7840      	ldrb	r0, [r0, #1]
90018eaa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90018eae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90018eb2:	4422      	add	r2, r4
90018eb4:	4420      	add	r0, r4
90018eb6:	b29b      	uxth	r3, r3
90018eb8:	f89c 7002 	ldrb.w	r7, [ip, #2]
90018ebc:	b289      	uxth	r1, r1
90018ebe:	f895 b002 	ldrb.w	fp, [r5, #2]
90018ec2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
90018ec4:	fb03 f901 	mul.w	r9, r3, r1
90018ec8:	011b      	lsls	r3, r3, #4
90018eca:	f8b6 e000 	ldrh.w	lr, [r6]
90018ece:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90018ed2:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
90018ed6:	eba3 0309 	sub.w	r3, r3, r9
90018eda:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
90018ede:	b289      	uxth	r1, r1
90018ee0:	f814 a00a 	ldrb.w	sl, [r4, sl]
90018ee4:	b29b      	uxth	r3, r3
90018ee6:	eba8 0801 	sub.w	r8, r8, r1
90018eea:	435f      	muls	r7, r3
90018eec:	fa1f f888 	uxth.w	r8, r8
90018ef0:	9310      	str	r3, [sp, #64]	; 0x40
90018ef2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90018ef4:	fb08 770b 	mla	r7, r8, fp, r7
90018ef8:	f892 b002 	ldrb.w	fp, [r2, #2]
90018efc:	fb01 770b 	mla	r7, r1, fp, r7
90018f00:	f890 b002 	ldrb.w	fp, [r0, #2]
90018f04:	fb09 770b 	mla	r7, r9, fp, r7
90018f08:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90018f0c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
90018f10:	f3c7 2707 	ubfx	r7, r7, #8, #8
90018f14:	fb1b fb03 	smulbb	fp, fp, r3
90018f18:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018f1a:	fb07 b706 	mla	r7, r7, r6, fp
90018f1e:	f895 b001 	ldrb.w	fp, [r5, #1]
90018f22:	f89c 5001 	ldrb.w	r5, [ip, #1]
90018f26:	f89c c000 	ldrb.w	ip, [ip]
90018f2a:	b2bf      	uxth	r7, r7
90018f2c:	435d      	muls	r5, r3
90018f2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90018f30:	fb08 550b 	mla	r5, r8, fp, r5
90018f34:	f892 b001 	ldrb.w	fp, [r2, #1]
90018f38:	fb01 550b 	mla	r5, r1, fp, r5
90018f3c:	f890 b001 	ldrb.w	fp, [r0, #1]
90018f40:	fb09 550b 	mla	r5, r9, fp, r5
90018f44:	ea4f 0bee 	mov.w	fp, lr, asr #3
90018f48:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90018f4c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
90018f50:	f3c5 2507 	ubfx	r5, r5, #8, #8
90018f54:	fa5f fe8e 	uxtb.w	lr, lr
90018f58:	fb1b fb03 	smulbb	fp, fp, r3
90018f5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018f5e:	fb03 f30c 	mul.w	r3, r3, ip
90018f62:	f892 c000 	ldrb.w	ip, [r2]
90018f66:	fb05 b506 	mla	r5, r5, r6, fp
90018f6a:	1c7a      	adds	r2, r7, #1
90018f6c:	fb08 330a 	mla	r3, r8, sl, r3
90018f70:	b2ad      	uxth	r5, r5
90018f72:	fb01 330c 	mla	r3, r1, ip, r3
90018f76:	f890 c000 	ldrb.w	ip, [r0]
90018f7a:	f105 0b01 	add.w	fp, r5, #1
90018f7e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90018f82:	fb09 3c0c 	mla	ip, r9, ip, r3
90018f86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90018f88:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90018f8c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90018f90:	fb1e fe03 	smulbb	lr, lr, r3
90018f94:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90018f98:	096d      	lsrs	r5, r5, #5
90018f9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90018f9c:	fb0c ee06 	mla	lr, ip, r6, lr
90018fa0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90018fa4:	fa1f fe8e 	uxth.w	lr, lr
90018fa8:	f10e 0c01 	add.w	ip, lr, #1
90018fac:	eb0c 2e1e 	add.w	lr, ip, lr, lsr #8
90018fb0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90018fb4:	ea47 070e 	orr.w	r7, r7, lr
90018fb8:	433d      	orrs	r5, r7
90018fba:	801d      	strh	r5, [r3, #0]
90018fbc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90018fbe:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90018fc0:	3302      	adds	r3, #2
90018fc2:	930c      	str	r3, [sp, #48]	; 0x30
90018fc4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90018fc6:	4413      	add	r3, r2
90018fc8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90018fca:	9327      	str	r3, [sp, #156]	; 0x9c
90018fcc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90018fce:	4413      	add	r3, r2
90018fd0:	9328      	str	r3, [sp, #160]	; 0xa0
90018fd2:	9b11      	ldr	r3, [sp, #68]	; 0x44
90018fd4:	3b01      	subs	r3, #1
90018fd6:	9311      	str	r3, [sp, #68]	; 0x44
90018fd8:	e72f      	b.n	90018e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
90018fda:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90018fdc:	9e29      	ldr	r6, [sp, #164]	; 0xa4
90018fde:	4433      	add	r3, r6
90018fe0:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
90018fe2:	9327      	str	r3, [sp, #156]	; 0x9c
90018fe4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90018fe6:	4433      	add	r3, r6
90018fe8:	9328      	str	r3, [sp, #160]	; 0xa0
90018fea:	9b09      	ldr	r3, [sp, #36]	; 0x24
90018fec:	3b01      	subs	r3, #1
90018fee:	9309      	str	r3, [sp, #36]	; 0x24
90018ff0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90018ff2:	3302      	adds	r3, #2
90018ff4:	930a      	str	r3, [sp, #40]	; 0x28
90018ff6:	e6ff      	b.n	90018df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018ff8:	d027      	beq.n	9001904a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
90018ffa:	9b09      	ldr	r3, [sp, #36]	; 0x24
90018ffc:	9829      	ldr	r0, [sp, #164]	; 0xa4
90018ffe:	3b01      	subs	r3, #1
90019000:	9d27      	ldr	r5, [sp, #156]	; 0x9c
90019002:	fb00 5003 	mla	r0, r0, r3, r5
90019006:	1400      	asrs	r0, r0, #16
90019008:	f53f af13 	bmi.w	90018e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
9001900c:	3901      	subs	r1, #1
9001900e:	4288      	cmp	r0, r1
90019010:	f6bf af0f 	bge.w	90018e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
90019014:	992a      	ldr	r1, [sp, #168]	; 0xa8
90019016:	9828      	ldr	r0, [sp, #160]	; 0xa0
90019018:	fb01 0303 	mla	r3, r1, r3, r0
9001901c:	141b      	asrs	r3, r3, #16
9001901e:	f53f af08 	bmi.w	90018e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
90019022:	3a01      	subs	r2, #1
90019024:	4293      	cmp	r3, r2
90019026:	f6bf af04 	bge.w	90018e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
9001902a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001902c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
90019030:	9311      	str	r3, [sp, #68]	; 0x44
90019032:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90019034:	930c      	str	r3, [sp, #48]	; 0x30
90019036:	9b11      	ldr	r3, [sp, #68]	; 0x44
90019038:	2b00      	cmp	r3, #0
9001903a:	dc70      	bgt.n	9001911e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
9001903c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001903e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90019040:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019044:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90019048:	930a      	str	r3, [sp, #40]	; 0x28
9001904a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001904c:	2b00      	cmp	r3, #0
9001904e:	f340 8124 	ble.w	9001929a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
90019052:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90019056:	9b26      	ldr	r3, [sp, #152]	; 0x98
90019058:	ee3a aa2b 	vadd.f32	s20, s20, s23
9001905c:	ee79 9a8b 	vadd.f32	s19, s19, s22
90019060:	eef0 6a48 	vmov.f32	s13, s16
90019064:	eec7 7a0a 	vdiv.f32	s15, s14, s20
90019068:	ee39 9a2a 	vadd.f32	s18, s18, s21
9001906c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019070:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
90019074:	eef0 6a68 	vmov.f32	s13, s17
90019078:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001907c:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
90019080:	ee29 7aa7 	vmul.f32	s14, s19, s15
90019084:	ee69 7a27 	vmul.f32	s15, s18, s15
90019088:	ee37 8a48 	vsub.f32	s16, s14, s16
9001908c:	ee77 8ae8 	vsub.f32	s17, s15, s17
90019090:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
90019094:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
90019098:	ee18 2a10 	vmov	r2, s16
9001909c:	eeb0 8a47 	vmov.f32	s16, s14
900190a0:	fb92 f3f3 	sdiv	r3, r2, r3
900190a4:	ee18 2a90 	vmov	r2, s17
900190a8:	9329      	str	r3, [sp, #164]	; 0xa4
900190aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
900190ac:	eef0 8a67 	vmov.f32	s17, s15
900190b0:	fb92 f3f3 	sdiv	r3, r2, r3
900190b4:	932a      	str	r3, [sp, #168]	; 0xa8
900190b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900190b8:	9a12      	ldr	r2, [sp, #72]	; 0x48
900190ba:	3b01      	subs	r3, #1
900190bc:	930e      	str	r3, [sp, #56]	; 0x38
900190be:	9b26      	ldr	r3, [sp, #152]	; 0x98
900190c0:	bf08      	it	eq
900190c2:	4613      	moveq	r3, r2
900190c4:	9309      	str	r3, [sp, #36]	; 0x24
900190c6:	e689      	b.n	90018ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
900190c8:	b149      	cbz	r1, 900190de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900190ca:	5cb2      	ldrb	r2, [r6, r2]
900190cc:	4628      	mov	r0, r5
900190ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900190d2:	4422      	add	r2, r4
900190d4:	46ac      	mov	ip, r5
900190d6:	e6ee      	b.n	90018eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
900190d8:	4628      	mov	r0, r5
900190da:	462a      	mov	r2, r5
900190dc:	e6eb      	b.n	90018eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
900190de:	4628      	mov	r0, r5
900190e0:	462a      	mov	r2, r5
900190e2:	e7f7      	b.n	900190d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900190e4:	1c47      	adds	r7, r0, #1
900190e6:	f53f af69 	bmi.w	90018fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
900190ea:	42ba      	cmp	r2, r7
900190ec:	f6ff af66 	blt.w	90018fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
900190f0:	1c6f      	adds	r7, r5, #1
900190f2:	f53f af63 	bmi.w	90018fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
900190f6:	42be      	cmp	r6, r7
900190f8:	f6ff af60 	blt.w	90018fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
900190fc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
900190fe:	b236      	sxth	r6, r6
90019100:	b212      	sxth	r2, r2
90019102:	9002      	str	r0, [sp, #8]
90019104:	9601      	str	r6, [sp, #4]
90019106:	9200      	str	r2, [sp, #0]
90019108:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001910a:	e9cd 1705 	strd	r1, r7, [sp, #20]
9001910e:	e9cd 5303 	strd	r5, r3, [sp, #12]
90019112:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
90019116:	4623      	mov	r3, r4
90019118:	f7ff fd44 	bl	90018ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
9001911c:	e74e      	b.n	90018fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
9001911e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
90019120:	9828      	ldr	r0, [sp, #160]	; 0xa0
90019122:	f3c2 3103 	ubfx	r1, r2, #12, #4
90019126:	9d27      	ldr	r5, [sp, #156]	; 0x9c
90019128:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
9001912a:	1400      	asrs	r0, r0, #16
9001912c:	142d      	asrs	r5, r5, #16
9001912e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90019130:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90019134:	f3c3 3303 	ubfx	r3, r3, #12, #4
90019138:	fb02 5000 	mla	r0, r2, r0, r5
9001913c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001913e:	f815 9000 	ldrb.w	r9, [r5, r0]
90019142:	182e      	adds	r6, r5, r0
90019144:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90019148:	eb04 0509 	add.w	r5, r4, r9
9001914c:	2b00      	cmp	r3, #0
9001914e:	f000 8096 	beq.w	9001927e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
90019152:	7877      	ldrb	r7, [r6, #1]
90019154:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90019158:	4427      	add	r7, r4
9001915a:	2900      	cmp	r1, #0
9001915c:	f000 8097 	beq.w	9001928e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
90019160:	18b0      	adds	r0, r6, r2
90019162:	5cb2      	ldrb	r2, [r6, r2]
90019164:	7840      	ldrb	r0, [r0, #1]
90019166:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001916a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001916e:	4422      	add	r2, r4
90019170:	4420      	add	r0, r4
90019172:	b29b      	uxth	r3, r3
90019174:	9e0c      	ldr	r6, [sp, #48]	; 0x30
90019176:	b289      	uxth	r1, r1
90019178:	f895 b002 	ldrb.w	fp, [r5, #2]
9001917c:	f8b6 c000 	ldrh.w	ip, [r6]
90019180:	fb03 f801 	mul.w	r8, r3, r1
90019184:	011b      	lsls	r3, r3, #4
90019186:	78be      	ldrb	r6, [r7, #2]
90019188:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
9001918c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90019190:	eba3 0308 	sub.w	r3, r3, r8
90019194:	f814 9009 	ldrb.w	r9, [r4, r9]
90019198:	b289      	uxth	r1, r1
9001919a:	b29b      	uxth	r3, r3
9001919c:	ebae 0e01 	sub.w	lr, lr, r1
900191a0:	435e      	muls	r6, r3
900191a2:	fa1f fe8e 	uxth.w	lr, lr
900191a6:	9310      	str	r3, [sp, #64]	; 0x40
900191a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900191aa:	fb0e 660b 	mla	r6, lr, fp, r6
900191ae:	f892 b002 	ldrb.w	fp, [r2, #2]
900191b2:	fb01 660b 	mla	r6, r1, fp, r6
900191b6:	f890 b002 	ldrb.w	fp, [r0, #2]
900191ba:	fb08 660b 	mla	r6, r8, fp, r6
900191be:	ea4f 2b2c 	mov.w	fp, ip, asr #8
900191c2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
900191c6:	f3c6 2607 	ubfx	r6, r6, #8, #8
900191ca:	fb1b fb03 	smulbb	fp, fp, r3
900191ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
900191d0:	fb06 b60a 	mla	r6, r6, sl, fp
900191d4:	f895 b001 	ldrb.w	fp, [r5, #1]
900191d8:	787d      	ldrb	r5, [r7, #1]
900191da:	783f      	ldrb	r7, [r7, #0]
900191dc:	b2b6      	uxth	r6, r6
900191de:	435d      	muls	r5, r3
900191e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900191e2:	fb0e 550b 	mla	r5, lr, fp, r5
900191e6:	f892 b001 	ldrb.w	fp, [r2, #1]
900191ea:	fb01 550b 	mla	r5, r1, fp, r5
900191ee:	f890 b001 	ldrb.w	fp, [r0, #1]
900191f2:	fb08 550b 	mla	r5, r8, fp, r5
900191f6:	ea4f 0bec 	mov.w	fp, ip, asr #3
900191fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900191fe:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
90019202:	f3c5 2507 	ubfx	r5, r5, #8, #8
90019206:	fa5f fc8c 	uxtb.w	ip, ip
9001920a:	fb1b fb03 	smulbb	fp, fp, r3
9001920e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019210:	437b      	muls	r3, r7
90019212:	7817      	ldrb	r7, [r2, #0]
90019214:	fb05 b50a 	mla	r5, r5, sl, fp
90019218:	fb0e 3309 	mla	r3, lr, r9, r3
9001921c:	b2ad      	uxth	r5, r5
9001921e:	fb01 3307 	mla	r3, r1, r7, r3
90019222:	7807      	ldrb	r7, [r0, #0]
90019224:	f105 0b01 	add.w	fp, r5, #1
90019228:	fb08 3707 	mla	r7, r8, r7, r3
9001922c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001922e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90019232:	fb1c fc03 	smulbb	ip, ip, r3
90019236:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001923a:	1c73      	adds	r3, r6, #1
9001923c:	096d      	lsrs	r5, r5, #5
9001923e:	fb07 c70a 	mla	r7, r7, sl, ip
90019242:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90019246:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001924a:	b2bf      	uxth	r7, r7
9001924c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001924e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
90019252:	1c7a      	adds	r2, r7, #1
90019254:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90019258:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001925c:	4316      	orrs	r6, r2
9001925e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90019260:	432e      	orrs	r6, r5
90019262:	f823 6b02 	strh.w	r6, [r3], #2
90019266:	930c      	str	r3, [sp, #48]	; 0x30
90019268:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001926a:	4413      	add	r3, r2
9001926c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001926e:	9327      	str	r3, [sp, #156]	; 0x9c
90019270:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90019272:	4413      	add	r3, r2
90019274:	9328      	str	r3, [sp, #160]	; 0xa0
90019276:	9b11      	ldr	r3, [sp, #68]	; 0x44
90019278:	3b01      	subs	r3, #1
9001927a:	9311      	str	r3, [sp, #68]	; 0x44
9001927c:	e6db      	b.n	90019036 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001927e:	b149      	cbz	r1, 90019294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
90019280:	5cb2      	ldrb	r2, [r6, r2]
90019282:	4628      	mov	r0, r5
90019284:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90019288:	4422      	add	r2, r4
9001928a:	462f      	mov	r7, r5
9001928c:	e771      	b.n	90019172 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
9001928e:	4628      	mov	r0, r5
90019290:	462a      	mov	r2, r5
90019292:	e76e      	b.n	90019172 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
90019294:	4628      	mov	r0, r5
90019296:	462a      	mov	r2, r5
90019298:	e7f7      	b.n	9001928a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
9001929a:	b015      	add	sp, #84	; 0x54
9001929c:	ecbd 8b08 	vpop	{d8-d11}
900192a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900192a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
900192a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900192a8:	880e      	ldrh	r6, [r1, #0]
900192aa:	b085      	sub	sp, #20
900192ac:	4691      	mov	r9, r2
900192ae:	0230      	lsls	r0, r6, #8
900192b0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
900192b4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
900192b8:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
900192bc:	0170      	lsls	r0, r6, #5
900192be:	00f6      	lsls	r6, r6, #3
900192c0:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
900192c4:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
900192c8:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
900192cc:	b2f6      	uxtb	r6, r6
900192ce:	ea4b 0000 	orr.w	r0, fp, r0
900192d2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
900192d6:	4306      	orrs	r6, r0
900192d8:	fb05 7a0c 	mla	sl, r5, ip, r7
900192dc:	2d00      	cmp	r5, #0
900192de:	9603      	str	r6, [sp, #12]
900192e0:	eb09 0e0a 	add.w	lr, r9, sl
900192e4:	db42      	blt.n	9001936c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
900192e6:	45a8      	cmp	r8, r5
900192e8:	dd40      	ble.n	9001936c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
900192ea:	2f00      	cmp	r7, #0
900192ec:	db3c      	blt.n	90019368 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
900192ee:	45bc      	cmp	ip, r7
900192f0:	dd3a      	ble.n	90019368 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
900192f2:	f819 600a 	ldrb.w	r6, [r9, sl]
900192f6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900192fa:	441e      	add	r6, r3
900192fc:	1c78      	adds	r0, r7, #1
900192fe:	d438      	bmi.n	90019372 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
90019300:	4584      	cmp	ip, r0
90019302:	dd36      	ble.n	90019372 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
90019304:	b3aa      	cbz	r2, 90019372 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
90019306:	f89e 0001 	ldrb.w	r0, [lr, #1]
9001930a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001930e:	4418      	add	r0, r3
90019310:	3501      	adds	r5, #1
90019312:	d432      	bmi.n	9001937a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
90019314:	45a8      	cmp	r8, r5
90019316:	dd30      	ble.n	9001937a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
90019318:	b37c      	cbz	r4, 9001937a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
9001931a:	2f00      	cmp	r7, #0
9001931c:	db2b      	blt.n	90019376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
9001931e:	45bc      	cmp	ip, r7
90019320:	dd29      	ble.n	90019376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
90019322:	f81e 500c 	ldrb.w	r5, [lr, ip]
90019326:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001932a:	441d      	add	r5, r3
9001932c:	3701      	adds	r7, #1
9001932e:	d427      	bmi.n	90019380 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
90019330:	45bc      	cmp	ip, r7
90019332:	dd25      	ble.n	90019380 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
90019334:	b322      	cbz	r2, 90019380 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
90019336:	44f4      	add	ip, lr
90019338:	f89c 7001 	ldrb.w	r7, [ip, #1]
9001933c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90019340:	443b      	add	r3, r7
90019342:	781f      	ldrb	r7, [r3, #0]
90019344:	2a0f      	cmp	r2, #15
90019346:	f896 a000 	ldrb.w	sl, [r6]
9001934a:	f890 b000 	ldrb.w	fp, [r0]
9001934e:	f895 9000 	ldrb.w	r9, [r5]
90019352:	9700      	str	r7, [sp, #0]
90019354:	d801      	bhi.n	9001935a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
90019356:	2c0f      	cmp	r4, #15
90019358:	d914      	bls.n	90019384 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
9001935a:	4b2c      	ldr	r3, [pc, #176]	; (9001940c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
9001935c:	f240 210d 	movw	r1, #525	; 0x20d
90019360:	4a2b      	ldr	r2, [pc, #172]	; (90019410 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
90019362:	482c      	ldr	r0, [pc, #176]	; (90019414 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
90019364:	f005 ff9e 	bl	9001f2a4 <__assert_func>
90019368:	ae03      	add	r6, sp, #12
9001936a:	e7c7      	b.n	900192fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
9001936c:	a803      	add	r0, sp, #12
9001936e:	4606      	mov	r6, r0
90019370:	e7ce      	b.n	90019310 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
90019372:	a803      	add	r0, sp, #12
90019374:	e7cc      	b.n	90019310 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
90019376:	ad03      	add	r5, sp, #12
90019378:	e7d8      	b.n	9001932c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
9001937a:	ab03      	add	r3, sp, #12
9001937c:	461d      	mov	r5, r3
9001937e:	e7e0      	b.n	90019342 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
90019380:	ab03      	add	r3, sp, #12
90019382:	e7de      	b.n	90019342 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
90019384:	b292      	uxth	r2, r2
90019386:	f890 e002 	ldrb.w	lr, [r0, #2]
9001938a:	b2a4      	uxth	r4, r4
9001938c:	78b7      	ldrb	r7, [r6, #2]
9001938e:	7840      	ldrb	r0, [r0, #1]
90019390:	fb02 f804 	mul.w	r8, r2, r4
90019394:	0112      	lsls	r2, r2, #4
90019396:	7876      	ldrb	r6, [r6, #1]
90019398:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
9001939c:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
900193a0:	eba2 0208 	sub.w	r2, r2, r8
900193a4:	b2a4      	uxth	r4, r4
900193a6:	b292      	uxth	r2, r2
900193a8:	ebac 0c04 	sub.w	ip, ip, r4
900193ac:	fb02 fe0e 	mul.w	lr, r2, lr
900193b0:	fa1f fc8c 	uxth.w	ip, ip
900193b4:	fb0c ee07 	mla	lr, ip, r7, lr
900193b8:	78af      	ldrb	r7, [r5, #2]
900193ba:	fb04 ee07 	mla	lr, r4, r7, lr
900193be:	789f      	ldrb	r7, [r3, #2]
900193c0:	785b      	ldrb	r3, [r3, #1]
900193c2:	fb08 e707 	mla	r7, r8, r7, lr
900193c6:	fb02 fe0b 	mul.w	lr, r2, fp
900193ca:	4342      	muls	r2, r0
900193cc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
900193d0:	7868      	ldrb	r0, [r5, #1]
900193d2:	fb0c ee0a 	mla	lr, ip, sl, lr
900193d6:	fb0c 2206 	mla	r2, ip, r6, r2
900193da:	9701      	str	r7, [sp, #4]
900193dc:	fb04 ee09 	mla	lr, r4, r9, lr
900193e0:	9f00      	ldr	r7, [sp, #0]
900193e2:	fb04 2400 	mla	r4, r4, r0, r2
900193e6:	fb08 ee07 	mla	lr, r8, r7, lr
900193ea:	9f01      	ldr	r7, [sp, #4]
900193ec:	fb08 4803 	mla	r8, r8, r3, r4
900193f0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900193f4:	ea4f 1858 	mov.w	r8, r8, lsr #5
900193f8:	ea47 070e 	orr.w	r7, r7, lr
900193fc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90019400:	ea47 0708 	orr.w	r7, r7, r8
90019404:	800f      	strh	r7, [r1, #0]
90019406:	b005      	add	sp, #20
90019408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001940c:	900236e6 	.word	0x900236e6
90019410:	90023ca9 	.word	0x90023ca9
90019414:	900237cf 	.word	0x900237cf

90019418 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001941c:	ed2d 8b08 	vpush	{d8-d11}
90019420:	b08f      	sub	sp, #60	; 0x3c
90019422:	eeb0 aa40 	vmov.f32	s20, s0
90019426:	eef0 9a60 	vmov.f32	s19, s1
9001942a:	920c      	str	r2, [sp, #48]	; 0x30
9001942c:	eeb0 9a41 	vmov.f32	s18, s2
90019430:	9a25      	ldr	r2, [sp, #148]	; 0x94
90019432:	eeb0 8a62 	vmov.f32	s16, s5
90019436:	900d      	str	r0, [sp, #52]	; 0x34
90019438:	eef0 8a43 	vmov.f32	s17, s6
9001943c:	6850      	ldr	r0, [r2, #4]
9001943e:	eef0 ba44 	vmov.f32	s23, s8
90019442:	910a      	str	r1, [sp, #40]	; 0x28
90019444:	eeb0 ba64 	vmov.f32	s22, s9
90019448:	9306      	str	r3, [sp, #24]
9001944a:	eef0 aa45 	vmov.f32	s21, s10
9001944e:	6812      	ldr	r2, [r2, #0]
90019450:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90019454:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
90019458:	fb00 1303 	mla	r3, r0, r3, r1
9001945c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90019460:	9307      	str	r3, [sp, #28]
90019462:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90019464:	681b      	ldr	r3, [r3, #0]
90019466:	9308      	str	r3, [sp, #32]
90019468:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001946a:	685c      	ldr	r4, [r3, #4]
9001946c:	3404      	adds	r4, #4
9001946e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90019470:	2b00      	cmp	r3, #0
90019472:	dc03      	bgt.n	9001947c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90019474:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90019476:	2b00      	cmp	r3, #0
90019478:	f340 81d5 	ble.w	90019826 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
9001947c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001947e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90019482:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90019486:	1e48      	subs	r0, r1, #1
90019488:	1e56      	subs	r6, r2, #1
9001948a:	9b06      	ldr	r3, [sp, #24]
9001948c:	2b00      	cmp	r3, #0
9001948e:	f340 80b6 	ble.w	900195fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90019492:	ea5f 472b 	movs.w	r7, fp, asr #16
90019496:	ea4f 4325 	mov.w	r3, r5, asr #16
9001949a:	d406      	bmi.n	900194aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001949c:	4287      	cmp	r7, r0
9001949e:	da04      	bge.n	900194aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900194a0:	2b00      	cmp	r3, #0
900194a2:	db02      	blt.n	900194aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900194a4:	42b3      	cmp	r3, r6
900194a6:	f2c0 80ab 	blt.w	90019600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
900194aa:	3701      	adds	r7, #1
900194ac:	f100 809c 	bmi.w	900195e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
900194b0:	42b9      	cmp	r1, r7
900194b2:	f2c0 8099 	blt.w	900195e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
900194b6:	3301      	adds	r3, #1
900194b8:	f100 8096 	bmi.w	900195e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
900194bc:	429a      	cmp	r2, r3
900194be:	f2c0 8093 	blt.w	900195e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
900194c2:	9b06      	ldr	r3, [sp, #24]
900194c4:	930b      	str	r3, [sp, #44]	; 0x2c
900194c6:	9b07      	ldr	r3, [sp, #28]
900194c8:	9309      	str	r3, [sp, #36]	; 0x24
900194ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900194cc:	2b00      	cmp	r3, #0
900194ce:	f340 80b4 	ble.w	9001963a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
900194d2:	9828      	ldr	r0, [sp, #160]	; 0xa0
900194d4:	142e      	asrs	r6, r5, #16
900194d6:	9a28      	ldr	r2, [sp, #160]	; 0xa0
900194d8:	f3cb 3303 	ubfx	r3, fp, #12, #4
900194dc:	68c7      	ldr	r7, [r0, #12]
900194de:	ea5f 402b 	movs.w	r0, fp, asr #16
900194e2:	f3c5 3103 	ubfx	r1, r5, #12, #4
900194e6:	6892      	ldr	r2, [r2, #8]
900194e8:	f100 80fb 	bmi.w	900196e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
900194ec:	f102 3cff 	add.w	ip, r2, #4294967295
900194f0:	4560      	cmp	r0, ip
900194f2:	f280 80f6 	bge.w	900196e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
900194f6:	2e00      	cmp	r6, #0
900194f8:	f2c0 80f3 	blt.w	900196e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
900194fc:	f107 3cff 	add.w	ip, r7, #4294967295
90019500:	4566      	cmp	r6, ip
90019502:	f280 80ee 	bge.w	900196e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
90019506:	b212      	sxth	r2, r2
90019508:	fb06 0002 	mla	r0, r6, r2, r0
9001950c:	9e08      	ldr	r6, [sp, #32]
9001950e:	1837      	adds	r7, r6, r0
90019510:	5c30      	ldrb	r0, [r6, r0]
90019512:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90019516:	eb04 0c08 	add.w	ip, r4, r8
9001951a:	2b00      	cmp	r3, #0
9001951c:	f000 80d3 	beq.w	900196c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90019520:	787e      	ldrb	r6, [r7, #1]
90019522:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90019526:	4426      	add	r6, r4
90019528:	2900      	cmp	r1, #0
9001952a:	f000 80d4 	beq.w	900196d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
9001952e:	18b8      	adds	r0, r7, r2
90019530:	5cba      	ldrb	r2, [r7, r2]
90019532:	7840      	ldrb	r0, [r0, #1]
90019534:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90019538:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001953c:	4422      	add	r2, r4
9001953e:	4420      	add	r0, r4
90019540:	b29b      	uxth	r3, r3
90019542:	78b7      	ldrb	r7, [r6, #2]
90019544:	b289      	uxth	r1, r1
90019546:	f89c a002 	ldrb.w	sl, [ip, #2]
9001954a:	f89c c001 	ldrb.w	ip, [ip, #1]
9001954e:	fb03 f901 	mul.w	r9, r3, r1
90019552:	011b      	lsls	r3, r3, #4
90019554:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90019558:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001955c:	eba3 0309 	sub.w	r3, r3, r9
90019560:	b289      	uxth	r1, r1
90019562:	b29b      	uxth	r3, r3
90019564:	ebae 0e01 	sub.w	lr, lr, r1
90019568:	435f      	muls	r7, r3
9001956a:	fa1f fe8e 	uxth.w	lr, lr
9001956e:	fb0e 770a 	mla	r7, lr, sl, r7
90019572:	f892 a002 	ldrb.w	sl, [r2, #2]
90019576:	fb01 770a 	mla	r7, r1, sl, r7
9001957a:	f890 a002 	ldrb.w	sl, [r0, #2]
9001957e:	fb09 7a0a 	mla	sl, r9, sl, r7
90019582:	f814 7008 	ldrb.w	r7, [r4, r8]
90019586:	f896 8000 	ldrb.w	r8, [r6]
9001958a:	7876      	ldrb	r6, [r6, #1]
9001958c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90019590:	fb03 f808 	mul.w	r8, r3, r8
90019594:	4373      	muls	r3, r6
90019596:	fb0e 8807 	mla	r8, lr, r7, r8
9001959a:	7817      	ldrb	r7, [r2, #0]
9001959c:	fb0e 330c 	mla	r3, lr, ip, r3
900195a0:	fb01 8807 	mla	r8, r1, r7, r8
900195a4:	7807      	ldrb	r7, [r0, #0]
900195a6:	fb09 8707 	mla	r7, r9, r7, r8
900195aa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900195ae:	ea4a 0707 	orr.w	r7, sl, r7
900195b2:	f892 a001 	ldrb.w	sl, [r2, #1]
900195b6:	fb01 310a 	mla	r1, r1, sl, r3
900195ba:	f890 a001 	ldrb.w	sl, [r0, #1]
900195be:	9b09      	ldr	r3, [sp, #36]	; 0x24
900195c0:	fb09 1a0a 	mla	sl, r9, sl, r1
900195c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900195c8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900195cc:	ea47 070a 	orr.w	r7, r7, sl
900195d0:	801f      	strh	r7, [r3, #0]
900195d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900195d4:	3302      	adds	r3, #2
900195d6:	9309      	str	r3, [sp, #36]	; 0x24
900195d8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900195da:	449b      	add	fp, r3
900195dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
900195de:	441d      	add	r5, r3
900195e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900195e2:	3b01      	subs	r3, #1
900195e4:	930b      	str	r3, [sp, #44]	; 0x2c
900195e6:	e770      	b.n	900194ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
900195e8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900195ea:	449b      	add	fp, r3
900195ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
900195ee:	441d      	add	r5, r3
900195f0:	9b06      	ldr	r3, [sp, #24]
900195f2:	3b01      	subs	r3, #1
900195f4:	9306      	str	r3, [sp, #24]
900195f6:	9b07      	ldr	r3, [sp, #28]
900195f8:	3302      	adds	r3, #2
900195fa:	9307      	str	r3, [sp, #28]
900195fc:	e745      	b.n	9001948a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900195fe:	d023      	beq.n	90019648 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
90019600:	9b06      	ldr	r3, [sp, #24]
90019602:	9823      	ldr	r0, [sp, #140]	; 0x8c
90019604:	3b01      	subs	r3, #1
90019606:	fb00 b003 	mla	r0, r0, r3, fp
9001960a:	1400      	asrs	r0, r0, #16
9001960c:	f53f af59 	bmi.w	900194c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
90019610:	3901      	subs	r1, #1
90019612:	4288      	cmp	r0, r1
90019614:	f6bf af55 	bge.w	900194c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
90019618:	9924      	ldr	r1, [sp, #144]	; 0x90
9001961a:	fb01 5303 	mla	r3, r1, r3, r5
9001961e:	141b      	asrs	r3, r3, #16
90019620:	f53f af4f 	bmi.w	900194c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
90019624:	3a01      	subs	r2, #1
90019626:	4293      	cmp	r3, r2
90019628:	f6bf af4b 	bge.w	900194c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001962c:	9b06      	ldr	r3, [sp, #24]
9001962e:	9309      	str	r3, [sp, #36]	; 0x24
90019630:	9b07      	ldr	r3, [sp, #28]
90019632:	930b      	str	r3, [sp, #44]	; 0x2c
90019634:	9b09      	ldr	r3, [sp, #36]	; 0x24
90019636:	2b00      	cmp	r3, #0
90019638:	dc70      	bgt.n	9001971c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
9001963a:	9b06      	ldr	r3, [sp, #24]
9001963c:	9a07      	ldr	r2, [sp, #28]
9001963e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019642:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90019646:	9307      	str	r3, [sp, #28]
90019648:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001964a:	2b00      	cmp	r3, #0
9001964c:	f340 80eb 	ble.w	90019826 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
90019650:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90019654:	9b20      	ldr	r3, [sp, #128]	; 0x80
90019656:	ee3a aa2b 	vadd.f32	s20, s20, s23
9001965a:	ee79 9a8b 	vadd.f32	s19, s19, s22
9001965e:	eef0 6a48 	vmov.f32	s13, s16
90019662:	eec7 7a0a 	vdiv.f32	s15, s14, s20
90019666:	ee39 9a2a 	vadd.f32	s18, s18, s21
9001966a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001966e:	ee16 ba90 	vmov	fp, s13
90019672:	eef0 6a68 	vmov.f32	s13, s17
90019676:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001967a:	ee16 5a90 	vmov	r5, s13
9001967e:	ee29 7aa7 	vmul.f32	s14, s19, s15
90019682:	ee69 7a27 	vmul.f32	s15, s18, s15
90019686:	ee37 8a48 	vsub.f32	s16, s14, s16
9001968a:	ee77 8ae8 	vsub.f32	s17, s15, s17
9001968e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
90019692:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
90019696:	ee18 2a10 	vmov	r2, s16
9001969a:	eeb0 8a47 	vmov.f32	s16, s14
9001969e:	fb92 f3f3 	sdiv	r3, r2, r3
900196a2:	ee18 2a90 	vmov	r2, s17
900196a6:	9323      	str	r3, [sp, #140]	; 0x8c
900196a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900196aa:	eef0 8a67 	vmov.f32	s17, s15
900196ae:	fb92 f3f3 	sdiv	r3, r2, r3
900196b2:	9324      	str	r3, [sp, #144]	; 0x90
900196b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900196b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
900196b8:	3b01      	subs	r3, #1
900196ba:	930a      	str	r3, [sp, #40]	; 0x28
900196bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
900196be:	bf08      	it	eq
900196c0:	4613      	moveq	r3, r2
900196c2:	9306      	str	r3, [sp, #24]
900196c4:	e6d3      	b.n	9001946e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
900196c6:	b149      	cbz	r1, 900196dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c4>
900196c8:	5cba      	ldrb	r2, [r7, r2]
900196ca:	4660      	mov	r0, ip
900196cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900196d0:	4422      	add	r2, r4
900196d2:	4666      	mov	r6, ip
900196d4:	e734      	b.n	90019540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
900196d6:	4660      	mov	r0, ip
900196d8:	4662      	mov	r2, ip
900196da:	e731      	b.n	90019540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
900196dc:	4660      	mov	r0, ip
900196de:	4662      	mov	r2, ip
900196e0:	e7f7      	b.n	900196d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
900196e2:	f110 0c01 	adds.w	ip, r0, #1
900196e6:	f53f af74 	bmi.w	900195d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
900196ea:	4562      	cmp	r2, ip
900196ec:	f6ff af71 	blt.w	900195d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
900196f0:	f116 0c01 	adds.w	ip, r6, #1
900196f4:	f53f af6d 	bmi.w	900195d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
900196f8:	4567      	cmp	r7, ip
900196fa:	f6ff af6a 	blt.w	900195d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
900196fe:	b23f      	sxth	r7, r7
90019700:	b212      	sxth	r2, r2
90019702:	9701      	str	r7, [sp, #4]
90019704:	9200      	str	r2, [sp, #0]
90019706:	e9cd 3104 	strd	r3, r1, [sp, #16]
9001970a:	e9cd 0602 	strd	r0, r6, [sp, #8]
9001970e:	4623      	mov	r3, r4
90019710:	980d      	ldr	r0, [sp, #52]	; 0x34
90019712:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90019716:	f7ff fdc5 	bl	900192a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
9001971a:	e75a      	b.n	900195d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
9001971c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
9001971e:	ea4f 462b 	mov.w	r6, fp, asr #16
90019722:	1428      	asrs	r0, r5, #16
90019724:	f3cb 3303 	ubfx	r3, fp, #12, #4
90019728:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9001972c:	f3c5 3103 	ubfx	r1, r5, #12, #4
90019730:	fb02 6000 	mla	r0, r2, r0, r6
90019734:	9e08      	ldr	r6, [sp, #32]
90019736:	f816 8000 	ldrb.w	r8, [r6, r0]
9001973a:	1837      	adds	r7, r6, r0
9001973c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90019740:	eb04 0c08 	add.w	ip, r4, r8
90019744:	2b00      	cmp	r3, #0
90019746:	d060      	beq.n	9001980a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
90019748:	787e      	ldrb	r6, [r7, #1]
9001974a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001974e:	4426      	add	r6, r4
90019750:	2900      	cmp	r1, #0
90019752:	d062      	beq.n	9001981a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x402>
90019754:	18b8      	adds	r0, r7, r2
90019756:	5cba      	ldrb	r2, [r7, r2]
90019758:	7840      	ldrb	r0, [r0, #1]
9001975a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001975e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90019762:	4422      	add	r2, r4
90019764:	4420      	add	r0, r4
90019766:	b29b      	uxth	r3, r3
90019768:	78b7      	ldrb	r7, [r6, #2]
9001976a:	b289      	uxth	r1, r1
9001976c:	f89c a002 	ldrb.w	sl, [ip, #2]
90019770:	f89c c001 	ldrb.w	ip, [ip, #1]
90019774:	fb03 f901 	mul.w	r9, r3, r1
90019778:	011b      	lsls	r3, r3, #4
9001977a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001977e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90019782:	eba3 0309 	sub.w	r3, r3, r9
90019786:	b289      	uxth	r1, r1
90019788:	b29b      	uxth	r3, r3
9001978a:	ebae 0e01 	sub.w	lr, lr, r1
9001978e:	435f      	muls	r7, r3
90019790:	fa1f fe8e 	uxth.w	lr, lr
90019794:	fb0e 770a 	mla	r7, lr, sl, r7
90019798:	f892 a002 	ldrb.w	sl, [r2, #2]
9001979c:	fb01 770a 	mla	r7, r1, sl, r7
900197a0:	f890 a002 	ldrb.w	sl, [r0, #2]
900197a4:	fb09 7a0a 	mla	sl, r9, sl, r7
900197a8:	f814 7008 	ldrb.w	r7, [r4, r8]
900197ac:	f896 8000 	ldrb.w	r8, [r6]
900197b0:	7876      	ldrb	r6, [r6, #1]
900197b2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
900197b6:	fb03 f808 	mul.w	r8, r3, r8
900197ba:	4373      	muls	r3, r6
900197bc:	7856      	ldrb	r6, [r2, #1]
900197be:	fb0e 8807 	mla	r8, lr, r7, r8
900197c2:	7817      	ldrb	r7, [r2, #0]
900197c4:	fb0e 330c 	mla	r3, lr, ip, r3
900197c8:	fb01 8807 	mla	r8, r1, r7, r8
900197cc:	7807      	ldrb	r7, [r0, #0]
900197ce:	fb01 3306 	mla	r3, r1, r6, r3
900197d2:	fb09 8707 	mla	r7, r9, r7, r8
900197d6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900197da:	ea4a 0707 	orr.w	r7, sl, r7
900197de:	f890 a001 	ldrb.w	sl, [r0, #1]
900197e2:	fb09 3a0a 	mla	sl, r9, sl, r3
900197e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900197e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900197ec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900197f0:	ea47 070a 	orr.w	r7, r7, sl
900197f4:	f823 7b02 	strh.w	r7, [r3], #2
900197f8:	930b      	str	r3, [sp, #44]	; 0x2c
900197fa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900197fc:	449b      	add	fp, r3
900197fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
90019800:	441d      	add	r5, r3
90019802:	9b09      	ldr	r3, [sp, #36]	; 0x24
90019804:	3b01      	subs	r3, #1
90019806:	9309      	str	r3, [sp, #36]	; 0x24
90019808:	e714      	b.n	90019634 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21c>
9001980a:	b149      	cbz	r1, 90019820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x408>
9001980c:	5cba      	ldrb	r2, [r7, r2]
9001980e:	4660      	mov	r0, ip
90019810:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90019814:	4422      	add	r2, r4
90019816:	4666      	mov	r6, ip
90019818:	e7a5      	b.n	90019766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
9001981a:	4660      	mov	r0, ip
9001981c:	4662      	mov	r2, ip
9001981e:	e7a2      	b.n	90019766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
90019820:	4660      	mov	r0, ip
90019822:	4662      	mov	r2, ip
90019824:	e7f7      	b.n	90019816 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fe>
90019826:	b00f      	add	sp, #60	; 0x3c
90019828:	ecbd 8b08 	vpop	{d8-d11}
9001982c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019830 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90019830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019834:	880e      	ldrh	r6, [r1, #0]
90019836:	b085      	sub	sp, #20
90019838:	4691      	mov	r9, r2
9001983a:	ea4f 2e26 	mov.w	lr, r6, asr #8
9001983e:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
90019842:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
90019846:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
9001984a:	ea4f 0ee6 	mov.w	lr, r6, asr #3
9001984e:	00f6      	lsls	r6, r6, #3
90019850:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90019854:	9200      	str	r2, [sp, #0]
90019856:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
9001985a:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
9001985e:	9201      	str	r2, [sp, #4]
90019860:	b2f2      	uxtb	r2, r6
90019862:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
90019866:	9202      	str	r2, [sp, #8]
90019868:	fb04 560c 	mla	r6, r4, ip, r5
9001986c:	2c00      	cmp	r4, #0
9001986e:	eb09 0e06 	add.w	lr, r9, r6
90019872:	db3e      	blt.n	900198f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
90019874:	45a0      	cmp	r8, r4
90019876:	dd3c      	ble.n	900198f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
90019878:	2d00      	cmp	r5, #0
9001987a:	db38      	blt.n	900198ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
9001987c:	45ac      	cmp	ip, r5
9001987e:	dd36      	ble.n	900198ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
90019880:	f819 2006 	ldrb.w	r2, [r9, r6]
90019884:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90019888:	1c6e      	adds	r6, r5, #1
9001988a:	d435      	bmi.n	900198f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
9001988c:	45b4      	cmp	ip, r6
9001988e:	dd33      	ble.n	900198f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
90019890:	b3a0      	cbz	r0, 900198fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
90019892:	f89e 6001 	ldrb.w	r6, [lr, #1]
90019896:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
9001989a:	3401      	adds	r4, #1
9001989c:	d432      	bmi.n	90019904 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
9001989e:	45a0      	cmp	r8, r4
900198a0:	dd30      	ble.n	90019904 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
900198a2:	b397      	cbz	r7, 9001990a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
900198a4:	2d00      	cmp	r5, #0
900198a6:	db2b      	blt.n	90019900 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
900198a8:	45ac      	cmp	ip, r5
900198aa:	dd29      	ble.n	90019900 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
900198ac:	f81e 400c 	ldrb.w	r4, [lr, ip]
900198b0:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
900198b4:	3501      	adds	r5, #1
900198b6:	d42b      	bmi.n	90019910 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
900198b8:	45ac      	cmp	ip, r5
900198ba:	dd29      	ble.n	90019910 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
900198bc:	b350      	cbz	r0, 90019914 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
900198be:	44f4      	add	ip, lr
900198c0:	f89c 5001 	ldrb.w	r5, [ip, #1]
900198c4:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
900198c8:	280f      	cmp	r0, #15
900198ca:	ea4f 6b12 	mov.w	fp, r2, lsr #24
900198ce:	ea4f 6a16 	mov.w	sl, r6, lsr #24
900198d2:	ea4f 6914 	mov.w	r9, r4, lsr #24
900198d6:	ea4f 6813 	mov.w	r8, r3, lsr #24
900198da:	d801      	bhi.n	900198e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
900198dc:	2f0f      	cmp	r7, #15
900198de:	d91b      	bls.n	90019918 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
900198e0:	4b85      	ldr	r3, [pc, #532]	; (90019af8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
900198e2:	f240 210d 	movw	r1, #525	; 0x20d
900198e6:	4a85      	ldr	r2, [pc, #532]	; (90019afc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
900198e8:	4885      	ldr	r0, [pc, #532]	; (90019b00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2d0>)
900198ea:	f005 fcdb 	bl	9001f2a4 <__assert_func>
900198ee:	2200      	movs	r2, #0
900198f0:	e7ca      	b.n	90019888 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
900198f2:	2600      	movs	r6, #0
900198f4:	4632      	mov	r2, r6
900198f6:	e7d0      	b.n	9001989a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
900198f8:	2600      	movs	r6, #0
900198fa:	e7ce      	b.n	9001989a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
900198fc:	4606      	mov	r6, r0
900198fe:	e7cc      	b.n	9001989a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
90019900:	2400      	movs	r4, #0
90019902:	e7d7      	b.n	900198b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
90019904:	2300      	movs	r3, #0
90019906:	461c      	mov	r4, r3
90019908:	e7de      	b.n	900198c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
9001990a:	463b      	mov	r3, r7
9001990c:	463c      	mov	r4, r7
9001990e:	e7db      	b.n	900198c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
90019910:	2300      	movs	r3, #0
90019912:	e7d9      	b.n	900198c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
90019914:	4603      	mov	r3, r0
90019916:	e7d7      	b.n	900198c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
90019918:	b280      	uxth	r0, r0
9001991a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001991e:	b2bf      	uxth	r7, r7
90019920:	fb00 fe07 	mul.w	lr, r0, r7
90019924:	ea4f 1000 	mov.w	r0, r0, lsl #4
90019928:	ebce 1707 	rsb	r7, lr, r7, lsl #4
9001992c:	eba0 0c0e 	sub.w	ip, r0, lr
90019930:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
90019934:	b2bf      	uxth	r7, r7
90019936:	fa1f fc8c 	uxth.w	ip, ip
9001993a:	eba5 0507 	sub.w	r5, r5, r7
9001993e:	fb0c f00a 	mul.w	r0, ip, sl
90019942:	b2ad      	uxth	r5, r5
90019944:	fb05 000b 	mla	r0, r5, fp, r0
90019948:	fb07 0009 	mla	r0, r7, r9, r0
9001994c:	fb0e 0008 	mla	r0, lr, r8, r0
90019950:	f3c0 2007 	ubfx	r0, r0, #8, #8
90019954:	9003      	str	r0, [sp, #12]
90019956:	d018      	beq.n	9001998a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x15a>
90019958:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
9001995c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90019960:	fb0b f000 	mul.w	r0, fp, r0
90019964:	fb0b fb02 	mul.w	fp, fp, r2
90019968:	0a02      	lsrs	r2, r0, #8
9001996a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
9001996e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90019972:	4402      	add	r2, r0
90019974:	f50b 7080 	add.w	r0, fp, #256	; 0x100
90019978:	eb00 201b 	add.w	r0, r0, fp, lsr #8
9001997c:	0a12      	lsrs	r2, r2, #8
9001997e:	0a00      	lsrs	r0, r0, #8
90019980:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90019984:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90019988:	4302      	orrs	r2, r0
9001998a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001998e:	d019      	beq.n	900199c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x194>
90019990:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
90019994:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90019998:	fb0a fb0b 	mul.w	fp, sl, fp
9001999c:	fb0a fa06 	mul.w	sl, sl, r6
900199a0:	ea4f 261b 	mov.w	r6, fp, lsr #8
900199a4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900199a8:	f50a 7080 	add.w	r0, sl, #256	; 0x100
900199ac:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
900199b0:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900199b4:	445e      	add	r6, fp
900199b6:	0a00      	lsrs	r0, r0, #8
900199b8:	0a36      	lsrs	r6, r6, #8
900199ba:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
900199be:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
900199c2:	4306      	orrs	r6, r0
900199c4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900199c8:	d019      	beq.n	900199fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ce>
900199ca:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
900199ce:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
900199d2:	fb09 fa0a 	mul.w	sl, r9, sl
900199d6:	fb09 f904 	mul.w	r9, r9, r4
900199da:	ea4f 241a 	mov.w	r4, sl, lsr #8
900199de:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900199e2:	f509 7080 	add.w	r0, r9, #256	; 0x100
900199e6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900199ea:	eb00 2019 	add.w	r0, r0, r9, lsr #8
900199ee:	4454      	add	r4, sl
900199f0:	0a00      	lsrs	r0, r0, #8
900199f2:	0a24      	lsrs	r4, r4, #8
900199f4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
900199f8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900199fc:	4304      	orrs	r4, r0
900199fe:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90019a02:	d019      	beq.n	90019a38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x208>
90019a04:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
90019a08:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90019a0c:	fb08 f909 	mul.w	r9, r8, r9
90019a10:	fb08 f803 	mul.w	r8, r8, r3
90019a14:	ea4f 2319 	mov.w	r3, r9, lsr #8
90019a18:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
90019a1c:	f508 7080 	add.w	r0, r8, #256	; 0x100
90019a20:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90019a24:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90019a28:	444b      	add	r3, r9
90019a2a:	0a00      	lsrs	r0, r0, #8
90019a2c:	0a1b      	lsrs	r3, r3, #8
90019a2e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90019a32:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90019a36:	4303      	orrs	r3, r0
90019a38:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
90019a3c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
90019a40:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90019a44:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90019a48:	fb0c f808 	mul.w	r8, ip, r8
90019a4c:	fb0c f606 	mul.w	r6, ip, r6
90019a50:	fb05 8800 	mla	r8, r5, r0, r8
90019a54:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
90019a58:	fb05 6202 	mla	r2, r5, r2, r6
90019a5c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
90019a60:	fb07 8800 	mla	r8, r7, r0, r8
90019a64:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
90019a68:	b2ad      	uxth	r5, r5
90019a6a:	fb0e 8000 	mla	r0, lr, r0, r8
90019a6e:	0a00      	lsrs	r0, r0, #8
90019a70:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
90019a74:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
90019a78:	9c00      	ldr	r4, [sp, #0]
90019a7a:	fb07 2700 	mla	r7, r7, r0, r2
90019a7e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
90019a82:	9b03      	ldr	r3, [sp, #12]
90019a84:	fb0e 7000 	mla	r0, lr, r0, r7
90019a88:	436b      	muls	r3, r5
90019a8a:	0a00      	lsrs	r0, r0, #8
90019a8c:	1c5a      	adds	r2, r3, #1
90019a8e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90019a92:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90019a96:	ea48 0000 	orr.w	r0, r8, r0
90019a9a:	ea6f 2212 	mvn.w	r2, r2, lsr #8
90019a9e:	0c03      	lsrs	r3, r0, #16
90019aa0:	b2d2      	uxtb	r2, r2
90019aa2:	fb14 f602 	smulbb	r6, r4, r2
90019aa6:	f3c0 2407 	ubfx	r4, r0, #8, #8
90019aaa:	b2c0      	uxtb	r0, r0
90019aac:	fb03 6305 	mla	r3, r3, r5, r6
90019ab0:	b29e      	uxth	r6, r3
90019ab2:	9b01      	ldr	r3, [sp, #4]
90019ab4:	fb13 f302 	smulbb	r3, r3, r2
90019ab8:	fb04 3405 	mla	r4, r4, r5, r3
90019abc:	9b02      	ldr	r3, [sp, #8]
90019abe:	fb13 f202 	smulbb	r2, r3, r2
90019ac2:	b2a4      	uxth	r4, r4
90019ac4:	1c73      	adds	r3, r6, #1
90019ac6:	fb00 2005 	mla	r0, r0, r5, r2
90019aca:	eb03 2316 	add.w	r3, r3, r6, lsr #8
90019ace:	b280      	uxth	r0, r0
90019ad0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90019ad4:	1c42      	adds	r2, r0, #1
90019ad6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90019ada:	1c62      	adds	r2, r4, #1
90019adc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90019ae0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90019ae4:	0952      	lsrs	r2, r2, #5
90019ae6:	4303      	orrs	r3, r0
90019ae8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90019aec:	4313      	orrs	r3, r2
90019aee:	800b      	strh	r3, [r1, #0]
90019af0:	b005      	add	sp, #20
90019af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019af6:	bf00      	nop
90019af8:	900236e6 	.word	0x900236e6
90019afc:	90023ca9 	.word	0x90023ca9
90019b00:	900237cf 	.word	0x900237cf

90019b04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019b04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019b08:	ed2d 8b08 	vpush	{d8-d11}
90019b0c:	b09f      	sub	sp, #124	; 0x7c
90019b0e:	eeb0 aa40 	vmov.f32	s20, s0
90019b12:	eef0 9a60 	vmov.f32	s19, s1
90019b16:	921b      	str	r2, [sp, #108]	; 0x6c
90019b18:	eeb0 9a41 	vmov.f32	s18, s2
90019b1c:	9a35      	ldr	r2, [sp, #212]	; 0xd4
90019b1e:	eeb0 8a62 	vmov.f32	s16, s5
90019b22:	9309      	str	r3, [sp, #36]	; 0x24
90019b24:	eef0 8a43 	vmov.f32	s17, s6
90019b28:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
90019b2c:	eef0 ba44 	vmov.f32	s23, s8
90019b30:	901d      	str	r0, [sp, #116]	; 0x74
90019b32:	eeb0 ba64 	vmov.f32	s22, s9
90019b36:	931c      	str	r3, [sp, #112]	; 0x70
90019b38:	eef0 aa45 	vmov.f32	s21, s10
90019b3c:	6850      	ldr	r0, [r2, #4]
90019b3e:	9119      	str	r1, [sp, #100]	; 0x64
90019b40:	6812      	ldr	r2, [r2, #0]
90019b42:	9d32      	ldr	r5, [sp, #200]	; 0xc8
90019b44:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
90019b48:	fb00 1303 	mla	r3, r0, r3, r1
90019b4c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90019b50:	930c      	str	r3, [sp, #48]	; 0x30
90019b52:	9b38      	ldr	r3, [sp, #224]	; 0xe0
90019b54:	681b      	ldr	r3, [r3, #0]
90019b56:	9312      	str	r3, [sp, #72]	; 0x48
90019b58:	9b38      	ldr	r3, [sp, #224]	; 0xe0
90019b5a:	685e      	ldr	r6, [r3, #4]
90019b5c:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
90019b60:	3604      	adds	r6, #4
90019b62:	930d      	str	r3, [sp, #52]	; 0x34
90019b64:	9b19      	ldr	r3, [sp, #100]	; 0x64
90019b66:	2b00      	cmp	r3, #0
90019b68:	dc03      	bgt.n	90019b72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90019b6a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90019b6c:	2b00      	cmp	r3, #0
90019b6e:	f340 838d 	ble.w	9001a28c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x788>
90019b72:	9b38      	ldr	r3, [sp, #224]	; 0xe0
90019b74:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90019b78:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90019b7c:	1e48      	subs	r0, r1, #1
90019b7e:	1e57      	subs	r7, r2, #1
90019b80:	9b09      	ldr	r3, [sp, #36]	; 0x24
90019b82:	2b00      	cmp	r3, #0
90019b84:	f340 819a 	ble.w	90019ebc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b8>
90019b88:	9c31      	ldr	r4, [sp, #196]	; 0xc4
90019b8a:	142b      	asrs	r3, r5, #16
90019b8c:	ea5f 4c24 	movs.w	ip, r4, asr #16
90019b90:	d406      	bmi.n	90019ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019b92:	4584      	cmp	ip, r0
90019b94:	da04      	bge.n	90019ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019b96:	2b00      	cmp	r3, #0
90019b98:	db02      	blt.n	90019ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019b9a:	42bb      	cmp	r3, r7
90019b9c:	f2c0 818f 	blt.w	90019ebe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
90019ba0:	f11c 0c01 	adds.w	ip, ip, #1
90019ba4:	f100 817d 	bmi.w	90019ea2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
90019ba8:	4561      	cmp	r1, ip
90019baa:	f2c0 817a 	blt.w	90019ea2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
90019bae:	3301      	adds	r3, #1
90019bb0:	f100 8177 	bmi.w	90019ea2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
90019bb4:	429a      	cmp	r2, r3
90019bb6:	f2c0 8174 	blt.w	90019ea2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
90019bba:	9b09      	ldr	r3, [sp, #36]	; 0x24
90019bbc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
90019bbe:	931a      	str	r3, [sp, #104]	; 0x68
90019bc0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90019bc2:	2b00      	cmp	r3, #0
90019bc4:	f340 8199 	ble.w	90019efa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
90019bc8:	9b31      	ldr	r3, [sp, #196]	; 0xc4
90019bca:	ea4f 4c25 	mov.w	ip, r5, asr #16
90019bce:	f3c5 3103 	ubfx	r1, r5, #12, #4
90019bd2:	f3c3 3203 	ubfx	r2, r3, #12, #4
90019bd6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
90019bd8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90019bdc:	9b31      	ldr	r3, [sp, #196]	; 0xc4
90019bde:	141b      	asrs	r3, r3, #16
90019be0:	f100 81dc 	bmi.w	90019f9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
90019be4:	f100 38ff 	add.w	r8, r0, #4294967295
90019be8:	4543      	cmp	r3, r8
90019bea:	f280 81d7 	bge.w	90019f9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
90019bee:	f1bc 0f00 	cmp.w	ip, #0
90019bf2:	f2c0 81d3 	blt.w	90019f9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
90019bf6:	f10e 38ff 	add.w	r8, lr, #4294967295
90019bfa:	45c4      	cmp	ip, r8
90019bfc:	f280 81ce 	bge.w	90019f9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
90019c00:	b200      	sxth	r0, r0
90019c02:	9c12      	ldr	r4, [sp, #72]	; 0x48
90019c04:	fb0c 3300 	mla	r3, ip, r0, r3
90019c08:	eb04 0803 	add.w	r8, r4, r3
90019c0c:	5ce3      	ldrb	r3, [r4, r3]
90019c0e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90019c12:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90019c16:	2a00      	cmp	r2, #0
90019c18:	f000 81b5 	beq.w	90019f86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
90019c1c:	f898 c001 	ldrb.w	ip, [r8, #1]
90019c20:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90019c24:	940e      	str	r4, [sp, #56]	; 0x38
90019c26:	0e24      	lsrs	r4, r4, #24
90019c28:	9415      	str	r4, [sp, #84]	; 0x54
90019c2a:	b179      	cbz	r1, 90019c4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90019c2c:	eb08 0c00 	add.w	ip, r8, r0
90019c30:	f818 0000 	ldrb.w	r0, [r8, r0]
90019c34:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90019c38:	900a      	str	r0, [sp, #40]	; 0x28
90019c3a:	0e00      	lsrs	r0, r0, #24
90019c3c:	9013      	str	r0, [sp, #76]	; 0x4c
90019c3e:	f89c 0001 	ldrb.w	r0, [ip, #1]
90019c42:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90019c46:	900f      	str	r0, [sp, #60]	; 0x3c
90019c48:	0e00      	lsrs	r0, r0, #24
90019c4a:	9016      	str	r0, [sp, #88]	; 0x58
90019c4c:	b292      	uxth	r2, r2
90019c4e:	9815      	ldr	r0, [sp, #84]	; 0x54
90019c50:	b289      	uxth	r1, r1
90019c52:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019c54:	fb02 f901 	mul.w	r9, r2, r1
90019c58:	0112      	lsls	r2, r2, #4
90019c5a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90019c5e:	eba2 0809 	sub.w	r8, r2, r9
90019c62:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90019c66:	b289      	uxth	r1, r1
90019c68:	fa1f f888 	uxth.w	r8, r8
90019c6c:	1a52      	subs	r2, r2, r1
90019c6e:	fb08 f000 	mul.w	r0, r8, r0
90019c72:	b292      	uxth	r2, r2
90019c74:	fb02 000e 	mla	r0, r2, lr, r0
90019c78:	fb01 0004 	mla	r0, r1, r4, r0
90019c7c:	9c16      	ldr	r4, [sp, #88]	; 0x58
90019c7e:	fb09 0004 	mla	r0, r9, r4, r0
90019c82:	f3c0 2007 	ubfx	r0, r0, #8, #8
90019c86:	2800      	cmp	r0, #0
90019c88:	f000 8100 	beq.w	90019e8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90019c8c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90019c90:	d01b      	beq.n	90019cca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90019c92:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90019c96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90019c9a:	fb0e fa0a 	mul.w	sl, lr, sl
90019c9e:	fb0e fe03 	mul.w	lr, lr, r3
90019ca2:	ea4f 231a 	mov.w	r3, sl, lsr #8
90019ca6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90019caa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90019cae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90019cb2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90019cb6:	4453      	add	r3, sl
90019cb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90019cbc:	0a1b      	lsrs	r3, r3, #8
90019cbe:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90019cc2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90019cc6:	ea43 030c 	orr.w	r3, r3, ip
90019cca:	9c15      	ldr	r4, [sp, #84]	; 0x54
90019ccc:	2cff      	cmp	r4, #255	; 0xff
90019cce:	d021      	beq.n	90019d14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
90019cd0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90019cd2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90019cd6:	9c15      	ldr	r4, [sp, #84]	; 0x54
90019cd8:	fb04 fb0b 	mul.w	fp, r4, fp
90019cdc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90019cde:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90019ce2:	9c15      	ldr	r4, [sp, #84]	; 0x54
90019ce4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90019ce8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90019cec:	fb04 fa0a 	mul.w	sl, r4, sl
90019cf0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90019cf4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90019cf8:	44de      	add	lr, fp
90019cfa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90019cfe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90019d02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90019d06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90019d0a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90019d0e:	ea4e 040a 	orr.w	r4, lr, sl
90019d12:	940e      	str	r4, [sp, #56]	; 0x38
90019d14:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019d16:	2cff      	cmp	r4, #255	; 0xff
90019d18:	d021      	beq.n	90019d5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90019d1a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90019d1c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90019d20:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019d22:	fb04 fb0b 	mul.w	fp, r4, fp
90019d26:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90019d28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90019d2c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019d2e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90019d32:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90019d36:	fb04 fa0a 	mul.w	sl, r4, sl
90019d3a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90019d3e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90019d42:	44de      	add	lr, fp
90019d44:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90019d48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90019d4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90019d50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90019d54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90019d58:	ea4e 040a 	orr.w	r4, lr, sl
90019d5c:	940a      	str	r4, [sp, #40]	; 0x28
90019d5e:	9c16      	ldr	r4, [sp, #88]	; 0x58
90019d60:	2cff      	cmp	r4, #255	; 0xff
90019d62:	d021      	beq.n	90019da8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90019d64:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90019d66:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90019d6a:	9c16      	ldr	r4, [sp, #88]	; 0x58
90019d6c:	fb04 fb0b 	mul.w	fp, r4, fp
90019d70:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90019d72:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90019d76:	9c16      	ldr	r4, [sp, #88]	; 0x58
90019d78:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90019d7c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90019d80:	fb04 fa0a 	mul.w	sl, r4, sl
90019d84:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90019d88:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90019d8c:	44de      	add	lr, fp
90019d8e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90019d92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90019d96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90019d9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90019d9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90019da2:	ea4e 040a 	orr.w	r4, lr, sl
90019da6:	940f      	str	r4, [sp, #60]	; 0x3c
90019da8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90019daa:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90019dae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90019db2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90019db6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90019db8:	fb08 fc0c 	mul.w	ip, r8, ip
90019dbc:	fb02 cc0e 	mla	ip, r2, lr, ip
90019dc0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90019dc4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90019dc6:	fb01 cc0e 	mla	ip, r1, lr, ip
90019dca:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90019dce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90019dd0:	fb09 cc0e 	mla	ip, r9, lr, ip
90019dd4:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90019dd8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90019dda:	fb08 f80e 	mul.w	r8, r8, lr
90019dde:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90019de2:	f8b7 e000 	ldrh.w	lr, [r7]
90019de6:	fb02 8303 	mla	r3, r2, r3, r8
90019dea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90019dec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90019df0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90019df4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90019df6:	fb01 330a 	mla	r3, r1, sl, r3
90019dfa:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
90019dfe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019e00:	fb09 3901 	mla	r9, r9, r1, r3
90019e04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90019e06:	ea4f 2919 	mov.w	r9, r9, lsr #8
90019e0a:	4343      	muls	r3, r0
90019e0c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90019e10:	1c58      	adds	r0, r3, #1
90019e12:	ea4c 0c09 	orr.w	ip, ip, r9
90019e16:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90019e1a:	ea4f 232e 	mov.w	r3, lr, asr #8
90019e1e:	ea4f 411c 	mov.w	r1, ip, lsr #16
90019e22:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90019e26:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90019e2a:	fb11 f102 	smulbb	r1, r1, r2
90019e2e:	b2c0      	uxtb	r0, r0
90019e30:	ea4f 02ee 	mov.w	r2, lr, asr #3
90019e34:	fb03 1300 	mla	r3, r3, r0, r1
90019e38:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90019e3c:	b299      	uxth	r1, r3
90019e3e:	f3cc 2307 	ubfx	r3, ip, #8, #8
90019e42:	fa5f fc8c 	uxtb.w	ip, ip
90019e46:	fb13 f304 	smulbb	r3, r3, r4
90019e4a:	fb1c fc04 	smulbb	ip, ip, r4
90019e4e:	fb02 3200 	mla	r2, r2, r0, r3
90019e52:	ea4f 03ce 	mov.w	r3, lr, lsl #3
90019e56:	b2db      	uxtb	r3, r3
90019e58:	b292      	uxth	r2, r2
90019e5a:	fb03 cc00 	mla	ip, r3, r0, ip
90019e5e:	1c4b      	adds	r3, r1, #1
90019e60:	fa1f fc8c 	uxth.w	ip, ip
90019e64:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90019e68:	1c51      	adds	r1, r2, #1
90019e6a:	f10c 0001 	add.w	r0, ip, #1
90019e6e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90019e72:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90019e76:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
90019e7a:	0952      	lsrs	r2, r2, #5
90019e7c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90019e80:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90019e84:	ea43 030c 	orr.w	r3, r3, ip
90019e88:	4313      	orrs	r3, r2
90019e8a:	803b      	strh	r3, [r7, #0]
90019e8c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
90019e8e:	3702      	adds	r7, #2
90019e90:	9a31      	ldr	r2, [sp, #196]	; 0xc4
90019e92:	441a      	add	r2, r3
90019e94:	9b34      	ldr	r3, [sp, #208]	; 0xd0
90019e96:	441d      	add	r5, r3
90019e98:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90019e9a:	9231      	str	r2, [sp, #196]	; 0xc4
90019e9c:	3b01      	subs	r3, #1
90019e9e:	931a      	str	r3, [sp, #104]	; 0x68
90019ea0:	e68e      	b.n	90019bc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
90019ea2:	9b33      	ldr	r3, [sp, #204]	; 0xcc
90019ea4:	9c31      	ldr	r4, [sp, #196]	; 0xc4
90019ea6:	441c      	add	r4, r3
90019ea8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
90019eaa:	441d      	add	r5, r3
90019eac:	9b09      	ldr	r3, [sp, #36]	; 0x24
90019eae:	9431      	str	r4, [sp, #196]	; 0xc4
90019eb0:	3b01      	subs	r3, #1
90019eb2:	9309      	str	r3, [sp, #36]	; 0x24
90019eb4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90019eb6:	3302      	adds	r3, #2
90019eb8:	930c      	str	r3, [sp, #48]	; 0x30
90019eba:	e661      	b.n	90019b80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019ebc:	d024      	beq.n	90019f08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
90019ebe:	9b09      	ldr	r3, [sp, #36]	; 0x24
90019ec0:	9833      	ldr	r0, [sp, #204]	; 0xcc
90019ec2:	3b01      	subs	r3, #1
90019ec4:	9c31      	ldr	r4, [sp, #196]	; 0xc4
90019ec6:	fb00 4003 	mla	r0, r0, r3, r4
90019eca:	1400      	asrs	r0, r0, #16
90019ecc:	f53f ae75 	bmi.w	90019bba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
90019ed0:	3901      	subs	r1, #1
90019ed2:	4288      	cmp	r0, r1
90019ed4:	f6bf ae71 	bge.w	90019bba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
90019ed8:	9934      	ldr	r1, [sp, #208]	; 0xd0
90019eda:	fb01 5303 	mla	r3, r1, r3, r5
90019ede:	141b      	asrs	r3, r3, #16
90019ee0:	f53f ae6b 	bmi.w	90019bba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
90019ee4:	3a01      	subs	r2, #1
90019ee6:	4293      	cmp	r3, r2
90019ee8:	f6bf ae67 	bge.w	90019bba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
90019eec:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90019ef0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
90019ef4:	f1bb 0f00 	cmp.w	fp, #0
90019ef8:	dc70      	bgt.n	90019fdc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90019efa:	9b09      	ldr	r3, [sp, #36]	; 0x24
90019efc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90019f00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90019f02:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90019f06:	930c      	str	r3, [sp, #48]	; 0x30
90019f08:	9b19      	ldr	r3, [sp, #100]	; 0x64
90019f0a:	2b00      	cmp	r3, #0
90019f0c:	f340 81be 	ble.w	9001a28c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x788>
90019f10:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90019f14:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90019f16:	ee3a aa2b 	vadd.f32	s20, s20, s23
90019f1a:	ee79 9a8b 	vadd.f32	s19, s19, s22
90019f1e:	eef0 6a48 	vmov.f32	s13, s16
90019f22:	eec7 7a0a 	vdiv.f32	s15, s14, s20
90019f26:	ee39 9a2a 	vadd.f32	s18, s18, s21
90019f2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019f2e:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
90019f32:	eef0 6a68 	vmov.f32	s13, s17
90019f36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019f3a:	ee16 5a90 	vmov	r5, s13
90019f3e:	ee29 7aa7 	vmul.f32	s14, s19, s15
90019f42:	ee69 7a27 	vmul.f32	s15, s18, s15
90019f46:	ee37 8a48 	vsub.f32	s16, s14, s16
90019f4a:	ee77 8ae8 	vsub.f32	s17, s15, s17
90019f4e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
90019f52:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
90019f56:	ee18 2a10 	vmov	r2, s16
90019f5a:	eeb0 8a47 	vmov.f32	s16, s14
90019f5e:	fb92 f3f3 	sdiv	r3, r2, r3
90019f62:	ee18 2a90 	vmov	r2, s17
90019f66:	9333      	str	r3, [sp, #204]	; 0xcc
90019f68:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90019f6a:	eef0 8a67 	vmov.f32	s17, s15
90019f6e:	fb92 f3f3 	sdiv	r3, r2, r3
90019f72:	9334      	str	r3, [sp, #208]	; 0xd0
90019f74:	9b19      	ldr	r3, [sp, #100]	; 0x64
90019f76:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90019f78:	3b01      	subs	r3, #1
90019f7a:	9319      	str	r3, [sp, #100]	; 0x64
90019f7c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90019f7e:	bf08      	it	eq
90019f80:	4613      	moveq	r3, r2
90019f82:	9309      	str	r3, [sp, #36]	; 0x24
90019f84:	e5ee      	b.n	90019b64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019f86:	2900      	cmp	r1, #0
90019f88:	f43f ae60 	beq.w	90019c4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90019f8c:	f818 0000 	ldrb.w	r0, [r8, r0]
90019f90:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90019f94:	900a      	str	r0, [sp, #40]	; 0x28
90019f96:	0e00      	lsrs	r0, r0, #24
90019f98:	9013      	str	r0, [sp, #76]	; 0x4c
90019f9a:	e657      	b.n	90019c4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90019f9c:	f113 0801 	adds.w	r8, r3, #1
90019fa0:	f53f af74 	bmi.w	90019e8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90019fa4:	4540      	cmp	r0, r8
90019fa6:	f6ff af71 	blt.w	90019e8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90019faa:	f11c 0801 	adds.w	r8, ip, #1
90019fae:	f53f af6d 	bmi.w	90019e8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90019fb2:	45c6      	cmp	lr, r8
90019fb4:	f6ff af6a 	blt.w	90019e8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90019fb8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90019fba:	b200      	sxth	r0, r0
90019fbc:	9302      	str	r3, [sp, #8]
90019fbe:	fa0f f38e 	sxth.w	r3, lr
90019fc2:	9000      	str	r0, [sp, #0]
90019fc4:	9301      	str	r3, [sp, #4]
90019fc6:	4633      	mov	r3, r6
90019fc8:	981d      	ldr	r0, [sp, #116]	; 0x74
90019fca:	e9cd 1405 	strd	r1, r4, [sp, #20]
90019fce:	e9cd c203 	strd	ip, r2, [sp, #12]
90019fd2:	4639      	mov	r1, r7
90019fd4:	9a12      	ldr	r2, [sp, #72]	; 0x48
90019fd6:	f7ff fc2b 	bl	90019830 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90019fda:	e757      	b.n	90019e8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90019fdc:	9b31      	ldr	r3, [sp, #196]	; 0xc4
90019fde:	f3c5 3003 	ubfx	r0, r5, #12, #4
90019fe2:	9c31      	ldr	r4, [sp, #196]	; 0xc4
90019fe4:	f3c3 3203 	ubfx	r2, r3, #12, #4
90019fe8:	9b38      	ldr	r3, [sp, #224]	; 0xe0
90019fea:	1427      	asrs	r7, r4, #16
90019fec:	9c12      	ldr	r4, [sp, #72]	; 0x48
90019fee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90019ff2:	142b      	asrs	r3, r5, #16
90019ff4:	fb01 7303 	mla	r3, r1, r3, r7
90019ff8:	18e7      	adds	r7, r4, r3
90019ffa:	5ce3      	ldrb	r3, [r4, r3]
90019ffc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9001a000:	ea4f 6c13 	mov.w	ip, r3, lsr #24
9001a004:	2a00      	cmp	r2, #0
9001a006:	f000 8137 	beq.w	9001a278 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>
9001a00a:	f897 e001 	ldrb.w	lr, [r7, #1]
9001a00e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9001a012:	9410      	str	r4, [sp, #64]	; 0x40
9001a014:	0e24      	lsrs	r4, r4, #24
9001a016:	9417      	str	r4, [sp, #92]	; 0x5c
9001a018:	b170      	cbz	r0, 9001a038 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
9001a01a:	eb07 0e01 	add.w	lr, r7, r1
9001a01e:	5c79      	ldrb	r1, [r7, r1]
9001a020:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9001a024:	910b      	str	r1, [sp, #44]	; 0x2c
9001a026:	0e09      	lsrs	r1, r1, #24
9001a028:	9114      	str	r1, [sp, #80]	; 0x50
9001a02a:	f89e 1001 	ldrb.w	r1, [lr, #1]
9001a02e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9001a032:	9111      	str	r1, [sp, #68]	; 0x44
9001a034:	0e09      	lsrs	r1, r1, #24
9001a036:	9118      	str	r1, [sp, #96]	; 0x60
9001a038:	b292      	uxth	r2, r2
9001a03a:	9917      	ldr	r1, [sp, #92]	; 0x5c
9001a03c:	b280      	uxth	r0, r0
9001a03e:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001a040:	fb02 f800 	mul.w	r8, r2, r0
9001a044:	0112      	lsls	r2, r2, #4
9001a046:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9001a04a:	eba2 0e08 	sub.w	lr, r2, r8
9001a04e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9001a052:	b280      	uxth	r0, r0
9001a054:	fa1f fe8e 	uxth.w	lr, lr
9001a058:	1a12      	subs	r2, r2, r0
9001a05a:	fb0e f101 	mul.w	r1, lr, r1
9001a05e:	b292      	uxth	r2, r2
9001a060:	fb02 110c 	mla	r1, r2, ip, r1
9001a064:	fb00 1104 	mla	r1, r0, r4, r1
9001a068:	9c18      	ldr	r4, [sp, #96]	; 0x60
9001a06a:	fb08 1104 	mla	r1, r8, r4, r1
9001a06e:	f3c1 2107 	ubfx	r1, r1, #8, #8
9001a072:	2900      	cmp	r1, #0
9001a074:	f000 80f5 	beq.w	9001a262 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75e>
9001a078:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9001a07c:	d019      	beq.n	9001a0b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ae>
9001a07e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9001a082:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001a086:	fb0c fa0a 	mul.w	sl, ip, sl
9001a08a:	fb0c fc03 	mul.w	ip, ip, r3
9001a08e:	ea4f 231a 	mov.w	r3, sl, lsr #8
9001a092:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001a096:	f50c 7780 	add.w	r7, ip, #256	; 0x100
9001a09a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001a09e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001a0a2:	4453      	add	r3, sl
9001a0a4:	0a3f      	lsrs	r7, r7, #8
9001a0a6:	0a1b      	lsrs	r3, r3, #8
9001a0a8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
9001a0ac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001a0b0:	433b      	orrs	r3, r7
9001a0b2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9001a0b4:	2cff      	cmp	r4, #255	; 0xff
9001a0b6:	d020      	beq.n	9001a0fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f6>
9001a0b8:	9c10      	ldr	r4, [sp, #64]	; 0x40
9001a0ba:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9001a0be:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9001a0c0:	4367      	muls	r7, r4
9001a0c2:	9c10      	ldr	r4, [sp, #64]	; 0x40
9001a0c4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9001a0c8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001a0cc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9001a0ce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9001a0d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001a0d6:	fb04 fa0a 	mul.w	sl, r4, sl
9001a0da:	44bc      	add	ip, r7
9001a0dc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9001a0e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001a0e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9001a0e8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001a0ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001a0f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001a0f4:	ea4c 040a 	orr.w	r4, ip, sl
9001a0f8:	9410      	str	r4, [sp, #64]	; 0x40
9001a0fa:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001a0fc:	2cff      	cmp	r4, #255	; 0xff
9001a0fe:	d020      	beq.n	9001a142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x63e>
9001a100:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001a102:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9001a106:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001a108:	4367      	muls	r7, r4
9001a10a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001a10c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9001a110:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001a114:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001a116:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9001a11a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001a11e:	fb04 fa0a 	mul.w	sl, r4, sl
9001a122:	44bc      	add	ip, r7
9001a124:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9001a128:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001a12c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9001a130:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001a134:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001a138:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001a13c:	ea4c 040a 	orr.w	r4, ip, sl
9001a140:	940b      	str	r4, [sp, #44]	; 0x2c
9001a142:	9c18      	ldr	r4, [sp, #96]	; 0x60
9001a144:	2cff      	cmp	r4, #255	; 0xff
9001a146:	d020      	beq.n	9001a18a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x686>
9001a148:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001a14a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9001a14e:	9c18      	ldr	r4, [sp, #96]	; 0x60
9001a150:	4367      	muls	r7, r4
9001a152:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001a154:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9001a158:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001a15c:	9c18      	ldr	r4, [sp, #96]	; 0x60
9001a15e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9001a162:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001a166:	fb04 fa0a 	mul.w	sl, r4, sl
9001a16a:	44bc      	add	ip, r7
9001a16c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9001a170:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001a174:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9001a178:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001a17c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001a180:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001a184:	ea4c 040a 	orr.w	r4, ip, sl
9001a188:	9411      	str	r4, [sp, #68]	; 0x44
9001a18a:	9c10      	ldr	r4, [sp, #64]	; 0x40
9001a18c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9001a190:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001a194:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9001a198:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001a19a:	fb0e f707 	mul.w	r7, lr, r7
9001a19e:	fb02 770c 	mla	r7, r2, ip, r7
9001a1a2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9001a1a6:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001a1a8:	fb00 770c 	mla	r7, r0, ip, r7
9001a1ac:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9001a1b0:	9c10      	ldr	r4, [sp, #64]	; 0x40
9001a1b2:	fb08 770c 	mla	r7, r8, ip, r7
9001a1b6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
9001a1ba:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001a1bc:	fb0e fe0c 	mul.w	lr, lr, ip
9001a1c0:	0a3f      	lsrs	r7, r7, #8
9001a1c2:	fb02 e303 	mla	r3, r2, r3, lr
9001a1c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001a1c8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9001a1cc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9001a1d0:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a1d2:	fb00 330a 	mla	r3, r0, sl, r3
9001a1d6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
9001a1da:	f8b9 0000 	ldrh.w	r0, [r9]
9001a1de:	fb08 3c0c 	mla	ip, r8, ip, r3
9001a1e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001a1e4:	1202      	asrs	r2, r0, #8
9001a1e6:	434b      	muls	r3, r1
9001a1e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001a1ec:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001a1f0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9001a1f4:	1c59      	adds	r1, r3, #1
9001a1f6:	ea47 070c 	orr.w	r7, r7, ip
9001a1fa:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9001a1fe:	0c3b      	lsrs	r3, r7, #16
9001a200:	ea6f 2111 	mvn.w	r1, r1, lsr #8
9001a204:	f3c7 2c07 	ubfx	ip, r7, #8, #8
9001a208:	b2ff      	uxtb	r7, r7
9001a20a:	fb13 f304 	smulbb	r3, r3, r4
9001a20e:	b2c9      	uxtb	r1, r1
9001a210:	fb1c fc04 	smulbb	ip, ip, r4
9001a214:	fb02 3201 	mla	r2, r2, r1, r3
9001a218:	10c3      	asrs	r3, r0, #3
9001a21a:	fb17 f704 	smulbb	r7, r7, r4
9001a21e:	00c0      	lsls	r0, r0, #3
9001a220:	b292      	uxth	r2, r2
9001a222:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9001a226:	b2c0      	uxtb	r0, r0
9001a228:	fb03 c301 	mla	r3, r3, r1, ip
9001a22c:	f102 0c01 	add.w	ip, r2, #1
9001a230:	fb00 7001 	mla	r0, r0, r1, r7
9001a234:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
9001a238:	b280      	uxth	r0, r0
9001a23a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
9001a23e:	b29b      	uxth	r3, r3
9001a240:	1c42      	adds	r2, r0, #1
9001a242:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001a246:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001a24a:	ea4c 0200 	orr.w	r2, ip, r0
9001a24e:	f103 0c01 	add.w	ip, r3, #1
9001a252:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9001a256:	095b      	lsrs	r3, r3, #5
9001a258:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001a25c:	431a      	orrs	r2, r3
9001a25e:	f8a9 2000 	strh.w	r2, [r9]
9001a262:	9b33      	ldr	r3, [sp, #204]	; 0xcc
9001a264:	f109 0902 	add.w	r9, r9, #2
9001a268:	9a31      	ldr	r2, [sp, #196]	; 0xc4
9001a26a:	f10b 3bff 	add.w	fp, fp, #4294967295
9001a26e:	441a      	add	r2, r3
9001a270:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9001a272:	9231      	str	r2, [sp, #196]	; 0xc4
9001a274:	441d      	add	r5, r3
9001a276:	e63d      	b.n	90019ef4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
9001a278:	2800      	cmp	r0, #0
9001a27a:	f43f aedd 	beq.w	9001a038 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
9001a27e:	5c79      	ldrb	r1, [r7, r1]
9001a280:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9001a284:	910b      	str	r1, [sp, #44]	; 0x2c
9001a286:	0e09      	lsrs	r1, r1, #24
9001a288:	9114      	str	r1, [sp, #80]	; 0x50
9001a28a:	e6d5      	b.n	9001a038 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
9001a28c:	b01f      	add	sp, #124	; 0x7c
9001a28e:	ecbd 8b08 	vpop	{d8-d11}
9001a292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001a298 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
9001a298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a29c:	880e      	ldrh	r6, [r1, #0]
9001a29e:	b085      	sub	sp, #20
9001a2a0:	4691      	mov	r9, r2
9001a2a2:	ea4f 2e26 	mov.w	lr, r6, asr #8
9001a2a6:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
9001a2aa:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
9001a2ae:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
9001a2b2:	ea4f 0ee6 	mov.w	lr, r6, asr #3
9001a2b6:	00f6      	lsls	r6, r6, #3
9001a2b8:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
9001a2bc:	9200      	str	r2, [sp, #0]
9001a2be:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
9001a2c2:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
9001a2c6:	9201      	str	r2, [sp, #4]
9001a2c8:	b2f2      	uxtb	r2, r6
9001a2ca:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
9001a2ce:	9202      	str	r2, [sp, #8]
9001a2d0:	fb04 560c 	mla	r6, r4, ip, r5
9001a2d4:	2c00      	cmp	r4, #0
9001a2d6:	eb09 0e06 	add.w	lr, r9, r6
9001a2da:	db3e      	blt.n	9001a35a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
9001a2dc:	45a0      	cmp	r8, r4
9001a2de:	dd3c      	ble.n	9001a35a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
9001a2e0:	2d00      	cmp	r5, #0
9001a2e2:	db38      	blt.n	9001a356 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
9001a2e4:	45ac      	cmp	ip, r5
9001a2e6:	dd36      	ble.n	9001a356 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
9001a2e8:	f819 2006 	ldrb.w	r2, [r9, r6]
9001a2ec:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9001a2f0:	1c6e      	adds	r6, r5, #1
9001a2f2:	d435      	bmi.n	9001a360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
9001a2f4:	45b4      	cmp	ip, r6
9001a2f6:	dd33      	ble.n	9001a360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
9001a2f8:	b3a0      	cbz	r0, 9001a364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
9001a2fa:	f89e 6001 	ldrb.w	r6, [lr, #1]
9001a2fe:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
9001a302:	3401      	adds	r4, #1
9001a304:	d432      	bmi.n	9001a36c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
9001a306:	45a0      	cmp	r8, r4
9001a308:	dd30      	ble.n	9001a36c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
9001a30a:	b397      	cbz	r7, 9001a372 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
9001a30c:	2d00      	cmp	r5, #0
9001a30e:	db2b      	blt.n	9001a368 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
9001a310:	45ac      	cmp	ip, r5
9001a312:	dd29      	ble.n	9001a368 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
9001a314:	f81e 400c 	ldrb.w	r4, [lr, ip]
9001a318:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
9001a31c:	3501      	adds	r5, #1
9001a31e:	d42b      	bmi.n	9001a378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
9001a320:	45ac      	cmp	ip, r5
9001a322:	dd29      	ble.n	9001a378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
9001a324:	b350      	cbz	r0, 9001a37c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe4>
9001a326:	44f4      	add	ip, lr
9001a328:	f89c 5001 	ldrb.w	r5, [ip, #1]
9001a32c:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
9001a330:	280f      	cmp	r0, #15
9001a332:	ea4f 6b12 	mov.w	fp, r2, lsr #24
9001a336:	ea4f 6a16 	mov.w	sl, r6, lsr #24
9001a33a:	ea4f 6914 	mov.w	r9, r4, lsr #24
9001a33e:	ea4f 6813 	mov.w	r8, r3, lsr #24
9001a342:	d801      	bhi.n	9001a348 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb0>
9001a344:	2f0f      	cmp	r7, #15
9001a346:	d91b      	bls.n	9001a380 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe8>
9001a348:	4b7e      	ldr	r3, [pc, #504]	; (9001a544 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
9001a34a:	f240 210d 	movw	r1, #525	; 0x20d
9001a34e:	4a7e      	ldr	r2, [pc, #504]	; (9001a548 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
9001a350:	487e      	ldr	r0, [pc, #504]	; (9001a54c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b4>)
9001a352:	f004 ffa7 	bl	9001f2a4 <__assert_func>
9001a356:	2200      	movs	r2, #0
9001a358:	e7ca      	b.n	9001a2f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
9001a35a:	2600      	movs	r6, #0
9001a35c:	4632      	mov	r2, r6
9001a35e:	e7d0      	b.n	9001a302 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
9001a360:	2600      	movs	r6, #0
9001a362:	e7ce      	b.n	9001a302 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
9001a364:	4606      	mov	r6, r0
9001a366:	e7cc      	b.n	9001a302 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
9001a368:	2400      	movs	r4, #0
9001a36a:	e7d7      	b.n	9001a31c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x84>
9001a36c:	2300      	movs	r3, #0
9001a36e:	461c      	mov	r4, r3
9001a370:	e7de      	b.n	9001a330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
9001a372:	463b      	mov	r3, r7
9001a374:	463c      	mov	r4, r7
9001a376:	e7db      	b.n	9001a330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
9001a378:	2300      	movs	r3, #0
9001a37a:	e7d9      	b.n	9001a330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
9001a37c:	4603      	mov	r3, r0
9001a37e:	e7d7      	b.n	9001a330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
9001a380:	b280      	uxth	r0, r0
9001a382:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001a386:	b2bf      	uxth	r7, r7
9001a388:	fb00 fe07 	mul.w	lr, r0, r7
9001a38c:	ea4f 1000 	mov.w	r0, r0, lsl #4
9001a390:	ebce 1707 	rsb	r7, lr, r7, lsl #4
9001a394:	eba0 0c0e 	sub.w	ip, r0, lr
9001a398:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
9001a39c:	b2bf      	uxth	r7, r7
9001a39e:	fa1f fc8c 	uxth.w	ip, ip
9001a3a2:	eba5 0507 	sub.w	r5, r5, r7
9001a3a6:	fb0c f00a 	mul.w	r0, ip, sl
9001a3aa:	b2ad      	uxth	r5, r5
9001a3ac:	fb05 000b 	mla	r0, r5, fp, r0
9001a3b0:	fb07 0009 	mla	r0, r7, r9, r0
9001a3b4:	fb0e 0008 	mla	r0, lr, r8, r0
9001a3b8:	f3c0 2007 	ubfx	r0, r0, #8, #8
9001a3bc:	9003      	str	r0, [sp, #12]
9001a3be:	d018      	beq.n	9001a3f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x15a>
9001a3c0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
9001a3c4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001a3c8:	fb0b f000 	mul.w	r0, fp, r0
9001a3cc:	fb0b fb02 	mul.w	fp, fp, r2
9001a3d0:	0a02      	lsrs	r2, r0, #8
9001a3d2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
9001a3d6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001a3da:	4402      	add	r2, r0
9001a3dc:	f50b 7080 	add.w	r0, fp, #256	; 0x100
9001a3e0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
9001a3e4:	0a12      	lsrs	r2, r2, #8
9001a3e6:	0a00      	lsrs	r0, r0, #8
9001a3e8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001a3ec:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001a3f0:	4302      	orrs	r2, r0
9001a3f2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001a3f6:	d019      	beq.n	9001a42c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x194>
9001a3f8:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
9001a3fc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9001a400:	fb0a fb0b 	mul.w	fp, sl, fp
9001a404:	fb0a fa06 	mul.w	sl, sl, r6
9001a408:	ea4f 261b 	mov.w	r6, fp, lsr #8
9001a40c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001a410:	f50a 7080 	add.w	r0, sl, #256	; 0x100
9001a414:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
9001a418:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9001a41c:	445e      	add	r6, fp
9001a41e:	0a00      	lsrs	r0, r0, #8
9001a420:	0a36      	lsrs	r6, r6, #8
9001a422:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001a426:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
9001a42a:	4306      	orrs	r6, r0
9001a42c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001a430:	d019      	beq.n	9001a466 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1ce>
9001a432:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
9001a436:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9001a43a:	fb09 fa0a 	mul.w	sl, r9, sl
9001a43e:	fb09 f904 	mul.w	r9, r9, r4
9001a442:	ea4f 241a 	mov.w	r4, sl, lsr #8
9001a446:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001a44a:	f509 7080 	add.w	r0, r9, #256	; 0x100
9001a44e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9001a452:	eb00 2019 	add.w	r0, r0, r9, lsr #8
9001a456:	4454      	add	r4, sl
9001a458:	0a00      	lsrs	r0, r0, #8
9001a45a:	0a24      	lsrs	r4, r4, #8
9001a45c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001a460:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9001a464:	4304      	orrs	r4, r0
9001a466:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9001a46a:	d019      	beq.n	9001a4a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x208>
9001a46c:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
9001a470:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001a474:	fb08 f909 	mul.w	r9, r8, r9
9001a478:	fb08 f803 	mul.w	r8, r8, r3
9001a47c:	ea4f 2319 	mov.w	r3, r9, lsr #8
9001a480:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
9001a484:	f508 7080 	add.w	r0, r8, #256	; 0x100
9001a488:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001a48c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9001a490:	444b      	add	r3, r9
9001a492:	0a00      	lsrs	r0, r0, #8
9001a494:	0a1b      	lsrs	r3, r3, #8
9001a496:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001a49a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001a49e:	4303      	orrs	r3, r0
9001a4a0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
9001a4a4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
9001a4a8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9001a4ac:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001a4b0:	fb0c f808 	mul.w	r8, ip, r8
9001a4b4:	fb0c f606 	mul.w	r6, ip, r6
9001a4b8:	fb05 8800 	mla	r8, r5, r0, r8
9001a4bc:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
9001a4c0:	fb05 6202 	mla	r2, r5, r2, r6
9001a4c4:	9d01      	ldr	r5, [sp, #4]
9001a4c6:	fb07 8800 	mla	r8, r7, r0, r8
9001a4ca:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
9001a4ce:	fb0e 8000 	mla	r0, lr, r0, r8
9001a4d2:	0a00      	lsrs	r0, r0, #8
9001a4d4:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
9001a4d8:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
9001a4dc:	9c02      	ldr	r4, [sp, #8]
9001a4de:	fb07 2700 	mla	r7, r7, r0, r2
9001a4e2:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
9001a4e6:	9b03      	ldr	r3, [sp, #12]
9001a4e8:	fb0e 7000 	mla	r0, lr, r0, r7
9001a4ec:	43da      	mvns	r2, r3
9001a4ee:	9b00      	ldr	r3, [sp, #0]
9001a4f0:	0a00      	lsrs	r0, r0, #8
9001a4f2:	b2d2      	uxtb	r2, r2
9001a4f4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001a4f8:	4353      	muls	r3, r2
9001a4fa:	4354      	muls	r4, r2
9001a4fc:	ea48 0000 	orr.w	r0, r8, r0
9001a500:	4355      	muls	r5, r2
9001a502:	4622      	mov	r2, r4
9001a504:	1c5c      	adds	r4, r3, #1
9001a506:	eb04 2413 	add.w	r4, r4, r3, lsr #8
9001a50a:	0c03      	lsrs	r3, r0, #16
9001a50c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
9001a510:	4b0f      	ldr	r3, [pc, #60]	; (9001a550 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b8>)
9001a512:	ea03 2304 	and.w	r3, r3, r4, lsl #8
9001a516:	1c54      	adds	r4, r2, #1
9001a518:	eb04 2412 	add.w	r4, r4, r2, lsr #8
9001a51c:	b2c2      	uxtb	r2, r0
9001a51e:	f3c0 2007 	ubfx	r0, r0, #8, #8
9001a522:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9001a526:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
9001a52a:	1c6a      	adds	r2, r5, #1
9001a52c:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001a530:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001a534:	00c0      	lsls	r0, r0, #3
9001a536:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001a53a:	4318      	orrs	r0, r3
9001a53c:	8008      	strh	r0, [r1, #0]
9001a53e:	b005      	add	sp, #20
9001a540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a544:	900236e6 	.word	0x900236e6
9001a548:	90023ca9 	.word	0x90023ca9
9001a54c:	900237cf 	.word	0x900237cf
9001a550:	fffff800 	.word	0xfffff800

9001a554 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a554:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a558:	ed2d 8b08 	vpush	{d8-d11}
9001a55c:	b09b      	sub	sp, #108	; 0x6c
9001a55e:	eeb0 aa40 	vmov.f32	s20, s0
9001a562:	eef0 9a60 	vmov.f32	s19, s1
9001a566:	9218      	str	r2, [sp, #96]	; 0x60
9001a568:	eeb0 9a41 	vmov.f32	s18, s2
9001a56c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
9001a56e:	eeb0 8a62 	vmov.f32	s16, s5
9001a572:	9019      	str	r0, [sp, #100]	; 0x64
9001a574:	eef0 8a43 	vmov.f32	s17, s6
9001a578:	6850      	ldr	r0, [r2, #4]
9001a57a:	eef0 ba44 	vmov.f32	s23, s8
9001a57e:	9116      	str	r1, [sp, #88]	; 0x58
9001a580:	eeb0 ba64 	vmov.f32	s22, s9
9001a584:	9307      	str	r3, [sp, #28]
9001a586:	eef0 aa45 	vmov.f32	s21, s10
9001a58a:	6812      	ldr	r2, [r2, #0]
9001a58c:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
9001a58e:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
9001a592:	fb00 1303 	mla	r3, r0, r3, r1
9001a596:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001a59a:	930a      	str	r3, [sp, #40]	; 0x28
9001a59c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9001a59e:	681b      	ldr	r3, [r3, #0]
9001a5a0:	930f      	str	r3, [sp, #60]	; 0x3c
9001a5a2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9001a5a4:	685e      	ldr	r6, [r3, #4]
9001a5a6:	3604      	adds	r6, #4
9001a5a8:	9b16      	ldr	r3, [sp, #88]	; 0x58
9001a5aa:	2b00      	cmp	r3, #0
9001a5ac:	dc03      	bgt.n	9001a5b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
9001a5ae:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001a5b0:	2b00      	cmp	r3, #0
9001a5b2:	f340 836f 	ble.w	9001ac94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x740>
9001a5b6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9001a5b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001a5bc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001a5c0:	1e48      	subs	r0, r1, #1
9001a5c2:	1e57      	subs	r7, r2, #1
9001a5c4:	9b07      	ldr	r3, [sp, #28]
9001a5c6:	2b00      	cmp	r3, #0
9001a5c8:	f340 8188 	ble.w	9001a8dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
9001a5cc:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
9001a5ce:	142b      	asrs	r3, r5, #16
9001a5d0:	ea5f 4c24 	movs.w	ip, r4, asr #16
9001a5d4:	d406      	bmi.n	9001a5e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a5d6:	4584      	cmp	ip, r0
9001a5d8:	da04      	bge.n	9001a5e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a5da:	2b00      	cmp	r3, #0
9001a5dc:	db02      	blt.n	9001a5e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a5de:	42bb      	cmp	r3, r7
9001a5e0:	f2c0 817d 	blt.w	9001a8de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001a5e4:	f11c 0c01 	adds.w	ip, ip, #1
9001a5e8:	f100 816b 	bmi.w	9001a8c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001a5ec:	4561      	cmp	r1, ip
9001a5ee:	f2c0 8168 	blt.w	9001a8c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001a5f2:	3301      	adds	r3, #1
9001a5f4:	f100 8165 	bmi.w	9001a8c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001a5f8:	429a      	cmp	r2, r3
9001a5fa:	f2c0 8162 	blt.w	9001a8c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001a5fe:	9b07      	ldr	r3, [sp, #28]
9001a600:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001a602:	9317      	str	r3, [sp, #92]	; 0x5c
9001a604:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001a606:	2b00      	cmp	r3, #0
9001a608:	f340 8187 	ble.w	9001a91a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
9001a60c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001a60e:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001a612:	f3c5 3003 	ubfx	r0, r5, #12, #4
9001a616:	f3c3 3203 	ubfx	r2, r3, #12, #4
9001a61a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9001a61c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
9001a620:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001a622:	141b      	asrs	r3, r3, #16
9001a624:	f100 81ca 	bmi.w	9001a9bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001a628:	f101 38ff 	add.w	r8, r1, #4294967295
9001a62c:	4543      	cmp	r3, r8
9001a62e:	f280 81c5 	bge.w	9001a9bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001a632:	f1bc 0f00 	cmp.w	ip, #0
9001a636:	f2c0 81c1 	blt.w	9001a9bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001a63a:	f10e 38ff 	add.w	r8, lr, #4294967295
9001a63e:	45c4      	cmp	ip, r8
9001a640:	f280 81bc 	bge.w	9001a9bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001a644:	b209      	sxth	r1, r1
9001a646:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9001a648:	fb0c 3301 	mla	r3, ip, r1, r3
9001a64c:	eb04 0803 	add.w	r8, r4, r3
9001a650:	5ce3      	ldrb	r3, [r4, r3]
9001a652:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9001a656:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9001a65a:	2a00      	cmp	r2, #0
9001a65c:	f000 81a3 	beq.w	9001a9a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9001a660:	f898 c001 	ldrb.w	ip, [r8, #1]
9001a664:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
9001a668:	940b      	str	r4, [sp, #44]	; 0x2c
9001a66a:	0e24      	lsrs	r4, r4, #24
9001a66c:	9412      	str	r4, [sp, #72]	; 0x48
9001a66e:	b178      	cbz	r0, 9001a690 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
9001a670:	eb08 0c01 	add.w	ip, r8, r1
9001a674:	f818 1001 	ldrb.w	r1, [r8, r1]
9001a678:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9001a67c:	9108      	str	r1, [sp, #32]
9001a67e:	0e09      	lsrs	r1, r1, #24
9001a680:	9110      	str	r1, [sp, #64]	; 0x40
9001a682:	f89c 1001 	ldrb.w	r1, [ip, #1]
9001a686:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9001a68a:	910c      	str	r1, [sp, #48]	; 0x30
9001a68c:	0e09      	lsrs	r1, r1, #24
9001a68e:	9113      	str	r1, [sp, #76]	; 0x4c
9001a690:	b292      	uxth	r2, r2
9001a692:	9912      	ldr	r1, [sp, #72]	; 0x48
9001a694:	b280      	uxth	r0, r0
9001a696:	9c10      	ldr	r4, [sp, #64]	; 0x40
9001a698:	fb02 f900 	mul.w	r9, r2, r0
9001a69c:	0112      	lsls	r2, r2, #4
9001a69e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9001a6a2:	eba2 0809 	sub.w	r8, r2, r9
9001a6a6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9001a6aa:	b280      	uxth	r0, r0
9001a6ac:	fa1f f888 	uxth.w	r8, r8
9001a6b0:	1a12      	subs	r2, r2, r0
9001a6b2:	fb08 f101 	mul.w	r1, r8, r1
9001a6b6:	b292      	uxth	r2, r2
9001a6b8:	fb02 110e 	mla	r1, r2, lr, r1
9001a6bc:	fb00 1104 	mla	r1, r0, r4, r1
9001a6c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001a6c2:	fb09 1104 	mla	r1, r9, r4, r1
9001a6c6:	f3c1 2107 	ubfx	r1, r1, #8, #8
9001a6ca:	2900      	cmp	r1, #0
9001a6cc:	f000 80ee 	beq.w	9001a8ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001a6d0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
9001a6d4:	d01b      	beq.n	9001a70e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
9001a6d6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9001a6da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001a6de:	fb0e fa0a 	mul.w	sl, lr, sl
9001a6e2:	fb0e fe03 	mul.w	lr, lr, r3
9001a6e6:	ea4f 231a 	mov.w	r3, sl, lsr #8
9001a6ea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001a6ee:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
9001a6f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001a6f6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9001a6fa:	4453      	add	r3, sl
9001a6fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001a700:	0a1b      	lsrs	r3, r3, #8
9001a702:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9001a706:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001a70a:	ea43 030c 	orr.w	r3, r3, ip
9001a70e:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001a710:	2cff      	cmp	r4, #255	; 0xff
9001a712:	d021      	beq.n	9001a758 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001a714:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001a716:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9001a71a:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001a71c:	fb04 fb0b 	mul.w	fp, r4, fp
9001a720:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001a722:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001a726:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001a728:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001a72c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001a730:	fb04 fa0a 	mul.w	sl, r4, sl
9001a734:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001a738:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001a73c:	44de      	add	lr, fp
9001a73e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001a742:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001a746:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001a74a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001a74e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001a752:	ea4e 040a 	orr.w	r4, lr, sl
9001a756:	940b      	str	r4, [sp, #44]	; 0x2c
9001a758:	9c10      	ldr	r4, [sp, #64]	; 0x40
9001a75a:	2cff      	cmp	r4, #255	; 0xff
9001a75c:	d021      	beq.n	9001a7a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
9001a75e:	9c08      	ldr	r4, [sp, #32]
9001a760:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9001a764:	9c10      	ldr	r4, [sp, #64]	; 0x40
9001a766:	fb04 fb0b 	mul.w	fp, r4, fp
9001a76a:	9c08      	ldr	r4, [sp, #32]
9001a76c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001a770:	9c10      	ldr	r4, [sp, #64]	; 0x40
9001a772:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001a776:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001a77a:	fb04 fa0a 	mul.w	sl, r4, sl
9001a77e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001a782:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001a786:	44de      	add	lr, fp
9001a788:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001a78c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001a790:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001a794:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001a798:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001a79c:	ea4e 040a 	orr.w	r4, lr, sl
9001a7a0:	9408      	str	r4, [sp, #32]
9001a7a2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001a7a4:	2cff      	cmp	r4, #255	; 0xff
9001a7a6:	d021      	beq.n	9001a7ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
9001a7a8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9001a7aa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9001a7ae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001a7b0:	fb04 fb0b 	mul.w	fp, r4, fp
9001a7b4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9001a7b6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001a7ba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001a7bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001a7c0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001a7c4:	fb04 fa0a 	mul.w	sl, r4, sl
9001a7c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001a7cc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001a7d0:	44de      	add	lr, fp
9001a7d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001a7d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001a7da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001a7de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001a7e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001a7e6:	ea4e 040a 	orr.w	r4, lr, sl
9001a7ea:	940c      	str	r4, [sp, #48]	; 0x30
9001a7ec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001a7ee:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
9001a7f2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001a7f6:	43c9      	mvns	r1, r1
9001a7f8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9001a7fc:	9c08      	ldr	r4, [sp, #32]
9001a7fe:	b2c9      	uxtb	r1, r1
9001a800:	fb08 fc0c 	mul.w	ip, r8, ip
9001a804:	fb02 cc0e 	mla	ip, r2, lr, ip
9001a808:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9001a80c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9001a80e:	fb00 cc0e 	mla	ip, r0, lr, ip
9001a812:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9001a816:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001a818:	fb09 cc0e 	mla	ip, r9, lr, ip
9001a81c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
9001a820:	fb08 f80e 	mul.w	r8, r8, lr
9001a824:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001a828:	fb02 8303 	mla	r3, r2, r3, r8
9001a82c:	9a08      	ldr	r2, [sp, #32]
9001a82e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001a832:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9001a836:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001a838:	fb00 330a 	mla	r3, r0, sl, r3
9001a83c:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
9001a840:	fb09 3900 	mla	r9, r9, r0, r3
9001a844:	883b      	ldrh	r3, [r7, #0]
9001a846:	1218      	asrs	r0, r3, #8
9001a848:	10da      	asrs	r2, r3, #3
9001a84a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001a84e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001a852:	00db      	lsls	r3, r3, #3
9001a854:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001a858:	4348      	muls	r0, r1
9001a85a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9001a85e:	b2db      	uxtb	r3, r3
9001a860:	434a      	muls	r2, r1
9001a862:	ea4c 0c09 	orr.w	ip, ip, r9
9001a866:	434b      	muls	r3, r1
9001a868:	1c41      	adds	r1, r0, #1
9001a86a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9001a86e:	ea4f 401c 	mov.w	r0, ip, lsr #16
9001a872:	eb00 2011 	add.w	r0, r0, r1, lsr #8
9001a876:	4960      	ldr	r1, [pc, #384]	; (9001a9f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>)
9001a878:	ea01 2000 	and.w	r0, r1, r0, lsl #8
9001a87c:	1c59      	adds	r1, r3, #1
9001a87e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9001a882:	fa5f f38c 	uxtb.w	r3, ip
9001a886:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9001a88a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9001a88e:	1c51      	adds	r1, r2, #1
9001a890:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001a894:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
9001a898:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
9001a89c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001a8a0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
9001a8a4:	ea43 0c0c 	orr.w	ip, r3, ip
9001a8a8:	f8a7 c000 	strh.w	ip, [r7]
9001a8ac:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9001a8ae:	3702      	adds	r7, #2
9001a8b0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
9001a8b2:	441a      	add	r2, r3
9001a8b4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001a8b6:	441d      	add	r5, r3
9001a8b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001a8ba:	922d      	str	r2, [sp, #180]	; 0xb4
9001a8bc:	3b01      	subs	r3, #1
9001a8be:	9317      	str	r3, [sp, #92]	; 0x5c
9001a8c0:	e6a0      	b.n	9001a604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001a8c2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9001a8c4:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
9001a8c6:	441c      	add	r4, r3
9001a8c8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001a8ca:	441d      	add	r5, r3
9001a8cc:	9b07      	ldr	r3, [sp, #28]
9001a8ce:	942d      	str	r4, [sp, #180]	; 0xb4
9001a8d0:	3b01      	subs	r3, #1
9001a8d2:	9307      	str	r3, [sp, #28]
9001a8d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001a8d6:	3302      	adds	r3, #2
9001a8d8:	930a      	str	r3, [sp, #40]	; 0x28
9001a8da:	e673      	b.n	9001a5c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a8dc:	d024      	beq.n	9001a928 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
9001a8de:	9b07      	ldr	r3, [sp, #28]
9001a8e0:	982f      	ldr	r0, [sp, #188]	; 0xbc
9001a8e2:	3b01      	subs	r3, #1
9001a8e4:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
9001a8e6:	fb00 4003 	mla	r0, r0, r3, r4
9001a8ea:	1400      	asrs	r0, r0, #16
9001a8ec:	f53f ae87 	bmi.w	9001a5fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001a8f0:	3901      	subs	r1, #1
9001a8f2:	4288      	cmp	r0, r1
9001a8f4:	f6bf ae83 	bge.w	9001a5fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001a8f8:	9930      	ldr	r1, [sp, #192]	; 0xc0
9001a8fa:	fb01 5303 	mla	r3, r1, r3, r5
9001a8fe:	141b      	asrs	r3, r3, #16
9001a900:	f53f ae7d 	bmi.w	9001a5fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001a904:	3a01      	subs	r2, #1
9001a906:	4293      	cmp	r3, r2
9001a908:	f6bf ae79 	bge.w	9001a5fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001a90c:	f8dd b01c 	ldr.w	fp, [sp, #28]
9001a910:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
9001a914:	f1bb 0f00 	cmp.w	fp, #0
9001a918:	dc70      	bgt.n	9001a9fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
9001a91a:	9b07      	ldr	r3, [sp, #28]
9001a91c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001a920:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001a922:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9001a926:	930a      	str	r3, [sp, #40]	; 0x28
9001a928:	9b16      	ldr	r3, [sp, #88]	; 0x58
9001a92a:	2b00      	cmp	r3, #0
9001a92c:	f340 81b2 	ble.w	9001ac94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x740>
9001a930:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001a934:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001a936:	ee3a aa2b 	vadd.f32	s20, s20, s23
9001a93a:	ee79 9a8b 	vadd.f32	s19, s19, s22
9001a93e:	eef0 6a48 	vmov.f32	s13, s16
9001a942:	eec7 7a0a 	vdiv.f32	s15, s14, s20
9001a946:	ee39 9a2a 	vadd.f32	s18, s18, s21
9001a94a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a94e:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
9001a952:	eef0 6a68 	vmov.f32	s13, s17
9001a956:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a95a:	ee16 5a90 	vmov	r5, s13
9001a95e:	ee29 7aa7 	vmul.f32	s14, s19, s15
9001a962:	ee69 7a27 	vmul.f32	s15, s18, s15
9001a966:	ee37 8a48 	vsub.f32	s16, s14, s16
9001a96a:	ee77 8ae8 	vsub.f32	s17, s15, s17
9001a96e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
9001a972:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
9001a976:	ee18 2a10 	vmov	r2, s16
9001a97a:	eeb0 8a47 	vmov.f32	s16, s14
9001a97e:	fb92 f3f3 	sdiv	r3, r2, r3
9001a982:	ee18 2a90 	vmov	r2, s17
9001a986:	932f      	str	r3, [sp, #188]	; 0xbc
9001a988:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001a98a:	eef0 8a67 	vmov.f32	s17, s15
9001a98e:	fb92 f3f3 	sdiv	r3, r2, r3
9001a992:	9330      	str	r3, [sp, #192]	; 0xc0
9001a994:	9b16      	ldr	r3, [sp, #88]	; 0x58
9001a996:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001a998:	3b01      	subs	r3, #1
9001a99a:	9316      	str	r3, [sp, #88]	; 0x58
9001a99c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001a99e:	bf08      	it	eq
9001a9a0:	4613      	moveq	r3, r2
9001a9a2:	9307      	str	r3, [sp, #28]
9001a9a4:	e600      	b.n	9001a5a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001a9a6:	2800      	cmp	r0, #0
9001a9a8:	f43f ae72 	beq.w	9001a690 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
9001a9ac:	f818 1001 	ldrb.w	r1, [r8, r1]
9001a9b0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9001a9b4:	9108      	str	r1, [sp, #32]
9001a9b6:	0e09      	lsrs	r1, r1, #24
9001a9b8:	9110      	str	r1, [sp, #64]	; 0x40
9001a9ba:	e669      	b.n	9001a690 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
9001a9bc:	f113 0801 	adds.w	r8, r3, #1
9001a9c0:	f53f af74 	bmi.w	9001a8ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001a9c4:	4541      	cmp	r1, r8
9001a9c6:	f6ff af71 	blt.w	9001a8ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001a9ca:	f11c 0801 	adds.w	r8, ip, #1
9001a9ce:	f53f af6d 	bmi.w	9001a8ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001a9d2:	45c6      	cmp	lr, r8
9001a9d4:	f6ff af6a 	blt.w	9001a8ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001a9d8:	b209      	sxth	r1, r1
9001a9da:	e9cd 3c02 	strd	r3, ip, [sp, #8]
9001a9de:	fa0f f38e 	sxth.w	r3, lr
9001a9e2:	9100      	str	r1, [sp, #0]
9001a9e4:	4639      	mov	r1, r7
9001a9e6:	9301      	str	r3, [sp, #4]
9001a9e8:	4633      	mov	r3, r6
9001a9ea:	e9cd 2004 	strd	r2, r0, [sp, #16]
9001a9ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001a9f0:	9819      	ldr	r0, [sp, #100]	; 0x64
9001a9f2:	f7ff fc51 	bl	9001a298 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
9001a9f6:	e759      	b.n	9001a8ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001a9f8:	fffff800 	.word	0xfffff800
9001a9fc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001a9fe:	f3c5 3003 	ubfx	r0, r5, #12, #4
9001aa02:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
9001aa04:	f3c3 3203 	ubfx	r2, r3, #12, #4
9001aa08:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9001aa0a:	1427      	asrs	r7, r4, #16
9001aa0c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9001aa0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001aa12:	142b      	asrs	r3, r5, #16
9001aa14:	fb01 7303 	mla	r3, r1, r3, r7
9001aa18:	18e7      	adds	r7, r4, r3
9001aa1a:	5ce3      	ldrb	r3, [r4, r3]
9001aa1c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9001aa20:	ea4f 6c13 	mov.w	ip, r3, lsr #24
9001aa24:	2a00      	cmp	r2, #0
9001aa26:	f000 812b 	beq.w	9001ac80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>
9001aa2a:	f897 e001 	ldrb.w	lr, [r7, #1]
9001aa2e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9001aa32:	940d      	str	r4, [sp, #52]	; 0x34
9001aa34:	0e24      	lsrs	r4, r4, #24
9001aa36:	9414      	str	r4, [sp, #80]	; 0x50
9001aa38:	b170      	cbz	r0, 9001aa58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9001aa3a:	eb07 0e01 	add.w	lr, r7, r1
9001aa3e:	5c79      	ldrb	r1, [r7, r1]
9001aa40:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9001aa44:	9109      	str	r1, [sp, #36]	; 0x24
9001aa46:	0e09      	lsrs	r1, r1, #24
9001aa48:	9111      	str	r1, [sp, #68]	; 0x44
9001aa4a:	f89e 1001 	ldrb.w	r1, [lr, #1]
9001aa4e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9001aa52:	910e      	str	r1, [sp, #56]	; 0x38
9001aa54:	0e09      	lsrs	r1, r1, #24
9001aa56:	9115      	str	r1, [sp, #84]	; 0x54
9001aa58:	b292      	uxth	r2, r2
9001aa5a:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001aa5c:	b280      	uxth	r0, r0
9001aa5e:	fb02 f800 	mul.w	r8, r2, r0
9001aa62:	0112      	lsls	r2, r2, #4
9001aa64:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9001aa68:	eba2 0e08 	sub.w	lr, r2, r8
9001aa6c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
9001aa70:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001aa72:	b280      	uxth	r0, r0
9001aa74:	fa1f fe8e 	uxth.w	lr, lr
9001aa78:	1a09      	subs	r1, r1, r0
9001aa7a:	fb0e f202 	mul.w	r2, lr, r2
9001aa7e:	b289      	uxth	r1, r1
9001aa80:	fb01 220c 	mla	r2, r1, ip, r2
9001aa84:	fb00 2204 	mla	r2, r0, r4, r2
9001aa88:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001aa8a:	fb08 2204 	mla	r2, r8, r4, r2
9001aa8e:	f3c2 2207 	ubfx	r2, r2, #8, #8
9001aa92:	2a00      	cmp	r2, #0
9001aa94:	f000 80e9 	beq.w	9001ac6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x716>
9001aa98:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9001aa9c:	d019      	beq.n	9001aad2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
9001aa9e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9001aaa2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001aaa6:	fb0c fa0a 	mul.w	sl, ip, sl
9001aaaa:	fb0c fc03 	mul.w	ip, ip, r3
9001aaae:	ea4f 231a 	mov.w	r3, sl, lsr #8
9001aab2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001aab6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
9001aaba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001aabe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001aac2:	4453      	add	r3, sl
9001aac4:	0a3f      	lsrs	r7, r7, #8
9001aac6:	0a1b      	lsrs	r3, r3, #8
9001aac8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
9001aacc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001aad0:	433b      	orrs	r3, r7
9001aad2:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001aad4:	2cff      	cmp	r4, #255	; 0xff
9001aad6:	d020      	beq.n	9001ab1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
9001aad8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001aada:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9001aade:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001aae0:	4367      	muls	r7, r4
9001aae2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001aae4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9001aae8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001aaec:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001aaee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9001aaf2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001aaf6:	fb04 fa0a 	mul.w	sl, r4, sl
9001aafa:	44bc      	add	ip, r7
9001aafc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9001ab00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001ab04:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9001ab08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001ab0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001ab10:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001ab14:	ea4c 040a 	orr.w	r4, ip, sl
9001ab18:	940d      	str	r4, [sp, #52]	; 0x34
9001ab1a:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001ab1c:	2cff      	cmp	r4, #255	; 0xff
9001ab1e:	d020      	beq.n	9001ab62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
9001ab20:	9c09      	ldr	r4, [sp, #36]	; 0x24
9001ab22:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9001ab26:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001ab28:	4367      	muls	r7, r4
9001ab2a:	9c09      	ldr	r4, [sp, #36]	; 0x24
9001ab2c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9001ab30:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001ab34:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001ab36:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9001ab3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001ab3e:	fb04 fa0a 	mul.w	sl, r4, sl
9001ab42:	44bc      	add	ip, r7
9001ab44:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9001ab48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001ab4c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9001ab50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001ab54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001ab58:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001ab5c:	ea4c 040a 	orr.w	r4, ip, sl
9001ab60:	9409      	str	r4, [sp, #36]	; 0x24
9001ab62:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001ab64:	2cff      	cmp	r4, #255	; 0xff
9001ab66:	d020      	beq.n	9001abaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
9001ab68:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001ab6a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9001ab6e:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001ab70:	4367      	muls	r7, r4
9001ab72:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001ab74:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9001ab78:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001ab7c:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001ab7e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9001ab82:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001ab86:	fb04 fa0a 	mul.w	sl, r4, sl
9001ab8a:	44bc      	add	ip, r7
9001ab8c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9001ab90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001ab94:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9001ab98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001ab9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001aba0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001aba4:	ea4c 040a 	orr.w	r4, ip, sl
9001aba8:	940e      	str	r4, [sp, #56]	; 0x38
9001abaa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001abac:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9001abb0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001abb4:	43d2      	mvns	r2, r2
9001abb6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9001abba:	9c09      	ldr	r4, [sp, #36]	; 0x24
9001abbc:	b2d2      	uxtb	r2, r2
9001abbe:	fb0e f707 	mul.w	r7, lr, r7
9001abc2:	fb01 770c 	mla	r7, r1, ip, r7
9001abc6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9001abca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001abcc:	fb00 770c 	mla	r7, r0, ip, r7
9001abd0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9001abd4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001abd6:	fb08 770c 	mla	r7, r8, ip, r7
9001abda:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
9001abde:	fb0e fe0c 	mul.w	lr, lr, ip
9001abe2:	0a3f      	lsrs	r7, r7, #8
9001abe4:	fb01 e303 	mla	r3, r1, r3, lr
9001abe8:	9909      	ldr	r1, [sp, #36]	; 0x24
9001abea:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9001abee:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
9001abf2:	990e      	ldr	r1, [sp, #56]	; 0x38
9001abf4:	fb00 330a 	mla	r3, r0, sl, r3
9001abf8:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
9001abfc:	fb08 3c0c 	mla	ip, r8, ip, r3
9001ac00:	f8b9 3000 	ldrh.w	r3, [r9]
9001ac04:	1218      	asrs	r0, r3, #8
9001ac06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001ac0a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001ac0e:	10d9      	asrs	r1, r3, #3
9001ac10:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9001ac14:	00db      	lsls	r3, r3, #3
9001ac16:	4350      	muls	r0, r2
9001ac18:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001ac1c:	ea47 070c 	orr.w	r7, r7, ip
9001ac20:	b2db      	uxtb	r3, r3
9001ac22:	f100 0c01 	add.w	ip, r0, #1
9001ac26:	4351      	muls	r1, r2
9001ac28:	4353      	muls	r3, r2
9001ac2a:	4a1d      	ldr	r2, [pc, #116]	; (9001aca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
9001ac2c:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
9001ac30:	ea4f 4c17 	mov.w	ip, r7, lsr #16
9001ac34:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
9001ac38:	f103 0c01 	add.w	ip, r3, #1
9001ac3c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9001ac40:	fa5f fc87 	uxtb.w	ip, r7
9001ac44:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001ac48:	ea02 2000 	and.w	r0, r2, r0, lsl #8
9001ac4c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9001ac50:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
9001ac54:	1c4b      	adds	r3, r1, #1
9001ac56:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9001ac5a:	eb07 2711 	add.w	r7, r7, r1, lsr #8
9001ac5e:	00ff      	lsls	r7, r7, #3
9001ac60:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001ac64:	4338      	orrs	r0, r7
9001ac66:	f8a9 0000 	strh.w	r0, [r9]
9001ac6a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9001ac6c:	f109 0902 	add.w	r9, r9, #2
9001ac70:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
9001ac72:	f10b 3bff 	add.w	fp, fp, #4294967295
9001ac76:	441a      	add	r2, r3
9001ac78:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001ac7a:	922d      	str	r2, [sp, #180]	; 0xb4
9001ac7c:	441d      	add	r5, r3
9001ac7e:	e649      	b.n	9001a914 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
9001ac80:	2800      	cmp	r0, #0
9001ac82:	f43f aee9 	beq.w	9001aa58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9001ac86:	5c79      	ldrb	r1, [r7, r1]
9001ac88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9001ac8c:	9109      	str	r1, [sp, #36]	; 0x24
9001ac8e:	0e09      	lsrs	r1, r1, #24
9001ac90:	9111      	str	r1, [sp, #68]	; 0x44
9001ac92:	e6e1      	b.n	9001aa58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9001ac94:	b01b      	add	sp, #108	; 0x6c
9001ac96:	ecbd 8b08 	vpop	{d8-d11}
9001ac9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ac9e:	bf00      	nop
9001aca0:	fffff800 	.word	0xfffff800

9001aca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
9001aca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001aca8:	b085      	sub	sp, #20
9001acaa:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
9001acae:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
9001acb2:	9103      	str	r1, [sp, #12]
9001acb4:	2d00      	cmp	r5, #0
9001acb6:	fb05 7106 	mla	r1, r5, r6, r7
9001acba:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
9001acbe:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
9001acc2:	eb02 0441 	add.w	r4, r2, r1, lsl #1
9001acc6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
9001acca:	eb03 0901 	add.w	r9, r3, r1
9001acce:	9401      	str	r4, [sp, #4]
9001acd0:	f2c0 80c0 	blt.w	9001ae54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
9001acd4:	45a8      	cmp	r8, r5
9001acd6:	f340 80bd 	ble.w	9001ae54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
9001acda:	2f00      	cmp	r7, #0
9001acdc:	f2c0 80b6 	blt.w	9001ae4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
9001ace0:	42be      	cmp	r6, r7
9001ace2:	f340 80b3 	ble.w	9001ae4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
9001ace6:	f813 c001 	ldrb.w	ip, [r3, r1]
9001acea:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
9001acee:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9001acf2:	d019      	beq.n	9001ad28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
9001acf4:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
9001acf8:	ea4f 02ec 	mov.w	r2, ip, asr #3
9001acfc:	435a      	muls	r2, r3
9001acfe:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
9001ad02:	f64f 011f 	movw	r1, #63519	; 0xf81f
9001ad06:	fb0c f403 	mul.w	r4, ip, r3
9001ad0a:	ea01 1352 	and.w	r3, r1, r2, lsr #5
9001ad0e:	f602 0201 	addw	r2, r2, #2049	; 0x801
9001ad12:	441a      	add	r2, r3
9001ad14:	f104 0320 	add.w	r3, r4, #32
9001ad18:	eb03 2314 	add.w	r3, r3, r4, lsr #8
9001ad1c:	ea01 1152 	and.w	r1, r1, r2, lsr #5
9001ad20:	0a1b      	lsrs	r3, r3, #8
9001ad22:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ad26:	4319      	orrs	r1, r3
9001ad28:	b289      	uxth	r1, r1
9001ad2a:	1c7b      	adds	r3, r7, #1
9001ad2c:	f100 8097 	bmi.w	9001ae5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
9001ad30:	429e      	cmp	r6, r3
9001ad32:	f340 8094 	ble.w	9001ae5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
9001ad36:	2800      	cmp	r0, #0
9001ad38:	f000 8094 	beq.w	9001ae64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
9001ad3c:	f899 4001 	ldrb.w	r4, [r9, #1]
9001ad40:	9b01      	ldr	r3, [sp, #4]
9001ad42:	2cff      	cmp	r4, #255	; 0xff
9001ad44:	885b      	ldrh	r3, [r3, #2]
9001ad46:	d01b      	beq.n	9001ad80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
9001ad48:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
9001ad4c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
9001ad50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ad54:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9001ad58:	fb0a f202 	mul.w	r2, sl, r2
9001ad5c:	fb04 fa03 	mul.w	sl, r4, r3
9001ad60:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
9001ad64:	f602 0201 	addw	r2, r2, #2049	; 0x801
9001ad68:	441a      	add	r2, r3
9001ad6a:	f10a 0320 	add.w	r3, sl, #32
9001ad6e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
9001ad72:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
9001ad76:	0a1b      	lsrs	r3, r3, #8
9001ad78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ad7c:	ea4b 0303 	orr.w	r3, fp, r3
9001ad80:	b29b      	uxth	r3, r3
9001ad82:	3501      	adds	r5, #1
9001ad84:	d474      	bmi.n	9001ae70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
9001ad86:	45a8      	cmp	r8, r5
9001ad88:	dd72      	ble.n	9001ae70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
9001ad8a:	f1be 0f00 	cmp.w	lr, #0
9001ad8e:	f000 8120 	beq.w	9001afd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
9001ad92:	2f00      	cmp	r7, #0
9001ad94:	db69      	blt.n	9001ae6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
9001ad96:	42be      	cmp	r6, r7
9001ad98:	dd67      	ble.n	9001ae6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
9001ad9a:	f819 5006 	ldrb.w	r5, [r9, r6]
9001ad9e:	9a01      	ldr	r2, [sp, #4]
9001ada0:	2dff      	cmp	r5, #255	; 0xff
9001ada2:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
9001ada6:	d01c      	beq.n	9001ade2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
9001ada8:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
9001adac:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001adb0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001adb4:	fb08 f802 	mul.w	r8, r8, r2
9001adb8:	fb05 fa0b 	mul.w	sl, r5, fp
9001adbc:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9001adc0:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
9001adc4:	f608 0801 	addw	r8, r8, #2049	; 0x801
9001adc8:	4490      	add	r8, r2
9001adca:	f10a 0220 	add.w	r2, sl, #32
9001adce:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
9001add2:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
9001add6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001adda:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001adde:	ea4b 0b0a 	orr.w	fp, fp, sl
9001ade2:	fa1f fb8b 	uxth.w	fp, fp
9001ade6:	3701      	adds	r7, #1
9001ade8:	d447      	bmi.n	9001ae7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
9001adea:	42be      	cmp	r6, r7
9001adec:	dd45      	ble.n	9001ae7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
9001adee:	2800      	cmp	r0, #0
9001adf0:	d046      	beq.n	9001ae80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
9001adf2:	3601      	adds	r6, #1
9001adf4:	9a01      	ldr	r2, [sp, #4]
9001adf6:	f819 7006 	ldrb.w	r7, [r9, r6]
9001adfa:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
9001adfe:	2fff      	cmp	r7, #255	; 0xff
9001ae00:	d01a      	beq.n	9001ae38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
9001ae02:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
9001ae06:	ea4f 08e7 	mov.w	r8, r7, asr #3
9001ae0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001ae0e:	fb08 f806 	mul.w	r8, r8, r6
9001ae12:	fb07 f902 	mul.w	r9, r7, r2
9001ae16:	f64f 021f 	movw	r2, #63519	; 0xf81f
9001ae1a:	ea02 1658 	and.w	r6, r2, r8, lsr #5
9001ae1e:	f608 0801 	addw	r8, r8, #2049	; 0x801
9001ae22:	44b0      	add	r8, r6
9001ae24:	f109 0620 	add.w	r6, r9, #32
9001ae28:	eb06 2619 	add.w	r6, r6, r9, lsr #8
9001ae2c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
9001ae30:	0a36      	lsrs	r6, r6, #8
9001ae32:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001ae36:	4332      	orrs	r2, r6
9001ae38:	b292      	uxth	r2, r2
9001ae3a:	280f      	cmp	r0, #15
9001ae3c:	d922      	bls.n	9001ae84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
9001ae3e:	4b69      	ldr	r3, [pc, #420]	; (9001afe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
9001ae40:	f240 210d 	movw	r1, #525	; 0x20d
9001ae44:	4a68      	ldr	r2, [pc, #416]	; (9001afe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
9001ae46:	4869      	ldr	r0, [pc, #420]	; (9001afec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
9001ae48:	f004 fa2c 	bl	9001f2a4 <__assert_func>
9001ae4c:	f04f 0c00 	mov.w	ip, #0
9001ae50:	4661      	mov	r1, ip
9001ae52:	e76a      	b.n	9001ad2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
9001ae54:	2400      	movs	r4, #0
9001ae56:	46a4      	mov	ip, r4
9001ae58:	4623      	mov	r3, r4
9001ae5a:	4621      	mov	r1, r4
9001ae5c:	e791      	b.n	9001ad82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
9001ae5e:	2400      	movs	r4, #0
9001ae60:	4623      	mov	r3, r4
9001ae62:	e78e      	b.n	9001ad82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
9001ae64:	4604      	mov	r4, r0
9001ae66:	4603      	mov	r3, r0
9001ae68:	e78b      	b.n	9001ad82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
9001ae6a:	2500      	movs	r5, #0
9001ae6c:	46ab      	mov	fp, r5
9001ae6e:	e7ba      	b.n	9001ade6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
9001ae70:	2700      	movs	r7, #0
9001ae72:	463d      	mov	r5, r7
9001ae74:	463a      	mov	r2, r7
9001ae76:	46bb      	mov	fp, r7
9001ae78:	e7df      	b.n	9001ae3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
9001ae7a:	2700      	movs	r7, #0
9001ae7c:	463a      	mov	r2, r7
9001ae7e:	e7dc      	b.n	9001ae3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
9001ae80:	4607      	mov	r7, r0
9001ae82:	4602      	mov	r2, r0
9001ae84:	f1be 0f0f 	cmp.w	lr, #15
9001ae88:	d8d9      	bhi.n	9001ae3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
9001ae8a:	b286      	uxth	r6, r0
9001ae8c:	fa1f f98e 	uxth.w	r9, lr
9001ae90:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9001ae94:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001ae98:	fb06 f809 	mul.w	r8, r6, r9
9001ae9c:	0136      	lsls	r6, r6, #4
9001ae9e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001aea2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
9001aea6:	9601      	str	r6, [sp, #4]
9001aea8:	ea4a 0101 	orr.w	r1, sl, r1
9001aeac:	ea4f 4a03 	mov.w	sl, r3, lsl #16
9001aeb0:	fa1f f689 	uxth.w	r6, r9
9001aeb4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001aeb8:	fb10 f90e 	smulbb	r9, r0, lr
9001aebc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001aec0:	9602      	str	r6, [sp, #8]
9001aec2:	460e      	mov	r6, r1
9001aec4:	ea4f 09e9 	mov.w	r9, r9, asr #3
9001aec8:	f1ce 0110 	rsb	r1, lr, #16
9001aecc:	ea4a 0303 	orr.w	r3, sl, r3
9001aed0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9001aed4:	1a09      	subs	r1, r1, r0
9001aed6:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
9001aeda:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001aede:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001aee2:	4343      	muls	r3, r0
9001aee4:	eb09 0141 	add.w	r1, r9, r1, lsl #1
9001aee8:	9801      	ldr	r0, [sp, #4]
9001aeea:	ea4a 0202 	orr.w	r2, sl, r2
9001aeee:	fb01 3106 	mla	r1, r1, r6, r3
9001aef2:	9e02      	ldr	r6, [sp, #8]
9001aef4:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
9001aef8:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
9001aefc:	fb09 1302 	mla	r3, r9, r2, r1
9001af00:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
9001af04:	1b80      	subs	r0, r0, r6
9001af06:	9e01      	ldr	r6, [sp, #4]
9001af08:	9a03      	ldr	r2, [sp, #12]
9001af0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001af0e:	eba6 0608 	sub.w	r6, r6, r8
9001af12:	b280      	uxth	r0, r0
9001af14:	8811      	ldrh	r1, [r2, #0]
9001af16:	ea4a 0b0b 	orr.w	fp, sl, fp
9001af1a:	b2b6      	uxth	r6, r6
9001af1c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
9001af20:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
9001af24:	4374      	muls	r4, r6
9001af26:	b292      	uxth	r2, r2
9001af28:	fb0e 3e0b 	mla	lr, lr, fp, r3
9001af2c:	fb0c 4400 	mla	r4, ip, r0, r4
9001af30:	9802      	ldr	r0, [sp, #8]
9001af32:	ea4f 535e 	mov.w	r3, lr, lsr #21
9001af36:	fb00 4505 	mla	r5, r0, r5, r4
9001af3a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9001af3e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001af42:	1208      	asrs	r0, r1, #8
9001af44:	fb08 5707 	mla	r7, r8, r7, r5
9001af48:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001af4c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001af50:	10cd      	asrs	r5, r1, #3
9001af52:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001af56:	ea43 0e0e 	orr.w	lr, r3, lr
9001af5a:	00c9      	lsls	r1, r1, #3
9001af5c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001af60:	4357      	muls	r7, r2
9001af62:	fa1f f38e 	uxth.w	r3, lr
9001af66:	b2c9      	uxtb	r1, r1
9001af68:	f107 0801 	add.w	r8, r7, #1
9001af6c:	121c      	asrs	r4, r3, #8
9001af6e:	eb08 2717 	add.w	r7, r8, r7, lsr #8
9001af72:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001af76:	ea6f 2717 	mvn.w	r7, r7, lsr #8
9001af7a:	b2ff      	uxtb	r7, r7
9001af7c:	fb10 f007 	smulbb	r0, r0, r7
9001af80:	fb11 f107 	smulbb	r1, r1, r7
9001af84:	fb04 0402 	mla	r4, r4, r2, r0
9001af88:	10d8      	asrs	r0, r3, #3
9001af8a:	fb15 f507 	smulbb	r5, r5, r7
9001af8e:	00db      	lsls	r3, r3, #3
9001af90:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001af94:	b2a4      	uxth	r4, r4
9001af96:	b2db      	uxtb	r3, r3
9001af98:	fb00 5002 	mla	r0, r0, r2, r5
9001af9c:	fb03 1202 	mla	r2, r3, r2, r1
9001afa0:	1c63      	adds	r3, r4, #1
9001afa2:	b280      	uxth	r0, r0
9001afa4:	b292      	uxth	r2, r2
9001afa6:	eb03 2314 	add.w	r3, r3, r4, lsr #8
9001afaa:	1c51      	adds	r1, r2, #1
9001afac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
9001afb0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001afb4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001afb8:	4313      	orrs	r3, r2
9001afba:	1c42      	adds	r2, r0, #1
9001afbc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001afc0:	9a03      	ldr	r2, [sp, #12]
9001afc2:	0940      	lsrs	r0, r0, #5
9001afc4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001afc8:	4303      	orrs	r3, r0
9001afca:	8013      	strh	r3, [r2, #0]
9001afcc:	b005      	add	sp, #20
9001afce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001afd2:	280f      	cmp	r0, #15
9001afd4:	f63f af33 	bhi.w	9001ae3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
9001afd8:	4677      	mov	r7, lr
9001afda:	4675      	mov	r5, lr
9001afdc:	4672      	mov	r2, lr
9001afde:	46f3      	mov	fp, lr
9001afe0:	e753      	b.n	9001ae8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
9001afe2:	bf00      	nop
9001afe4:	900236e6 	.word	0x900236e6
9001afe8:	90023ca9 	.word	0x90023ca9
9001afec:	900237cf 	.word	0x900237cf

9001aff0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001aff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001aff4:	ed2d 8b08 	vpush	{d8-d11}
9001aff8:	b097      	sub	sp, #92	; 0x5c
9001affa:	eeb0 aa40 	vmov.f32	s20, s0
9001affe:	eef0 9a60 	vmov.f32	s19, s1
9001b002:	9214      	str	r2, [sp, #80]	; 0x50
9001b004:	eeb0 9a41 	vmov.f32	s18, s2
9001b008:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
9001b00a:	eeb0 8a62 	vmov.f32	s16, s5
9001b00e:	9308      	str	r3, [sp, #32]
9001b010:	eef0 8a43 	vmov.f32	s17, s6
9001b014:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
9001b018:	eef0 ba44 	vmov.f32	s23, s8
9001b01c:	9015      	str	r0, [sp, #84]	; 0x54
9001b01e:	eeb0 ba64 	vmov.f32	s22, s9
9001b022:	9312      	str	r3, [sp, #72]	; 0x48
9001b024:	eef0 aa45 	vmov.f32	s21, s10
9001b028:	6850      	ldr	r0, [r2, #4]
9001b02a:	9111      	str	r1, [sp, #68]	; 0x44
9001b02c:	6812      	ldr	r2, [r2, #0]
9001b02e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
9001b032:	fb00 1303 	mla	r3, r0, r3, r1
9001b036:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001b03a:	9309      	str	r3, [sp, #36]	; 0x24
9001b03c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001b03e:	681b      	ldr	r3, [r3, #0]
9001b040:	930b      	str	r3, [sp, #44]	; 0x2c
9001b042:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001b044:	685b      	ldr	r3, [r3, #4]
9001b046:	930c      	str	r3, [sp, #48]	; 0x30
9001b048:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
9001b04c:	930a      	str	r3, [sp, #40]	; 0x28
9001b04e:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001b050:	2b00      	cmp	r3, #0
9001b052:	dc03      	bgt.n	9001b05c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b054:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001b056:	2b00      	cmp	r3, #0
9001b058:	f340 83cd 	ble.w	9001b7f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x806>
9001b05c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001b05e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001b062:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001b066:	1e48      	subs	r0, r1, #1
9001b068:	1e55      	subs	r5, r2, #1
9001b06a:	9b08      	ldr	r3, [sp, #32]
9001b06c:	2b00      	cmp	r3, #0
9001b06e:	f340 81a5 	ble.w	9001b3bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9001b072:	9e29      	ldr	r6, [sp, #164]	; 0xa4
9001b074:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001b076:	1436      	asrs	r6, r6, #16
9001b078:	ea4f 4323 	mov.w	r3, r3, asr #16
9001b07c:	d406      	bmi.n	9001b08c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b07e:	4286      	cmp	r6, r0
9001b080:	da04      	bge.n	9001b08c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b082:	2b00      	cmp	r3, #0
9001b084:	db02      	blt.n	9001b08c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b086:	42ab      	cmp	r3, r5
9001b088:	f2c0 8199 	blt.w	9001b3be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
9001b08c:	3601      	adds	r6, #1
9001b08e:	f100 8186 	bmi.w	9001b39e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
9001b092:	42b1      	cmp	r1, r6
9001b094:	f2c0 8183 	blt.w	9001b39e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
9001b098:	3301      	adds	r3, #1
9001b09a:	f100 8180 	bmi.w	9001b39e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
9001b09e:	429a      	cmp	r2, r3
9001b0a0:	f2c0 817d 	blt.w	9001b39e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
9001b0a4:	9b08      	ldr	r3, [sp, #32]
9001b0a6:	f64f 061f 	movw	r6, #63519	; 0xf81f
9001b0aa:	9f09      	ldr	r7, [sp, #36]	; 0x24
9001b0ac:	9313      	str	r3, [sp, #76]	; 0x4c
9001b0ae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001b0b0:	2b00      	cmp	r3, #0
9001b0b2:	f340 81a6 	ble.w	9001b402 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
9001b0b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001b0b8:	9d29      	ldr	r5, [sp, #164]	; 0xa4
9001b0ba:	1418      	asrs	r0, r3, #16
9001b0bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001b0be:	142d      	asrs	r5, r5, #16
9001b0c0:	f3c3 3103 	ubfx	r1, r3, #12, #4
9001b0c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001b0c6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9001b0ca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001b0cc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
9001b0d0:	f100 81fa 	bmi.w	9001b4c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
9001b0d4:	f102 3eff 	add.w	lr, r2, #4294967295
9001b0d8:	4575      	cmp	r5, lr
9001b0da:	f280 81f5 	bge.w	9001b4c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
9001b0de:	2800      	cmp	r0, #0
9001b0e0:	f2c0 81f2 	blt.w	9001b4c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
9001b0e4:	f103 3eff 	add.w	lr, r3, #4294967295
9001b0e8:	4570      	cmp	r0, lr
9001b0ea:	f280 81ed 	bge.w	9001b4c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
9001b0ee:	b212      	sxth	r2, r2
9001b0f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001b0f2:	fa1f fe81 	uxth.w	lr, r1
9001b0f6:	fb00 5002 	mla	r0, r0, r2, r5
9001b0fa:	ea4f 150e 	mov.w	r5, lr, lsl #4
9001b0fe:	eb03 0a00 	add.w	sl, r3, r0
9001b102:	f813 9000 	ldrb.w	r9, [r3, r0]
9001b106:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
9001b10a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001b10e:	b29b      	uxth	r3, r3
9001b110:	f1bc 0f00 	cmp.w	ip, #0
9001b114:	f000 81bb 	beq.w	9001b48e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9001b118:	f81a 4002 	ldrb.w	r4, [sl, r2]
9001b11c:	eb0a 0b02 	add.w	fp, sl, r2
9001b120:	fa1f fa8c 	uxth.w	sl, ip
9001b124:	940d      	str	r4, [sp, #52]	; 0x34
9001b126:	fb0a fe0e 	mul.w	lr, sl, lr
9001b12a:	f89b 4001 	ldrb.w	r4, [fp, #1]
9001b12e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9001b132:	eba5 050e 	sub.w	r5, r5, lr
9001b136:	940e      	str	r4, [sp, #56]	; 0x38
9001b138:	fa1f fa8a 	uxth.w	sl, sl
9001b13c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001b13e:	b2ad      	uxth	r5, r5
9001b140:	eba3 030a 	sub.w	r3, r3, sl
9001b144:	fb08 f505 	mul.w	r5, r8, r5
9001b148:	b29b      	uxth	r3, r3
9001b14a:	fb09 5303 	mla	r3, r9, r3, r5
9001b14e:	fb0a 3304 	mla	r3, sl, r4, r3
9001b152:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001b154:	fb0e 3304 	mla	r3, lr, r4, r3
9001b158:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001b15c:	2b00      	cmp	r3, #0
9001b15e:	f000 8111 	beq.w	9001b384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
9001b162:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001b164:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001b168:	eb04 0540 	add.w	r5, r4, r0, lsl #1
9001b16c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
9001b170:	f000 8192 	beq.w	9001b498 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
9001b174:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9001b178:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9001b17c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001b180:	fb0a fe0e 	mul.w	lr, sl, lr
9001b184:	fb09 f000 	mul.w	r0, r9, r0
9001b188:	ea06 195e 	and.w	r9, r6, lr, lsr #5
9001b18c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
9001b190:	f100 0b20 	add.w	fp, r0, #32
9001b194:	44ce      	add	lr, r9
9001b196:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9001b19a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9001b19e:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001b1a2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001b1a6:	ea4e 0909 	orr.w	r9, lr, r9
9001b1aa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9001b1ae:	8868      	ldrh	r0, [r5, #2]
9001b1b0:	d019      	beq.n	9001b1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001b1b2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9001b1b6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9001b1ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001b1be:	fb0a fe0e 	mul.w	lr, sl, lr
9001b1c2:	fb08 f800 	mul.w	r8, r8, r0
9001b1c6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9001b1ca:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
9001b1ce:	f108 0b20 	add.w	fp, r8, #32
9001b1d2:	4486      	add	lr, r0
9001b1d4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
9001b1d8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9001b1dc:	0a00      	lsrs	r0, r0, #8
9001b1de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001b1e2:	ea4e 0000 	orr.w	r0, lr, r0
9001b1e6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9001b1ea:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9001b1ee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9001b1f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001b1f6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9001b1fa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001b1fe:	ea4e 0909 	orr.w	r9, lr, r9
9001b202:	ea4a 0000 	orr.w	r0, sl, r0
9001b206:	f1bc 0f00 	cmp.w	ip, #0
9001b20a:	f000 8147 	beq.w	9001b49c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
9001b20e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
9001b212:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001b214:	3a01      	subs	r2, #1
9001b216:	2cff      	cmp	r4, #255	; 0xff
9001b218:	ea4f 0242 	mov.w	r2, r2, lsl #1
9001b21c:	f102 0202 	add.w	r2, r2, #2
9001b220:	eb05 0e02 	add.w	lr, r5, r2
9001b224:	5aaa      	ldrh	r2, [r5, r2]
9001b226:	d018      	beq.n	9001b25a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
9001b228:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
9001b22c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001b230:	ea4f 08e4 	mov.w	r8, r4, asr #3
9001b234:	fb04 fa02 	mul.w	sl, r4, r2
9001b238:	fb08 f805 	mul.w	r8, r8, r5
9001b23c:	f10a 0520 	add.w	r5, sl, #32
9001b240:	ea06 1258 	and.w	r2, r6, r8, lsr #5
9001b244:	f608 0801 	addw	r8, r8, #2049	; 0x801
9001b248:	eb05 251a 	add.w	r5, r5, sl, lsr #8
9001b24c:	4442      	add	r2, r8
9001b24e:	0a2d      	lsrs	r5, r5, #8
9001b250:	ea06 1252 	and.w	r2, r6, r2, lsr #5
9001b254:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001b258:	432a      	orrs	r2, r5
9001b25a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001b25c:	f8be 5002 	ldrh.w	r5, [lr, #2]
9001b260:	2cff      	cmp	r4, #255	; 0xff
9001b262:	d01a      	beq.n	9001b29a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2aa>
9001b264:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
9001b268:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001b26c:	ea4f 08e4 	mov.w	r8, r4, asr #3
9001b270:	fb04 fa05 	mul.w	sl, r4, r5
9001b274:	fb08 f80e 	mul.w	r8, r8, lr
9001b278:	f10a 0e20 	add.w	lr, sl, #32
9001b27c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
9001b280:	f608 0801 	addw	r8, r8, #2049	; 0x801
9001b284:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
9001b288:	4445      	add	r5, r8
9001b28a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001b28e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
9001b292:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
9001b296:	ea45 050e 	orr.w	r5, r5, lr
9001b29a:	fb1c fe01 	smulbb	lr, ip, r1
9001b29e:	f1cc 0810 	rsb	r8, ip, #16
9001b2a2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9001b2a6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001b2aa:	ea4f 0eee 	mov.w	lr, lr, asr #3
9001b2ae:	eba8 0801 	sub.w	r8, r8, r1
9001b2b2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
9001b2b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001b2ba:	ebce 0141 	rsb	r1, lr, r1, lsl #1
9001b2be:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001b2c2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
9001b2c6:	ea4a 0202 	orr.w	r2, sl, r2
9001b2ca:	4341      	muls	r1, r0
9001b2cc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
9001b2d0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001b2d4:	fb09 1108 	mla	r1, r9, r8, r1
9001b2d8:	ea4b 0505 	orr.w	r5, fp, r5
9001b2dc:	fb0c 1102 	mla	r1, ip, r2, r1
9001b2e0:	fb0e 1e05 	mla	lr, lr, r5, r1
9001b2e4:	ea4f 525e 	mov.w	r2, lr, lsr #21
9001b2e8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9001b2ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001b2f0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001b2f4:	ea42 0e0e 	orr.w	lr, r2, lr
9001b2f8:	fa1f f28e 	uxth.w	r2, lr
9001b2fc:	2bff      	cmp	r3, #255	; 0xff
9001b2fe:	d103      	bne.n	9001b308 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
9001b300:	9912      	ldr	r1, [sp, #72]	; 0x48
9001b302:	29ff      	cmp	r1, #255	; 0xff
9001b304:	f000 80de 	beq.w	9001b4c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
9001b308:	990a      	ldr	r1, [sp, #40]	; 0x28
9001b30a:	8838      	ldrh	r0, [r7, #0]
9001b30c:	434b      	muls	r3, r1
9001b30e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001b310:	1205      	asrs	r5, r0, #8
9001b312:	f103 0c01 	add.w	ip, r3, #1
9001b316:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001b31a:	eb0c 2323 	add.w	r3, ip, r3, asr #8
9001b31e:	ea6f 2c23 	mvn.w	ip, r3, asr #8
9001b322:	1213      	asrs	r3, r2, #8
9001b324:	fa5f fc8c 	uxtb.w	ip, ip
9001b328:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
9001b32c:	fb15 f50c 	smulbb	r5, r5, ip
9001b330:	fb03 5301 	mla	r3, r3, r1, r5
9001b334:	10d1      	asrs	r1, r2, #3
9001b336:	00d2      	lsls	r2, r2, #3
9001b338:	b29d      	uxth	r5, r3
9001b33a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001b33e:	10c3      	asrs	r3, r0, #3
9001b340:	00c0      	lsls	r0, r0, #3
9001b342:	b2d2      	uxtb	r2, r2
9001b344:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9001b348:	b2c0      	uxtb	r0, r0
9001b34a:	fb13 f30c 	smulbb	r3, r3, ip
9001b34e:	fb10 f00c 	smulbb	r0, r0, ip
9001b352:	fb01 3104 	mla	r1, r1, r4, r3
9001b356:	1c6b      	adds	r3, r5, #1
9001b358:	fb02 0204 	mla	r2, r2, r4, r0
9001b35c:	eb03 2315 	add.w	r3, r3, r5, lsr #8
9001b360:	b292      	uxth	r2, r2
9001b362:	b289      	uxth	r1, r1
9001b364:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
9001b368:	1c50      	adds	r0, r2, #1
9001b36a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9001b36e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b372:	4313      	orrs	r3, r2
9001b374:	1c4a      	adds	r2, r1, #1
9001b376:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001b37a:	0949      	lsrs	r1, r1, #5
9001b37c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001b380:	430b      	orrs	r3, r1
9001b382:	803b      	strh	r3, [r7, #0]
9001b384:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001b386:	3702      	adds	r7, #2
9001b388:	9a2b      	ldr	r2, [sp, #172]	; 0xac
9001b38a:	4413      	add	r3, r2
9001b38c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001b38e:	9329      	str	r3, [sp, #164]	; 0xa4
9001b390:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001b392:	441a      	add	r2, r3
9001b394:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001b396:	3b01      	subs	r3, #1
9001b398:	922a      	str	r2, [sp, #168]	; 0xa8
9001b39a:	9313      	str	r3, [sp, #76]	; 0x4c
9001b39c:	e687      	b.n	9001b0ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
9001b39e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001b3a0:	9e2b      	ldr	r6, [sp, #172]	; 0xac
9001b3a2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
9001b3a4:	4433      	add	r3, r6
9001b3a6:	9329      	str	r3, [sp, #164]	; 0xa4
9001b3a8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001b3aa:	441c      	add	r4, r3
9001b3ac:	9b08      	ldr	r3, [sp, #32]
9001b3ae:	3b01      	subs	r3, #1
9001b3b0:	942a      	str	r4, [sp, #168]	; 0xa8
9001b3b2:	9308      	str	r3, [sp, #32]
9001b3b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b3b6:	3302      	adds	r3, #2
9001b3b8:	9309      	str	r3, [sp, #36]	; 0x24
9001b3ba:	e656      	b.n	9001b06a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001b3bc:	d028      	beq.n	9001b410 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
9001b3be:	9b08      	ldr	r3, [sp, #32]
9001b3c0:	982b      	ldr	r0, [sp, #172]	; 0xac
9001b3c2:	3b01      	subs	r3, #1
9001b3c4:	9d29      	ldr	r5, [sp, #164]	; 0xa4
9001b3c6:	fb00 5003 	mla	r0, r0, r3, r5
9001b3ca:	1400      	asrs	r0, r0, #16
9001b3cc:	f53f ae6a 	bmi.w	9001b0a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
9001b3d0:	3901      	subs	r1, #1
9001b3d2:	4288      	cmp	r0, r1
9001b3d4:	f6bf ae66 	bge.w	9001b0a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
9001b3d8:	992c      	ldr	r1, [sp, #176]	; 0xb0
9001b3da:	982a      	ldr	r0, [sp, #168]	; 0xa8
9001b3dc:	fb01 0303 	mla	r3, r1, r3, r0
9001b3e0:	141b      	asrs	r3, r3, #16
9001b3e2:	f53f ae5f 	bmi.w	9001b0a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
9001b3e6:	3a01      	subs	r2, #1
9001b3e8:	4293      	cmp	r3, r2
9001b3ea:	f6bf ae5b 	bge.w	9001b0a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
9001b3ee:	9b08      	ldr	r3, [sp, #32]
9001b3f0:	f64f 061f 	movw	r6, #63519	; 0xf81f
9001b3f4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
9001b3f8:	9313      	str	r3, [sp, #76]	; 0x4c
9001b3fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001b3fc:	2b00      	cmp	r3, #0
9001b3fe:	f300 8082 	bgt.w	9001b506 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x516>
9001b402:	9b08      	ldr	r3, [sp, #32]
9001b404:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001b408:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b40a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9001b40e:	9309      	str	r3, [sp, #36]	; 0x24
9001b410:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001b412:	2b00      	cmp	r3, #0
9001b414:	f340 81ef 	ble.w	9001b7f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x806>
9001b418:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001b41c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001b41e:	ee3a aa2b 	vadd.f32	s20, s20, s23
9001b422:	ee79 9a8b 	vadd.f32	s19, s19, s22
9001b426:	eef0 6a48 	vmov.f32	s13, s16
9001b42a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
9001b42e:	ee39 9a2a 	vadd.f32	s18, s18, s21
9001b432:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b436:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
9001b43a:	eef0 6a68 	vmov.f32	s13, s17
9001b43e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b442:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
9001b446:	ee29 7aa7 	vmul.f32	s14, s19, s15
9001b44a:	ee69 7a27 	vmul.f32	s15, s18, s15
9001b44e:	ee37 8a48 	vsub.f32	s16, s14, s16
9001b452:	ee77 8ae8 	vsub.f32	s17, s15, s17
9001b456:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
9001b45a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
9001b45e:	ee18 2a10 	vmov	r2, s16
9001b462:	eeb0 8a47 	vmov.f32	s16, s14
9001b466:	fb92 f3f3 	sdiv	r3, r2, r3
9001b46a:	ee18 2a90 	vmov	r2, s17
9001b46e:	932b      	str	r3, [sp, #172]	; 0xac
9001b470:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001b472:	eef0 8a67 	vmov.f32	s17, s15
9001b476:	fb92 f3f3 	sdiv	r3, r2, r3
9001b47a:	932c      	str	r3, [sp, #176]	; 0xb0
9001b47c:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001b47e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b480:	3b01      	subs	r3, #1
9001b482:	9311      	str	r3, [sp, #68]	; 0x44
9001b484:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001b486:	bf08      	it	eq
9001b488:	4613      	moveq	r3, r2
9001b48a:	9308      	str	r3, [sp, #32]
9001b48c:	e5df      	b.n	9001b04e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001b48e:	fb08 f505 	mul.w	r5, r8, r5
9001b492:	fb09 5303 	mla	r3, r9, r3, r5
9001b496:	e65f      	b.n	9001b158 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
9001b498:	4681      	mov	r9, r0
9001b49a:	e686      	b.n	9001b1aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
9001b49c:	f1c1 0210 	rsb	r2, r1, #16
9001b4a0:	4341      	muls	r1, r0
9001b4a2:	fb09 1902 	mla	r9, r9, r2, r1
9001b4a6:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001b4aa:	ea4f 5259 	mov.w	r2, r9, lsr #21
9001b4ae:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b4b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001b4b6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9001b4ba:	ea42 0909 	orr.w	r9, r2, r9
9001b4be:	fa1f f289 	uxth.w	r2, r9
9001b4c2:	e71b      	b.n	9001b2fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001b4c4:	803a      	strh	r2, [r7, #0]
9001b4c6:	e75d      	b.n	9001b384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
9001b4c8:	f115 0e01 	adds.w	lr, r5, #1
9001b4cc:	f53f af5a 	bmi.w	9001b384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
9001b4d0:	4572      	cmp	r2, lr
9001b4d2:	f6ff af57 	blt.w	9001b384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
9001b4d6:	f110 0e01 	adds.w	lr, r0, #1
9001b4da:	f53f af53 	bmi.w	9001b384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
9001b4de:	4573      	cmp	r3, lr
9001b4e0:	f6ff af50 	blt.w	9001b384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
9001b4e4:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001b4e6:	b21b      	sxth	r3, r3
9001b4e8:	b212      	sxth	r2, r2
9001b4ea:	9502      	str	r5, [sp, #8]
9001b4ec:	9301      	str	r3, [sp, #4]
9001b4ee:	9200      	str	r2, [sp, #0]
9001b4f0:	e9cd 0103 	strd	r0, r1, [sp, #12]
9001b4f4:	e9cd c405 	strd	ip, r4, [sp, #20]
9001b4f8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
9001b4fc:	4639      	mov	r1, r7
9001b4fe:	9815      	ldr	r0, [sp, #84]	; 0x54
9001b500:	f7ff fbd0 	bl	9001aca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
9001b504:	e73e      	b.n	9001b384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
9001b506:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001b508:	f3c3 3203 	ubfx	r2, r3, #12, #4
9001b50c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001b50e:	f3c3 3503 	ubfx	r5, r3, #12, #4
9001b512:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001b514:	fa1f fc82 	uxth.w	ip, r2
9001b518:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001b51c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001b51e:	ea4f 100c 	mov.w	r0, ip, lsl #4
9001b522:	141f      	asrs	r7, r3, #16
9001b524:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001b526:	141b      	asrs	r3, r3, #16
9001b528:	fb01 3707 	mla	r7, r1, r7, r3
9001b52c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001b52e:	eb03 0a07 	add.w	sl, r3, r7
9001b532:	f813 9007 	ldrb.w	r9, [r3, r7]
9001b536:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
9001b53a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001b53e:	b29b      	uxth	r3, r3
9001b540:	2d00      	cmp	r5, #0
9001b542:	f000 813d 	beq.w	9001b7c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d0>
9001b546:	f81a 4001 	ldrb.w	r4, [sl, r1]
9001b54a:	eb0a 0b01 	add.w	fp, sl, r1
9001b54e:	fa1f fa85 	uxth.w	sl, r5
9001b552:	940f      	str	r4, [sp, #60]	; 0x3c
9001b554:	fb0a fc0c 	mul.w	ip, sl, ip
9001b558:	f89b 4001 	ldrb.w	r4, [fp, #1]
9001b55c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
9001b560:	eba0 000c 	sub.w	r0, r0, ip
9001b564:	9410      	str	r4, [sp, #64]	; 0x40
9001b566:	fa1f fa8a 	uxth.w	sl, sl
9001b56a:	b280      	uxth	r0, r0
9001b56c:	eba3 030a 	sub.w	r3, r3, sl
9001b570:	fb08 f000 	mul.w	r0, r8, r0
9001b574:	b29b      	uxth	r3, r3
9001b576:	fb09 0303 	mla	r3, r9, r3, r0
9001b57a:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001b57c:	fb0a 3300 	mla	r3, sl, r0, r3
9001b580:	fb0c 3304 	mla	r3, ip, r4, r3
9001b584:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001b588:	2b00      	cmp	r3, #0
9001b58a:	f000 810b 	beq.w	9001b7a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b4>
9001b58e:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001b590:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001b594:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001b596:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9001b59a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
9001b59e:	f000 8114 	beq.w	9001b7ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
9001b5a2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9001b5a6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9001b5aa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001b5ae:	fb0a fc0c 	mul.w	ip, sl, ip
9001b5b2:	fb09 f707 	mul.w	r7, r9, r7
9001b5b6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9001b5ba:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
9001b5be:	f107 0b20 	add.w	fp, r7, #32
9001b5c2:	44cc      	add	ip, r9
9001b5c4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
9001b5c8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9001b5cc:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001b5d0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001b5d4:	ea4c 0909 	orr.w	r9, ip, r9
9001b5d8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9001b5dc:	8847      	ldrh	r7, [r0, #2]
9001b5de:	d019      	beq.n	9001b614 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x624>
9001b5e0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9001b5e4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9001b5e8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001b5ec:	fb0a fc0c 	mul.w	ip, sl, ip
9001b5f0:	fb08 f807 	mul.w	r8, r8, r7
9001b5f4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
9001b5f8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
9001b5fc:	f108 0b20 	add.w	fp, r8, #32
9001b600:	44bc      	add	ip, r7
9001b602:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9001b606:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9001b60a:	0a3f      	lsrs	r7, r7, #8
9001b60c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001b610:	ea4c 0707 	orr.w	r7, ip, r7
9001b614:	ea4f 4c09 	mov.w	ip, r9, lsl #16
9001b618:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9001b61c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
9001b620:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9001b624:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001b628:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001b62c:	ea4c 0909 	orr.w	r9, ip, r9
9001b630:	ea4a 0707 	orr.w	r7, sl, r7
9001b634:	2d00      	cmp	r5, #0
9001b636:	f000 80ca 	beq.w	9001b7ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
9001b63a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
9001b63e:	3901      	subs	r1, #1
9001b640:	0049      	lsls	r1, r1, #1
9001b642:	3102      	adds	r1, #2
9001b644:	eb00 0c01 	add.w	ip, r0, r1
9001b648:	5a41      	ldrh	r1, [r0, r1]
9001b64a:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001b64c:	28ff      	cmp	r0, #255	; 0xff
9001b64e:	d019      	beq.n	9001b684 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x694>
9001b650:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
9001b654:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9001b656:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001b65a:	ea4f 08e4 	mov.w	r8, r4, asr #3
9001b65e:	fb04 fa01 	mul.w	sl, r4, r1
9001b662:	fb08 f800 	mul.w	r8, r8, r0
9001b666:	f10a 0020 	add.w	r0, sl, #32
9001b66a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
9001b66e:	f608 0801 	addw	r8, r8, #2049	; 0x801
9001b672:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9001b676:	4441      	add	r1, r8
9001b678:	0a00      	lsrs	r0, r0, #8
9001b67a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
9001b67e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001b682:	4301      	orrs	r1, r0
9001b684:	9c10      	ldr	r4, [sp, #64]	; 0x40
9001b686:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9001b68a:	2cff      	cmp	r4, #255	; 0xff
9001b68c:	d01a      	beq.n	9001b6c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d4>
9001b68e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
9001b692:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001b696:	ea4f 08e4 	mov.w	r8, r4, asr #3
9001b69a:	fb04 fa00 	mul.w	sl, r4, r0
9001b69e:	fb08 f80c 	mul.w	r8, r8, ip
9001b6a2:	f10a 0c20 	add.w	ip, sl, #32
9001b6a6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9001b6aa:	f608 0801 	addw	r8, r8, #2049	; 0x801
9001b6ae:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9001b6b2:	4440      	add	r0, r8
9001b6b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001b6b8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
9001b6bc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
9001b6c0:	ea40 000c 	orr.w	r0, r0, ip
9001b6c4:	fb15 fc02 	smulbb	ip, r5, r2
9001b6c8:	f1c5 0810 	rsb	r8, r5, #16
9001b6cc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9001b6d0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001b6d4:	ea4f 0cec 	mov.w	ip, ip, asr #3
9001b6d8:	eba8 0802 	sub.w	r8, r8, r2
9001b6dc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
9001b6e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001b6e4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
9001b6e8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001b6ec:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
9001b6f0:	ea4a 0101 	orr.w	r1, sl, r1
9001b6f4:	437a      	muls	r2, r7
9001b6f6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9001b6fa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001b6fe:	fb09 2208 	mla	r2, r9, r8, r2
9001b702:	ea4b 0000 	orr.w	r0, fp, r0
9001b706:	fb05 2201 	mla	r2, r5, r1, r2
9001b70a:	fb0c 2200 	mla	r2, ip, r0, r2
9001b70e:	0d57      	lsrs	r7, r2, #21
9001b710:	0952      	lsrs	r2, r2, #5
9001b712:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001b716:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001b71a:	433a      	orrs	r2, r7
9001b71c:	2bff      	cmp	r3, #255	; 0xff
9001b71e:	b292      	uxth	r2, r2
9001b720:	d102      	bne.n	9001b728 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
9001b722:	9912      	ldr	r1, [sp, #72]	; 0x48
9001b724:	29ff      	cmp	r1, #255	; 0xff
9001b726:	d063      	beq.n	9001b7f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x800>
9001b728:	980a      	ldr	r0, [sp, #40]	; 0x28
9001b72a:	1215      	asrs	r5, r2, #8
9001b72c:	f8be 1000 	ldrh.w	r1, [lr]
9001b730:	4343      	muls	r3, r0
9001b732:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001b734:	10cf      	asrs	r7, r1, #3
9001b736:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001b73a:	1c58      	adds	r0, r3, #1
9001b73c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b740:	eb00 2323 	add.w	r3, r0, r3, asr #8
9001b744:	1208      	asrs	r0, r1, #8
9001b746:	ea6f 2323 	mvn.w	r3, r3, asr #8
9001b74a:	00c9      	lsls	r1, r1, #3
9001b74c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001b750:	b2db      	uxtb	r3, r3
9001b752:	b2c9      	uxtb	r1, r1
9001b754:	fb10 f003 	smulbb	r0, r0, r3
9001b758:	fb11 f103 	smulbb	r1, r1, r3
9001b75c:	fb05 0504 	mla	r5, r5, r4, r0
9001b760:	10d0      	asrs	r0, r2, #3
9001b762:	fb17 f703 	smulbb	r7, r7, r3
9001b766:	00d2      	lsls	r2, r2, #3
9001b768:	b2ad      	uxth	r5, r5
9001b76a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001b76e:	b2d2      	uxtb	r2, r2
9001b770:	fb00 7004 	mla	r0, r0, r4, r7
9001b774:	1c6b      	adds	r3, r5, #1
9001b776:	fb02 1204 	mla	r2, r2, r4, r1
9001b77a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001b77e:	b292      	uxth	r2, r2
9001b780:	b280      	uxth	r0, r0
9001b782:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001b786:	1c57      	adds	r7, r2, #1
9001b788:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001b78c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001b790:	433d      	orrs	r5, r7
9001b792:	1c47      	adds	r7, r0, #1
9001b794:	eb07 2710 	add.w	r7, r7, r0, lsr #8
9001b798:	097f      	lsrs	r7, r7, #5
9001b79a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001b79e:	433d      	orrs	r5, r7
9001b7a0:	f8ae 5000 	strh.w	r5, [lr]
9001b7a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001b7a6:	f10e 0e02 	add.w	lr, lr, #2
9001b7aa:	9a2b      	ldr	r2, [sp, #172]	; 0xac
9001b7ac:	4413      	add	r3, r2
9001b7ae:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001b7b0:	9329      	str	r3, [sp, #164]	; 0xa4
9001b7b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001b7b4:	441a      	add	r2, r3
9001b7b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001b7b8:	3b01      	subs	r3, #1
9001b7ba:	922a      	str	r2, [sp, #168]	; 0xa8
9001b7bc:	9313      	str	r3, [sp, #76]	; 0x4c
9001b7be:	e61c      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
9001b7c0:	fb08 f000 	mul.w	r0, r8, r0
9001b7c4:	fb09 0303 	mla	r3, r9, r3, r0
9001b7c8:	e6dc      	b.n	9001b584 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x594>
9001b7ca:	46b9      	mov	r9, r7
9001b7cc:	e704      	b.n	9001b5d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e8>
9001b7ce:	f1c2 0110 	rsb	r1, r2, #16
9001b7d2:	437a      	muls	r2, r7
9001b7d4:	fb09 2901 	mla	r9, r9, r1, r2
9001b7d8:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001b7dc:	ea4f 5059 	mov.w	r0, r9, lsr #21
9001b7e0:	ea4f 1259 	mov.w	r2, r9, lsr #5
9001b7e4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001b7e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001b7ec:	4302      	orrs	r2, r0
9001b7ee:	e795      	b.n	9001b71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>
9001b7f0:	f8ae 2000 	strh.w	r2, [lr]
9001b7f4:	e7d6      	b.n	9001b7a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b4>
9001b7f6:	b017      	add	sp, #92	; 0x5c
9001b7f8:	ecbd 8b08 	vpop	{d8-d11}
9001b7fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b800 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9001b800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b804:	b085      	sub	sp, #20
9001b806:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
9001b80a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
9001b80e:	9103      	str	r1, [sp, #12]
9001b810:	2d00      	cmp	r5, #0
9001b812:	fb05 7106 	mla	r1, r5, r6, r7
9001b816:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
9001b81a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
9001b81e:	eb03 0441 	add.w	r4, r3, r1, lsl #1
9001b822:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
9001b826:	eb02 0901 	add.w	r9, r2, r1
9001b82a:	9401      	str	r4, [sp, #4]
9001b82c:	f2c0 80c0 	blt.w	9001b9b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
9001b830:	45a8      	cmp	r8, r5
9001b832:	f340 80bd 	ble.w	9001b9b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
9001b836:	2f00      	cmp	r7, #0
9001b838:	f2c0 80b6 	blt.w	9001b9a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
9001b83c:	42be      	cmp	r6, r7
9001b83e:	f340 80b3 	ble.w	9001b9a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
9001b842:	f812 c001 	ldrb.w	ip, [r2, r1]
9001b846:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
9001b84a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9001b84e:	d019      	beq.n	9001b884 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
9001b850:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
9001b854:	ea4f 02ec 	mov.w	r2, ip, asr #3
9001b858:	435a      	muls	r2, r3
9001b85a:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
9001b85e:	f64f 011f 	movw	r1, #63519	; 0xf81f
9001b862:	fb0c f403 	mul.w	r4, ip, r3
9001b866:	ea01 1352 	and.w	r3, r1, r2, lsr #5
9001b86a:	f602 0201 	addw	r2, r2, #2049	; 0x801
9001b86e:	441a      	add	r2, r3
9001b870:	f104 0320 	add.w	r3, r4, #32
9001b874:	eb03 2314 	add.w	r3, r3, r4, lsr #8
9001b878:	ea01 1152 	and.w	r1, r1, r2, lsr #5
9001b87c:	0a1b      	lsrs	r3, r3, #8
9001b87e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001b882:	4319      	orrs	r1, r3
9001b884:	b289      	uxth	r1, r1
9001b886:	1c7b      	adds	r3, r7, #1
9001b888:	f100 8097 	bmi.w	9001b9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
9001b88c:	429e      	cmp	r6, r3
9001b88e:	f340 8094 	ble.w	9001b9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
9001b892:	2800      	cmp	r0, #0
9001b894:	f000 8094 	beq.w	9001b9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
9001b898:	f899 4001 	ldrb.w	r4, [r9, #1]
9001b89c:	9b01      	ldr	r3, [sp, #4]
9001b89e:	2cff      	cmp	r4, #255	; 0xff
9001b8a0:	885b      	ldrh	r3, [r3, #2]
9001b8a2:	d01b      	beq.n	9001b8dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
9001b8a4:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
9001b8a8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
9001b8ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001b8b0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9001b8b4:	fb0a f202 	mul.w	r2, sl, r2
9001b8b8:	fb04 fa03 	mul.w	sl, r4, r3
9001b8bc:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
9001b8c0:	f602 0201 	addw	r2, r2, #2049	; 0x801
9001b8c4:	441a      	add	r2, r3
9001b8c6:	f10a 0320 	add.w	r3, sl, #32
9001b8ca:	eb03 231a 	add.w	r3, r3, sl, lsr #8
9001b8ce:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
9001b8d2:	0a1b      	lsrs	r3, r3, #8
9001b8d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001b8d8:	ea4b 0303 	orr.w	r3, fp, r3
9001b8dc:	b29b      	uxth	r3, r3
9001b8de:	3501      	adds	r5, #1
9001b8e0:	d474      	bmi.n	9001b9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
9001b8e2:	45a8      	cmp	r8, r5
9001b8e4:	dd72      	ble.n	9001b9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
9001b8e6:	f1be 0f00 	cmp.w	lr, #0
9001b8ea:	f000 8111 	beq.w	9001bb10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x310>
9001b8ee:	2f00      	cmp	r7, #0
9001b8f0:	db69      	blt.n	9001b9c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
9001b8f2:	42be      	cmp	r6, r7
9001b8f4:	dd67      	ble.n	9001b9c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
9001b8f6:	f819 5006 	ldrb.w	r5, [r9, r6]
9001b8fa:	9a01      	ldr	r2, [sp, #4]
9001b8fc:	2dff      	cmp	r5, #255	; 0xff
9001b8fe:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
9001b902:	d01c      	beq.n	9001b93e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
9001b904:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
9001b908:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001b90c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001b910:	fb08 f802 	mul.w	r8, r8, r2
9001b914:	fb05 fa0b 	mul.w	sl, r5, fp
9001b918:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9001b91c:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
9001b920:	f608 0801 	addw	r8, r8, #2049	; 0x801
9001b924:	4490      	add	r8, r2
9001b926:	f10a 0220 	add.w	r2, sl, #32
9001b92a:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
9001b92e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
9001b932:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001b936:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b93a:	ea4b 0b0a 	orr.w	fp, fp, sl
9001b93e:	fa1f fb8b 	uxth.w	fp, fp
9001b942:	3701      	adds	r7, #1
9001b944:	d447      	bmi.n	9001b9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
9001b946:	42be      	cmp	r6, r7
9001b948:	dd45      	ble.n	9001b9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
9001b94a:	2800      	cmp	r0, #0
9001b94c:	d046      	beq.n	9001b9dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
9001b94e:	3601      	adds	r6, #1
9001b950:	9a01      	ldr	r2, [sp, #4]
9001b952:	f819 7006 	ldrb.w	r7, [r9, r6]
9001b956:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
9001b95a:	2fff      	cmp	r7, #255	; 0xff
9001b95c:	d01a      	beq.n	9001b994 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
9001b95e:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
9001b962:	ea4f 08e7 	mov.w	r8, r7, asr #3
9001b966:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001b96a:	fb08 f806 	mul.w	r8, r8, r6
9001b96e:	fb07 f902 	mul.w	r9, r7, r2
9001b972:	f64f 021f 	movw	r2, #63519	; 0xf81f
9001b976:	ea02 1658 	and.w	r6, r2, r8, lsr #5
9001b97a:	f608 0801 	addw	r8, r8, #2049	; 0x801
9001b97e:	44b0      	add	r8, r6
9001b980:	f109 0620 	add.w	r6, r9, #32
9001b984:	eb06 2619 	add.w	r6, r6, r9, lsr #8
9001b988:	ea02 1258 	and.w	r2, r2, r8, lsr #5
9001b98c:	0a36      	lsrs	r6, r6, #8
9001b98e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001b992:	4332      	orrs	r2, r6
9001b994:	b292      	uxth	r2, r2
9001b996:	280f      	cmp	r0, #15
9001b998:	d922      	bls.n	9001b9e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
9001b99a:	4b61      	ldr	r3, [pc, #388]	; (9001bb20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
9001b99c:	f240 210d 	movw	r1, #525	; 0x20d
9001b9a0:	4a60      	ldr	r2, [pc, #384]	; (9001bb24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
9001b9a2:	4861      	ldr	r0, [pc, #388]	; (9001bb28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
9001b9a4:	f003 fc7e 	bl	9001f2a4 <__assert_func>
9001b9a8:	f04f 0c00 	mov.w	ip, #0
9001b9ac:	4661      	mov	r1, ip
9001b9ae:	e76a      	b.n	9001b886 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
9001b9b0:	2400      	movs	r4, #0
9001b9b2:	46a4      	mov	ip, r4
9001b9b4:	4623      	mov	r3, r4
9001b9b6:	4621      	mov	r1, r4
9001b9b8:	e791      	b.n	9001b8de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
9001b9ba:	2400      	movs	r4, #0
9001b9bc:	4623      	mov	r3, r4
9001b9be:	e78e      	b.n	9001b8de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
9001b9c0:	4604      	mov	r4, r0
9001b9c2:	4603      	mov	r3, r0
9001b9c4:	e78b      	b.n	9001b8de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
9001b9c6:	2500      	movs	r5, #0
9001b9c8:	46ab      	mov	fp, r5
9001b9ca:	e7ba      	b.n	9001b942 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
9001b9cc:	2700      	movs	r7, #0
9001b9ce:	463d      	mov	r5, r7
9001b9d0:	463a      	mov	r2, r7
9001b9d2:	46bb      	mov	fp, r7
9001b9d4:	e7df      	b.n	9001b996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
9001b9d6:	2700      	movs	r7, #0
9001b9d8:	463a      	mov	r2, r7
9001b9da:	e7dc      	b.n	9001b996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
9001b9dc:	4607      	mov	r7, r0
9001b9de:	4602      	mov	r2, r0
9001b9e0:	f1be 0f0f 	cmp.w	lr, #15
9001b9e4:	d8d9      	bhi.n	9001b99a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
9001b9e6:	b286      	uxth	r6, r0
9001b9e8:	fa1f f98e 	uxth.w	r9, lr
9001b9ec:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9001b9f0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001b9f4:	fb06 f809 	mul.w	r8, r6, r9
9001b9f8:	0136      	lsls	r6, r6, #4
9001b9fa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001b9fe:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
9001ba02:	9601      	str	r6, [sp, #4]
9001ba04:	ea4a 0101 	orr.w	r1, sl, r1
9001ba08:	ea4f 4a03 	mov.w	sl, r3, lsl #16
9001ba0c:	fa1f f689 	uxth.w	r6, r9
9001ba10:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001ba14:	fb10 f90e 	smulbb	r9, r0, lr
9001ba18:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001ba1c:	9602      	str	r6, [sp, #8]
9001ba1e:	460e      	mov	r6, r1
9001ba20:	ea4f 09e9 	mov.w	r9, r9, asr #3
9001ba24:	f1ce 0110 	rsb	r1, lr, #16
9001ba28:	ea4a 0303 	orr.w	r3, sl, r3
9001ba2c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9001ba30:	1a09      	subs	r1, r1, r0
9001ba32:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
9001ba36:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001ba3a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001ba3e:	4343      	muls	r3, r0
9001ba40:	eb09 0141 	add.w	r1, r9, r1, lsl #1
9001ba44:	ea4a 0202 	orr.w	r2, sl, r2
9001ba48:	9802      	ldr	r0, [sp, #8]
9001ba4a:	fb01 3106 	mla	r1, r1, r6, r3
9001ba4e:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
9001ba52:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
9001ba56:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
9001ba5a:	fb09 1302 	mla	r3, r9, r2, r1
9001ba5e:	9901      	ldr	r1, [sp, #4]
9001ba60:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001ba64:	9a03      	ldr	r2, [sp, #12]
9001ba66:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
9001ba6a:	ea4a 0b0b 	orr.w	fp, sl, fp
9001ba6e:	8812      	ldrh	r2, [r2, #0]
9001ba70:	1a09      	subs	r1, r1, r0
9001ba72:	9801      	ldr	r0, [sp, #4]
9001ba74:	fb0e 3e0b 	mla	lr, lr, fp, r3
9001ba78:	eba0 0608 	sub.w	r6, r0, r8
9001ba7c:	b289      	uxth	r1, r1
9001ba7e:	ea4f 535e 	mov.w	r3, lr, lsr #21
9001ba82:	b2b6      	uxth	r6, r6
9001ba84:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9001ba88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ba8c:	4374      	muls	r4, r6
9001ba8e:	10d0      	asrs	r0, r2, #3
9001ba90:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001ba94:	fb0c 4401 	mla	r4, ip, r1, r4
9001ba98:	9902      	ldr	r1, [sp, #8]
9001ba9a:	ea43 0e0e 	orr.w	lr, r3, lr
9001ba9e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001baa2:	fb01 4505 	mla	r5, r1, r5, r4
9001baa6:	1211      	asrs	r1, r2, #8
9001baa8:	00d2      	lsls	r2, r2, #3
9001baaa:	fb08 5707 	mla	r7, r8, r7, r5
9001baae:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001bab2:	b2d2      	uxtb	r2, r2
9001bab4:	ea6f 2727 	mvn.w	r7, r7, asr #8
9001bab8:	fa1f f38e 	uxth.w	r3, lr
9001babc:	b2ff      	uxtb	r7, r7
9001babe:	4379      	muls	r1, r7
9001bac0:	4378      	muls	r0, r7
9001bac2:	4357      	muls	r7, r2
9001bac4:	1c4a      	adds	r2, r1, #1
9001bac6:	eb02 2211 	add.w	r2, r2, r1, lsr #8
9001baca:	1219      	asrs	r1, r3, #8
9001bacc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001bad0:	eb01 2112 	add.w	r1, r1, r2, lsr #8
9001bad4:	4a15      	ldr	r2, [pc, #84]	; (9001bb2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x32c>)
9001bad6:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001bada:	1c42      	adds	r2, r0, #1
9001badc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001bae0:	10da      	asrs	r2, r3, #3
9001bae2:	00db      	lsls	r3, r3, #3
9001bae4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001bae8:	b2db      	uxtb	r3, r3
9001baea:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9001baee:	00d2      	lsls	r2, r2, #3
9001baf0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001baf4:	430a      	orrs	r2, r1
9001baf6:	1c79      	adds	r1, r7, #1
9001baf8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
9001bafc:	eb03 2317 	add.w	r3, r3, r7, lsr #8
9001bb00:	f3c3 03c4 	ubfx	r3, r3, #3, #5
9001bb04:	4313      	orrs	r3, r2
9001bb06:	9a03      	ldr	r2, [sp, #12]
9001bb08:	8013      	strh	r3, [r2, #0]
9001bb0a:	b005      	add	sp, #20
9001bb0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bb10:	280f      	cmp	r0, #15
9001bb12:	f63f af42 	bhi.w	9001b99a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
9001bb16:	4677      	mov	r7, lr
9001bb18:	4675      	mov	r5, lr
9001bb1a:	4672      	mov	r2, lr
9001bb1c:	46f3      	mov	fp, lr
9001bb1e:	e762      	b.n	9001b9e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
9001bb20:	900236e6 	.word	0x900236e6
9001bb24:	90023ca9 	.word	0x90023ca9
9001bb28:	900237cf 	.word	0x900237cf
9001bb2c:	fffff800 	.word	0xfffff800

9001bb30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bb30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bb34:	ed2d 8b08 	vpush	{d8-d11}
9001bb38:	b093      	sub	sp, #76	; 0x4c
9001bb3a:	eeb0 aa40 	vmov.f32	s20, s0
9001bb3e:	eef0 9a60 	vmov.f32	s19, s1
9001bb42:	9210      	str	r2, [sp, #64]	; 0x40
9001bb44:	eeb0 9a41 	vmov.f32	s18, s2
9001bb48:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9001bb4a:	eeb0 8a62 	vmov.f32	s16, s5
9001bb4e:	9011      	str	r0, [sp, #68]	; 0x44
9001bb50:	eef0 8a43 	vmov.f32	s17, s6
9001bb54:	6850      	ldr	r0, [r2, #4]
9001bb56:	eef0 ba44 	vmov.f32	s23, s8
9001bb5a:	910e      	str	r1, [sp, #56]	; 0x38
9001bb5c:	eeb0 ba64 	vmov.f32	s22, s9
9001bb60:	9306      	str	r3, [sp, #24]
9001bb62:	eef0 aa45 	vmov.f32	s21, s10
9001bb66:	6812      	ldr	r2, [r2, #0]
9001bb68:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
9001bb6c:	fb00 1303 	mla	r3, r0, r3, r1
9001bb70:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001bb74:	9307      	str	r3, [sp, #28]
9001bb76:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001bb78:	681b      	ldr	r3, [r3, #0]
9001bb7a:	9308      	str	r3, [sp, #32]
9001bb7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001bb7e:	685b      	ldr	r3, [r3, #4]
9001bb80:	9309      	str	r3, [sp, #36]	; 0x24
9001bb82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bb84:	2b00      	cmp	r3, #0
9001bb86:	dc03      	bgt.n	9001bb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bb88:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bb8a:	2b00      	cmp	r3, #0
9001bb8c:	f340 83b8 	ble.w	9001c300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d0>
9001bb90:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001bb92:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001bb96:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001bb9a:	1e48      	subs	r0, r1, #1
9001bb9c:	1e55      	subs	r5, r2, #1
9001bb9e:	9b06      	ldr	r3, [sp, #24]
9001bba0:	2b00      	cmp	r3, #0
9001bba2:	f340 819b 	ble.w	9001bedc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
9001bba6:	9e25      	ldr	r6, [sp, #148]	; 0x94
9001bba8:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001bbaa:	1436      	asrs	r6, r6, #16
9001bbac:	ea4f 4323 	mov.w	r3, r3, asr #16
9001bbb0:	d406      	bmi.n	9001bbc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001bbb2:	4286      	cmp	r6, r0
9001bbb4:	da04      	bge.n	9001bbc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001bbb6:	2b00      	cmp	r3, #0
9001bbb8:	db02      	blt.n	9001bbc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001bbba:	42ab      	cmp	r3, r5
9001bbbc:	f2c0 818f 	blt.w	9001bede <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
9001bbc0:	3601      	adds	r6, #1
9001bbc2:	f100 817c 	bmi.w	9001bebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
9001bbc6:	42b1      	cmp	r1, r6
9001bbc8:	f2c0 8179 	blt.w	9001bebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
9001bbcc:	3301      	adds	r3, #1
9001bbce:	f100 8176 	bmi.w	9001bebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
9001bbd2:	429a      	cmp	r2, r3
9001bbd4:	f2c0 8173 	blt.w	9001bebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
9001bbd8:	9b06      	ldr	r3, [sp, #24]
9001bbda:	f64f 061f 	movw	r6, #63519	; 0xf81f
9001bbde:	9f07      	ldr	r7, [sp, #28]
9001bbe0:	930f      	str	r3, [sp, #60]	; 0x3c
9001bbe2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001bbe4:	2b00      	cmp	r3, #0
9001bbe6:	f340 819c 	ble.w	9001bf22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
9001bbea:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001bbec:	9d25      	ldr	r5, [sp, #148]	; 0x94
9001bbee:	1418      	asrs	r0, r3, #16
9001bbf0:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001bbf2:	142d      	asrs	r5, r5, #16
9001bbf4:	f3c3 3103 	ubfx	r1, r3, #12, #4
9001bbf8:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001bbfa:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9001bbfe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001bc00:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
9001bc04:	f100 81f0 	bmi.w	9001bfe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
9001bc08:	f102 3eff 	add.w	lr, r2, #4294967295
9001bc0c:	4575      	cmp	r5, lr
9001bc0e:	f280 81eb 	bge.w	9001bfe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
9001bc12:	2800      	cmp	r0, #0
9001bc14:	f2c0 81e8 	blt.w	9001bfe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
9001bc18:	f103 3eff 	add.w	lr, r3, #4294967295
9001bc1c:	4570      	cmp	r0, lr
9001bc1e:	f280 81e3 	bge.w	9001bfe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
9001bc22:	b212      	sxth	r2, r2
9001bc24:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001bc26:	fa1f fe81 	uxth.w	lr, r1
9001bc2a:	fb00 5002 	mla	r0, r0, r2, r5
9001bc2e:	ea4f 150e 	mov.w	r5, lr, lsl #4
9001bc32:	eb03 0a00 	add.w	sl, r3, r0
9001bc36:	f813 9000 	ldrb.w	r9, [r3, r0]
9001bc3a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
9001bc3e:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001bc42:	b29b      	uxth	r3, r3
9001bc44:	f1bc 0f00 	cmp.w	ip, #0
9001bc48:	f000 81b1 	beq.w	9001bfae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47e>
9001bc4c:	f81a 4002 	ldrb.w	r4, [sl, r2]
9001bc50:	eb0a 0b02 	add.w	fp, sl, r2
9001bc54:	fa1f fa8c 	uxth.w	sl, ip
9001bc58:	940a      	str	r4, [sp, #40]	; 0x28
9001bc5a:	fb0a fe0e 	mul.w	lr, sl, lr
9001bc5e:	f89b 4001 	ldrb.w	r4, [fp, #1]
9001bc62:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9001bc66:	eba5 050e 	sub.w	r5, r5, lr
9001bc6a:	940b      	str	r4, [sp, #44]	; 0x2c
9001bc6c:	fa1f fa8a 	uxth.w	sl, sl
9001bc70:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001bc72:	b2ad      	uxth	r5, r5
9001bc74:	eba3 030a 	sub.w	r3, r3, sl
9001bc78:	fb08 f505 	mul.w	r5, r8, r5
9001bc7c:	b29b      	uxth	r3, r3
9001bc7e:	fb09 5303 	mla	r3, r9, r3, r5
9001bc82:	fb0a 3304 	mla	r3, sl, r4, r3
9001bc86:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001bc88:	fb0e 3304 	mla	r3, lr, r4, r3
9001bc8c:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001bc90:	2b00      	cmp	r3, #0
9001bc92:	f000 8107 	beq.w	9001bea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
9001bc96:	9c08      	ldr	r4, [sp, #32]
9001bc98:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001bc9c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
9001bca0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
9001bca4:	f000 8188 	beq.w	9001bfb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
9001bca8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9001bcac:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9001bcb0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001bcb4:	fb0a fe0e 	mul.w	lr, sl, lr
9001bcb8:	fb09 f000 	mul.w	r0, r9, r0
9001bcbc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
9001bcc0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
9001bcc4:	f100 0b20 	add.w	fp, r0, #32
9001bcc8:	44ce      	add	lr, r9
9001bcca:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9001bcce:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9001bcd2:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001bcd6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001bcda:	ea4e 0909 	orr.w	r9, lr, r9
9001bcde:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9001bce2:	8868      	ldrh	r0, [r5, #2]
9001bce4:	d019      	beq.n	9001bd1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
9001bce6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9001bcea:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9001bcee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001bcf2:	fb0a fe0e 	mul.w	lr, sl, lr
9001bcf6:	fb08 f800 	mul.w	r8, r8, r0
9001bcfa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9001bcfe:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
9001bd02:	f108 0b20 	add.w	fp, r8, #32
9001bd06:	4486      	add	lr, r0
9001bd08:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
9001bd0c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9001bd10:	0a00      	lsrs	r0, r0, #8
9001bd12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001bd16:	ea4e 0000 	orr.w	r0, lr, r0
9001bd1a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9001bd1e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9001bd22:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9001bd26:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001bd2a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9001bd2e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001bd32:	ea4e 0909 	orr.w	r9, lr, r9
9001bd36:	ea4a 0000 	orr.w	r0, sl, r0
9001bd3a:	f1bc 0f00 	cmp.w	ip, #0
9001bd3e:	f000 813d 	beq.w	9001bfbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
9001bd42:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
9001bd46:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001bd48:	3a01      	subs	r2, #1
9001bd4a:	2cff      	cmp	r4, #255	; 0xff
9001bd4c:	ea4f 0242 	mov.w	r2, r2, lsl #1
9001bd50:	f102 0202 	add.w	r2, r2, #2
9001bd54:	eb05 0e02 	add.w	lr, r5, r2
9001bd58:	5aaa      	ldrh	r2, [r5, r2]
9001bd5a:	d018      	beq.n	9001bd8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
9001bd5c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
9001bd60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001bd64:	ea4f 08e4 	mov.w	r8, r4, asr #3
9001bd68:	fb04 fa02 	mul.w	sl, r4, r2
9001bd6c:	fb08 f805 	mul.w	r8, r8, r5
9001bd70:	f10a 0520 	add.w	r5, sl, #32
9001bd74:	ea06 1258 	and.w	r2, r6, r8, lsr #5
9001bd78:	f608 0801 	addw	r8, r8, #2049	; 0x801
9001bd7c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
9001bd80:	4442      	add	r2, r8
9001bd82:	0a2d      	lsrs	r5, r5, #8
9001bd84:	ea06 1252 	and.w	r2, r6, r2, lsr #5
9001bd88:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001bd8c:	432a      	orrs	r2, r5
9001bd8e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001bd90:	f8be 5002 	ldrh.w	r5, [lr, #2]
9001bd94:	2cff      	cmp	r4, #255	; 0xff
9001bd96:	d01a      	beq.n	9001bdce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
9001bd98:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
9001bd9c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001bda0:	ea4f 08e4 	mov.w	r8, r4, asr #3
9001bda4:	fb04 fa05 	mul.w	sl, r4, r5
9001bda8:	fb08 f80e 	mul.w	r8, r8, lr
9001bdac:	f10a 0e20 	add.w	lr, sl, #32
9001bdb0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
9001bdb4:	f608 0801 	addw	r8, r8, #2049	; 0x801
9001bdb8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
9001bdbc:	4445      	add	r5, r8
9001bdbe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001bdc2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
9001bdc6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
9001bdca:	ea45 050e 	orr.w	r5, r5, lr
9001bdce:	fb1c fe01 	smulbb	lr, ip, r1
9001bdd2:	f1cc 0810 	rsb	r8, ip, #16
9001bdd6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9001bdda:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001bdde:	ea4f 0eee 	mov.w	lr, lr, asr #3
9001bde2:	eba8 0801 	sub.w	r8, r8, r1
9001bde6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
9001bdea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001bdee:	ebce 0141 	rsb	r1, lr, r1, lsl #1
9001bdf2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001bdf6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
9001bdfa:	ea4a 0202 	orr.w	r2, sl, r2
9001bdfe:	4341      	muls	r1, r0
9001be00:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
9001be04:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001be08:	fb09 1108 	mla	r1, r9, r8, r1
9001be0c:	ea4b 0505 	orr.w	r5, fp, r5
9001be10:	fb0c 1102 	mla	r1, ip, r2, r1
9001be14:	fb0e 1e05 	mla	lr, lr, r5, r1
9001be18:	ea4f 525e 	mov.w	r2, lr, lsr #21
9001be1c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9001be20:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001be24:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001be28:	ea42 0e0e 	orr.w	lr, r2, lr
9001be2c:	fa1f f28e 	uxth.w	r2, lr
9001be30:	2bff      	cmp	r3, #255	; 0xff
9001be32:	f000 80d7 	beq.w	9001bfe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9001be36:	f8b7 c000 	ldrh.w	ip, [r7]
9001be3a:	43db      	mvns	r3, r3
9001be3c:	ea4f 202c 	mov.w	r0, ip, asr #8
9001be40:	fa5f fe83 	uxtb.w	lr, r3
9001be44:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001be48:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001be4c:	ea4f 03cc 	mov.w	r3, ip, lsl #3
9001be50:	fb00 f00e 	mul.w	r0, r0, lr
9001be54:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001be58:	b2db      	uxtb	r3, r3
9001be5a:	1c41      	adds	r1, r0, #1
9001be5c:	fb05 f50e 	mul.w	r5, r5, lr
9001be60:	fb03 f30e 	mul.w	r3, r3, lr
9001be64:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9001be68:	1210      	asrs	r0, r2, #8
9001be6a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001be6e:	eb00 2011 	add.w	r0, r0, r1, lsr #8
9001be72:	496c      	ldr	r1, [pc, #432]	; (9001c024 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>)
9001be74:	ea01 2000 	and.w	r0, r1, r0, lsl #8
9001be78:	1c69      	adds	r1, r5, #1
9001be7a:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001be7e:	10d1      	asrs	r1, r2, #3
9001be80:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001be84:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9001be88:	00c9      	lsls	r1, r1, #3
9001be8a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001be8e:	4301      	orrs	r1, r0
9001be90:	1c58      	adds	r0, r3, #1
9001be92:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9001be96:	00d3      	lsls	r3, r2, #3
9001be98:	b2db      	uxtb	r3, r3
9001be9a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9001be9e:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
9001bea2:	803b      	strh	r3, [r7, #0]
9001bea4:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001bea6:	3702      	adds	r7, #2
9001bea8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
9001beaa:	4413      	add	r3, r2
9001beac:	9a26      	ldr	r2, [sp, #152]	; 0x98
9001beae:	9325      	str	r3, [sp, #148]	; 0x94
9001beb0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001beb2:	441a      	add	r2, r3
9001beb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001beb6:	3b01      	subs	r3, #1
9001beb8:	9226      	str	r2, [sp, #152]	; 0x98
9001beba:	930f      	str	r3, [sp, #60]	; 0x3c
9001bebc:	e691      	b.n	9001bbe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001bebe:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001bec0:	9e27      	ldr	r6, [sp, #156]	; 0x9c
9001bec2:	9c26      	ldr	r4, [sp, #152]	; 0x98
9001bec4:	4433      	add	r3, r6
9001bec6:	9325      	str	r3, [sp, #148]	; 0x94
9001bec8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001beca:	441c      	add	r4, r3
9001becc:	9b06      	ldr	r3, [sp, #24]
9001bece:	3b01      	subs	r3, #1
9001bed0:	9426      	str	r4, [sp, #152]	; 0x98
9001bed2:	9306      	str	r3, [sp, #24]
9001bed4:	9b07      	ldr	r3, [sp, #28]
9001bed6:	3302      	adds	r3, #2
9001bed8:	9307      	str	r3, [sp, #28]
9001beda:	e660      	b.n	9001bb9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001bedc:	d028      	beq.n	9001bf30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
9001bede:	9b06      	ldr	r3, [sp, #24]
9001bee0:	9827      	ldr	r0, [sp, #156]	; 0x9c
9001bee2:	3b01      	subs	r3, #1
9001bee4:	9d25      	ldr	r5, [sp, #148]	; 0x94
9001bee6:	fb00 5003 	mla	r0, r0, r3, r5
9001beea:	1400      	asrs	r0, r0, #16
9001beec:	f53f ae74 	bmi.w	9001bbd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001bef0:	3901      	subs	r1, #1
9001bef2:	4288      	cmp	r0, r1
9001bef4:	f6bf ae70 	bge.w	9001bbd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001bef8:	9928      	ldr	r1, [sp, #160]	; 0xa0
9001befa:	9826      	ldr	r0, [sp, #152]	; 0x98
9001befc:	fb01 0303 	mla	r3, r1, r3, r0
9001bf00:	141b      	asrs	r3, r3, #16
9001bf02:	f53f ae69 	bmi.w	9001bbd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001bf06:	3a01      	subs	r2, #1
9001bf08:	4293      	cmp	r3, r2
9001bf0a:	f6bf ae65 	bge.w	9001bbd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001bf0e:	9b06      	ldr	r3, [sp, #24]
9001bf10:	f64f 061f 	movw	r6, #63519	; 0xf81f
9001bf14:	f8dd e01c 	ldr.w	lr, [sp, #28]
9001bf18:	930f      	str	r3, [sp, #60]	; 0x3c
9001bf1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001bf1c:	2b00      	cmp	r3, #0
9001bf1e:	f300 8083 	bgt.w	9001c028 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f8>
9001bf22:	9b06      	ldr	r3, [sp, #24]
9001bf24:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001bf28:	9b07      	ldr	r3, [sp, #28]
9001bf2a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9001bf2e:	9307      	str	r3, [sp, #28]
9001bf30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bf32:	2b00      	cmp	r3, #0
9001bf34:	f340 81e4 	ble.w	9001c300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d0>
9001bf38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001bf3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001bf3e:	ee3a aa2b 	vadd.f32	s20, s20, s23
9001bf42:	ee79 9a8b 	vadd.f32	s19, s19, s22
9001bf46:	eef0 6a48 	vmov.f32	s13, s16
9001bf4a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
9001bf4e:	ee39 9a2a 	vadd.f32	s18, s18, s21
9001bf52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001bf56:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
9001bf5a:	eef0 6a68 	vmov.f32	s13, s17
9001bf5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001bf62:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
9001bf66:	ee29 7aa7 	vmul.f32	s14, s19, s15
9001bf6a:	ee69 7a27 	vmul.f32	s15, s18, s15
9001bf6e:	ee37 8a48 	vsub.f32	s16, s14, s16
9001bf72:	ee77 8ae8 	vsub.f32	s17, s15, s17
9001bf76:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
9001bf7a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
9001bf7e:	ee18 2a10 	vmov	r2, s16
9001bf82:	eeb0 8a47 	vmov.f32	s16, s14
9001bf86:	fb92 f3f3 	sdiv	r3, r2, r3
9001bf8a:	ee18 2a90 	vmov	r2, s17
9001bf8e:	9327      	str	r3, [sp, #156]	; 0x9c
9001bf90:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001bf92:	eef0 8a67 	vmov.f32	s17, s15
9001bf96:	fb92 f3f3 	sdiv	r3, r2, r3
9001bf9a:	9328      	str	r3, [sp, #160]	; 0xa0
9001bf9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bf9e:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001bfa0:	3b01      	subs	r3, #1
9001bfa2:	930e      	str	r3, [sp, #56]	; 0x38
9001bfa4:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001bfa6:	bf08      	it	eq
9001bfa8:	4613      	moveq	r3, r2
9001bfaa:	9306      	str	r3, [sp, #24]
9001bfac:	e5e9      	b.n	9001bb82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001bfae:	fb08 f505 	mul.w	r5, r8, r5
9001bfb2:	fb09 5303 	mla	r3, r9, r3, r5
9001bfb6:	e669      	b.n	9001bc8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001bfb8:	4681      	mov	r9, r0
9001bfba:	e690      	b.n	9001bcde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
9001bfbc:	f1c1 0210 	rsb	r2, r1, #16
9001bfc0:	4341      	muls	r1, r0
9001bfc2:	fb09 1902 	mla	r9, r9, r2, r1
9001bfc6:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001bfca:	ea4f 5259 	mov.w	r2, r9, lsr #21
9001bfce:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001bfd2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001bfd6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9001bfda:	ea42 0909 	orr.w	r9, r2, r9
9001bfde:	fa1f f289 	uxth.w	r2, r9
9001bfe2:	e725      	b.n	9001be30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001bfe4:	803a      	strh	r2, [r7, #0]
9001bfe6:	e75d      	b.n	9001bea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
9001bfe8:	f115 0e01 	adds.w	lr, r5, #1
9001bfec:	f53f af5a 	bmi.w	9001bea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
9001bff0:	4572      	cmp	r2, lr
9001bff2:	f6ff af57 	blt.w	9001bea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
9001bff6:	f110 0e01 	adds.w	lr, r0, #1
9001bffa:	f53f af53 	bmi.w	9001bea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
9001bffe:	4573      	cmp	r3, lr
9001c000:	f6ff af50 	blt.w	9001bea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
9001c004:	b21b      	sxth	r3, r3
9001c006:	b212      	sxth	r2, r2
9001c008:	9301      	str	r3, [sp, #4]
9001c00a:	9200      	str	r2, [sp, #0]
9001c00c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
9001c010:	e9cd 5002 	strd	r5, r0, [sp, #8]
9001c014:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
9001c018:	4639      	mov	r1, r7
9001c01a:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c01c:	f7ff fbf0 	bl	9001b800 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9001c020:	e740      	b.n	9001bea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
9001c022:	bf00      	nop
9001c024:	fffff800 	.word	0xfffff800
9001c028:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001c02a:	f3c3 3203 	ubfx	r2, r3, #12, #4
9001c02e:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001c030:	f3c3 3503 	ubfx	r5, r3, #12, #4
9001c034:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001c036:	fa1f fc82 	uxth.w	ip, r2
9001c03a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001c03e:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001c040:	ea4f 100c 	mov.w	r0, ip, lsl #4
9001c044:	141f      	asrs	r7, r3, #16
9001c046:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001c048:	141b      	asrs	r3, r3, #16
9001c04a:	fb01 3707 	mla	r7, r1, r7, r3
9001c04e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001c050:	eb03 0a07 	add.w	sl, r3, r7
9001c054:	f813 9007 	ldrb.w	r9, [r3, r7]
9001c058:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
9001c05c:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001c060:	b29b      	uxth	r3, r3
9001c062:	2d00      	cmp	r5, #0
9001c064:	f000 8131 	beq.w	9001c2ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79a>
9001c068:	f81a 4001 	ldrb.w	r4, [sl, r1]
9001c06c:	eb0a 0b01 	add.w	fp, sl, r1
9001c070:	fa1f fa85 	uxth.w	sl, r5
9001c074:	940c      	str	r4, [sp, #48]	; 0x30
9001c076:	fb0a fc0c 	mul.w	ip, sl, ip
9001c07a:	f89b 4001 	ldrb.w	r4, [fp, #1]
9001c07e:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
9001c082:	eba0 000c 	sub.w	r0, r0, ip
9001c086:	940d      	str	r4, [sp, #52]	; 0x34
9001c088:	fa1f fa8a 	uxth.w	sl, sl
9001c08c:	b280      	uxth	r0, r0
9001c08e:	eba3 030a 	sub.w	r3, r3, sl
9001c092:	fb08 f000 	mul.w	r0, r8, r0
9001c096:	b29b      	uxth	r3, r3
9001c098:	fb09 0303 	mla	r3, r9, r3, r0
9001c09c:	980c      	ldr	r0, [sp, #48]	; 0x30
9001c09e:	fb0a 3300 	mla	r3, sl, r0, r3
9001c0a2:	fb0c 3304 	mla	r3, ip, r4, r3
9001c0a6:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001c0aa:	2b00      	cmp	r3, #0
9001c0ac:	f000 80ff 	beq.w	9001c2ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
9001c0b0:	9808      	ldr	r0, [sp, #32]
9001c0b2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001c0b6:	9c08      	ldr	r4, [sp, #32]
9001c0b8:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9001c0bc:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
9001c0c0:	f000 8108 	beq.w	9001c2d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
9001c0c4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9001c0c8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9001c0cc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001c0d0:	fb0a fc0c 	mul.w	ip, sl, ip
9001c0d4:	fb09 f707 	mul.w	r7, r9, r7
9001c0d8:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9001c0dc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
9001c0e0:	f107 0b20 	add.w	fp, r7, #32
9001c0e4:	44cc      	add	ip, r9
9001c0e6:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
9001c0ea:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9001c0ee:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001c0f2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001c0f6:	ea4c 0909 	orr.w	r9, ip, r9
9001c0fa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9001c0fe:	8847      	ldrh	r7, [r0, #2]
9001c100:	d019      	beq.n	9001c136 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x606>
9001c102:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9001c106:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9001c10a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001c10e:	fb0a fc0c 	mul.w	ip, sl, ip
9001c112:	fb08 f807 	mul.w	r8, r8, r7
9001c116:	ea06 175c 	and.w	r7, r6, ip, lsr #5
9001c11a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
9001c11e:	f108 0b20 	add.w	fp, r8, #32
9001c122:	44bc      	add	ip, r7
9001c124:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9001c128:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9001c12c:	0a3f      	lsrs	r7, r7, #8
9001c12e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001c132:	ea4c 0707 	orr.w	r7, ip, r7
9001c136:	ea4f 4c09 	mov.w	ip, r9, lsl #16
9001c13a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9001c13e:	ea4f 4a07 	mov.w	sl, r7, lsl #16
9001c142:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9001c146:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001c14a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001c14e:	ea4c 0909 	orr.w	r9, ip, r9
9001c152:	ea4a 0707 	orr.w	r7, sl, r7
9001c156:	2d00      	cmp	r5, #0
9001c158:	f000 80be 	beq.w	9001c2d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
9001c15c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
9001c160:	3901      	subs	r1, #1
9001c162:	0049      	lsls	r1, r1, #1
9001c164:	3102      	adds	r1, #2
9001c166:	eb00 0c01 	add.w	ip, r0, r1
9001c16a:	5a41      	ldrh	r1, [r0, r1]
9001c16c:	980c      	ldr	r0, [sp, #48]	; 0x30
9001c16e:	28ff      	cmp	r0, #255	; 0xff
9001c170:	d019      	beq.n	9001c1a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
9001c172:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
9001c176:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9001c178:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001c17c:	ea4f 08e4 	mov.w	r8, r4, asr #3
9001c180:	fb04 fa01 	mul.w	sl, r4, r1
9001c184:	fb08 f800 	mul.w	r8, r8, r0
9001c188:	f10a 0020 	add.w	r0, sl, #32
9001c18c:	ea06 1158 	and.w	r1, r6, r8, lsr #5
9001c190:	f608 0801 	addw	r8, r8, #2049	; 0x801
9001c194:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9001c198:	4441      	add	r1, r8
9001c19a:	0a00      	lsrs	r0, r0, #8
9001c19c:	ea06 1151 	and.w	r1, r6, r1, lsr #5
9001c1a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001c1a4:	4301      	orrs	r1, r0
9001c1a6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001c1a8:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9001c1ac:	2cff      	cmp	r4, #255	; 0xff
9001c1ae:	d01a      	beq.n	9001c1e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
9001c1b0:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
9001c1b4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001c1b8:	ea4f 08e4 	mov.w	r8, r4, asr #3
9001c1bc:	fb04 fa00 	mul.w	sl, r4, r0
9001c1c0:	fb08 f80c 	mul.w	r8, r8, ip
9001c1c4:	f10a 0c20 	add.w	ip, sl, #32
9001c1c8:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9001c1cc:	f608 0801 	addw	r8, r8, #2049	; 0x801
9001c1d0:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9001c1d4:	4440      	add	r0, r8
9001c1d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001c1da:	ea06 1050 	and.w	r0, r6, r0, lsr #5
9001c1de:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
9001c1e2:	ea40 000c 	orr.w	r0, r0, ip
9001c1e6:	fb15 fc02 	smulbb	ip, r5, r2
9001c1ea:	f1c5 0810 	rsb	r8, r5, #16
9001c1ee:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9001c1f2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001c1f6:	ea4f 0cec 	mov.w	ip, ip, asr #3
9001c1fa:	eba8 0802 	sub.w	r8, r8, r2
9001c1fe:	ea4f 4b00 	mov.w	fp, r0, lsl #16
9001c202:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001c206:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
9001c20a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001c20e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
9001c212:	ea4a 0101 	orr.w	r1, sl, r1
9001c216:	437a      	muls	r2, r7
9001c218:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9001c21c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001c220:	fb09 2208 	mla	r2, r9, r8, r2
9001c224:	ea4b 0000 	orr.w	r0, fp, r0
9001c228:	fb05 2201 	mla	r2, r5, r1, r2
9001c22c:	fb0c 2200 	mla	r2, ip, r0, r2
9001c230:	0d57      	lsrs	r7, r2, #21
9001c232:	0952      	lsrs	r2, r2, #5
9001c234:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001c238:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001c23c:	433a      	orrs	r2, r7
9001c23e:	2bff      	cmp	r3, #255	; 0xff
9001c240:	b292      	uxth	r2, r2
9001c242:	d05a      	beq.n	9001c2fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ca>
9001c244:	f8be 7000 	ldrh.w	r7, [lr]
9001c248:	43db      	mvns	r3, r3
9001c24a:	4c30      	ldr	r4, [pc, #192]	; (9001c30c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>)
9001c24c:	1238      	asrs	r0, r7, #8
9001c24e:	fa5f fc83 	uxtb.w	ip, r3
9001c252:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001c256:	10fd      	asrs	r5, r7, #3
9001c258:	00fb      	lsls	r3, r7, #3
9001c25a:	fb00 f00c 	mul.w	r0, r0, ip
9001c25e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c262:	b2db      	uxtb	r3, r3
9001c264:	fb05 f10c 	mul.w	r1, r5, ip
9001c268:	1c45      	adds	r5, r0, #1
9001c26a:	fb03 f30c 	mul.w	r3, r3, ip
9001c26e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
9001c272:	1215      	asrs	r5, r2, #8
9001c274:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001c278:	eb05 2010 	add.w	r0, r5, r0, lsr #8
9001c27c:	1c4d      	adds	r5, r1, #1
9001c27e:	eb05 2511 	add.w	r5, r5, r1, lsr #8
9001c282:	10d1      	asrs	r1, r2, #3
9001c284:	ea04 2000 	and.w	r0, r4, r0, lsl #8
9001c288:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001c28c:	00d2      	lsls	r2, r2, #3
9001c28e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9001c292:	00c9      	lsls	r1, r1, #3
9001c294:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001c298:	4308      	orrs	r0, r1
9001c29a:	1c59      	adds	r1, r3, #1
9001c29c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001c2a0:	b2d1      	uxtb	r1, r2
9001c2a2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001c2a6:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
9001c2aa:	f8ae 0000 	strh.w	r0, [lr]
9001c2ae:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001c2b0:	f10e 0e02 	add.w	lr, lr, #2
9001c2b4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
9001c2b6:	4413      	add	r3, r2
9001c2b8:	9a26      	ldr	r2, [sp, #152]	; 0x98
9001c2ba:	9325      	str	r3, [sp, #148]	; 0x94
9001c2bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001c2be:	441a      	add	r2, r3
9001c2c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001c2c2:	3b01      	subs	r3, #1
9001c2c4:	9226      	str	r2, [sp, #152]	; 0x98
9001c2c6:	930f      	str	r3, [sp, #60]	; 0x3c
9001c2c8:	e627      	b.n	9001bf1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9001c2ca:	fb08 f000 	mul.w	r0, r8, r0
9001c2ce:	fb09 0303 	mla	r3, r9, r3, r0
9001c2d2:	e6e8      	b.n	9001c0a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x576>
9001c2d4:	46b9      	mov	r9, r7
9001c2d6:	e710      	b.n	9001c0fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
9001c2d8:	f1c2 0110 	rsb	r1, r2, #16
9001c2dc:	437a      	muls	r2, r7
9001c2de:	fb09 2901 	mla	r9, r9, r1, r2
9001c2e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001c2e6:	ea4f 5059 	mov.w	r0, r9, lsr #21
9001c2ea:	ea4f 1259 	mov.w	r2, r9, lsr #5
9001c2ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001c2f2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001c2f6:	4302      	orrs	r2, r0
9001c2f8:	e7a1      	b.n	9001c23e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
9001c2fa:	f8ae 2000 	strh.w	r2, [lr]
9001c2fe:	e7d6      	b.n	9001c2ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
9001c300:	b013      	add	sp, #76	; 0x4c
9001c302:	ecbd 8b08 	vpop	{d8-d11}
9001c306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c30a:	bf00      	nop
9001c30c:	fffff800 	.word	0xfffff800

9001c310 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
9001c310:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c314:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
9001c318:	f9bd a020 	ldrsh.w	sl, [sp, #32]
9001c31c:	fb0c 4e03 	mla	lr, ip, r3, r4
9001c320:	f1bc 0f00 	cmp.w	ip, #0
9001c324:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
9001c328:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
9001c32c:	eb02 084e 	add.w	r8, r2, lr, lsl #1
9001c330:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
9001c334:	8808      	ldrh	r0, [r1, #0]
9001c336:	db2f      	blt.n	9001c398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
9001c338:	45e2      	cmp	sl, ip
9001c33a:	dd2d      	ble.n	9001c398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
9001c33c:	2c00      	cmp	r4, #0
9001c33e:	db29      	blt.n	9001c394 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
9001c340:	42a3      	cmp	r3, r4
9001c342:	dd27      	ble.n	9001c394 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
9001c344:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
9001c348:	1c62      	adds	r2, r4, #1
9001c34a:	d428      	bmi.n	9001c39e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
9001c34c:	4293      	cmp	r3, r2
9001c34e:	dd26      	ble.n	9001c39e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
9001c350:	b32f      	cbz	r7, 9001c39e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
9001c352:	f8b8 e002 	ldrh.w	lr, [r8, #2]
9001c356:	f11c 0c01 	adds.w	ip, ip, #1
9001c35a:	d424      	bmi.n	9001c3a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
9001c35c:	45e2      	cmp	sl, ip
9001c35e:	dd22      	ble.n	9001c3a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
9001c360:	2e00      	cmp	r6, #0
9001c362:	f000 809c 	beq.w	9001c49e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
9001c366:	2c00      	cmp	r4, #0
9001c368:	db1b      	blt.n	9001c3a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
9001c36a:	42a3      	cmp	r3, r4
9001c36c:	dd19      	ble.n	9001c3a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
9001c36e:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
9001c372:	3401      	adds	r4, #1
9001c374:	d41a      	bmi.n	9001c3ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
9001c376:	42a3      	cmp	r3, r4
9001c378:	dd18      	ble.n	9001c3ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
9001c37a:	b1cf      	cbz	r7, 9001c3b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
9001c37c:	3301      	adds	r3, #1
9001c37e:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
9001c382:	2f0f      	cmp	r7, #15
9001c384:	d915      	bls.n	9001c3b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
9001c386:	4b49      	ldr	r3, [pc, #292]	; (9001c4ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
9001c388:	f240 11ef 	movw	r1, #495	; 0x1ef
9001c38c:	4a48      	ldr	r2, [pc, #288]	; (9001c4b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
9001c38e:	4849      	ldr	r0, [pc, #292]	; (9001c4b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
9001c390:	f002 ff88 	bl	9001f2a4 <__assert_func>
9001c394:	4681      	mov	r9, r0
9001c396:	e7d7      	b.n	9001c348 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
9001c398:	4686      	mov	lr, r0
9001c39a:	4681      	mov	r9, r0
9001c39c:	e7db      	b.n	9001c356 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
9001c39e:	4686      	mov	lr, r0
9001c3a0:	e7d9      	b.n	9001c356 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
9001c3a2:	4684      	mov	ip, r0
9001c3a4:	e7e5      	b.n	9001c372 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
9001c3a6:	4603      	mov	r3, r0
9001c3a8:	4684      	mov	ip, r0
9001c3aa:	e7ea      	b.n	9001c382 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
9001c3ac:	4603      	mov	r3, r0
9001c3ae:	e7e8      	b.n	9001c382 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
9001c3b0:	4603      	mov	r3, r0
9001c3b2:	2e0f      	cmp	r6, #15
9001c3b4:	d8e7      	bhi.n	9001c386 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
9001c3b6:	fb17 f806 	smulbb	r8, r7, r6
9001c3ba:	ea4f 4409 	mov.w	r4, r9, lsl #16
9001c3be:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
9001c3c2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9001c3c6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001c3ca:	ea4f 08e8 	mov.w	r8, r8, asr #3
9001c3ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001c3d2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001c3d6:	ea44 0909 	orr.w	r9, r4, r9
9001c3da:	f1c6 0410 	rsb	r4, r6, #16
9001c3de:	041a      	lsls	r2, r3, #16
9001c3e0:	ea4a 0e0e 	orr.w	lr, sl, lr
9001c3e4:	1be4      	subs	r4, r4, r7
9001c3e6:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
9001c3ea:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001c3ee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001c3f2:	fb07 fe0e 	mul.w	lr, r7, lr
9001c3f6:	eb08 0444 	add.w	r4, r8, r4, lsl #1
9001c3fa:	4313      	orrs	r3, r2
9001c3fc:	ea4f 420c 	mov.w	r2, ip, lsl #16
9001c400:	fb04 e409 	mla	r4, r4, r9, lr
9001c404:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
9001c408:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001c40c:	b2af      	uxth	r7, r5
9001c40e:	fb08 4303 	mla	r3, r8, r3, r4
9001c412:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
9001c416:	43ed      	mvns	r5, r5
9001c418:	4322      	orrs	r2, r4
9001c41a:	b2ed      	uxtb	r5, r5
9001c41c:	fb06 3202 	mla	r2, r6, r2, r3
9001c420:	10c6      	asrs	r6, r0, #3
9001c422:	0d53      	lsrs	r3, r2, #21
9001c424:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c428:	0952      	lsrs	r2, r2, #5
9001c42a:	fb16 f605 	smulbb	r6, r6, r5
9001c42e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001c432:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001c436:	431a      	orrs	r2, r3
9001c438:	b293      	uxth	r3, r2
9001c43a:	1202      	asrs	r2, r0, #8
9001c43c:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001c440:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001c444:	00dc      	lsls	r4, r3, #3
9001c446:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c44a:	fb12 f205 	smulbb	r2, r2, r5
9001c44e:	b2e4      	uxtb	r4, r4
9001c450:	fb0c 2c07 	mla	ip, ip, r7, r2
9001c454:	10da      	asrs	r2, r3, #3
9001c456:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001c45a:	fa1f fc8c 	uxth.w	ip, ip
9001c45e:	fb02 6207 	mla	r2, r2, r7, r6
9001c462:	f10c 0301 	add.w	r3, ip, #1
9001c466:	b296      	uxth	r6, r2
9001c468:	00c2      	lsls	r2, r0, #3
9001c46a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9001c46e:	b2d2      	uxtb	r2, r2
9001c470:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
9001c474:	fb12 f205 	smulbb	r2, r2, r5
9001c478:	fb04 2207 	mla	r2, r4, r7, r2
9001c47c:	b292      	uxth	r2, r2
9001c47e:	1c50      	adds	r0, r2, #1
9001c480:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9001c484:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c488:	4313      	orrs	r3, r2
9001c48a:	1c72      	adds	r2, r6, #1
9001c48c:	eb02 2216 	add.w	r2, r2, r6, lsr #8
9001c490:	0952      	lsrs	r2, r2, #5
9001c492:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001c496:	4313      	orrs	r3, r2
9001c498:	800b      	strh	r3, [r1, #0]
9001c49a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c49e:	2f0f      	cmp	r7, #15
9001c4a0:	f63f af71 	bhi.w	9001c386 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
9001c4a4:	4603      	mov	r3, r0
9001c4a6:	4684      	mov	ip, r0
9001c4a8:	e785      	b.n	9001c3b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
9001c4aa:	bf00      	nop
9001c4ac:	900236e6 	.word	0x900236e6
9001c4b0:	90023d52 	.word	0x90023d52
9001c4b4:	900237cf 	.word	0x900237cf

9001c4b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c4b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c4bc:	ed2d 8b08 	vpush	{d8-d11}
9001c4c0:	b093      	sub	sp, #76	; 0x4c
9001c4c2:	461d      	mov	r5, r3
9001c4c4:	eeb0 aa40 	vmov.f32	s20, s0
9001c4c8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001c4ca:	eef0 9a60 	vmov.f32	s19, s1
9001c4ce:	9210      	str	r2, [sp, #64]	; 0x40
9001c4d0:	eeb0 9a41 	vmov.f32	s18, s2
9001c4d4:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
9001c4d8:	eeb0 8a62 	vmov.f32	s16, s5
9001c4dc:	910a      	str	r1, [sp, #40]	; 0x28
9001c4de:	eef0 8a43 	vmov.f32	s17, s6
9001c4e2:	920b      	str	r2, [sp, #44]	; 0x2c
9001c4e4:	eef0 ba44 	vmov.f32	s23, s8
9001c4e8:	6859      	ldr	r1, [r3, #4]
9001c4ea:	eeb0 ba64 	vmov.f32	s22, s9
9001c4ee:	681b      	ldr	r3, [r3, #0]
9001c4f0:	eef0 aa45 	vmov.f32	s21, s10
9001c4f4:	9011      	str	r0, [sp, #68]	; 0x44
9001c4f6:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
9001c4fa:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
9001c4fe:	fb01 2707 	mla	r7, r1, r7, r2
9001c502:	eb03 0347 	add.w	r3, r3, r7, lsl #1
9001c506:	9307      	str	r3, [sp, #28]
9001c508:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001c50a:	681b      	ldr	r3, [r3, #0]
9001c50c:	9309      	str	r3, [sp, #36]	; 0x24
9001c50e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001c510:	43db      	mvns	r3, r3
9001c512:	b2db      	uxtb	r3, r3
9001c514:	9308      	str	r3, [sp, #32]
9001c516:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001c518:	2b00      	cmp	r3, #0
9001c51a:	dc03      	bgt.n	9001c524 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c51c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c51e:	2b00      	cmp	r3, #0
9001c520:	f340 8205 	ble.w	9001c92e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
9001c524:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001c526:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001c52a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001c52e:	1e48      	subs	r0, r1, #1
9001c530:	f102 3cff 	add.w	ip, r2, #4294967295
9001c534:	2d00      	cmp	r5, #0
9001c536:	f340 80da 	ble.w	9001c6ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001c53a:	ea5f 4e24 	movs.w	lr, r4, asr #16
9001c53e:	ea4f 4326 	mov.w	r3, r6, asr #16
9001c542:	d406      	bmi.n	9001c552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001c544:	4586      	cmp	lr, r0
9001c546:	da04      	bge.n	9001c552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001c548:	2b00      	cmp	r3, #0
9001c54a:	db02      	blt.n	9001c552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001c54c:	4563      	cmp	r3, ip
9001c54e:	f2c0 80cf 	blt.w	9001c6f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
9001c552:	f11e 0e01 	adds.w	lr, lr, #1
9001c556:	f100 80c1 	bmi.w	9001c6dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
9001c55a:	4571      	cmp	r1, lr
9001c55c:	f2c0 80be 	blt.w	9001c6dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
9001c560:	3301      	adds	r3, #1
9001c562:	f100 80bb 	bmi.w	9001c6dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
9001c566:	429a      	cmp	r2, r3
9001c568:	f2c0 80b8 	blt.w	9001c6dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
9001c56c:	46a9      	mov	r9, r5
9001c56e:	f8dd 801c 	ldr.w	r8, [sp, #28]
9001c572:	f1b9 0f00 	cmp.w	r9, #0
9001c576:	f340 80d8 	ble.w	9001c72a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001c57a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001c57c:	1421      	asrs	r1, r4, #16
9001c57e:	ea4f 4026 	mov.w	r0, r6, asr #16
9001c582:	f3c4 3203 	ubfx	r2, r4, #12, #4
9001c586:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9001c58a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
9001c58e:	f100 8112 	bmi.w	9001c7b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9001c592:	f10e 3aff 	add.w	sl, lr, #4294967295
9001c596:	4551      	cmp	r1, sl
9001c598:	f280 810d 	bge.w	9001c7b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9001c59c:	2800      	cmp	r0, #0
9001c59e:	f2c0 810a 	blt.w	9001c7b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9001c5a2:	f103 3aff 	add.w	sl, r3, #4294967295
9001c5a6:	4550      	cmp	r0, sl
9001c5a8:	f280 8105 	bge.w	9001c7b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9001c5ac:	fa0f f38e 	sxth.w	r3, lr
9001c5b0:	fb00 1103 	mla	r1, r0, r3, r1
9001c5b4:	9809      	ldr	r0, [sp, #36]	; 0x24
9001c5b6:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
9001c5ba:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
9001c5be:	f8ba 1002 	ldrh.w	r1, [sl, #2]
9001c5c2:	f1bc 0f00 	cmp.w	ip, #0
9001c5c6:	d007      	beq.n	9001c5d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
9001c5c8:	005b      	lsls	r3, r3, #1
9001c5ca:	eb0a 0003 	add.w	r0, sl, r3
9001c5ce:	f83a 3003 	ldrh.w	r3, [sl, r3]
9001c5d2:	930c      	str	r3, [sp, #48]	; 0x30
9001c5d4:	8843      	ldrh	r3, [r0, #2]
9001c5d6:	930d      	str	r3, [sp, #52]	; 0x34
9001c5d8:	ea4f 400e 	mov.w	r0, lr, lsl #16
9001c5dc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001c5e0:	fb12 f30c 	smulbb	r3, r2, ip
9001c5e4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9001c5e8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001c5ec:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001c5f0:	10db      	asrs	r3, r3, #3
9001c5f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9001c5f6:	ea40 000e 	orr.w	r0, r0, lr
9001c5fa:	f1cc 0e10 	rsb	lr, ip, #16
9001c5fe:	ea4a 0101 	orr.w	r1, sl, r1
9001c602:	9f08      	ldr	r7, [sp, #32]
9001c604:	ebae 0e02 	sub.w	lr, lr, r2
9001c608:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9001c60c:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
9001c610:	4351      	muls	r1, r2
9001c612:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001c614:	fb0e 1e00 	mla	lr, lr, r0, r1
9001c618:	990c      	ldr	r1, [sp, #48]	; 0x30
9001c61a:	0410      	lsls	r0, r2, #16
9001c61c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001c620:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001c624:	4310      	orrs	r0, r2
9001c626:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001c628:	0412      	lsls	r2, r2, #16
9001c62a:	fb03 e000 	mla	r0, r3, r0, lr
9001c62e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
9001c632:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
9001c636:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001c63a:	f8b8 c000 	ldrh.w	ip, [r8]
9001c63e:	ea42 020e 	orr.w	r2, r2, lr
9001c642:	ea4f 212c 	mov.w	r1, ip, asr #8
9001c646:	ea4f 0eec 	mov.w	lr, ip, asr #3
9001c64a:	fb03 0302 	mla	r3, r3, r2, r0
9001c64e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001c652:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c656:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001c65a:	fb11 f107 	smulbb	r1, r1, r7
9001c65e:	0d5a      	lsrs	r2, r3, #21
9001c660:	095b      	lsrs	r3, r3, #5
9001c662:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001c666:	fa5f fc8c 	uxtb.w	ip, ip
9001c66a:	fb1e fe07 	smulbb	lr, lr, r7
9001c66e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001c672:	fb1c fc07 	smulbb	ip, ip, r7
9001c676:	4313      	orrs	r3, r2
9001c678:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
9001c67c:	b29b      	uxth	r3, r3
9001c67e:	1218      	asrs	r0, r3, #8
9001c680:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001c684:	fb00 1002 	mla	r0, r0, r2, r1
9001c688:	10d9      	asrs	r1, r3, #3
9001c68a:	00db      	lsls	r3, r3, #3
9001c68c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001c690:	b280      	uxth	r0, r0
9001c692:	b2db      	uxtb	r3, r3
9001c694:	fb01 e102 	mla	r1, r1, r2, lr
9001c698:	fb03 c202 	mla	r2, r3, r2, ip
9001c69c:	1c43      	adds	r3, r0, #1
9001c69e:	b289      	uxth	r1, r1
9001c6a0:	b292      	uxth	r2, r2
9001c6a2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9001c6a6:	f102 0c01 	add.w	ip, r2, #1
9001c6aa:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
9001c6ae:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
9001c6b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c6b6:	4313      	orrs	r3, r2
9001c6b8:	1c4a      	adds	r2, r1, #1
9001c6ba:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001c6be:	0949      	lsrs	r1, r1, #5
9001c6c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001c6c4:	430b      	orrs	r3, r1
9001c6c6:	f8a8 3000 	strh.w	r3, [r8]
9001c6ca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001c6cc:	f108 0802 	add.w	r8, r8, #2
9001c6d0:	f109 39ff 	add.w	r9, r9, #4294967295
9001c6d4:	441c      	add	r4, r3
9001c6d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001c6d8:	441e      	add	r6, r3
9001c6da:	e74a      	b.n	9001c572 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
9001c6dc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001c6de:	3d01      	subs	r5, #1
9001c6e0:	441c      	add	r4, r3
9001c6e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001c6e4:	441e      	add	r6, r3
9001c6e6:	9b07      	ldr	r3, [sp, #28]
9001c6e8:	3302      	adds	r3, #2
9001c6ea:	9307      	str	r3, [sp, #28]
9001c6ec:	e722      	b.n	9001c534 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c6ee:	d022      	beq.n	9001c736 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
9001c6f0:	1e6b      	subs	r3, r5, #1
9001c6f2:	9827      	ldr	r0, [sp, #156]	; 0x9c
9001c6f4:	fb00 4003 	mla	r0, r0, r3, r4
9001c6f8:	1400      	asrs	r0, r0, #16
9001c6fa:	f53f af37 	bmi.w	9001c56c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
9001c6fe:	3901      	subs	r1, #1
9001c700:	4288      	cmp	r0, r1
9001c702:	f6bf af33 	bge.w	9001c56c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
9001c706:	9928      	ldr	r1, [sp, #160]	; 0xa0
9001c708:	fb01 6303 	mla	r3, r1, r3, r6
9001c70c:	141b      	asrs	r3, r3, #16
9001c70e:	f53f af2d 	bmi.w	9001c56c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
9001c712:	3a01      	subs	r2, #1
9001c714:	4293      	cmp	r3, r2
9001c716:	f6bf af29 	bge.w	9001c56c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
9001c71a:	46a8      	mov	r8, r5
9001c71c:	f8dd 901c 	ldr.w	r9, [sp, #28]
9001c720:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
9001c724:	f1b8 0f00 	cmp.w	r8, #0
9001c728:	dc60      	bgt.n	9001c7ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
9001c72a:	9b07      	ldr	r3, [sp, #28]
9001c72c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9001c730:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9001c734:	9307      	str	r3, [sp, #28]
9001c736:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001c738:	2b00      	cmp	r3, #0
9001c73a:	f340 80f8 	ble.w	9001c92e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
9001c73e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001c742:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001c744:	ee3a aa2b 	vadd.f32	s20, s20, s23
9001c748:	ee79 9a8b 	vadd.f32	s19, s19, s22
9001c74c:	eef0 6a48 	vmov.f32	s13, s16
9001c750:	eec7 7a0a 	vdiv.f32	s15, s14, s20
9001c754:	ee39 9a2a 	vadd.f32	s18, s18, s21
9001c758:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c75c:	ee16 4a90 	vmov	r4, s13
9001c760:	eef0 6a68 	vmov.f32	s13, s17
9001c764:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c768:	ee16 6a90 	vmov	r6, s13
9001c76c:	ee29 7aa7 	vmul.f32	s14, s19, s15
9001c770:	ee69 7a27 	vmul.f32	s15, s18, s15
9001c774:	ee37 8a48 	vsub.f32	s16, s14, s16
9001c778:	ee77 8ae8 	vsub.f32	s17, s15, s17
9001c77c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
9001c780:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
9001c784:	ee18 2a10 	vmov	r2, s16
9001c788:	eeb0 8a47 	vmov.f32	s16, s14
9001c78c:	fb92 f3f3 	sdiv	r3, r2, r3
9001c790:	ee18 2a90 	vmov	r2, s17
9001c794:	9327      	str	r3, [sp, #156]	; 0x9c
9001c796:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001c798:	eef0 8a67 	vmov.f32	s17, s15
9001c79c:	fb92 f3f3 	sdiv	r3, r2, r3
9001c7a0:	9328      	str	r3, [sp, #160]	; 0xa0
9001c7a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001c7a4:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001c7a6:	3b01      	subs	r3, #1
9001c7a8:	930a      	str	r3, [sp, #40]	; 0x28
9001c7aa:	bf08      	it	eq
9001c7ac:	4615      	moveq	r5, r2
9001c7ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001c7b0:	bf18      	it	ne
9001c7b2:	461d      	movne	r5, r3
9001c7b4:	e6af      	b.n	9001c516 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001c7b6:	f111 0a01 	adds.w	sl, r1, #1
9001c7ba:	d486      	bmi.n	9001c6ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
9001c7bc:	45d6      	cmp	lr, sl
9001c7be:	db84      	blt.n	9001c6ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
9001c7c0:	f110 0a01 	adds.w	sl, r0, #1
9001c7c4:	d481      	bmi.n	9001c6ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
9001c7c6:	4553      	cmp	r3, sl
9001c7c8:	f6ff af7f 	blt.w	9001c6ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
9001c7cc:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001c7ce:	b21b      	sxth	r3, r3
9001c7d0:	9101      	str	r1, [sp, #4]
9001c7d2:	4641      	mov	r1, r8
9001c7d4:	9300      	str	r3, [sp, #0]
9001c7d6:	fa0f f38e 	sxth.w	r3, lr
9001c7da:	e9cd 0202 	strd	r0, r2, [sp, #8]
9001c7de:	e9cd c704 	strd	ip, r7, [sp, #16]
9001c7e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001c7e4:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c7e6:	f7ff fd93 	bl	9001c310 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
9001c7ea:	e76e      	b.n	9001c6ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
9001c7ec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001c7ee:	1430      	asrs	r0, r6, #16
9001c7f0:	9f09      	ldr	r7, [sp, #36]	; 0x24
9001c7f2:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9001c7f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001c7fa:	1423      	asrs	r3, r4, #16
9001c7fc:	f3c4 3203 	ubfx	r2, r4, #12, #4
9001c800:	fb01 3000 	mla	r0, r1, r0, r3
9001c804:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001c806:	eb03 0340 	add.w	r3, r3, r0, lsl #1
9001c80a:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
9001c80e:	8858      	ldrh	r0, [r3, #2]
9001c810:	f1be 0f00 	cmp.w	lr, #0
9001c814:	d00b      	beq.n	9001c82e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
9001c816:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
9001c81a:	3901      	subs	r1, #1
9001c81c:	0049      	lsls	r1, r1, #1
9001c81e:	3102      	adds	r1, #2
9001c820:	eb03 0b01 	add.w	fp, r3, r1
9001c824:	5a5b      	ldrh	r3, [r3, r1]
9001c826:	930e      	str	r3, [sp, #56]	; 0x38
9001c828:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001c82c:	930f      	str	r3, [sp, #60]	; 0x3c
9001c82e:	ea4f 410c 	mov.w	r1, ip, lsl #16
9001c832:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001c836:	fb12 f30e 	smulbb	r3, r2, lr
9001c83a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
9001c83e:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
9001c842:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001c846:	10db      	asrs	r3, r3, #3
9001c848:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001c84c:	ea41 010c 	orr.w	r1, r1, ip
9001c850:	f1ce 0c10 	rsb	ip, lr, #16
9001c854:	ea4b 0000 	orr.w	r0, fp, r0
9001c858:	9f08      	ldr	r7, [sp, #32]
9001c85a:	ebac 0c02 	sub.w	ip, ip, r2
9001c85e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9001c862:	f108 38ff 	add.w	r8, r8, #4294967295
9001c866:	4350      	muls	r0, r2
9001c868:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9001c86c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001c86e:	fb0c 0c01 	mla	ip, ip, r1, r0
9001c872:	980e      	ldr	r0, [sp, #56]	; 0x38
9001c874:	ea4f 4b02 	mov.w	fp, r2, lsl #16
9001c878:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
9001c87c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001c87e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001c882:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001c886:	0412      	lsls	r2, r2, #16
9001c888:	ea4b 0101 	orr.w	r1, fp, r1
9001c88c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001c890:	fb03 c101 	mla	r1, r3, r1, ip
9001c894:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9001c898:	4302      	orrs	r2, r0
9001c89a:	fb03 1202 	mla	r2, r3, r2, r1
9001c89e:	ea4f 5b52 	mov.w	fp, r2, lsr #21
9001c8a2:	0952      	lsrs	r2, r2, #5
9001c8a4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001c8a8:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
9001c8ac:	f8b9 2000 	ldrh.w	r2, [r9]
9001c8b0:	ea4b 0303 	orr.w	r3, fp, r3
9001c8b4:	1211      	asrs	r1, r2, #8
9001c8b6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9001c8ba:	b29b      	uxth	r3, r3
9001c8bc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001c8c0:	00d2      	lsls	r2, r2, #3
9001c8c2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001c8c6:	fb11 f107 	smulbb	r1, r1, r7
9001c8ca:	1218      	asrs	r0, r3, #8
9001c8cc:	fb1c fc07 	smulbb	ip, ip, r7
9001c8d0:	b2d2      	uxtb	r2, r2
9001c8d2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001c8d6:	fb12 f207 	smulbb	r2, r2, r7
9001c8da:	fb00 100a 	mla	r0, r0, sl, r1
9001c8de:	10d9      	asrs	r1, r3, #3
9001c8e0:	00db      	lsls	r3, r3, #3
9001c8e2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001c8e6:	b280      	uxth	r0, r0
9001c8e8:	b2db      	uxtb	r3, r3
9001c8ea:	fb01 c10a 	mla	r1, r1, sl, ip
9001c8ee:	fb03 230a 	mla	r3, r3, sl, r2
9001c8f2:	1c42      	adds	r2, r0, #1
9001c8f4:	b289      	uxth	r1, r1
9001c8f6:	b29b      	uxth	r3, r3
9001c8f8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001c8fc:	f101 0c01 	add.w	ip, r1, #1
9001c900:	1c5a      	adds	r2, r3, #1
9001c902:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
9001c906:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001c90a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9001c90e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001c910:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001c914:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c918:	441c      	add	r4, r3
9001c91a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
9001c91e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001c920:	4310      	orrs	r0, r2
9001c922:	441e      	add	r6, r3
9001c924:	ea40 000c 	orr.w	r0, r0, ip
9001c928:	f829 0b02 	strh.w	r0, [r9], #2
9001c92c:	e6fa      	b.n	9001c724 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
9001c92e:	b013      	add	sp, #76	; 0x4c
9001c930:	ecbd 8b08 	vpop	{d8-d11}
9001c934:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c938 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
9001c938:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001c93c:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
9001c940:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
9001c944:	fb06 5c03 	mla	ip, r6, r3, r5
9001c948:	2e00      	cmp	r6, #0
9001c94a:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
9001c94e:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
9001c952:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
9001c956:	8808      	ldrh	r0, [r1, #0]
9001c958:	db2e      	blt.n	9001c9b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
9001c95a:	45b0      	cmp	r8, r6
9001c95c:	dd2c      	ble.n	9001c9b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
9001c95e:	2d00      	cmp	r5, #0
9001c960:	db28      	blt.n	9001c9b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
9001c962:	42ab      	cmp	r3, r5
9001c964:	dd26      	ble.n	9001c9b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
9001c966:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
9001c96a:	1c6a      	adds	r2, r5, #1
9001c96c:	d427      	bmi.n	9001c9be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
9001c96e:	4293      	cmp	r3, r2
9001c970:	dd25      	ble.n	9001c9be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
9001c972:	b324      	cbz	r4, 9001c9be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
9001c974:	f8be 2002 	ldrh.w	r2, [lr, #2]
9001c978:	3601      	adds	r6, #1
9001c97a:	d424      	bmi.n	9001c9c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
9001c97c:	45b0      	cmp	r8, r6
9001c97e:	dd22      	ble.n	9001c9c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
9001c980:	b31f      	cbz	r7, 9001c9ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
9001c982:	2d00      	cmp	r5, #0
9001c984:	db1d      	blt.n	9001c9c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
9001c986:	42ab      	cmp	r3, r5
9001c988:	dd1b      	ble.n	9001c9c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
9001c98a:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
9001c98e:	3501      	adds	r5, #1
9001c990:	d405      	bmi.n	9001c99e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
9001c992:	42ab      	cmp	r3, r5
9001c994:	dd03      	ble.n	9001c99e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
9001c996:	b124      	cbz	r4, 9001c9a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
9001c998:	3301      	adds	r3, #1
9001c99a:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
9001c99e:	2c0f      	cmp	r4, #15
9001c9a0:	d801      	bhi.n	9001c9a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9001c9a2:	2f0f      	cmp	r7, #15
9001c9a4:	d914      	bls.n	9001c9d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
9001c9a6:	4b27      	ldr	r3, [pc, #156]	; (9001ca44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
9001c9a8:	f240 11ef 	movw	r1, #495	; 0x1ef
9001c9ac:	4a26      	ldr	r2, [pc, #152]	; (9001ca48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
9001c9ae:	4827      	ldr	r0, [pc, #156]	; (9001ca4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
9001c9b0:	f002 fc78 	bl	9001f2a4 <__assert_func>
9001c9b4:	4684      	mov	ip, r0
9001c9b6:	e7d8      	b.n	9001c96a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
9001c9b8:	4602      	mov	r2, r0
9001c9ba:	4684      	mov	ip, r0
9001c9bc:	e7dc      	b.n	9001c978 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
9001c9be:	4602      	mov	r2, r0
9001c9c0:	e7da      	b.n	9001c978 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
9001c9c2:	4606      	mov	r6, r0
9001c9c4:	e7e3      	b.n	9001c98e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
9001c9c6:	4606      	mov	r6, r0
9001c9c8:	e7e9      	b.n	9001c99e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
9001c9ca:	2c0f      	cmp	r4, #15
9001c9cc:	d8eb      	bhi.n	9001c9a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9001c9ce:	4606      	mov	r6, r0
9001c9d0:	fb14 f307 	smulbb	r3, r4, r7
9001c9d4:	ea4f 450c 	mov.w	r5, ip, lsl #16
9001c9d8:	ea4f 4e02 	mov.w	lr, r2, lsl #16
9001c9dc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001c9e0:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
9001c9e4:	10db      	asrs	r3, r3, #3
9001c9e6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9001c9ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001c9ee:	ea45 0c0c 	orr.w	ip, r5, ip
9001c9f2:	f1c7 0510 	rsb	r5, r7, #16
9001c9f6:	ea4e 0202 	orr.w	r2, lr, r2
9001c9fa:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
9001c9fe:	1b2d      	subs	r5, r5, r4
9001ca00:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
9001ca04:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9001ca08:	4354      	muls	r4, r2
9001ca0a:	fb05 450c 	mla	r5, r5, ip, r4
9001ca0e:	0404      	lsls	r4, r0, #16
9001ca10:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001ca14:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001ca18:	4320      	orrs	r0, r4
9001ca1a:	fb03 5400 	mla	r4, r3, r0, r5
9001ca1e:	0430      	lsls	r0, r6, #16
9001ca20:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
9001ca24:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001ca28:	4330      	orrs	r0, r6
9001ca2a:	fb07 4000 	mla	r0, r7, r0, r4
9001ca2e:	0d43      	lsrs	r3, r0, #21
9001ca30:	0940      	lsrs	r0, r0, #5
9001ca32:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ca36:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001ca3a:	4318      	orrs	r0, r3
9001ca3c:	8008      	strh	r0, [r1, #0]
9001ca3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001ca42:	bf00      	nop
9001ca44:	900236e6 	.word	0x900236e6
9001ca48:	90023d52 	.word	0x90023d52
9001ca4c:	900237cf 	.word	0x900237cf

9001ca50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ca50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ca54:	ed2d 8b08 	vpush	{d8-d11}
9001ca58:	b08f      	sub	sp, #60	; 0x3c
9001ca5a:	461d      	mov	r5, r3
9001ca5c:	eeb0 aa40 	vmov.f32	s20, s0
9001ca60:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001ca62:	eef0 9a60 	vmov.f32	s19, s1
9001ca66:	9107      	str	r1, [sp, #28]
9001ca68:	eeb0 9a41 	vmov.f32	s18, s2
9001ca6c:	6859      	ldr	r1, [r3, #4]
9001ca6e:	eeb0 8a62 	vmov.f32	s16, s5
9001ca72:	920c      	str	r2, [sp, #48]	; 0x30
9001ca74:	eef0 8a43 	vmov.f32	s17, s6
9001ca78:	681b      	ldr	r3, [r3, #0]
9001ca7a:	eef0 ba44 	vmov.f32	s23, s8
9001ca7e:	eeb0 ba64 	vmov.f32	s22, s9
9001ca82:	900d      	str	r0, [sp, #52]	; 0x34
9001ca84:	eef0 aa45 	vmov.f32	s21, s10
9001ca88:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
9001ca8c:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
9001ca90:	fb01 2707 	mla	r7, r1, r7, r2
9001ca94:	eb03 0747 	add.w	r7, r3, r7, lsl #1
9001ca98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001ca9a:	f8d3 8000 	ldr.w	r8, [r3]
9001ca9e:	9b07      	ldr	r3, [sp, #28]
9001caa0:	2b00      	cmp	r3, #0
9001caa2:	dc03      	bgt.n	9001caac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001caa4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001caa6:	2b00      	cmp	r3, #0
9001caa8:	f340 8182 	ble.w	9001cdb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
9001caac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001caae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001cab2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001cab6:	1e48      	subs	r0, r1, #1
9001cab8:	f102 3cff 	add.w	ip, r2, #4294967295
9001cabc:	2d00      	cmp	r5, #0
9001cabe:	f340 809b 	ble.w	9001cbf8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
9001cac2:	ea5f 4e24 	movs.w	lr, r4, asr #16
9001cac6:	ea4f 4326 	mov.w	r3, r6, asr #16
9001caca:	d406      	bmi.n	9001cada <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001cacc:	4586      	cmp	lr, r0
9001cace:	da04      	bge.n	9001cada <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001cad0:	2b00      	cmp	r3, #0
9001cad2:	db02      	blt.n	9001cada <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001cad4:	4563      	cmp	r3, ip
9001cad6:	f2c0 8090 	blt.w	9001cbfa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
9001cada:	f11e 0e01 	adds.w	lr, lr, #1
9001cade:	f100 8084 	bmi.w	9001cbea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001cae2:	4571      	cmp	r1, lr
9001cae4:	f2c0 8081 	blt.w	9001cbea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001cae8:	3301      	adds	r3, #1
9001caea:	d47e      	bmi.n	9001cbea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001caec:	429a      	cmp	r2, r3
9001caee:	db7c      	blt.n	9001cbea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001caf0:	46aa      	mov	sl, r5
9001caf2:	46b9      	mov	r9, r7
9001caf4:	f1ba 0f00 	cmp.w	sl, #0
9001caf8:	f340 8099 	ble.w	9001cc2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
9001cafc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001cafe:	1421      	asrs	r1, r4, #16
9001cb00:	ea4f 4026 	mov.w	r0, r6, asr #16
9001cb04:	f3c4 3203 	ubfx	r2, r4, #12, #4
9001cb08:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9001cb0c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
9001cb10:	f100 80d1 	bmi.w	9001ccb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
9001cb14:	f10e 3bff 	add.w	fp, lr, #4294967295
9001cb18:	4559      	cmp	r1, fp
9001cb1a:	f280 80cc 	bge.w	9001ccb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
9001cb1e:	2800      	cmp	r0, #0
9001cb20:	f2c0 80c9 	blt.w	9001ccb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
9001cb24:	f103 3bff 	add.w	fp, r3, #4294967295
9001cb28:	4558      	cmp	r0, fp
9001cb2a:	f280 80c4 	bge.w	9001ccb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
9001cb2e:	fa0f fe8e 	sxth.w	lr, lr
9001cb32:	fb00 110e 	mla	r1, r0, lr, r1
9001cb36:	eb08 0041 	add.w	r0, r8, r1, lsl #1
9001cb3a:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
9001cb3e:	8841      	ldrh	r1, [r0, #2]
9001cb40:	f1bc 0f00 	cmp.w	ip, #0
9001cb44:	d00b      	beq.n	9001cb5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001cb46:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
9001cb4a:	3b01      	subs	r3, #1
9001cb4c:	005b      	lsls	r3, r3, #1
9001cb4e:	3302      	adds	r3, #2
9001cb50:	eb00 0e03 	add.w	lr, r0, r3
9001cb54:	5ac3      	ldrh	r3, [r0, r3]
9001cb56:	9308      	str	r3, [sp, #32]
9001cb58:	f8be 3002 	ldrh.w	r3, [lr, #2]
9001cb5c:	9309      	str	r3, [sp, #36]	; 0x24
9001cb5e:	ea4f 400b 	mov.w	r0, fp, lsl #16
9001cb62:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
9001cb66:	fb12 f30c 	smulbb	r3, r2, ip
9001cb6a:	f1cc 0e10 	rsb	lr, ip, #16
9001cb6e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001cb72:	10db      	asrs	r3, r3, #3
9001cb74:	ebae 0e02 	sub.w	lr, lr, r2
9001cb78:	ea40 000b 	orr.w	r0, r0, fp
9001cb7c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001cb80:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001cb84:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9001cb88:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001cb8c:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
9001cb90:	ea4b 0101 	orr.w	r1, fp, r1
9001cb94:	4351      	muls	r1, r2
9001cb96:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001cb98:	fb0e 1e00 	mla	lr, lr, r0, r1
9001cb9c:	0410      	lsls	r0, r2, #16
9001cb9e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001cba2:	9908      	ldr	r1, [sp, #32]
9001cba4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001cba8:	4310      	orrs	r0, r2
9001cbaa:	9a08      	ldr	r2, [sp, #32]
9001cbac:	0412      	lsls	r2, r2, #16
9001cbae:	fb03 e000 	mla	r0, r3, r0, lr
9001cbb2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
9001cbb6:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
9001cbba:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001cbbe:	ea42 020e 	orr.w	r2, r2, lr
9001cbc2:	fb03 0302 	mla	r3, r3, r2, r0
9001cbc6:	0d5a      	lsrs	r2, r3, #21
9001cbc8:	095b      	lsrs	r3, r3, #5
9001cbca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001cbce:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001cbd2:	4313      	orrs	r3, r2
9001cbd4:	f8a9 3000 	strh.w	r3, [r9]
9001cbd8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
9001cbda:	f109 0902 	add.w	r9, r9, #2
9001cbde:	f10a 3aff 	add.w	sl, sl, #4294967295
9001cbe2:	441c      	add	r4, r3
9001cbe4:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001cbe6:	441e      	add	r6, r3
9001cbe8:	e784      	b.n	9001caf4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001cbea:	9b23      	ldr	r3, [sp, #140]	; 0x8c
9001cbec:	3d01      	subs	r5, #1
9001cbee:	3702      	adds	r7, #2
9001cbf0:	441c      	add	r4, r3
9001cbf2:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001cbf4:	441e      	add	r6, r3
9001cbf6:	e761      	b.n	9001cabc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001cbf8:	d01d      	beq.n	9001cc36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001cbfa:	1e6b      	subs	r3, r5, #1
9001cbfc:	9823      	ldr	r0, [sp, #140]	; 0x8c
9001cbfe:	fb00 4003 	mla	r0, r0, r3, r4
9001cc02:	1400      	asrs	r0, r0, #16
9001cc04:	f53f af74 	bmi.w	9001caf0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001cc08:	3901      	subs	r1, #1
9001cc0a:	4288      	cmp	r0, r1
9001cc0c:	f6bf af70 	bge.w	9001caf0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001cc10:	9924      	ldr	r1, [sp, #144]	; 0x90
9001cc12:	fb01 6303 	mla	r3, r1, r3, r6
9001cc16:	141b      	asrs	r3, r3, #16
9001cc18:	f53f af6a 	bmi.w	9001caf0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001cc1c:	3a01      	subs	r2, #1
9001cc1e:	4293      	cmp	r3, r2
9001cc20:	f6bf af66 	bge.w	9001caf0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001cc24:	46a9      	mov	r9, r5
9001cc26:	46ba      	mov	sl, r7
9001cc28:	f1b9 0f00 	cmp.w	r9, #0
9001cc2c:	dc5b      	bgt.n	9001cce6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9001cc2e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9001cc32:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9001cc36:	9b07      	ldr	r3, [sp, #28]
9001cc38:	2b00      	cmp	r3, #0
9001cc3a:	f340 80b9 	ble.w	9001cdb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
9001cc3e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001cc42:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001cc44:	ee3a aa2b 	vadd.f32	s20, s20, s23
9001cc48:	ee79 9a8b 	vadd.f32	s19, s19, s22
9001cc4c:	eef0 6a48 	vmov.f32	s13, s16
9001cc50:	eec7 7a0a 	vdiv.f32	s15, s14, s20
9001cc54:	ee39 9a2a 	vadd.f32	s18, s18, s21
9001cc58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001cc5c:	ee16 4a90 	vmov	r4, s13
9001cc60:	eef0 6a68 	vmov.f32	s13, s17
9001cc64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001cc68:	ee16 6a90 	vmov	r6, s13
9001cc6c:	ee29 7aa7 	vmul.f32	s14, s19, s15
9001cc70:	ee69 7a27 	vmul.f32	s15, s18, s15
9001cc74:	ee37 8a48 	vsub.f32	s16, s14, s16
9001cc78:	ee77 8ae8 	vsub.f32	s17, s15, s17
9001cc7c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
9001cc80:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
9001cc84:	ee18 2a10 	vmov	r2, s16
9001cc88:	eeb0 8a47 	vmov.f32	s16, s14
9001cc8c:	fb92 f3f3 	sdiv	r3, r2, r3
9001cc90:	ee18 2a90 	vmov	r2, s17
9001cc94:	9323      	str	r3, [sp, #140]	; 0x8c
9001cc96:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001cc98:	eef0 8a67 	vmov.f32	s17, s15
9001cc9c:	fb92 f3f3 	sdiv	r3, r2, r3
9001cca0:	9324      	str	r3, [sp, #144]	; 0x90
9001cca2:	9b07      	ldr	r3, [sp, #28]
9001cca4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001cca6:	3b01      	subs	r3, #1
9001cca8:	9307      	str	r3, [sp, #28]
9001ccaa:	bf08      	it	eq
9001ccac:	4615      	moveq	r5, r2
9001ccae:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001ccb0:	bf18      	it	ne
9001ccb2:	461d      	movne	r5, r3
9001ccb4:	e6f3      	b.n	9001ca9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
9001ccb6:	f111 0b01 	adds.w	fp, r1, #1
9001ccba:	d48d      	bmi.n	9001cbd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001ccbc:	45de      	cmp	lr, fp
9001ccbe:	db8b      	blt.n	9001cbd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001ccc0:	f110 0b01 	adds.w	fp, r0, #1
9001ccc4:	d488      	bmi.n	9001cbd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001ccc6:	455b      	cmp	r3, fp
9001ccc8:	db86      	blt.n	9001cbd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001ccca:	b21b      	sxth	r3, r3
9001cccc:	e9cd 1001 	strd	r1, r0, [sp, #4]
9001ccd0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
9001ccd4:	9300      	str	r3, [sp, #0]
9001ccd6:	4642      	mov	r2, r8
9001ccd8:	fa0f f38e 	sxth.w	r3, lr
9001ccdc:	4649      	mov	r1, r9
9001ccde:	980d      	ldr	r0, [sp, #52]	; 0x34
9001cce0:	f7ff fe2a 	bl	9001c938 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9001cce4:	e778      	b.n	9001cbd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001cce6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001cce8:	1420      	asrs	r0, r4, #16
9001ccea:	1431      	asrs	r1, r6, #16
9001ccec:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9001ccf0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001ccf4:	f3c4 3203 	ubfx	r2, r4, #12, #4
9001ccf8:	fb03 0101 	mla	r1, r3, r1, r0
9001ccfc:	eb08 0041 	add.w	r0, r8, r1, lsl #1
9001cd00:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
9001cd04:	8841      	ldrh	r1, [r0, #2]
9001cd06:	f1be 0f00 	cmp.w	lr, #0
9001cd0a:	d00b      	beq.n	9001cd24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
9001cd0c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
9001cd10:	3b01      	subs	r3, #1
9001cd12:	005b      	lsls	r3, r3, #1
9001cd14:	3302      	adds	r3, #2
9001cd16:	eb00 0b03 	add.w	fp, r0, r3
9001cd1a:	5ac3      	ldrh	r3, [r0, r3]
9001cd1c:	930a      	str	r3, [sp, #40]	; 0x28
9001cd1e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001cd22:	930b      	str	r3, [sp, #44]	; 0x2c
9001cd24:	ea4f 400c 	mov.w	r0, ip, lsl #16
9001cd28:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001cd2c:	fb12 f30e 	smulbb	r3, r2, lr
9001cd30:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001cd34:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001cd38:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001cd3c:	10db      	asrs	r3, r3, #3
9001cd3e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001cd42:	ea40 000c 	orr.w	r0, r0, ip
9001cd46:	f1ce 0c10 	rsb	ip, lr, #16
9001cd4a:	ea4b 0101 	orr.w	r1, fp, r1
9001cd4e:	f109 39ff 	add.w	r9, r9, #4294967295
9001cd52:	ebac 0c02 	sub.w	ip, ip, r2
9001cd56:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9001cd5a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9001cd5e:	4351      	muls	r1, r2
9001cd60:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001cd62:	fb0c 1c00 	mla	ip, ip, r0, r1
9001cd66:	990a      	ldr	r1, [sp, #40]	; 0x28
9001cd68:	ea4f 4b02 	mov.w	fp, r2, lsl #16
9001cd6c:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
9001cd70:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001cd72:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001cd76:	0412      	lsls	r2, r2, #16
9001cd78:	ea4b 0000 	orr.w	r0, fp, r0
9001cd7c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
9001cd80:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001cd84:	fb03 c000 	mla	r0, r3, r0, ip
9001cd88:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9001cd8c:	ea42 0b0b 	orr.w	fp, r2, fp
9001cd90:	fb03 000b 	mla	r0, r3, fp, r0
9001cd94:	0d43      	lsrs	r3, r0, #21
9001cd96:	0940      	lsrs	r0, r0, #5
9001cd98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001cd9c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001cda0:	4318      	orrs	r0, r3
9001cda2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
9001cda4:	441c      	add	r4, r3
9001cda6:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001cda8:	f82a 0b02 	strh.w	r0, [sl], #2
9001cdac:	441e      	add	r6, r3
9001cdae:	e73b      	b.n	9001cc28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
9001cdb0:	b00f      	add	sp, #60	; 0x3c
9001cdb2:	ecbd 8b08 	vpop	{d8-d11}
9001cdb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001cdbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
9001cdbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cdc0:	880e      	ldrh	r6, [r1, #0]
9001cdc2:	b085      	sub	sp, #20
9001cdc4:	4690      	mov	r8, r2
9001cdc6:	ea4f 2c26 	mov.w	ip, r6, asr #8
9001cdca:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
9001cdce:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
9001cdd2:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
9001cdd6:	ea4f 0ce6 	mov.w	ip, r6, asr #3
9001cdda:	00f6      	lsls	r6, r6, #3
9001cddc:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
9001cde0:	9200      	str	r2, [sp, #0]
9001cde2:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
9001cde6:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
9001cdea:	9201      	str	r2, [sp, #4]
9001cdec:	b2f2      	uxtb	r2, r6
9001cdee:	2c00      	cmp	r4, #0
9001cdf0:	fb04 5603 	mla	r6, r4, r3, r5
9001cdf4:	9202      	str	r2, [sp, #8]
9001cdf6:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
9001cdfa:	db36      	blt.n	9001ce6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
9001cdfc:	45a6      	cmp	lr, r4
9001cdfe:	dd34      	ble.n	9001ce6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
9001ce00:	2d00      	cmp	r5, #0
9001ce02:	db30      	blt.n	9001ce66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
9001ce04:	42ab      	cmp	r3, r5
9001ce06:	dd2e      	ble.n	9001ce66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
9001ce08:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
9001ce0c:	1c6e      	adds	r6, r5, #1
9001ce0e:	d42f      	bmi.n	9001ce70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
9001ce10:	42b3      	cmp	r3, r6
9001ce12:	dd2d      	ble.n	9001ce70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
9001ce14:	b370      	cbz	r0, 9001ce74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
9001ce16:	f8dc 6004 	ldr.w	r6, [ip, #4]
9001ce1a:	3401      	adds	r4, #1
9001ce1c:	d42e      	bmi.n	9001ce7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
9001ce1e:	45a6      	cmp	lr, r4
9001ce20:	dd2c      	ble.n	9001ce7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
9001ce22:	b377      	cbz	r7, 9001ce82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
9001ce24:	2d00      	cmp	r5, #0
9001ce26:	db27      	blt.n	9001ce78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
9001ce28:	42ab      	cmp	r3, r5
9001ce2a:	dd25      	ble.n	9001ce78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
9001ce2c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
9001ce30:	3501      	adds	r5, #1
9001ce32:	d429      	bmi.n	9001ce88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
9001ce34:	42ab      	cmp	r3, r5
9001ce36:	dd27      	ble.n	9001ce88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
9001ce38:	b340      	cbz	r0, 9001ce8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
9001ce3a:	3301      	adds	r3, #1
9001ce3c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
9001ce40:	280f      	cmp	r0, #15
9001ce42:	ea4f 6b12 	mov.w	fp, r2, lsr #24
9001ce46:	ea4f 6a16 	mov.w	sl, r6, lsr #24
9001ce4a:	ea4f 6914 	mov.w	r9, r4, lsr #24
9001ce4e:	ea4f 6813 	mov.w	r8, r3, lsr #24
9001ce52:	d801      	bhi.n	9001ce58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
9001ce54:	2f0f      	cmp	r7, #15
9001ce56:	d91b      	bls.n	9001ce90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
9001ce58:	4b85      	ldr	r3, [pc, #532]	; (9001d070 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
9001ce5a:	f240 210d 	movw	r1, #525	; 0x20d
9001ce5e:	4a85      	ldr	r2, [pc, #532]	; (9001d074 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
9001ce60:	4885      	ldr	r0, [pc, #532]	; (9001d078 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
9001ce62:	f002 fa1f 	bl	9001f2a4 <__assert_func>
9001ce66:	2200      	movs	r2, #0
9001ce68:	e7d0      	b.n	9001ce0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
9001ce6a:	2600      	movs	r6, #0
9001ce6c:	4632      	mov	r2, r6
9001ce6e:	e7d4      	b.n	9001ce1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
9001ce70:	2600      	movs	r6, #0
9001ce72:	e7d2      	b.n	9001ce1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
9001ce74:	4606      	mov	r6, r0
9001ce76:	e7d0      	b.n	9001ce1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
9001ce78:	2400      	movs	r4, #0
9001ce7a:	e7d9      	b.n	9001ce30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
9001ce7c:	2300      	movs	r3, #0
9001ce7e:	461c      	mov	r4, r3
9001ce80:	e7de      	b.n	9001ce40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
9001ce82:	463b      	mov	r3, r7
9001ce84:	463c      	mov	r4, r7
9001ce86:	e7db      	b.n	9001ce40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
9001ce88:	2300      	movs	r3, #0
9001ce8a:	e7d9      	b.n	9001ce40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
9001ce8c:	4603      	mov	r3, r0
9001ce8e:	e7d7      	b.n	9001ce40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
9001ce90:	b280      	uxth	r0, r0
9001ce92:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001ce96:	b2bf      	uxth	r7, r7
9001ce98:	fb00 fe07 	mul.w	lr, r0, r7
9001ce9c:	ea4f 1000 	mov.w	r0, r0, lsl #4
9001cea0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
9001cea4:	eba0 0c0e 	sub.w	ip, r0, lr
9001cea8:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
9001ceac:	b2bf      	uxth	r7, r7
9001ceae:	fa1f fc8c 	uxth.w	ip, ip
9001ceb2:	eba5 0507 	sub.w	r5, r5, r7
9001ceb6:	fb0c f00a 	mul.w	r0, ip, sl
9001ceba:	b2ad      	uxth	r5, r5
9001cebc:	fb05 000b 	mla	r0, r5, fp, r0
9001cec0:	fb07 0009 	mla	r0, r7, r9, r0
9001cec4:	fb0e 0008 	mla	r0, lr, r8, r0
9001cec8:	f3c0 2007 	ubfx	r0, r0, #8, #8
9001cecc:	9003      	str	r0, [sp, #12]
9001cece:	d018      	beq.n	9001cf02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x146>
9001ced0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
9001ced4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001ced8:	fb0b f000 	mul.w	r0, fp, r0
9001cedc:	fb0b fb02 	mul.w	fp, fp, r2
9001cee0:	0a02      	lsrs	r2, r0, #8
9001cee2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
9001cee6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001ceea:	4402      	add	r2, r0
9001ceec:	f50b 7080 	add.w	r0, fp, #256	; 0x100
9001cef0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
9001cef4:	0a12      	lsrs	r2, r2, #8
9001cef6:	0a00      	lsrs	r0, r0, #8
9001cef8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001cefc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001cf00:	4302      	orrs	r2, r0
9001cf02:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001cf06:	d019      	beq.n	9001cf3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x180>
9001cf08:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
9001cf0c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9001cf10:	fb0a fb0b 	mul.w	fp, sl, fp
9001cf14:	fb0a fa06 	mul.w	sl, sl, r6
9001cf18:	ea4f 261b 	mov.w	r6, fp, lsr #8
9001cf1c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001cf20:	f50a 7080 	add.w	r0, sl, #256	; 0x100
9001cf24:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
9001cf28:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9001cf2c:	445e      	add	r6, fp
9001cf2e:	0a00      	lsrs	r0, r0, #8
9001cf30:	0a36      	lsrs	r6, r6, #8
9001cf32:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001cf36:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
9001cf3a:	4306      	orrs	r6, r0
9001cf3c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001cf40:	d019      	beq.n	9001cf76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1ba>
9001cf42:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
9001cf46:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9001cf4a:	fb09 fa0a 	mul.w	sl, r9, sl
9001cf4e:	fb09 f904 	mul.w	r9, r9, r4
9001cf52:	ea4f 241a 	mov.w	r4, sl, lsr #8
9001cf56:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001cf5a:	f509 7080 	add.w	r0, r9, #256	; 0x100
9001cf5e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9001cf62:	eb00 2019 	add.w	r0, r0, r9, lsr #8
9001cf66:	4454      	add	r4, sl
9001cf68:	0a00      	lsrs	r0, r0, #8
9001cf6a:	0a24      	lsrs	r4, r4, #8
9001cf6c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001cf70:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9001cf74:	4304      	orrs	r4, r0
9001cf76:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9001cf7a:	d019      	beq.n	9001cfb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f4>
9001cf7c:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
9001cf80:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001cf84:	fb08 f909 	mul.w	r9, r8, r9
9001cf88:	fb08 f803 	mul.w	r8, r8, r3
9001cf8c:	ea4f 2319 	mov.w	r3, r9, lsr #8
9001cf90:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
9001cf94:	f508 7080 	add.w	r0, r8, #256	; 0x100
9001cf98:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001cf9c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9001cfa0:	444b      	add	r3, r9
9001cfa2:	0a00      	lsrs	r0, r0, #8
9001cfa4:	0a1b      	lsrs	r3, r3, #8
9001cfa6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001cfaa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001cfae:	4303      	orrs	r3, r0
9001cfb0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
9001cfb4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
9001cfb8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9001cfbc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001cfc0:	fb0c f808 	mul.w	r8, ip, r8
9001cfc4:	fb0c f606 	mul.w	r6, ip, r6
9001cfc8:	fb05 8800 	mla	r8, r5, r0, r8
9001cfcc:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
9001cfd0:	fb05 6202 	mla	r2, r5, r2, r6
9001cfd4:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
9001cfd8:	fb07 8800 	mla	r8, r7, r0, r8
9001cfdc:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
9001cfe0:	b2ad      	uxth	r5, r5
9001cfe2:	fb0e 8000 	mla	r0, lr, r0, r8
9001cfe6:	0a00      	lsrs	r0, r0, #8
9001cfe8:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
9001cfec:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
9001cff0:	9c00      	ldr	r4, [sp, #0]
9001cff2:	fb07 2700 	mla	r7, r7, r0, r2
9001cff6:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
9001cffa:	9b03      	ldr	r3, [sp, #12]
9001cffc:	fb0e 7000 	mla	r0, lr, r0, r7
9001d000:	436b      	muls	r3, r5
9001d002:	0a00      	lsrs	r0, r0, #8
9001d004:	1c5a      	adds	r2, r3, #1
9001d006:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001d00a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9001d00e:	ea48 0000 	orr.w	r0, r8, r0
9001d012:	ea6f 2212 	mvn.w	r2, r2, lsr #8
9001d016:	0c03      	lsrs	r3, r0, #16
9001d018:	b2d2      	uxtb	r2, r2
9001d01a:	fb14 f602 	smulbb	r6, r4, r2
9001d01e:	f3c0 2407 	ubfx	r4, r0, #8, #8
9001d022:	b2c0      	uxtb	r0, r0
9001d024:	fb03 6305 	mla	r3, r3, r5, r6
9001d028:	b29e      	uxth	r6, r3
9001d02a:	9b01      	ldr	r3, [sp, #4]
9001d02c:	fb13 f302 	smulbb	r3, r3, r2
9001d030:	fb04 3405 	mla	r4, r4, r5, r3
9001d034:	9b02      	ldr	r3, [sp, #8]
9001d036:	fb13 f202 	smulbb	r2, r3, r2
9001d03a:	b2a4      	uxth	r4, r4
9001d03c:	1c73      	adds	r3, r6, #1
9001d03e:	fb00 2005 	mla	r0, r0, r5, r2
9001d042:	eb03 2316 	add.w	r3, r3, r6, lsr #8
9001d046:	b280      	uxth	r0, r0
9001d048:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
9001d04c:	1c42      	adds	r2, r0, #1
9001d04e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001d052:	1c62      	adds	r2, r4, #1
9001d054:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9001d058:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001d05c:	0952      	lsrs	r2, r2, #5
9001d05e:	4303      	orrs	r3, r0
9001d060:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d064:	4313      	orrs	r3, r2
9001d066:	800b      	strh	r3, [r1, #0]
9001d068:	b005      	add	sp, #20
9001d06a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d06e:	bf00      	nop
9001d070:	900236e6 	.word	0x900236e6
9001d074:	90023ca9 	.word	0x90023ca9
9001d078:	900237cf 	.word	0x900237cf

9001d07c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d07c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d080:	ed2d 8b08 	vpush	{d8-d11}
9001d084:	b09d      	sub	sp, #116	; 0x74
9001d086:	eeb0 aa40 	vmov.f32	s20, s0
9001d08a:	eef0 9a60 	vmov.f32	s19, s1
9001d08e:	9219      	str	r2, [sp, #100]	; 0x64
9001d090:	eeb0 9a41 	vmov.f32	s18, s2
9001d094:	9a33      	ldr	r2, [sp, #204]	; 0xcc
9001d096:	eeb0 8a62 	vmov.f32	s16, s5
9001d09a:	9307      	str	r3, [sp, #28]
9001d09c:	eef0 8a43 	vmov.f32	s17, s6
9001d0a0:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
9001d0a4:	eef0 ba44 	vmov.f32	s23, s8
9001d0a8:	901b      	str	r0, [sp, #108]	; 0x6c
9001d0aa:	eeb0 ba64 	vmov.f32	s22, s9
9001d0ae:	931a      	str	r3, [sp, #104]	; 0x68
9001d0b0:	eef0 aa45 	vmov.f32	s21, s10
9001d0b4:	6850      	ldr	r0, [r2, #4]
9001d0b6:	9117      	str	r1, [sp, #92]	; 0x5c
9001d0b8:	6812      	ldr	r2, [r2, #0]
9001d0ba:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
9001d0be:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
9001d0c2:	fb00 1303 	mla	r3, r0, r3, r1
9001d0c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001d0ca:	930a      	str	r3, [sp, #40]	; 0x28
9001d0cc:	9b36      	ldr	r3, [sp, #216]	; 0xd8
9001d0ce:	681b      	ldr	r3, [r3, #0]
9001d0d0:	9310      	str	r3, [sp, #64]	; 0x40
9001d0d2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001d0d6:	930b      	str	r3, [sp, #44]	; 0x2c
9001d0d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001d0da:	2b00      	cmp	r3, #0
9001d0dc:	dc03      	bgt.n	9001d0e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001d0de:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001d0e0:	2b00      	cmp	r3, #0
9001d0e2:	f340 837b 	ble.w	9001d7dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
9001d0e6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
9001d0e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001d0ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001d0f0:	1e48      	subs	r0, r1, #1
9001d0f2:	1e57      	subs	r7, r2, #1
9001d0f4:	9b07      	ldr	r3, [sp, #28]
9001d0f6:	2b00      	cmp	r3, #0
9001d0f8:	f340 8194 	ble.w	9001d424 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
9001d0fc:	ea5f 4c24 	movs.w	ip, r4, asr #16
9001d100:	ea4f 4326 	mov.w	r3, r6, asr #16
9001d104:	d406      	bmi.n	9001d114 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d106:	4584      	cmp	ip, r0
9001d108:	da04      	bge.n	9001d114 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d10a:	2b00      	cmp	r3, #0
9001d10c:	db02      	blt.n	9001d114 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d10e:	42bb      	cmp	r3, r7
9001d110:	f2c0 8189 	blt.w	9001d426 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
9001d114:	f11c 0c01 	adds.w	ip, ip, #1
9001d118:	f100 8179 	bmi.w	9001d40e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
9001d11c:	4561      	cmp	r1, ip
9001d11e:	f2c0 8176 	blt.w	9001d40e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
9001d122:	3301      	adds	r3, #1
9001d124:	f100 8173 	bmi.w	9001d40e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
9001d128:	429a      	cmp	r2, r3
9001d12a:	f2c0 8170 	blt.w	9001d40e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
9001d12e:	9b07      	ldr	r3, [sp, #28]
9001d130:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001d132:	9318      	str	r3, [sp, #96]	; 0x60
9001d134:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001d136:	2b00      	cmp	r3, #0
9001d138:	f340 8192 	ble.w	9001d460 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
9001d13c:	9a36      	ldr	r2, [sp, #216]	; 0xd8
9001d13e:	ea4f 4c26 	mov.w	ip, r6, asr #16
9001d142:	9b36      	ldr	r3, [sp, #216]	; 0xd8
9001d144:	f3c4 3003 	ubfx	r0, r4, #12, #4
9001d148:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001d14c:	1422      	asrs	r2, r4, #16
9001d14e:	f3c6 3103 	ubfx	r1, r6, #12, #4
9001d152:	689b      	ldr	r3, [r3, #8]
9001d154:	f100 81d3 	bmi.w	9001d4fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
9001d158:	f103 38ff 	add.w	r8, r3, #4294967295
9001d15c:	4542      	cmp	r2, r8
9001d15e:	f280 81ce 	bge.w	9001d4fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
9001d162:	f1bc 0f00 	cmp.w	ip, #0
9001d166:	f2c0 81ca 	blt.w	9001d4fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
9001d16a:	f10e 38ff 	add.w	r8, lr, #4294967295
9001d16e:	45c4      	cmp	ip, r8
9001d170:	f280 81c5 	bge.w	9001d4fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
9001d174:	b21b      	sxth	r3, r3
9001d176:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001d178:	fb0c 2203 	mla	r2, ip, r3, r2
9001d17c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
9001d180:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
9001d184:	ea4f 6e12 	mov.w	lr, r2, lsr #24
9001d188:	2800      	cmp	r0, #0
9001d18a:	f000 81af 	beq.w	9001d4ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
9001d18e:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001d192:	950c      	str	r5, [sp, #48]	; 0x30
9001d194:	0e2d      	lsrs	r5, r5, #24
9001d196:	9513      	str	r5, [sp, #76]	; 0x4c
9001d198:	b181      	cbz	r1, 9001d1bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
9001d19a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
9001d19e:	3b01      	subs	r3, #1
9001d1a0:	009b      	lsls	r3, r3, #2
9001d1a2:	3304      	adds	r3, #4
9001d1a4:	eb08 0c03 	add.w	ip, r8, r3
9001d1a8:	f858 3003 	ldr.w	r3, [r8, r3]
9001d1ac:	9308      	str	r3, [sp, #32]
9001d1ae:	0e1b      	lsrs	r3, r3, #24
9001d1b0:	9311      	str	r3, [sp, #68]	; 0x44
9001d1b2:	f8dc 3004 	ldr.w	r3, [ip, #4]
9001d1b6:	930d      	str	r3, [sp, #52]	; 0x34
9001d1b8:	0e1b      	lsrs	r3, r3, #24
9001d1ba:	9314      	str	r3, [sp, #80]	; 0x50
9001d1bc:	b280      	uxth	r0, r0
9001d1be:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001d1c0:	b289      	uxth	r1, r1
9001d1c2:	fb00 f901 	mul.w	r9, r0, r1
9001d1c6:	0100      	lsls	r0, r0, #4
9001d1c8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001d1cc:	eba0 0809 	sub.w	r8, r0, r9
9001d1d0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
9001d1d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001d1d6:	b289      	uxth	r1, r1
9001d1d8:	fa1f f888 	uxth.w	r8, r8
9001d1dc:	1a5b      	subs	r3, r3, r1
9001d1de:	fb08 f000 	mul.w	r0, r8, r0
9001d1e2:	b29b      	uxth	r3, r3
9001d1e4:	fb03 000e 	mla	r0, r3, lr, r0
9001d1e8:	fb01 0005 	mla	r0, r1, r5, r0
9001d1ec:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001d1ee:	fb09 0005 	mla	r0, r9, r5, r0
9001d1f2:	f3c0 2007 	ubfx	r0, r0, #8, #8
9001d1f6:	2800      	cmp	r0, #0
9001d1f8:	f000 8100 	beq.w	9001d3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
9001d1fc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
9001d200:	d01b      	beq.n	9001d23a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
9001d202:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
9001d206:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001d20a:	fb0e fa0a 	mul.w	sl, lr, sl
9001d20e:	fb0e fe02 	mul.w	lr, lr, r2
9001d212:	ea4f 221a 	mov.w	r2, sl, lsr #8
9001d216:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001d21a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
9001d21e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001d222:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9001d226:	4452      	add	r2, sl
9001d228:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001d22c:	0a12      	lsrs	r2, r2, #8
9001d22e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9001d232:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001d236:	ea42 020c 	orr.w	r2, r2, ip
9001d23a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001d23c:	2dff      	cmp	r5, #255	; 0xff
9001d23e:	d021      	beq.n	9001d284 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001d240:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9001d242:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9001d246:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001d248:	fb05 fb0b 	mul.w	fp, r5, fp
9001d24c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9001d24e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9001d252:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001d254:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001d258:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001d25c:	fb05 fa0a 	mul.w	sl, r5, sl
9001d260:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001d264:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001d268:	44de      	add	lr, fp
9001d26a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001d26e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001d272:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001d276:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001d27a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001d27e:	ea4e 050a 	orr.w	r5, lr, sl
9001d282:	950c      	str	r5, [sp, #48]	; 0x30
9001d284:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001d286:	2dff      	cmp	r5, #255	; 0xff
9001d288:	d021      	beq.n	9001d2ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001d28a:	9d08      	ldr	r5, [sp, #32]
9001d28c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9001d290:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001d292:	fb05 fb0b 	mul.w	fp, r5, fp
9001d296:	9d08      	ldr	r5, [sp, #32]
9001d298:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9001d29c:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001d29e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001d2a2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001d2a6:	fb05 fa0a 	mul.w	sl, r5, sl
9001d2aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001d2ae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001d2b2:	44de      	add	lr, fp
9001d2b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001d2b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001d2bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001d2c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001d2c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001d2c8:	ea4e 050a 	orr.w	r5, lr, sl
9001d2cc:	9508      	str	r5, [sp, #32]
9001d2ce:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001d2d0:	2dff      	cmp	r5, #255	; 0xff
9001d2d2:	d021      	beq.n	9001d318 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
9001d2d4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001d2d6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9001d2da:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001d2dc:	fb05 fb0b 	mul.w	fp, r5, fp
9001d2e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001d2e2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9001d2e6:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001d2e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001d2ec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001d2f0:	fb05 fa0a 	mul.w	sl, r5, sl
9001d2f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001d2f8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001d2fc:	44de      	add	lr, fp
9001d2fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001d302:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001d306:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001d30a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001d30e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001d312:	ea4e 050a 	orr.w	r5, lr, sl
9001d316:	950d      	str	r5, [sp, #52]	; 0x34
9001d318:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9001d31a:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
9001d31e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001d322:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9001d326:	9d08      	ldr	r5, [sp, #32]
9001d328:	fb08 fc0c 	mul.w	ip, r8, ip
9001d32c:	fb03 cc0e 	mla	ip, r3, lr, ip
9001d330:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
9001d334:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001d336:	fb01 cc0e 	mla	ip, r1, lr, ip
9001d33a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
9001d33e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9001d340:	fb09 cc0e 	mla	ip, r9, lr, ip
9001d344:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9001d348:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9001d34a:	fb08 f80e 	mul.w	r8, r8, lr
9001d34e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001d352:	f8b7 e000 	ldrh.w	lr, [r7]
9001d356:	fb03 8202 	mla	r2, r3, r2, r8
9001d35a:	9b08      	ldr	r3, [sp, #32]
9001d35c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001d360:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
9001d364:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d366:	fb01 220a 	mla	r2, r1, sl, r2
9001d36a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
9001d36e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001d370:	fb09 2901 	mla	r9, r9, r1, r2
9001d374:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001d376:	4343      	muls	r3, r0
9001d378:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001d37c:	1c58      	adds	r0, r3, #1
9001d37e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9001d382:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9001d386:	ea4c 0c09 	orr.w	ip, ip, r9
9001d38a:	ea4f 232e 	mov.w	r3, lr, asr #8
9001d38e:	ea6f 2010 	mvn.w	r0, r0, lsr #8
9001d392:	ea4f 411c 	mov.w	r1, ip, lsr #16
9001d396:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
9001d39a:	b2c0      	uxtb	r0, r0
9001d39c:	fb11 f102 	smulbb	r1, r1, r2
9001d3a0:	ea4f 02ee 	mov.w	r2, lr, asr #3
9001d3a4:	fb03 1300 	mla	r3, r3, r0, r1
9001d3a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001d3ac:	b299      	uxth	r1, r3
9001d3ae:	f3cc 2307 	ubfx	r3, ip, #8, #8
9001d3b2:	fa5f fc8c 	uxtb.w	ip, ip
9001d3b6:	fb13 f305 	smulbb	r3, r3, r5
9001d3ba:	fb1c fc05 	smulbb	ip, ip, r5
9001d3be:	fb02 3200 	mla	r2, r2, r0, r3
9001d3c2:	ea4f 03ce 	mov.w	r3, lr, lsl #3
9001d3c6:	b2db      	uxtb	r3, r3
9001d3c8:	b292      	uxth	r2, r2
9001d3ca:	fb03 cc00 	mla	ip, r3, r0, ip
9001d3ce:	1c4b      	adds	r3, r1, #1
9001d3d0:	fa1f fc8c 	uxth.w	ip, ip
9001d3d4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9001d3d8:	1c51      	adds	r1, r2, #1
9001d3da:	f10c 0001 	add.w	r0, ip, #1
9001d3de:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001d3e2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
9001d3e6:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
9001d3ea:	0952      	lsrs	r2, r2, #5
9001d3ec:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d3f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d3f4:	ea43 030c 	orr.w	r3, r3, ip
9001d3f8:	4313      	orrs	r3, r2
9001d3fa:	803b      	strh	r3, [r7, #0]
9001d3fc:	9b31      	ldr	r3, [sp, #196]	; 0xc4
9001d3fe:	3702      	adds	r7, #2
9001d400:	441c      	add	r4, r3
9001d402:	9b32      	ldr	r3, [sp, #200]	; 0xc8
9001d404:	441e      	add	r6, r3
9001d406:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001d408:	3b01      	subs	r3, #1
9001d40a:	9318      	str	r3, [sp, #96]	; 0x60
9001d40c:	e692      	b.n	9001d134 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
9001d40e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
9001d410:	441c      	add	r4, r3
9001d412:	9b32      	ldr	r3, [sp, #200]	; 0xc8
9001d414:	441e      	add	r6, r3
9001d416:	9b07      	ldr	r3, [sp, #28]
9001d418:	3b01      	subs	r3, #1
9001d41a:	9307      	str	r3, [sp, #28]
9001d41c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d41e:	3302      	adds	r3, #2
9001d420:	930a      	str	r3, [sp, #40]	; 0x28
9001d422:	e667      	b.n	9001d0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001d424:	d023      	beq.n	9001d46e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
9001d426:	9b07      	ldr	r3, [sp, #28]
9001d428:	9831      	ldr	r0, [sp, #196]	; 0xc4
9001d42a:	3b01      	subs	r3, #1
9001d42c:	fb00 4003 	mla	r0, r0, r3, r4
9001d430:	1400      	asrs	r0, r0, #16
9001d432:	f53f ae7c 	bmi.w	9001d12e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001d436:	3901      	subs	r1, #1
9001d438:	4288      	cmp	r0, r1
9001d43a:	f6bf ae78 	bge.w	9001d12e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001d43e:	9932      	ldr	r1, [sp, #200]	; 0xc8
9001d440:	fb01 6303 	mla	r3, r1, r3, r6
9001d444:	141b      	asrs	r3, r3, #16
9001d446:	f53f ae72 	bmi.w	9001d12e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001d44a:	3a01      	subs	r2, #1
9001d44c:	4293      	cmp	r3, r2
9001d44e:	f6bf ae6e 	bge.w	9001d12e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001d452:	f8dd b01c 	ldr.w	fp, [sp, #28]
9001d456:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
9001d45a:	f1bb 0f00 	cmp.w	fp, #0
9001d45e:	dc6c      	bgt.n	9001d53a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
9001d460:	9b07      	ldr	r3, [sp, #28]
9001d462:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9001d466:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d468:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9001d46c:	930a      	str	r3, [sp, #40]	; 0x28
9001d46e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001d470:	2b00      	cmp	r3, #0
9001d472:	f340 81b3 	ble.w	9001d7dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
9001d476:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001d47a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9001d47c:	ee3a aa2b 	vadd.f32	s20, s20, s23
9001d480:	ee79 9a8b 	vadd.f32	s19, s19, s22
9001d484:	eef0 6a48 	vmov.f32	s13, s16
9001d488:	eec7 7a0a 	vdiv.f32	s15, s14, s20
9001d48c:	ee39 9a2a 	vadd.f32	s18, s18, s21
9001d490:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d494:	ee16 4a90 	vmov	r4, s13
9001d498:	eef0 6a68 	vmov.f32	s13, s17
9001d49c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d4a0:	ee16 6a90 	vmov	r6, s13
9001d4a4:	ee29 7aa7 	vmul.f32	s14, s19, s15
9001d4a8:	ee69 7a27 	vmul.f32	s15, s18, s15
9001d4ac:	ee37 8a48 	vsub.f32	s16, s14, s16
9001d4b0:	ee77 8ae8 	vsub.f32	s17, s15, s17
9001d4b4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
9001d4b8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
9001d4bc:	ee18 2a10 	vmov	r2, s16
9001d4c0:	eeb0 8a47 	vmov.f32	s16, s14
9001d4c4:	fb92 f3f3 	sdiv	r3, r2, r3
9001d4c8:	ee18 2a90 	vmov	r2, s17
9001d4cc:	9331      	str	r3, [sp, #196]	; 0xc4
9001d4ce:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9001d4d0:	eef0 8a67 	vmov.f32	s17, s15
9001d4d4:	fb92 f3f3 	sdiv	r3, r2, r3
9001d4d8:	9332      	str	r3, [sp, #200]	; 0xc8
9001d4da:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001d4dc:	9a19      	ldr	r2, [sp, #100]	; 0x64
9001d4de:	3b01      	subs	r3, #1
9001d4e0:	9317      	str	r3, [sp, #92]	; 0x5c
9001d4e2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9001d4e4:	bf08      	it	eq
9001d4e6:	4613      	moveq	r3, r2
9001d4e8:	9307      	str	r3, [sp, #28]
9001d4ea:	e5f5      	b.n	9001d0d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001d4ec:	2900      	cmp	r1, #0
9001d4ee:	f43f ae65 	beq.w	9001d1bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
9001d4f2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
9001d4f6:	9308      	str	r3, [sp, #32]
9001d4f8:	0e1b      	lsrs	r3, r3, #24
9001d4fa:	9311      	str	r3, [sp, #68]	; 0x44
9001d4fc:	e65e      	b.n	9001d1bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
9001d4fe:	f112 0801 	adds.w	r8, r2, #1
9001d502:	f53f af7b 	bmi.w	9001d3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
9001d506:	4543      	cmp	r3, r8
9001d508:	f6ff af78 	blt.w	9001d3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
9001d50c:	f11c 0801 	adds.w	r8, ip, #1
9001d510:	f53f af74 	bmi.w	9001d3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
9001d514:	45c6      	cmp	lr, r8
9001d516:	f6ff af71 	blt.w	9001d3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
9001d51a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001d51c:	b21b      	sxth	r3, r3
9001d51e:	9201      	str	r2, [sp, #4]
9001d520:	fa0f f28e 	sxth.w	r2, lr
9001d524:	e9cd 1504 	strd	r1, r5, [sp, #16]
9001d528:	e9cd c002 	strd	ip, r0, [sp, #8]
9001d52c:	9200      	str	r2, [sp, #0]
9001d52e:	4639      	mov	r1, r7
9001d530:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001d532:	981b      	ldr	r0, [sp, #108]	; 0x6c
9001d534:	f7ff fc42 	bl	9001cdbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
9001d538:	e760      	b.n	9001d3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
9001d53a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
9001d53c:	1427      	asrs	r7, r4, #16
9001d53e:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001d540:	f3c4 3203 	ubfx	r2, r4, #12, #4
9001d544:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001d548:	1433      	asrs	r3, r6, #16
9001d54a:	f3c6 3003 	ubfx	r0, r6, #12, #4
9001d54e:	fb01 7303 	mla	r3, r1, r3, r7
9001d552:	eb05 0783 	add.w	r7, r5, r3, lsl #2
9001d556:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
9001d55a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
9001d55e:	2a00      	cmp	r2, #0
9001d560:	f000 8133 	beq.w	9001d7ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74e>
9001d564:	687d      	ldr	r5, [r7, #4]
9001d566:	950e      	str	r5, [sp, #56]	; 0x38
9001d568:	0e2d      	lsrs	r5, r5, #24
9001d56a:	9515      	str	r5, [sp, #84]	; 0x54
9001d56c:	b178      	cbz	r0, 9001d58e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
9001d56e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
9001d572:	3901      	subs	r1, #1
9001d574:	0089      	lsls	r1, r1, #2
9001d576:	3104      	adds	r1, #4
9001d578:	eb07 0e01 	add.w	lr, r7, r1
9001d57c:	5879      	ldr	r1, [r7, r1]
9001d57e:	9109      	str	r1, [sp, #36]	; 0x24
9001d580:	0e09      	lsrs	r1, r1, #24
9001d582:	9112      	str	r1, [sp, #72]	; 0x48
9001d584:	f8de 1004 	ldr.w	r1, [lr, #4]
9001d588:	910f      	str	r1, [sp, #60]	; 0x3c
9001d58a:	0e09      	lsrs	r1, r1, #24
9001d58c:	9116      	str	r1, [sp, #88]	; 0x58
9001d58e:	b292      	uxth	r2, r2
9001d590:	9915      	ldr	r1, [sp, #84]	; 0x54
9001d592:	b280      	uxth	r0, r0
9001d594:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001d596:	fb02 f800 	mul.w	r8, r2, r0
9001d59a:	0112      	lsls	r2, r2, #4
9001d59c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9001d5a0:	eba2 0e08 	sub.w	lr, r2, r8
9001d5a4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9001d5a8:	b280      	uxth	r0, r0
9001d5aa:	fa1f fe8e 	uxth.w	lr, lr
9001d5ae:	1a12      	subs	r2, r2, r0
9001d5b0:	fb0e f101 	mul.w	r1, lr, r1
9001d5b4:	b292      	uxth	r2, r2
9001d5b6:	fb02 110c 	mla	r1, r2, ip, r1
9001d5ba:	fb00 1105 	mla	r1, r0, r5, r1
9001d5be:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001d5c0:	fb08 1105 	mla	r1, r8, r5, r1
9001d5c4:	f3c1 2107 	ubfx	r1, r1, #8, #8
9001d5c8:	2900      	cmp	r1, #0
9001d5ca:	f000 80f5 	beq.w	9001d7b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
9001d5ce:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9001d5d2:	d019      	beq.n	9001d608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
9001d5d4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9001d5d8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001d5dc:	fb0c fa0a 	mul.w	sl, ip, sl
9001d5e0:	fb0c fc03 	mul.w	ip, ip, r3
9001d5e4:	ea4f 231a 	mov.w	r3, sl, lsr #8
9001d5e8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001d5ec:	f50c 7780 	add.w	r7, ip, #256	; 0x100
9001d5f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001d5f4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001d5f8:	4453      	add	r3, sl
9001d5fa:	0a3f      	lsrs	r7, r7, #8
9001d5fc:	0a1b      	lsrs	r3, r3, #8
9001d5fe:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
9001d602:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001d606:	433b      	orrs	r3, r7
9001d608:	9d15      	ldr	r5, [sp, #84]	; 0x54
9001d60a:	2dff      	cmp	r5, #255	; 0xff
9001d60c:	d020      	beq.n	9001d650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
9001d60e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001d610:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9001d614:	9d15      	ldr	r5, [sp, #84]	; 0x54
9001d616:	436f      	muls	r7, r5
9001d618:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001d61a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9001d61e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9001d622:	9d15      	ldr	r5, [sp, #84]	; 0x54
9001d624:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9001d628:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001d62c:	fb05 fa0a 	mul.w	sl, r5, sl
9001d630:	44bc      	add	ip, r7
9001d632:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9001d636:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001d63a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9001d63e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001d642:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001d646:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001d64a:	ea4c 050a 	orr.w	r5, ip, sl
9001d64e:	950e      	str	r5, [sp, #56]	; 0x38
9001d650:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001d652:	2dff      	cmp	r5, #255	; 0xff
9001d654:	d020      	beq.n	9001d698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
9001d656:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001d658:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9001d65c:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001d65e:	436f      	muls	r7, r5
9001d660:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001d662:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9001d666:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9001d66a:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001d66c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9001d670:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001d674:	fb05 fa0a 	mul.w	sl, r5, sl
9001d678:	44bc      	add	ip, r7
9001d67a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9001d67e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001d682:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9001d686:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001d68a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001d68e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001d692:	ea4c 050a 	orr.w	r5, ip, sl
9001d696:	9509      	str	r5, [sp, #36]	; 0x24
9001d698:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001d69a:	2dff      	cmp	r5, #255	; 0xff
9001d69c:	d020      	beq.n	9001d6e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
9001d69e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001d6a0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9001d6a4:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001d6a6:	436f      	muls	r7, r5
9001d6a8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001d6aa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9001d6ae:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9001d6b2:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001d6b4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9001d6b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001d6bc:	fb05 fa0a 	mul.w	sl, r5, sl
9001d6c0:	44bc      	add	ip, r7
9001d6c2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9001d6c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001d6ca:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9001d6ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001d6d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001d6d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001d6da:	ea4c 050a 	orr.w	r5, ip, sl
9001d6de:	950f      	str	r5, [sp, #60]	; 0x3c
9001d6e0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001d6e2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9001d6e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001d6ea:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9001d6ee:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001d6f0:	fb0e f707 	mul.w	r7, lr, r7
9001d6f4:	fb02 770c 	mla	r7, r2, ip, r7
9001d6f8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9001d6fc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001d6fe:	fb00 770c 	mla	r7, r0, ip, r7
9001d702:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9001d706:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001d708:	fb08 770c 	mla	r7, r8, ip, r7
9001d70c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
9001d710:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9001d712:	fb0e fe0c 	mul.w	lr, lr, ip
9001d716:	0a3f      	lsrs	r7, r7, #8
9001d718:	fb02 e303 	mla	r3, r2, r3, lr
9001d71c:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d71e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9001d722:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9001d726:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001d728:	fb00 330a 	mla	r3, r0, sl, r3
9001d72c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
9001d730:	f8b9 0000 	ldrh.w	r0, [r9]
9001d734:	fb08 3c0c 	mla	ip, r8, ip, r3
9001d738:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001d73a:	1202      	asrs	r2, r0, #8
9001d73c:	4359      	muls	r1, r3
9001d73e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001d742:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001d746:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9001d74a:	1c4b      	adds	r3, r1, #1
9001d74c:	ea47 070c 	orr.w	r7, r7, ip
9001d750:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9001d754:	0c3b      	lsrs	r3, r7, #16
9001d756:	ea6f 2111 	mvn.w	r1, r1, lsr #8
9001d75a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
9001d75e:	b2ff      	uxtb	r7, r7
9001d760:	fb13 f305 	smulbb	r3, r3, r5
9001d764:	b2c9      	uxtb	r1, r1
9001d766:	fb17 f705 	smulbb	r7, r7, r5
9001d76a:	fb02 3201 	mla	r2, r2, r1, r3
9001d76e:	10c3      	asrs	r3, r0, #3
9001d770:	fb1c fc05 	smulbb	ip, ip, r5
9001d774:	00c0      	lsls	r0, r0, #3
9001d776:	b292      	uxth	r2, r2
9001d778:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9001d77c:	b2c0      	uxtb	r0, r0
9001d77e:	fb03 c301 	mla	r3, r3, r1, ip
9001d782:	fb00 7001 	mla	r0, r0, r1, r7
9001d786:	1c51      	adds	r1, r2, #1
9001d788:	b29b      	uxth	r3, r3
9001d78a:	b280      	uxth	r0, r0
9001d78c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001d790:	f100 0c01 	add.w	ip, r0, #1
9001d794:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
9001d798:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
9001d79c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d7a0:	ea42 020c 	orr.w	r2, r2, ip
9001d7a4:	f103 0c01 	add.w	ip, r3, #1
9001d7a8:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9001d7ac:	095b      	lsrs	r3, r3, #5
9001d7ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001d7b2:	431a      	orrs	r2, r3
9001d7b4:	f8a9 2000 	strh.w	r2, [r9]
9001d7b8:	9b31      	ldr	r3, [sp, #196]	; 0xc4
9001d7ba:	f109 0902 	add.w	r9, r9, #2
9001d7be:	f10b 3bff 	add.w	fp, fp, #4294967295
9001d7c2:	441c      	add	r4, r3
9001d7c4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
9001d7c6:	441e      	add	r6, r3
9001d7c8:	e647      	b.n	9001d45a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
9001d7ca:	2800      	cmp	r0, #0
9001d7cc:	f43f aedf 	beq.w	9001d58e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
9001d7d0:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
9001d7d4:	9109      	str	r1, [sp, #36]	; 0x24
9001d7d6:	0e09      	lsrs	r1, r1, #24
9001d7d8:	9112      	str	r1, [sp, #72]	; 0x48
9001d7da:	e6d8      	b.n	9001d58e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
9001d7dc:	b01d      	add	sp, #116	; 0x74
9001d7de:	ecbd 8b08 	vpop	{d8-d11}
9001d7e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001d7e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
9001d7e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d7ec:	880e      	ldrh	r6, [r1, #0]
9001d7ee:	b085      	sub	sp, #20
9001d7f0:	4690      	mov	r8, r2
9001d7f2:	ea4f 2c26 	mov.w	ip, r6, asr #8
9001d7f6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
9001d7fa:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
9001d7fe:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
9001d802:	ea4f 0ce6 	mov.w	ip, r6, asr #3
9001d806:	00f6      	lsls	r6, r6, #3
9001d808:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
9001d80c:	9200      	str	r2, [sp, #0]
9001d80e:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
9001d812:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
9001d816:	9201      	str	r2, [sp, #4]
9001d818:	b2f2      	uxtb	r2, r6
9001d81a:	2c00      	cmp	r4, #0
9001d81c:	fb04 5603 	mla	r6, r4, r3, r5
9001d820:	9202      	str	r2, [sp, #8]
9001d822:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
9001d826:	db36      	blt.n	9001d896 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
9001d828:	45a6      	cmp	lr, r4
9001d82a:	dd34      	ble.n	9001d896 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
9001d82c:	2d00      	cmp	r5, #0
9001d82e:	db30      	blt.n	9001d892 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
9001d830:	42ab      	cmp	r3, r5
9001d832:	dd2e      	ble.n	9001d892 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
9001d834:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
9001d838:	1c6e      	adds	r6, r5, #1
9001d83a:	d42f      	bmi.n	9001d89c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
9001d83c:	42b3      	cmp	r3, r6
9001d83e:	dd2d      	ble.n	9001d89c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
9001d840:	b370      	cbz	r0, 9001d8a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb8>
9001d842:	f8dc 6004 	ldr.w	r6, [ip, #4]
9001d846:	3401      	adds	r4, #1
9001d848:	d42e      	bmi.n	9001d8a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
9001d84a:	45a6      	cmp	lr, r4
9001d84c:	dd2c      	ble.n	9001d8a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
9001d84e:	b377      	cbz	r7, 9001d8ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc6>
9001d850:	2d00      	cmp	r5, #0
9001d852:	db27      	blt.n	9001d8a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
9001d854:	42ab      	cmp	r3, r5
9001d856:	dd25      	ble.n	9001d8a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
9001d858:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
9001d85c:	3501      	adds	r5, #1
9001d85e:	d429      	bmi.n	9001d8b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
9001d860:	42ab      	cmp	r3, r5
9001d862:	dd27      	ble.n	9001d8b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
9001d864:	b340      	cbz	r0, 9001d8b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
9001d866:	3301      	adds	r3, #1
9001d868:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
9001d86c:	280f      	cmp	r0, #15
9001d86e:	ea4f 6b12 	mov.w	fp, r2, lsr #24
9001d872:	ea4f 6a16 	mov.w	sl, r6, lsr #24
9001d876:	ea4f 6914 	mov.w	r9, r4, lsr #24
9001d87a:	ea4f 6813 	mov.w	r8, r3, lsr #24
9001d87e:	d801      	bhi.n	9001d884 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9c>
9001d880:	2f0f      	cmp	r7, #15
9001d882:	d91b      	bls.n	9001d8bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
9001d884:	4b7e      	ldr	r3, [pc, #504]	; (9001da80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
9001d886:	f240 210d 	movw	r1, #525	; 0x20d
9001d88a:	4a7e      	ldr	r2, [pc, #504]	; (9001da84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
9001d88c:	487e      	ldr	r0, [pc, #504]	; (9001da88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
9001d88e:	f001 fd09 	bl	9001f2a4 <__assert_func>
9001d892:	2200      	movs	r2, #0
9001d894:	e7d0      	b.n	9001d838 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
9001d896:	2600      	movs	r6, #0
9001d898:	4632      	mov	r2, r6
9001d89a:	e7d4      	b.n	9001d846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
9001d89c:	2600      	movs	r6, #0
9001d89e:	e7d2      	b.n	9001d846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
9001d8a0:	4606      	mov	r6, r0
9001d8a2:	e7d0      	b.n	9001d846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
9001d8a4:	2400      	movs	r4, #0
9001d8a6:	e7d9      	b.n	9001d85c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x74>
9001d8a8:	2300      	movs	r3, #0
9001d8aa:	461c      	mov	r4, r3
9001d8ac:	e7de      	b.n	9001d86c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
9001d8ae:	463b      	mov	r3, r7
9001d8b0:	463c      	mov	r4, r7
9001d8b2:	e7db      	b.n	9001d86c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
9001d8b4:	2300      	movs	r3, #0
9001d8b6:	e7d9      	b.n	9001d86c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
9001d8b8:	4603      	mov	r3, r0
9001d8ba:	e7d7      	b.n	9001d86c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
9001d8bc:	b280      	uxth	r0, r0
9001d8be:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001d8c2:	b2bf      	uxth	r7, r7
9001d8c4:	fb00 fe07 	mul.w	lr, r0, r7
9001d8c8:	ea4f 1000 	mov.w	r0, r0, lsl #4
9001d8cc:	ebce 1707 	rsb	r7, lr, r7, lsl #4
9001d8d0:	eba0 0c0e 	sub.w	ip, r0, lr
9001d8d4:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
9001d8d8:	b2bf      	uxth	r7, r7
9001d8da:	fa1f fc8c 	uxth.w	ip, ip
9001d8de:	eba5 0507 	sub.w	r5, r5, r7
9001d8e2:	fb0c f00a 	mul.w	r0, ip, sl
9001d8e6:	b2ad      	uxth	r5, r5
9001d8e8:	fb05 000b 	mla	r0, r5, fp, r0
9001d8ec:	fb07 0009 	mla	r0, r7, r9, r0
9001d8f0:	fb0e 0008 	mla	r0, lr, r8, r0
9001d8f4:	f3c0 2007 	ubfx	r0, r0, #8, #8
9001d8f8:	9003      	str	r0, [sp, #12]
9001d8fa:	d018      	beq.n	9001d92e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x146>
9001d8fc:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
9001d900:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001d904:	fb0b f000 	mul.w	r0, fp, r0
9001d908:	fb0b fb02 	mul.w	fp, fp, r2
9001d90c:	0a02      	lsrs	r2, r0, #8
9001d90e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
9001d912:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001d916:	4402      	add	r2, r0
9001d918:	f50b 7080 	add.w	r0, fp, #256	; 0x100
9001d91c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
9001d920:	0a12      	lsrs	r2, r2, #8
9001d922:	0a00      	lsrs	r0, r0, #8
9001d924:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001d928:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001d92c:	4302      	orrs	r2, r0
9001d92e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001d932:	d019      	beq.n	9001d968 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x180>
9001d934:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
9001d938:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9001d93c:	fb0a fb0b 	mul.w	fp, sl, fp
9001d940:	fb0a fa06 	mul.w	sl, sl, r6
9001d944:	ea4f 261b 	mov.w	r6, fp, lsr #8
9001d948:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001d94c:	f50a 7080 	add.w	r0, sl, #256	; 0x100
9001d950:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
9001d954:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9001d958:	445e      	add	r6, fp
9001d95a:	0a00      	lsrs	r0, r0, #8
9001d95c:	0a36      	lsrs	r6, r6, #8
9001d95e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001d962:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
9001d966:	4306      	orrs	r6, r0
9001d968:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001d96c:	d019      	beq.n	9001d9a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1ba>
9001d96e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
9001d972:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9001d976:	fb09 fa0a 	mul.w	sl, r9, sl
9001d97a:	fb09 f904 	mul.w	r9, r9, r4
9001d97e:	ea4f 241a 	mov.w	r4, sl, lsr #8
9001d982:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001d986:	f509 7080 	add.w	r0, r9, #256	; 0x100
9001d98a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9001d98e:	eb00 2019 	add.w	r0, r0, r9, lsr #8
9001d992:	4454      	add	r4, sl
9001d994:	0a00      	lsrs	r0, r0, #8
9001d996:	0a24      	lsrs	r4, r4, #8
9001d998:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001d99c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9001d9a0:	4304      	orrs	r4, r0
9001d9a2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9001d9a6:	d019      	beq.n	9001d9dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f4>
9001d9a8:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
9001d9ac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001d9b0:	fb08 f909 	mul.w	r9, r8, r9
9001d9b4:	fb08 f803 	mul.w	r8, r8, r3
9001d9b8:	ea4f 2319 	mov.w	r3, r9, lsr #8
9001d9bc:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
9001d9c0:	f508 7080 	add.w	r0, r8, #256	; 0x100
9001d9c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001d9c8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9001d9cc:	444b      	add	r3, r9
9001d9ce:	0a00      	lsrs	r0, r0, #8
9001d9d0:	0a1b      	lsrs	r3, r3, #8
9001d9d2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001d9d6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001d9da:	4303      	orrs	r3, r0
9001d9dc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
9001d9e0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
9001d9e4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9001d9e8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001d9ec:	fb0c f808 	mul.w	r8, ip, r8
9001d9f0:	fb0c f606 	mul.w	r6, ip, r6
9001d9f4:	fb05 8800 	mla	r8, r5, r0, r8
9001d9f8:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
9001d9fc:	fb05 6202 	mla	r2, r5, r2, r6
9001da00:	9d01      	ldr	r5, [sp, #4]
9001da02:	fb07 8800 	mla	r8, r7, r0, r8
9001da06:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
9001da0a:	fb0e 8000 	mla	r0, lr, r0, r8
9001da0e:	0a00      	lsrs	r0, r0, #8
9001da10:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
9001da14:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
9001da18:	9c02      	ldr	r4, [sp, #8]
9001da1a:	fb07 2700 	mla	r7, r7, r0, r2
9001da1e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
9001da22:	9b03      	ldr	r3, [sp, #12]
9001da24:	fb0e 7000 	mla	r0, lr, r0, r7
9001da28:	43da      	mvns	r2, r3
9001da2a:	9b00      	ldr	r3, [sp, #0]
9001da2c:	0a00      	lsrs	r0, r0, #8
9001da2e:	b2d2      	uxtb	r2, r2
9001da30:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
9001da34:	4353      	muls	r3, r2
9001da36:	4354      	muls	r4, r2
9001da38:	ea48 0000 	orr.w	r0, r8, r0
9001da3c:	4355      	muls	r5, r2
9001da3e:	4622      	mov	r2, r4
9001da40:	1c5c      	adds	r4, r3, #1
9001da42:	eb04 2413 	add.w	r4, r4, r3, lsr #8
9001da46:	0c03      	lsrs	r3, r0, #16
9001da48:	eb03 2414 	add.w	r4, r3, r4, lsr #8
9001da4c:	4b0f      	ldr	r3, [pc, #60]	; (9001da8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
9001da4e:	ea03 2304 	and.w	r3, r3, r4, lsl #8
9001da52:	1c54      	adds	r4, r2, #1
9001da54:	eb04 2412 	add.w	r4, r4, r2, lsr #8
9001da58:	b2c2      	uxtb	r2, r0
9001da5a:	f3c0 2007 	ubfx	r0, r0, #8, #8
9001da5e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9001da62:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
9001da66:	1c6a      	adds	r2, r5, #1
9001da68:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001da6c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001da70:	00c0      	lsls	r0, r0, #3
9001da72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001da76:	4318      	orrs	r0, r3
9001da78:	8008      	strh	r0, [r1, #0]
9001da7a:	b005      	add	sp, #20
9001da7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001da80:	900236e6 	.word	0x900236e6
9001da84:	90023ca9 	.word	0x90023ca9
9001da88:	900237cf 	.word	0x900237cf
9001da8c:	fffff800 	.word	0xfffff800

9001da90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001da90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001da94:	ed2d 8b08 	vpush	{d8-d11}
9001da98:	b09b      	sub	sp, #108	; 0x6c
9001da9a:	eeb0 aa40 	vmov.f32	s20, s0
9001da9e:	eef0 9a60 	vmov.f32	s19, s1
9001daa2:	9218      	str	r2, [sp, #96]	; 0x60
9001daa4:	eeb0 9a41 	vmov.f32	s18, s2
9001daa8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
9001daaa:	eeb0 8a62 	vmov.f32	s16, s5
9001daae:	9019      	str	r0, [sp, #100]	; 0x64
9001dab0:	eef0 8a43 	vmov.f32	s17, s6
9001dab4:	6850      	ldr	r0, [r2, #4]
9001dab6:	eef0 ba44 	vmov.f32	s23, s8
9001daba:	9116      	str	r1, [sp, #88]	; 0x58
9001dabc:	eeb0 ba64 	vmov.f32	s22, s9
9001dac0:	9307      	str	r3, [sp, #28]
9001dac2:	eef0 aa45 	vmov.f32	s21, s10
9001dac6:	6812      	ldr	r2, [r2, #0]
9001dac8:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
9001dacc:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
9001dad0:	fb00 1303 	mla	r3, r0, r3, r1
9001dad4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001dad8:	930a      	str	r3, [sp, #40]	; 0x28
9001dada:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9001dadc:	681b      	ldr	r3, [r3, #0]
9001dade:	930f      	str	r3, [sp, #60]	; 0x3c
9001dae0:	9b16      	ldr	r3, [sp, #88]	; 0x58
9001dae2:	2b00      	cmp	r3, #0
9001dae4:	dc03      	bgt.n	9001daee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001dae6:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001dae8:	2b00      	cmp	r3, #0
9001daea:	f340 838b 	ble.w	9001e204 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>
9001daee:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9001daf0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001daf4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001daf8:	1e48      	subs	r0, r1, #1
9001dafa:	1e57      	subs	r7, r2, #1
9001dafc:	9b07      	ldr	r3, [sp, #28]
9001dafe:	2b00      	cmp	r3, #0
9001db00:	f340 818b 	ble.w	9001de1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001db04:	ea5f 4c24 	movs.w	ip, r4, asr #16
9001db08:	ea4f 4326 	mov.w	r3, r6, asr #16
9001db0c:	d406      	bmi.n	9001db1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001db0e:	4584      	cmp	ip, r0
9001db10:	da04      	bge.n	9001db1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001db12:	2b00      	cmp	r3, #0
9001db14:	db02      	blt.n	9001db1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001db16:	42bb      	cmp	r3, r7
9001db18:	f2c0 8180 	blt.w	9001de1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
9001db1c:	f11c 0c01 	adds.w	ip, ip, #1
9001db20:	f100 8170 	bmi.w	9001de04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
9001db24:	4561      	cmp	r1, ip
9001db26:	f2c0 816d 	blt.w	9001de04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
9001db2a:	3301      	adds	r3, #1
9001db2c:	f100 816a 	bmi.w	9001de04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
9001db30:	429a      	cmp	r2, r3
9001db32:	f2c0 8167 	blt.w	9001de04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
9001db36:	9b07      	ldr	r3, [sp, #28]
9001db38:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001db3a:	9317      	str	r3, [sp, #92]	; 0x5c
9001db3c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001db3e:	2b00      	cmp	r3, #0
9001db40:	f340 8189 	ble.w	9001de56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
9001db44:	9a34      	ldr	r2, [sp, #208]	; 0xd0
9001db46:	ea4f 4c26 	mov.w	ip, r6, asr #16
9001db4a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9001db4c:	f3c4 3103 	ubfx	r1, r4, #12, #4
9001db50:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001db54:	1422      	asrs	r2, r4, #16
9001db56:	f3c6 3003 	ubfx	r0, r6, #12, #4
9001db5a:	689b      	ldr	r3, [r3, #8]
9001db5c:	f100 81d8 	bmi.w	9001df10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
9001db60:	f103 38ff 	add.w	r8, r3, #4294967295
9001db64:	4542      	cmp	r2, r8
9001db66:	f280 81d3 	bge.w	9001df10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
9001db6a:	f1bc 0f00 	cmp.w	ip, #0
9001db6e:	f2c0 81cf 	blt.w	9001df10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
9001db72:	f10e 38ff 	add.w	r8, lr, #4294967295
9001db76:	45c4      	cmp	ip, r8
9001db78:	f280 81ca 	bge.w	9001df10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
9001db7c:	b21b      	sxth	r3, r3
9001db7e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001db80:	fb0c 2203 	mla	r2, ip, r3, r2
9001db84:	eb05 0882 	add.w	r8, r5, r2, lsl #2
9001db88:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
9001db8c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
9001db90:	2900      	cmp	r1, #0
9001db92:	f000 81a6 	beq.w	9001dee2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9001db96:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001db9a:	950b      	str	r5, [sp, #44]	; 0x2c
9001db9c:	0e2d      	lsrs	r5, r5, #24
9001db9e:	9512      	str	r5, [sp, #72]	; 0x48
9001dba0:	b180      	cbz	r0, 9001dbc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
9001dba2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
9001dba6:	3b01      	subs	r3, #1
9001dba8:	009b      	lsls	r3, r3, #2
9001dbaa:	3304      	adds	r3, #4
9001dbac:	eb08 0c03 	add.w	ip, r8, r3
9001dbb0:	f858 3003 	ldr.w	r3, [r8, r3]
9001dbb4:	9308      	str	r3, [sp, #32]
9001dbb6:	0e1b      	lsrs	r3, r3, #24
9001dbb8:	9310      	str	r3, [sp, #64]	; 0x40
9001dbba:	f8dc 3004 	ldr.w	r3, [ip, #4]
9001dbbe:	930c      	str	r3, [sp, #48]	; 0x30
9001dbc0:	0e1b      	lsrs	r3, r3, #24
9001dbc2:	9313      	str	r3, [sp, #76]	; 0x4c
9001dbc4:	b289      	uxth	r1, r1
9001dbc6:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001dbc8:	b280      	uxth	r0, r0
9001dbca:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001dbcc:	fb01 f900 	mul.w	r9, r1, r0
9001dbd0:	0109      	lsls	r1, r1, #4
9001dbd2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9001dbd6:	eba1 0809 	sub.w	r8, r1, r9
9001dbda:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
9001dbde:	b280      	uxth	r0, r0
9001dbe0:	fa1f f888 	uxth.w	r8, r8
9001dbe4:	1a09      	subs	r1, r1, r0
9001dbe6:	fb08 f303 	mul.w	r3, r8, r3
9001dbea:	b289      	uxth	r1, r1
9001dbec:	fb01 330e 	mla	r3, r1, lr, r3
9001dbf0:	fb00 3305 	mla	r3, r0, r5, r3
9001dbf4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001dbf6:	fb09 3305 	mla	r3, r9, r5, r3
9001dbfa:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001dbfe:	2b00      	cmp	r3, #0
9001dc00:	f000 80f7 	beq.w	9001ddf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9001dc04:	f1be 0fff 	cmp.w	lr, #255	; 0xff
9001dc08:	d01b      	beq.n	9001dc42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
9001dc0a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
9001dc0e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001dc12:	fb0e fa0a 	mul.w	sl, lr, sl
9001dc16:	fb0e fe02 	mul.w	lr, lr, r2
9001dc1a:	ea4f 221a 	mov.w	r2, sl, lsr #8
9001dc1e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001dc22:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
9001dc26:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001dc2a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9001dc2e:	4452      	add	r2, sl
9001dc30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001dc34:	0a12      	lsrs	r2, r2, #8
9001dc36:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9001dc3a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001dc3e:	ea42 020c 	orr.w	r2, r2, ip
9001dc42:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001dc44:	2dff      	cmp	r5, #255	; 0xff
9001dc46:	d021      	beq.n	9001dc8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001dc48:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9001dc4a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9001dc4e:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001dc50:	fb05 fb0b 	mul.w	fp, r5, fp
9001dc54:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9001dc56:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9001dc5a:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001dc5c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001dc60:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001dc64:	fb05 fa0a 	mul.w	sl, r5, sl
9001dc68:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001dc6c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001dc70:	44de      	add	lr, fp
9001dc72:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001dc76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001dc7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001dc7e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001dc82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001dc86:	ea4e 050a 	orr.w	r5, lr, sl
9001dc8a:	950b      	str	r5, [sp, #44]	; 0x2c
9001dc8c:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001dc8e:	2dff      	cmp	r5, #255	; 0xff
9001dc90:	d021      	beq.n	9001dcd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
9001dc92:	9d08      	ldr	r5, [sp, #32]
9001dc94:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9001dc98:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001dc9a:	fb05 fb0b 	mul.w	fp, r5, fp
9001dc9e:	9d08      	ldr	r5, [sp, #32]
9001dca0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9001dca4:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001dca6:	fb05 fa0e 	mul.w	sl, r5, lr
9001dcaa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001dcae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001dcb2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001dcb6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001dcba:	44de      	add	lr, fp
9001dcbc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001dcc0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001dcc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001dcc8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001dccc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001dcd0:	ea4e 050a 	orr.w	r5, lr, sl
9001dcd4:	9508      	str	r5, [sp, #32]
9001dcd6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001dcd8:	2dff      	cmp	r5, #255	; 0xff
9001dcda:	d021      	beq.n	9001dd20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
9001dcdc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9001dcde:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9001dce2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001dce4:	fb05 fb0b 	mul.w	fp, r5, fp
9001dce8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9001dcea:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9001dcee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001dcf0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001dcf4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001dcf8:	fb05 fa0a 	mul.w	sl, r5, sl
9001dcfc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001dd00:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001dd04:	44de      	add	lr, fp
9001dd06:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001dd0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001dd0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001dd12:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001dd16:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001dd1a:	ea4e 050a 	orr.w	r5, lr, sl
9001dd1e:	950c      	str	r5, [sp, #48]	; 0x30
9001dd20:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9001dd22:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
9001dd26:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001dd2a:	2bff      	cmp	r3, #255	; 0xff
9001dd2c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9001dd30:	9d08      	ldr	r5, [sp, #32]
9001dd32:	fb08 fc0c 	mul.w	ip, r8, ip
9001dd36:	fb01 cc0e 	mla	ip, r1, lr, ip
9001dd3a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
9001dd3e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9001dd40:	fb00 cc0e 	mla	ip, r0, lr, ip
9001dd44:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
9001dd48:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9001dd4a:	fb09 cc0e 	mla	ip, r9, lr, ip
9001dd4e:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9001dd52:	fb08 f80e 	mul.w	r8, r8, lr
9001dd56:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001dd5a:	fb01 8202 	mla	r2, r1, r2, r8
9001dd5e:	9908      	ldr	r1, [sp, #32]
9001dd60:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001dd64:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
9001dd68:	990c      	ldr	r1, [sp, #48]	; 0x30
9001dd6a:	fb00 220a 	mla	r2, r0, sl, r2
9001dd6e:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
9001dd72:	fb09 2900 	mla	r9, r9, r0, r2
9001dd76:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001dd7a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9001dd7e:	ea4c 0c09 	orr.w	ip, ip, r9
9001dd82:	ea4f 221c 	mov.w	r2, ip, lsr #8
9001dd86:	f000 80b5 	beq.w	9001def4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
9001dd8a:	8839      	ldrh	r1, [r7, #0]
9001dd8c:	43db      	mvns	r3, r3
9001dd8e:	ea4f 2e21 	mov.w	lr, r1, asr #8
9001dd92:	fa5f f883 	uxtb.w	r8, r3
9001dd96:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001dd9a:	10c8      	asrs	r0, r1, #3
9001dd9c:	00cb      	lsls	r3, r1, #3
9001dd9e:	fb0e fe08 	mul.w	lr, lr, r8
9001dda2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001dda6:	b2db      	uxtb	r3, r3
9001dda8:	f10e 0101 	add.w	r1, lr, #1
9001ddac:	fb00 f008 	mul.w	r0, r0, r8
9001ddb0:	fb03 f308 	mul.w	r3, r3, r8
9001ddb4:	eb01 211e 	add.w	r1, r1, lr, lsr #8
9001ddb8:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
9001ddbc:	fa5f fc8c 	uxtb.w	ip, ip
9001ddc0:	eb0e 2e11 	add.w	lr, lr, r1, lsr #8
9001ddc4:	4960      	ldr	r1, [pc, #384]	; (9001df48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>)
9001ddc6:	ea01 2e0e 	and.w	lr, r1, lr, lsl #8
9001ddca:	1c59      	adds	r1, r3, #1
9001ddcc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001ddd0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001ddd4:	1c43      	adds	r3, r0, #1
9001ddd6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001ddda:	b2d3      	uxtb	r3, r2
9001dddc:	ea4e 0cdc 	orr.w	ip, lr, ip, lsr #3
9001dde0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9001dde4:	00db      	lsls	r3, r3, #3
9001dde6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ddea:	ea4c 0c03 	orr.w	ip, ip, r3
9001ddee:	f8a7 c000 	strh.w	ip, [r7]
9001ddf2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9001ddf4:	3702      	adds	r7, #2
9001ddf6:	441c      	add	r4, r3
9001ddf8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001ddfa:	441e      	add	r6, r3
9001ddfc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001ddfe:	3b01      	subs	r3, #1
9001de00:	9317      	str	r3, [sp, #92]	; 0x5c
9001de02:	e69b      	b.n	9001db3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
9001de04:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9001de06:	441c      	add	r4, r3
9001de08:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001de0a:	441e      	add	r6, r3
9001de0c:	9b07      	ldr	r3, [sp, #28]
9001de0e:	3b01      	subs	r3, #1
9001de10:	9307      	str	r3, [sp, #28]
9001de12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001de14:	3302      	adds	r3, #2
9001de16:	930a      	str	r3, [sp, #40]	; 0x28
9001de18:	e670      	b.n	9001dafc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001de1a:	d023      	beq.n	9001de64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
9001de1c:	9b07      	ldr	r3, [sp, #28]
9001de1e:	982f      	ldr	r0, [sp, #188]	; 0xbc
9001de20:	3b01      	subs	r3, #1
9001de22:	fb00 4003 	mla	r0, r0, r3, r4
9001de26:	1400      	asrs	r0, r0, #16
9001de28:	f53f ae85 	bmi.w	9001db36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001de2c:	3901      	subs	r1, #1
9001de2e:	4288      	cmp	r0, r1
9001de30:	f6bf ae81 	bge.w	9001db36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001de34:	9930      	ldr	r1, [sp, #192]	; 0xc0
9001de36:	fb01 6303 	mla	r3, r1, r3, r6
9001de3a:	141b      	asrs	r3, r3, #16
9001de3c:	f53f ae7b 	bmi.w	9001db36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001de40:	3a01      	subs	r2, #1
9001de42:	4293      	cmp	r3, r2
9001de44:	f6bf ae77 	bge.w	9001db36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001de48:	f8dd b01c 	ldr.w	fp, [sp, #28]
9001de4c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
9001de50:	f1bb 0f00 	cmp.w	fp, #0
9001de54:	dc7a      	bgt.n	9001df4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
9001de56:	9b07      	ldr	r3, [sp, #28]
9001de58:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9001de5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001de5e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9001de62:	930a      	str	r3, [sp, #40]	; 0x28
9001de64:	9b16      	ldr	r3, [sp, #88]	; 0x58
9001de66:	2b00      	cmp	r3, #0
9001de68:	f340 81cc 	ble.w	9001e204 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>
9001de6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001de70:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001de72:	ee3a aa2b 	vadd.f32	s20, s20, s23
9001de76:	ee79 9a8b 	vadd.f32	s19, s19, s22
9001de7a:	eef0 6a48 	vmov.f32	s13, s16
9001de7e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
9001de82:	ee39 9a2a 	vadd.f32	s18, s18, s21
9001de86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001de8a:	ee16 4a90 	vmov	r4, s13
9001de8e:	eef0 6a68 	vmov.f32	s13, s17
9001de92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001de96:	ee16 6a90 	vmov	r6, s13
9001de9a:	ee29 7aa7 	vmul.f32	s14, s19, s15
9001de9e:	ee69 7a27 	vmul.f32	s15, s18, s15
9001dea2:	ee37 8a48 	vsub.f32	s16, s14, s16
9001dea6:	ee77 8ae8 	vsub.f32	s17, s15, s17
9001deaa:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
9001deae:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
9001deb2:	ee18 2a10 	vmov	r2, s16
9001deb6:	eeb0 8a47 	vmov.f32	s16, s14
9001deba:	fb92 f3f3 	sdiv	r3, r2, r3
9001debe:	ee18 2a90 	vmov	r2, s17
9001dec2:	932f      	str	r3, [sp, #188]	; 0xbc
9001dec4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001dec6:	eef0 8a67 	vmov.f32	s17, s15
9001deca:	fb92 f3f3 	sdiv	r3, r2, r3
9001dece:	9330      	str	r3, [sp, #192]	; 0xc0
9001ded0:	9b16      	ldr	r3, [sp, #88]	; 0x58
9001ded2:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001ded4:	3b01      	subs	r3, #1
9001ded6:	9316      	str	r3, [sp, #88]	; 0x58
9001ded8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001deda:	bf08      	it	eq
9001dedc:	4613      	moveq	r3, r2
9001dede:	9307      	str	r3, [sp, #28]
9001dee0:	e5fe      	b.n	9001dae0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001dee2:	2800      	cmp	r0, #0
9001dee4:	f43f ae6e 	beq.w	9001dbc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
9001dee8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
9001deec:	9308      	str	r3, [sp, #32]
9001deee:	0e1b      	lsrs	r3, r3, #24
9001def0:	9310      	str	r3, [sp, #64]	; 0x40
9001def2:	e667      	b.n	9001dbc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
9001def4:	ea4f 135c 	mov.w	r3, ip, lsr #5
9001def8:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
9001defc:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
9001df00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001df04:	f022 0207 	bic.w	r2, r2, #7
9001df08:	431a      	orrs	r2, r3
9001df0a:	ea42 0c0c 	orr.w	ip, r2, ip
9001df0e:	e76e      	b.n	9001ddee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
9001df10:	f112 0801 	adds.w	r8, r2, #1
9001df14:	f53f af6d 	bmi.w	9001ddf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9001df18:	4543      	cmp	r3, r8
9001df1a:	f6ff af6a 	blt.w	9001ddf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9001df1e:	f11c 0801 	adds.w	r8, ip, #1
9001df22:	f53f af66 	bmi.w	9001ddf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9001df26:	45c6      	cmp	lr, r8
9001df28:	f6ff af63 	blt.w	9001ddf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9001df2c:	b21b      	sxth	r3, r3
9001df2e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
9001df32:	fa0f f28e 	sxth.w	r2, lr
9001df36:	e9cd 1003 	strd	r1, r0, [sp, #12]
9001df3a:	9200      	str	r2, [sp, #0]
9001df3c:	4639      	mov	r1, r7
9001df3e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001df40:	9819      	ldr	r0, [sp, #100]	; 0x64
9001df42:	f7ff fc51 	bl	9001d7e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
9001df46:	e754      	b.n	9001ddf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9001df48:	fffff800 	.word	0xfffff800
9001df4c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9001df4e:	1421      	asrs	r1, r4, #16
9001df50:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001df52:	f3c4 3203 	ubfx	r2, r4, #12, #4
9001df56:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
9001df5a:	1433      	asrs	r3, r6, #16
9001df5c:	f3c6 3003 	ubfx	r0, r6, #12, #4
9001df60:	fb07 1303 	mla	r3, r7, r3, r1
9001df64:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001df66:	eb01 0183 	add.w	r1, r1, r3, lsl #2
9001df6a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
9001df6e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
9001df72:	2a00      	cmp	r2, #0
9001df74:	f000 812f 	beq.w	9001e1d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
9001df78:	684d      	ldr	r5, [r1, #4]
9001df7a:	950d      	str	r5, [sp, #52]	; 0x34
9001df7c:	0e2d      	lsrs	r5, r5, #24
9001df7e:	9514      	str	r5, [sp, #80]	; 0x50
9001df80:	b178      	cbz	r0, 9001dfa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
9001df82:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
9001df86:	3f01      	subs	r7, #1
9001df88:	00bf      	lsls	r7, r7, #2
9001df8a:	3704      	adds	r7, #4
9001df8c:	eb01 0e07 	add.w	lr, r1, r7
9001df90:	59c9      	ldr	r1, [r1, r7]
9001df92:	9109      	str	r1, [sp, #36]	; 0x24
9001df94:	0e09      	lsrs	r1, r1, #24
9001df96:	9111      	str	r1, [sp, #68]	; 0x44
9001df98:	f8de 1004 	ldr.w	r1, [lr, #4]
9001df9c:	910e      	str	r1, [sp, #56]	; 0x38
9001df9e:	0e09      	lsrs	r1, r1, #24
9001dfa0:	9115      	str	r1, [sp, #84]	; 0x54
9001dfa2:	b292      	uxth	r2, r2
9001dfa4:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001dfa6:	b280      	uxth	r0, r0
9001dfa8:	fb02 f900 	mul.w	r9, r2, r0
9001dfac:	0112      	lsls	r2, r2, #4
9001dfae:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9001dfb2:	eba2 0e09 	sub.w	lr, r2, r9
9001dfb6:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
9001dfba:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001dfbc:	b280      	uxth	r0, r0
9001dfbe:	fa1f fe8e 	uxth.w	lr, lr
9001dfc2:	1a09      	subs	r1, r1, r0
9001dfc4:	fb0e f202 	mul.w	r2, lr, r2
9001dfc8:	b289      	uxth	r1, r1
9001dfca:	fb01 220c 	mla	r2, r1, ip, r2
9001dfce:	fb00 2205 	mla	r2, r0, r5, r2
9001dfd2:	9d15      	ldr	r5, [sp, #84]	; 0x54
9001dfd4:	fb09 2205 	mla	r2, r9, r5, r2
9001dfd8:	f3c2 2207 	ubfx	r2, r2, #8, #8
9001dfdc:	2a00      	cmp	r2, #0
9001dfde:	f000 80f1 	beq.w	9001e1c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
9001dfe2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9001dfe6:	d019      	beq.n	9001e01c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
9001dfe8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9001dfec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001dff0:	fb0c fa0a 	mul.w	sl, ip, sl
9001dff4:	fb0c fc03 	mul.w	ip, ip, r3
9001dff8:	ea4f 231a 	mov.w	r3, sl, lsr #8
9001dffc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001e000:	f50c 7780 	add.w	r7, ip, #256	; 0x100
9001e004:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001e008:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001e00c:	4453      	add	r3, sl
9001e00e:	0a3f      	lsrs	r7, r7, #8
9001e010:	0a1b      	lsrs	r3, r3, #8
9001e012:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
9001e016:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001e01a:	433b      	orrs	r3, r7
9001e01c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001e01e:	2dff      	cmp	r5, #255	; 0xff
9001e020:	d020      	beq.n	9001e064 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
9001e022:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001e024:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9001e028:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001e02a:	436f      	muls	r7, r5
9001e02c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001e02e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9001e032:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9001e036:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001e038:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9001e03c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001e040:	fb05 fa0a 	mul.w	sl, r5, sl
9001e044:	44bc      	add	ip, r7
9001e046:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9001e04a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001e04e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9001e052:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001e056:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001e05a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001e05e:	ea4c 050a 	orr.w	r5, ip, sl
9001e062:	950d      	str	r5, [sp, #52]	; 0x34
9001e064:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001e066:	2dff      	cmp	r5, #255	; 0xff
9001e068:	d020      	beq.n	9001e0ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
9001e06a:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001e06c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9001e070:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001e072:	436f      	muls	r7, r5
9001e074:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001e076:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
9001e07a:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001e07c:	fb05 fa0c 	mul.w	sl, r5, ip
9001e080:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9001e084:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9001e088:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001e08c:	44bc      	add	ip, r7
9001e08e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9001e092:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9001e096:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001e09a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001e09e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001e0a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001e0a6:	ea4c 050a 	orr.w	r5, ip, sl
9001e0aa:	9509      	str	r5, [sp, #36]	; 0x24
9001e0ac:	9d15      	ldr	r5, [sp, #84]	; 0x54
9001e0ae:	2dff      	cmp	r5, #255	; 0xff
9001e0b0:	d020      	beq.n	9001e0f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
9001e0b2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001e0b4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9001e0b8:	9d15      	ldr	r5, [sp, #84]	; 0x54
9001e0ba:	436f      	muls	r7, r5
9001e0bc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001e0be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9001e0c2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9001e0c6:	9d15      	ldr	r5, [sp, #84]	; 0x54
9001e0c8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9001e0cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001e0d0:	fb05 fa0a 	mul.w	sl, r5, sl
9001e0d4:	44bc      	add	ip, r7
9001e0d6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9001e0da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001e0de:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9001e0e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001e0e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001e0ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001e0ee:	ea4c 050a 	orr.w	r5, ip, sl
9001e0f2:	950e      	str	r5, [sp, #56]	; 0x38
9001e0f4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001e0f6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9001e0fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001e0fe:	2aff      	cmp	r2, #255	; 0xff
9001e100:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9001e104:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001e106:	fb0e f707 	mul.w	r7, lr, r7
9001e10a:	fb01 770c 	mla	r7, r1, ip, r7
9001e10e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9001e112:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001e114:	fb00 770c 	mla	r7, r0, ip, r7
9001e118:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9001e11c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001e11e:	fb09 770c 	mla	r7, r9, ip, r7
9001e122:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
9001e126:	fb0e fe0c 	mul.w	lr, lr, ip
9001e12a:	ea4f 2717 	mov.w	r7, r7, lsr #8
9001e12e:	fb01 e303 	mla	r3, r1, r3, lr
9001e132:	9909      	ldr	r1, [sp, #36]	; 0x24
9001e134:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9001e138:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
9001e13c:	990e      	ldr	r1, [sp, #56]	; 0x38
9001e13e:	fb00 330a 	mla	r3, r0, sl, r3
9001e142:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
9001e146:	fb09 3c0c 	mla	ip, r9, ip, r3
9001e14a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001e14e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9001e152:	ea47 070c 	orr.w	r7, r7, ip
9001e156:	ea4f 2317 	mov.w	r3, r7, lsr #8
9001e15a:	d045      	beq.n	9001e1e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9001e15c:	f8b8 1000 	ldrh.w	r1, [r8]
9001e160:	43d2      	mvns	r2, r2
9001e162:	ea4f 2c21 	mov.w	ip, r1, asr #8
9001e166:	fa5f fe82 	uxtb.w	lr, r2
9001e16a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e16e:	10c8      	asrs	r0, r1, #3
9001e170:	00ca      	lsls	r2, r1, #3
9001e172:	fb0c fc0e 	mul.w	ip, ip, lr
9001e176:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001e17a:	b2d2      	uxtb	r2, r2
9001e17c:	f10c 0101 	add.w	r1, ip, #1
9001e180:	fb00 f00e 	mul.w	r0, r0, lr
9001e184:	fb02 f20e 	mul.w	r2, r2, lr
9001e188:	eb01 211c 	add.w	r1, r1, ip, lsr #8
9001e18c:	ea4f 4c17 	mov.w	ip, r7, lsr #16
9001e190:	b2ff      	uxtb	r7, r7
9001e192:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
9001e196:	491e      	ldr	r1, [pc, #120]	; (9001e210 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x780>)
9001e198:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
9001e19c:	1c51      	adds	r1, r2, #1
9001e19e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001e1a2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001e1a6:	1c42      	adds	r2, r0, #1
9001e1a8:	ea4c 0cd7 	orr.w	ip, ip, r7, lsr #3
9001e1ac:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001e1b0:	b2df      	uxtb	r7, r3
9001e1b2:	eb07 2710 	add.w	r7, r7, r0, lsr #8
9001e1b6:	00ff      	lsls	r7, r7, #3
9001e1b8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001e1bc:	ea4c 0c07 	orr.w	ip, ip, r7
9001e1c0:	f8a8 c000 	strh.w	ip, [r8]
9001e1c4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9001e1c6:	f108 0802 	add.w	r8, r8, #2
9001e1ca:	f10b 3bff 	add.w	fp, fp, #4294967295
9001e1ce:	441c      	add	r4, r3
9001e1d0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001e1d2:	441e      	add	r6, r3
9001e1d4:	e63c      	b.n	9001de50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
9001e1d6:	2800      	cmp	r0, #0
9001e1d8:	f43f aee3 	beq.w	9001dfa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
9001e1dc:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
9001e1e0:	9109      	str	r1, [sp, #36]	; 0x24
9001e1e2:	0e09      	lsrs	r1, r1, #24
9001e1e4:	9111      	str	r1, [sp, #68]	; 0x44
9001e1e6:	e6dc      	b.n	9001dfa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
9001e1e8:	097a      	lsrs	r2, r7, #5
9001e1ea:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
9001e1ee:	f3c7 07c4 	ubfx	r7, r7, #3, #5
9001e1f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001e1f6:	f023 0307 	bic.w	r3, r3, #7
9001e1fa:	4313      	orrs	r3, r2
9001e1fc:	431f      	orrs	r7, r3
9001e1fe:	f8a8 7000 	strh.w	r7, [r8]
9001e202:	e7df      	b.n	9001e1c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
9001e204:	b01b      	add	sp, #108	; 0x6c
9001e206:	ecbd 8b08 	vpop	{d8-d11}
9001e20a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e20e:	bf00      	nop
9001e210:	fffff800 	.word	0xfffff800

9001e214 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
9001e214:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e218:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
9001e21c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
9001e220:	2c00      	cmp	r4, #0
9001e222:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
9001e226:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
9001e22a:	fb04 ce03 	mla	lr, r4, r3, ip
9001e22e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
9001e232:	db60      	blt.n	9001e2f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
9001e234:	45a1      	cmp	r9, r4
9001e236:	dd5e      	ble.n	9001e2f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
9001e238:	f1bc 0f00 	cmp.w	ip, #0
9001e23c:	db59      	blt.n	9001e2f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
9001e23e:	45e0      	cmp	r8, ip
9001e240:	dd57      	ble.n	9001e2f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
9001e242:	ea4f 005e 	mov.w	r0, lr, lsr #1
9001e246:	f01e 0f01 	tst.w	lr, #1
9001e24a:	5c16      	ldrb	r6, [r2, r0]
9001e24c:	bf0c      	ite	eq
9001e24e:	f006 060f 	andeq.w	r6, r6, #15
9001e252:	1136      	asrne	r6, r6, #4
9001e254:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9001e258:	b2f6      	uxtb	r6, r6
9001e25a:	f11c 0001 	adds.w	r0, ip, #1
9001e25e:	d44d      	bmi.n	9001e2fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
9001e260:	4580      	cmp	r8, r0
9001e262:	dd4b      	ble.n	9001e2fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
9001e264:	2d00      	cmp	r5, #0
9001e266:	d04b      	beq.n	9001e300 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
9001e268:	f10e 0a01 	add.w	sl, lr, #1
9001e26c:	ea4f 005a 	mov.w	r0, sl, lsr #1
9001e270:	f01a 0f01 	tst.w	sl, #1
9001e274:	5c10      	ldrb	r0, [r2, r0]
9001e276:	bf0c      	ite	eq
9001e278:	f000 000f 	andeq.w	r0, r0, #15
9001e27c:	1100      	asrne	r0, r0, #4
9001e27e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9001e282:	b2c0      	uxtb	r0, r0
9001e284:	3401      	adds	r4, #1
9001e286:	d43f      	bmi.n	9001e308 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
9001e288:	45a1      	cmp	r9, r4
9001e28a:	dd3d      	ble.n	9001e308 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
9001e28c:	2f00      	cmp	r7, #0
9001e28e:	f000 809e 	beq.w	9001e3ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
9001e292:	f1bc 0f00 	cmp.w	ip, #0
9001e296:	db35      	blt.n	9001e304 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
9001e298:	45e0      	cmp	r8, ip
9001e29a:	dd33      	ble.n	9001e304 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
9001e29c:	eb03 090e 	add.w	r9, r3, lr
9001e2a0:	ea4f 0459 	mov.w	r4, r9, lsr #1
9001e2a4:	f019 0f01 	tst.w	r9, #1
9001e2a8:	5d14      	ldrb	r4, [r2, r4]
9001e2aa:	bf0c      	ite	eq
9001e2ac:	f004 040f 	andeq.w	r4, r4, #15
9001e2b0:	1124      	asrne	r4, r4, #4
9001e2b2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
9001e2b6:	b2e4      	uxtb	r4, r4
9001e2b8:	f11c 0c01 	adds.w	ip, ip, #1
9001e2bc:	d427      	bmi.n	9001e30e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
9001e2be:	45e0      	cmp	r8, ip
9001e2c0:	dd25      	ble.n	9001e30e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
9001e2c2:	b335      	cbz	r5, 9001e312 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
9001e2c4:	3301      	adds	r3, #1
9001e2c6:	449e      	add	lr, r3
9001e2c8:	ea4f 035e 	mov.w	r3, lr, lsr #1
9001e2cc:	f01e 0f01 	tst.w	lr, #1
9001e2d0:	5cd2      	ldrb	r2, [r2, r3]
9001e2d2:	bf0c      	ite	eq
9001e2d4:	f002 020f 	andeq.w	r2, r2, #15
9001e2d8:	1112      	asrne	r2, r2, #4
9001e2da:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e2de:	b2d3      	uxtb	r3, r2
9001e2e0:	2d0f      	cmp	r5, #15
9001e2e2:	d917      	bls.n	9001e314 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
9001e2e4:	4b3c      	ldr	r3, [pc, #240]	; (9001e3d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
9001e2e6:	f240 210d 	movw	r1, #525	; 0x20d
9001e2ea:	4a3c      	ldr	r2, [pc, #240]	; (9001e3dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
9001e2ec:	483c      	ldr	r0, [pc, #240]	; (9001e3e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
9001e2ee:	f000 ffd9 	bl	9001f2a4 <__assert_func>
9001e2f2:	2600      	movs	r6, #0
9001e2f4:	e7b1      	b.n	9001e25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
9001e2f6:	2000      	movs	r0, #0
9001e2f8:	4606      	mov	r6, r0
9001e2fa:	e7c3      	b.n	9001e284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
9001e2fc:	2000      	movs	r0, #0
9001e2fe:	e7c1      	b.n	9001e284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
9001e300:	4628      	mov	r0, r5
9001e302:	e7bf      	b.n	9001e284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
9001e304:	2400      	movs	r4, #0
9001e306:	e7d7      	b.n	9001e2b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
9001e308:	2300      	movs	r3, #0
9001e30a:	461c      	mov	r4, r3
9001e30c:	e7e8      	b.n	9001e2e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
9001e30e:	2300      	movs	r3, #0
9001e310:	e7e6      	b.n	9001e2e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
9001e312:	462b      	mov	r3, r5
9001e314:	2f0f      	cmp	r7, #15
9001e316:	d8e5      	bhi.n	9001e2e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
9001e318:	b2ad      	uxth	r5, r5
9001e31a:	b2bf      	uxth	r7, r7
9001e31c:	fb05 fc07 	mul.w	ip, r5, r7
9001e320:	012d      	lsls	r5, r5, #4
9001e322:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
9001e326:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
9001e32a:	eba5 050c 	sub.w	r5, r5, ip
9001e32e:	b2bf      	uxth	r7, r7
9001e330:	b2ad      	uxth	r5, r5
9001e332:	1bd2      	subs	r2, r2, r7
9001e334:	4368      	muls	r0, r5
9001e336:	b292      	uxth	r2, r2
9001e338:	fb06 0002 	mla	r0, r6, r2, r0
9001e33c:	fb07 0404 	mla	r4, r7, r4, r0
9001e340:	fb0c 4303 	mla	r3, ip, r3, r4
9001e344:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001e348:	2b00      	cmp	r3, #0
9001e34a:	d03e      	beq.n	9001e3ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
9001e34c:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
9001e350:	4a24      	ldr	r2, [pc, #144]	; (9001e3e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
9001e352:	4343      	muls	r3, r0
9001e354:	6816      	ldr	r6, [r2, #0]
9001e356:	1c58      	adds	r0, r3, #1
9001e358:	880a      	ldrh	r2, [r1, #0]
9001e35a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9001e35e:	1215      	asrs	r5, r2, #8
9001e360:	1200      	asrs	r0, r0, #8
9001e362:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001e366:	10d7      	asrs	r7, r2, #3
9001e368:	b284      	uxth	r4, r0
9001e36a:	43c0      	mvns	r0, r0
9001e36c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e370:	00d2      	lsls	r2, r2, #3
9001e372:	b2c3      	uxtb	r3, r0
9001e374:	0a30      	lsrs	r0, r6, #8
9001e376:	fb15 f503 	smulbb	r5, r5, r3
9001e37a:	b2d2      	uxtb	r2, r2
9001e37c:	fb17 f703 	smulbb	r7, r7, r3
9001e380:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001e384:	fb12 f303 	smulbb	r3, r2, r3
9001e388:	fb00 5004 	mla	r0, r0, r4, r5
9001e38c:	08f5      	lsrs	r5, r6, #3
9001e38e:	00f6      	lsls	r6, r6, #3
9001e390:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001e394:	b280      	uxth	r0, r0
9001e396:	b2f6      	uxtb	r6, r6
9001e398:	fb05 7504 	mla	r5, r5, r4, r7
9001e39c:	fb06 3304 	mla	r3, r6, r4, r3
9001e3a0:	1c44      	adds	r4, r0, #1
9001e3a2:	b2ad      	uxth	r5, r5
9001e3a4:	b29a      	uxth	r2, r3
9001e3a6:	1c6b      	adds	r3, r5, #1
9001e3a8:	eb04 2010 	add.w	r0, r4, r0, lsr #8
9001e3ac:	eb03 2315 	add.w	r3, r3, r5, lsr #8
9001e3b0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001e3b4:	095b      	lsrs	r3, r3, #5
9001e3b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e3ba:	4303      	orrs	r3, r0
9001e3bc:	1c50      	adds	r0, r2, #1
9001e3be:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9001e3c2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e3c6:	4313      	orrs	r3, r2
9001e3c8:	800b      	strh	r3, [r1, #0]
9001e3ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e3ce:	2d0f      	cmp	r5, #15
9001e3d0:	d888      	bhi.n	9001e2e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
9001e3d2:	463b      	mov	r3, r7
9001e3d4:	463c      	mov	r4, r7
9001e3d6:	e79f      	b.n	9001e318 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
9001e3d8:	900236e6 	.word	0x900236e6
9001e3dc:	90023ca9 	.word	0x90023ca9
9001e3e0:	900237cf 	.word	0x900237cf
9001e3e4:	24012ae8 	.word	0x24012ae8

9001e3e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e3e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e3ec:	ed2d 8b08 	vpush	{d8-d11}
9001e3f0:	b097      	sub	sp, #92	; 0x5c
9001e3f2:	eeb0 aa40 	vmov.f32	s20, s0
9001e3f6:	eef0 9a60 	vmov.f32	s19, s1
9001e3fa:	9214      	str	r2, [sp, #80]	; 0x50
9001e3fc:	eeb0 9a41 	vmov.f32	s18, s2
9001e400:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
9001e402:	eeb0 8a62 	vmov.f32	s16, s5
9001e406:	9309      	str	r3, [sp, #36]	; 0x24
9001e408:	eef0 8a43 	vmov.f32	s17, s6
9001e40c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
9001e410:	eef0 ba44 	vmov.f32	s23, s8
9001e414:	9015      	str	r0, [sp, #84]	; 0x54
9001e416:	eeb0 ba64 	vmov.f32	s22, s9
9001e41a:	6850      	ldr	r0, [r2, #4]
9001e41c:	eef0 aa45 	vmov.f32	s21, s10
9001e420:	910d      	str	r1, [sp, #52]	; 0x34
9001e422:	930e      	str	r3, [sp, #56]	; 0x38
9001e424:	6812      	ldr	r2, [r2, #0]
9001e426:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
9001e42a:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
9001e42e:	fb00 1303 	mla	r3, r0, r3, r1
9001e432:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
9001e436:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001e438:	689b      	ldr	r3, [r3, #8]
9001e43a:	3301      	adds	r3, #1
9001e43c:	f023 0301 	bic.w	r3, r3, #1
9001e440:	930a      	str	r3, [sp, #40]	; 0x28
9001e442:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001e444:	681f      	ldr	r7, [r3, #0]
9001e446:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e448:	2b00      	cmp	r3, #0
9001e44a:	dc03      	bgt.n	9001e454 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001e44c:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001e44e:	2b00      	cmp	r3, #0
9001e450:	f340 826b 	ble.w	9001e92a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x542>
9001e454:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001e456:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001e45a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001e45e:	1e48      	subs	r0, r1, #1
9001e460:	f102 3cff 	add.w	ip, r2, #4294967295
9001e464:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e466:	2b00      	cmp	r3, #0
9001e468:	f340 80f4 	ble.w	9001e654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
9001e46c:	ea5f 4e24 	movs.w	lr, r4, asr #16
9001e470:	ea4f 4326 	mov.w	r3, r6, asr #16
9001e474:	d406      	bmi.n	9001e484 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001e476:	4586      	cmp	lr, r0
9001e478:	da04      	bge.n	9001e484 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001e47a:	2b00      	cmp	r3, #0
9001e47c:	db02      	blt.n	9001e484 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001e47e:	4563      	cmp	r3, ip
9001e480:	f2c0 80e9 	blt.w	9001e656 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26e>
9001e484:	f11e 0e01 	adds.w	lr, lr, #1
9001e488:	f100 80da 	bmi.w	9001e640 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
9001e48c:	4571      	cmp	r1, lr
9001e48e:	f2c0 80d7 	blt.w	9001e640 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
9001e492:	3301      	adds	r3, #1
9001e494:	f100 80d4 	bmi.w	9001e640 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
9001e498:	429a      	cmp	r2, r3
9001e49a:	f2c0 80d1 	blt.w	9001e640 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
9001e49e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001e4a2:	46d0      	mov	r8, sl
9001e4a4:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
9001e4a8:	930f      	str	r3, [sp, #60]	; 0x3c
9001e4aa:	f1b9 0f00 	cmp.w	r9, #0
9001e4ae:	f340 80f1 	ble.w	9001e694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
9001e4b2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001e4b4:	1430      	asrs	r0, r6, #16
9001e4b6:	f3c4 3203 	ubfx	r2, r4, #12, #4
9001e4ba:	f3c6 3103 	ubfx	r1, r6, #12, #4
9001e4be:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
9001e4c2:	1423      	asrs	r3, r4, #16
9001e4c4:	f100 813b 	bmi.w	9001e73e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
9001e4c8:	f10c 3bff 	add.w	fp, ip, #4294967295
9001e4cc:	455b      	cmp	r3, fp
9001e4ce:	f280 8136 	bge.w	9001e73e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
9001e4d2:	2800      	cmp	r0, #0
9001e4d4:	f2c0 8133 	blt.w	9001e73e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
9001e4d8:	f10e 3bff 	add.w	fp, lr, #4294967295
9001e4dc:	4558      	cmp	r0, fp
9001e4de:	f280 812e 	bge.w	9001e73e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
9001e4e2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001e4e4:	fb00 3305 	mla	r3, r0, r5, r3
9001e4e8:	0858      	lsrs	r0, r3, #1
9001e4ea:	07dd      	lsls	r5, r3, #31
9001e4ec:	f817 c000 	ldrb.w	ip, [r7, r0]
9001e4f0:	bf54      	ite	pl
9001e4f2:	f00c 0c0f 	andpl.w	ip, ip, #15
9001e4f6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9001e4fa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9001e4fe:	fa5f fc8c 	uxtb.w	ip, ip
9001e502:	2a00      	cmp	r2, #0
9001e504:	f000 810a 	beq.w	9001e71c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
9001e508:	1c58      	adds	r0, r3, #1
9001e50a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
9001e50e:	07c0      	lsls	r0, r0, #31
9001e510:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001e514:	bf54      	ite	pl
9001e516:	f00e 0e0f 	andpl.w	lr, lr, #15
9001e51a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
9001e51e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
9001e522:	fa5f f08e 	uxtb.w	r0, lr
9001e526:	9010      	str	r0, [sp, #64]	; 0x40
9001e528:	b1e1      	cbz	r1, 9001e564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e52a:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001e52c:	4403      	add	r3, r0
9001e52e:	0858      	lsrs	r0, r3, #1
9001e530:	07dd      	lsls	r5, r3, #31
9001e532:	f103 0301 	add.w	r3, r3, #1
9001e536:	5c38      	ldrb	r0, [r7, r0]
9001e538:	bf54      	ite	pl
9001e53a:	f000 000f 	andpl.w	r0, r0, #15
9001e53e:	1100      	asrmi	r0, r0, #4
9001e540:	07dd      	lsls	r5, r3, #31
9001e542:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9001e546:	b2c0      	uxtb	r0, r0
9001e548:	900b      	str	r0, [sp, #44]	; 0x2c
9001e54a:	ea4f 0053 	mov.w	r0, r3, lsr #1
9001e54e:	f817 e000 	ldrb.w	lr, [r7, r0]
9001e552:	bf54      	ite	pl
9001e554:	f00e 030f 	andpl.w	r3, lr, #15
9001e558:	ea4f 132e 	movmi.w	r3, lr, asr #4
9001e55c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9001e560:	b2db      	uxtb	r3, r3
9001e562:	9311      	str	r3, [sp, #68]	; 0x44
9001e564:	b292      	uxth	r2, r2
9001e566:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001e568:	b289      	uxth	r1, r1
9001e56a:	fb02 f301 	mul.w	r3, r2, r1
9001e56e:	0112      	lsls	r2, r2, #4
9001e570:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
9001e574:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
9001e578:	1ad2      	subs	r2, r2, r3
9001e57a:	b289      	uxth	r1, r1
9001e57c:	b292      	uxth	r2, r2
9001e57e:	1a40      	subs	r0, r0, r1
9001e580:	436a      	muls	r2, r5
9001e582:	b280      	uxth	r0, r0
9001e584:	fb0c 2c00 	mla	ip, ip, r0, r2
9001e588:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001e58a:	fb01 c102 	mla	r1, r1, r2, ip
9001e58e:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001e590:	fb03 1302 	mla	r3, r3, r2, r1
9001e594:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001e598:	2b00      	cmp	r3, #0
9001e59a:	d048      	beq.n	9001e62e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
9001e59c:	990e      	ldr	r1, [sp, #56]	; 0x38
9001e59e:	4a78      	ldr	r2, [pc, #480]	; (9001e780 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
9001e5a0:	434b      	muls	r3, r1
9001e5a2:	f8d2 e000 	ldr.w	lr, [r2]
9001e5a6:	1c59      	adds	r1, r3, #1
9001e5a8:	f8b8 2000 	ldrh.w	r2, [r8]
9001e5ac:	ea4f 201e 	mov.w	r0, lr, lsr #8
9001e5b0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001e5b4:	ea4f 2c22 	mov.w	ip, r2, asr #8
9001e5b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001e5bc:	121b      	asrs	r3, r3, #8
9001e5be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e5c2:	ea4f 0be2 	mov.w	fp, r2, asr #3
9001e5c6:	b299      	uxth	r1, r3
9001e5c8:	43db      	mvns	r3, r3
9001e5ca:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001e5ce:	00d2      	lsls	r2, r2, #3
9001e5d0:	b2db      	uxtb	r3, r3
9001e5d2:	b2d2      	uxtb	r2, r2
9001e5d4:	fb1c fc03 	smulbb	ip, ip, r3
9001e5d8:	fb1b fb03 	smulbb	fp, fp, r3
9001e5dc:	fb00 c001 	mla	r0, r0, r1, ip
9001e5e0:	ea4f 0cde 	mov.w	ip, lr, lsr #3
9001e5e4:	fb12 f303 	smulbb	r3, r2, r3
9001e5e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e5ec:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001e5f0:	b280      	uxth	r0, r0
9001e5f2:	fa5f fe8e 	uxtb.w	lr, lr
9001e5f6:	fb0c bc01 	mla	ip, ip, r1, fp
9001e5fa:	fb0e 3101 	mla	r1, lr, r1, r3
9001e5fe:	1c43      	adds	r3, r0, #1
9001e600:	fa1f fc8c 	uxth.w	ip, ip
9001e604:	b289      	uxth	r1, r1
9001e606:	f10c 0201 	add.w	r2, ip, #1
9001e60a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001e60e:	1c4b      	adds	r3, r1, #1
9001e610:	eb02 221c 	add.w	r2, r2, ip, lsr #8
9001e614:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001e618:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9001e61c:	0952      	lsrs	r2, r2, #5
9001e61e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9001e622:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001e626:	4310      	orrs	r0, r2
9001e628:	4308      	orrs	r0, r1
9001e62a:	f8a8 0000 	strh.w	r0, [r8]
9001e62e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9001e630:	f108 0802 	add.w	r8, r8, #2
9001e634:	f109 39ff 	add.w	r9, r9, #4294967295
9001e638:	441c      	add	r4, r3
9001e63a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001e63c:	441e      	add	r6, r3
9001e63e:	e734      	b.n	9001e4aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
9001e640:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9001e642:	f10a 0a02 	add.w	sl, sl, #2
9001e646:	441c      	add	r4, r3
9001e648:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001e64a:	441e      	add	r6, r3
9001e64c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e64e:	3b01      	subs	r3, #1
9001e650:	9309      	str	r3, [sp, #36]	; 0x24
9001e652:	e707      	b.n	9001e464 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001e654:	d023      	beq.n	9001e69e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001e656:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e658:	982b      	ldr	r0, [sp, #172]	; 0xac
9001e65a:	3b01      	subs	r3, #1
9001e65c:	fb00 4003 	mla	r0, r0, r3, r4
9001e660:	1400      	asrs	r0, r0, #16
9001e662:	f53f af1c 	bmi.w	9001e49e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
9001e666:	3901      	subs	r1, #1
9001e668:	4288      	cmp	r0, r1
9001e66a:	f6bf af18 	bge.w	9001e49e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
9001e66e:	992c      	ldr	r1, [sp, #176]	; 0xb0
9001e670:	fb01 6303 	mla	r3, r1, r3, r6
9001e674:	141b      	asrs	r3, r3, #16
9001e676:	f53f af12 	bmi.w	9001e49e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
9001e67a:	3a01      	subs	r2, #1
9001e67c:	4293      	cmp	r3, r2
9001e67e:	f6bf af0e 	bge.w	9001e49e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
9001e682:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001e686:	46d1      	mov	r9, sl
9001e688:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9001e68c:	930f      	str	r3, [sp, #60]	; 0x3c
9001e68e:	f1bb 0f00 	cmp.w	fp, #0
9001e692:	dc77      	bgt.n	9001e784 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
9001e694:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e696:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9001e69a:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
9001e69e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e6a0:	2b00      	cmp	r3, #0
9001e6a2:	f340 8142 	ble.w	9001e92a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x542>
9001e6a6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001e6aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001e6ac:	ee3a aa2b 	vadd.f32	s20, s20, s23
9001e6b0:	ee79 9a8b 	vadd.f32	s19, s19, s22
9001e6b4:	eef0 6a48 	vmov.f32	s13, s16
9001e6b8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
9001e6bc:	ee39 9a2a 	vadd.f32	s18, s18, s21
9001e6c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e6c4:	ee16 4a90 	vmov	r4, s13
9001e6c8:	eef0 6a68 	vmov.f32	s13, s17
9001e6cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e6d0:	ee16 6a90 	vmov	r6, s13
9001e6d4:	ee29 7aa7 	vmul.f32	s14, s19, s15
9001e6d8:	ee69 7a27 	vmul.f32	s15, s18, s15
9001e6dc:	ee37 8a48 	vsub.f32	s16, s14, s16
9001e6e0:	ee77 8ae8 	vsub.f32	s17, s15, s17
9001e6e4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
9001e6e8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
9001e6ec:	ee18 2a10 	vmov	r2, s16
9001e6f0:	eeb0 8a47 	vmov.f32	s16, s14
9001e6f4:	fb92 f3f3 	sdiv	r3, r2, r3
9001e6f8:	ee18 2a90 	vmov	r2, s17
9001e6fc:	932b      	str	r3, [sp, #172]	; 0xac
9001e6fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001e700:	eef0 8a67 	vmov.f32	s17, s15
9001e704:	fb92 f3f3 	sdiv	r3, r2, r3
9001e708:	932c      	str	r3, [sp, #176]	; 0xb0
9001e70a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e70c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001e70e:	3b01      	subs	r3, #1
9001e710:	930d      	str	r3, [sp, #52]	; 0x34
9001e712:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001e714:	bf08      	it	eq
9001e716:	4613      	moveq	r3, r2
9001e718:	9309      	str	r3, [sp, #36]	; 0x24
9001e71a:	e694      	b.n	9001e446 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001e71c:	2900      	cmp	r1, #0
9001e71e:	f43f af21 	beq.w	9001e564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e722:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001e724:	4418      	add	r0, r3
9001e726:	0843      	lsrs	r3, r0, #1
9001e728:	07c0      	lsls	r0, r0, #31
9001e72a:	5cfb      	ldrb	r3, [r7, r3]
9001e72c:	bf54      	ite	pl
9001e72e:	f003 030f 	andpl.w	r3, r3, #15
9001e732:	111b      	asrmi	r3, r3, #4
9001e734:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9001e738:	b2db      	uxtb	r3, r3
9001e73a:	930b      	str	r3, [sp, #44]	; 0x2c
9001e73c:	e712      	b.n	9001e564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e73e:	f113 0b01 	adds.w	fp, r3, #1
9001e742:	f53f af74 	bmi.w	9001e62e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
9001e746:	45dc      	cmp	ip, fp
9001e748:	f6ff af71 	blt.w	9001e62e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
9001e74c:	f110 0b01 	adds.w	fp, r0, #1
9001e750:	f53f af6d 	bmi.w	9001e62e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
9001e754:	45de      	cmp	lr, fp
9001e756:	f6ff af6a 	blt.w	9001e62e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
9001e75a:	9302      	str	r3, [sp, #8]
9001e75c:	fa0f f38e 	sxth.w	r3, lr
9001e760:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001e762:	9301      	str	r3, [sp, #4]
9001e764:	fa0f f38c 	sxth.w	r3, ip
9001e768:	e9cd 0203 	strd	r0, r2, [sp, #12]
9001e76c:	e9cd 1505 	strd	r1, r5, [sp, #20]
9001e770:	9300      	str	r3, [sp, #0]
9001e772:	463a      	mov	r2, r7
9001e774:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001e776:	4641      	mov	r1, r8
9001e778:	9815      	ldr	r0, [sp, #84]	; 0x54
9001e77a:	f7ff fd4b 	bl	9001e214 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
9001e77e:	e756      	b.n	9001e62e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
9001e780:	24012ae8 	.word	0x24012ae8
9001e784:	1422      	asrs	r2, r4, #16
9001e786:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001e788:	1433      	asrs	r3, r6, #16
9001e78a:	f3c4 3103 	ubfx	r1, r4, #12, #4
9001e78e:	f3c6 3003 	ubfx	r0, r6, #12, #4
9001e792:	fb05 2303 	mla	r3, r5, r3, r2
9001e796:	085a      	lsrs	r2, r3, #1
9001e798:	07dd      	lsls	r5, r3, #31
9001e79a:	5cba      	ldrb	r2, [r7, r2]
9001e79c:	bf54      	ite	pl
9001e79e:	f002 020f 	andpl.w	r2, r2, #15
9001e7a2:	1112      	asrmi	r2, r2, #4
9001e7a4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e7a8:	b2d2      	uxtb	r2, r2
9001e7aa:	2900      	cmp	r1, #0
9001e7ac:	f000 80a9 	beq.w	9001e902 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51a>
9001e7b0:	f103 0e01 	add.w	lr, r3, #1
9001e7b4:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
9001e7b8:	f01e 0f01 	tst.w	lr, #1
9001e7bc:	f817 c00c 	ldrb.w	ip, [r7, ip]
9001e7c0:	bf0c      	ite	eq
9001e7c2:	f00c 0c0f 	andeq.w	ip, ip, #15
9001e7c6:	ea4f 1c2c 	movne.w	ip, ip, asr #4
9001e7ca:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9001e7ce:	fa5f f58c 	uxtb.w	r5, ip
9001e7d2:	9512      	str	r5, [sp, #72]	; 0x48
9001e7d4:	b308      	cbz	r0, 9001e81a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
9001e7d6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001e7d8:	442b      	add	r3, r5
9001e7da:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9001e7de:	07dd      	lsls	r5, r3, #31
9001e7e0:	f103 0301 	add.w	r3, r3, #1
9001e7e4:	f817 c00c 	ldrb.w	ip, [r7, ip]
9001e7e8:	bf54      	ite	pl
9001e7ea:	f00c 0c0f 	andpl.w	ip, ip, #15
9001e7ee:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9001e7f2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9001e7f6:	fa5f f58c 	uxtb.w	r5, ip
9001e7fa:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9001e7fe:	950c      	str	r5, [sp, #48]	; 0x30
9001e800:	07dd      	lsls	r5, r3, #31
9001e802:	f817 c00c 	ldrb.w	ip, [r7, ip]
9001e806:	bf54      	ite	pl
9001e808:	f00c 0c0f 	andpl.w	ip, ip, #15
9001e80c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9001e810:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9001e814:	fa5f f38c 	uxtb.w	r3, ip
9001e818:	9313      	str	r3, [sp, #76]	; 0x4c
9001e81a:	b289      	uxth	r1, r1
9001e81c:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001e81e:	b280      	uxth	r0, r0
9001e820:	fb01 f300 	mul.w	r3, r1, r0
9001e824:	0109      	lsls	r1, r1, #4
9001e826:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
9001e82a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
9001e82e:	1ac9      	subs	r1, r1, r3
9001e830:	b280      	uxth	r0, r0
9001e832:	b289      	uxth	r1, r1
9001e834:	ebac 0c00 	sub.w	ip, ip, r0
9001e838:	4369      	muls	r1, r5
9001e83a:	fa1f fc8c 	uxth.w	ip, ip
9001e83e:	fb02 120c 	mla	r2, r2, ip, r1
9001e842:	990c      	ldr	r1, [sp, #48]	; 0x30
9001e844:	fb00 2001 	mla	r0, r0, r1, r2
9001e848:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001e84a:	fb03 0302 	mla	r3, r3, r2, r0
9001e84e:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001e852:	2b00      	cmp	r3, #0
9001e854:	d04c      	beq.n	9001e8f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
9001e856:	990e      	ldr	r1, [sp, #56]	; 0x38
9001e858:	4a36      	ldr	r2, [pc, #216]	; (9001e934 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>)
9001e85a:	434b      	muls	r3, r1
9001e85c:	f8d2 e000 	ldr.w	lr, [r2]
9001e860:	1c59      	adds	r1, r3, #1
9001e862:	f8b9 2000 	ldrh.w	r2, [r9]
9001e866:	ea4f 201e 	mov.w	r0, lr, lsr #8
9001e86a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001e86e:	ea4f 2c22 	mov.w	ip, r2, asr #8
9001e872:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001e876:	121b      	asrs	r3, r3, #8
9001e878:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e87c:	ea4f 08e2 	mov.w	r8, r2, asr #3
9001e880:	b299      	uxth	r1, r3
9001e882:	43db      	mvns	r3, r3
9001e884:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001e888:	00d2      	lsls	r2, r2, #3
9001e88a:	b2db      	uxtb	r3, r3
9001e88c:	b2d2      	uxtb	r2, r2
9001e88e:	fb1c fc03 	smulbb	ip, ip, r3
9001e892:	fb18 f803 	smulbb	r8, r8, r3
9001e896:	fb00 c001 	mla	r0, r0, r1, ip
9001e89a:	ea4f 0cde 	mov.w	ip, lr, lsr #3
9001e89e:	fb12 f203 	smulbb	r2, r2, r3
9001e8a2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e8a6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001e8aa:	b280      	uxth	r0, r0
9001e8ac:	fa5f fe8e 	uxtb.w	lr, lr
9001e8b0:	fb0c 8c01 	mla	ip, ip, r1, r8
9001e8b4:	fb0e 2201 	mla	r2, lr, r1, r2
9001e8b8:	fa1f fc8c 	uxth.w	ip, ip
9001e8bc:	b292      	uxth	r2, r2
9001e8be:	f10c 0801 	add.w	r8, ip, #1
9001e8c2:	1c51      	adds	r1, r2, #1
9001e8c4:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
9001e8c8:	f100 0801 	add.w	r8, r0, #1
9001e8cc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001e8d0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001e8d4:	eb08 2010 	add.w	r0, r8, r0, lsr #8
9001e8d8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e8dc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
9001e8e0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001e8e4:	ea4c 0c00 	orr.w	ip, ip, r0
9001e8e8:	ea4c 0c02 	orr.w	ip, ip, r2
9001e8ec:	f8a9 c000 	strh.w	ip, [r9]
9001e8f0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9001e8f2:	f109 0902 	add.w	r9, r9, #2
9001e8f6:	f10b 3bff 	add.w	fp, fp, #4294967295
9001e8fa:	441c      	add	r4, r3
9001e8fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001e8fe:	441e      	add	r6, r3
9001e900:	e6c5      	b.n	9001e68e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001e902:	2800      	cmp	r0, #0
9001e904:	d089      	beq.n	9001e81a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
9001e906:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001e908:	442b      	add	r3, r5
9001e90a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9001e90e:	07db      	lsls	r3, r3, #31
9001e910:	f817 c00c 	ldrb.w	ip, [r7, ip]
9001e914:	bf54      	ite	pl
9001e916:	f00c 0c0f 	andpl.w	ip, ip, #15
9001e91a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9001e91e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9001e922:	fa5f f38c 	uxtb.w	r3, ip
9001e926:	930c      	str	r3, [sp, #48]	; 0x30
9001e928:	e777      	b.n	9001e81a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
9001e92a:	b017      	add	sp, #92	; 0x5c
9001e92c:	ecbd 8b08 	vpop	{d8-d11}
9001e930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e934:	24012ae8 	.word	0x24012ae8

9001e938 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
9001e938:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e93c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
9001e940:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
9001e944:	2c00      	cmp	r4, #0
9001e946:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
9001e94a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
9001e94e:	fb04 ce03 	mla	lr, r4, r3, ip
9001e952:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
9001e956:	db60      	blt.n	9001ea1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
9001e958:	45a1      	cmp	r9, r4
9001e95a:	dd5e      	ble.n	9001ea1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
9001e95c:	f1bc 0f00 	cmp.w	ip, #0
9001e960:	db59      	blt.n	9001ea16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
9001e962:	45e0      	cmp	r8, ip
9001e964:	dd57      	ble.n	9001ea16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
9001e966:	ea4f 005e 	mov.w	r0, lr, lsr #1
9001e96a:	f01e 0f01 	tst.w	lr, #1
9001e96e:	5c16      	ldrb	r6, [r2, r0]
9001e970:	bf0c      	ite	eq
9001e972:	f006 060f 	andeq.w	r6, r6, #15
9001e976:	1136      	asrne	r6, r6, #4
9001e978:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9001e97c:	b2f6      	uxtb	r6, r6
9001e97e:	f11c 0001 	adds.w	r0, ip, #1
9001e982:	d44d      	bmi.n	9001ea20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
9001e984:	4580      	cmp	r8, r0
9001e986:	dd4b      	ble.n	9001ea20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
9001e988:	2d00      	cmp	r5, #0
9001e98a:	d04b      	beq.n	9001ea24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
9001e98c:	f10e 0a01 	add.w	sl, lr, #1
9001e990:	ea4f 005a 	mov.w	r0, sl, lsr #1
9001e994:	f01a 0f01 	tst.w	sl, #1
9001e998:	5c10      	ldrb	r0, [r2, r0]
9001e99a:	bf0c      	ite	eq
9001e99c:	f000 000f 	andeq.w	r0, r0, #15
9001e9a0:	1100      	asrne	r0, r0, #4
9001e9a2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9001e9a6:	b2c0      	uxtb	r0, r0
9001e9a8:	3401      	adds	r4, #1
9001e9aa:	d43f      	bmi.n	9001ea2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
9001e9ac:	45a1      	cmp	r9, r4
9001e9ae:	dd3d      	ble.n	9001ea2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
9001e9b0:	2f00      	cmp	r7, #0
9001e9b2:	f000 8097 	beq.w	9001eae4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
9001e9b6:	f1bc 0f00 	cmp.w	ip, #0
9001e9ba:	db35      	blt.n	9001ea28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
9001e9bc:	45e0      	cmp	r8, ip
9001e9be:	dd33      	ble.n	9001ea28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
9001e9c0:	eb03 090e 	add.w	r9, r3, lr
9001e9c4:	ea4f 0459 	mov.w	r4, r9, lsr #1
9001e9c8:	f019 0f01 	tst.w	r9, #1
9001e9cc:	5d14      	ldrb	r4, [r2, r4]
9001e9ce:	bf0c      	ite	eq
9001e9d0:	f004 040f 	andeq.w	r4, r4, #15
9001e9d4:	1124      	asrne	r4, r4, #4
9001e9d6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
9001e9da:	b2e4      	uxtb	r4, r4
9001e9dc:	f11c 0c01 	adds.w	ip, ip, #1
9001e9e0:	d427      	bmi.n	9001ea32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
9001e9e2:	45e0      	cmp	r8, ip
9001e9e4:	dd25      	ble.n	9001ea32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
9001e9e6:	b335      	cbz	r5, 9001ea36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
9001e9e8:	3301      	adds	r3, #1
9001e9ea:	449e      	add	lr, r3
9001e9ec:	ea4f 035e 	mov.w	r3, lr, lsr #1
9001e9f0:	f01e 0f01 	tst.w	lr, #1
9001e9f4:	5cd2      	ldrb	r2, [r2, r3]
9001e9f6:	bf0c      	ite	eq
9001e9f8:	f002 020f 	andeq.w	r2, r2, #15
9001e9fc:	1112      	asrne	r2, r2, #4
9001e9fe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ea02:	b2d3      	uxtb	r3, r2
9001ea04:	2d0f      	cmp	r5, #15
9001ea06:	d917      	bls.n	9001ea38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
9001ea08:	4b39      	ldr	r3, [pc, #228]	; (9001eaf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
9001ea0a:	f240 210d 	movw	r1, #525	; 0x20d
9001ea0e:	4a39      	ldr	r2, [pc, #228]	; (9001eaf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
9001ea10:	4839      	ldr	r0, [pc, #228]	; (9001eaf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
9001ea12:	f000 fc47 	bl	9001f2a4 <__assert_func>
9001ea16:	2600      	movs	r6, #0
9001ea18:	e7b1      	b.n	9001e97e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
9001ea1a:	2000      	movs	r0, #0
9001ea1c:	4606      	mov	r6, r0
9001ea1e:	e7c3      	b.n	9001e9a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
9001ea20:	2000      	movs	r0, #0
9001ea22:	e7c1      	b.n	9001e9a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
9001ea24:	4628      	mov	r0, r5
9001ea26:	e7bf      	b.n	9001e9a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
9001ea28:	2400      	movs	r4, #0
9001ea2a:	e7d7      	b.n	9001e9dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
9001ea2c:	2300      	movs	r3, #0
9001ea2e:	461c      	mov	r4, r3
9001ea30:	e7e8      	b.n	9001ea04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
9001ea32:	2300      	movs	r3, #0
9001ea34:	e7e6      	b.n	9001ea04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
9001ea36:	462b      	mov	r3, r5
9001ea38:	2f0f      	cmp	r7, #15
9001ea3a:	d8e5      	bhi.n	9001ea08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
9001ea3c:	b2ad      	uxth	r5, r5
9001ea3e:	b2bf      	uxth	r7, r7
9001ea40:	fb05 fc07 	mul.w	ip, r5, r7
9001ea44:	012d      	lsls	r5, r5, #4
9001ea46:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
9001ea4a:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
9001ea4e:	eba5 050c 	sub.w	r5, r5, ip
9001ea52:	b2bf      	uxth	r7, r7
9001ea54:	b2ad      	uxth	r5, r5
9001ea56:	1bd2      	subs	r2, r2, r7
9001ea58:	4368      	muls	r0, r5
9001ea5a:	b292      	uxth	r2, r2
9001ea5c:	fb06 0002 	mla	r0, r6, r2, r0
9001ea60:	fb07 0404 	mla	r4, r7, r4, r0
9001ea64:	fb0c 4303 	mla	r3, ip, r3, r4
9001ea68:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001ea6c:	2b00      	cmp	r3, #0
9001ea6e:	d037      	beq.n	9001eae0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
9001ea70:	4a22      	ldr	r2, [pc, #136]	; (9001eafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
9001ea72:	b298      	uxth	r0, r3
9001ea74:	43db      	mvns	r3, r3
9001ea76:	6816      	ldr	r6, [r2, #0]
9001ea78:	880a      	ldrh	r2, [r1, #0]
9001ea7a:	b2db      	uxtb	r3, r3
9001ea7c:	0a34      	lsrs	r4, r6, #8
9001ea7e:	1215      	asrs	r5, r2, #8
9001ea80:	10d7      	asrs	r7, r2, #3
9001ea82:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001ea86:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001ea8a:	00d2      	lsls	r2, r2, #3
9001ea8c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001ea90:	fb15 f503 	smulbb	r5, r5, r3
9001ea94:	b2d2      	uxtb	r2, r2
9001ea96:	fb17 f703 	smulbb	r7, r7, r3
9001ea9a:	fb04 5400 	mla	r4, r4, r0, r5
9001ea9e:	08f5      	lsrs	r5, r6, #3
9001eaa0:	fb12 f303 	smulbb	r3, r2, r3
9001eaa4:	00f6      	lsls	r6, r6, #3
9001eaa6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001eaaa:	b2a4      	uxth	r4, r4
9001eaac:	b2f6      	uxtb	r6, r6
9001eaae:	fb05 7500 	mla	r5, r5, r0, r7
9001eab2:	1c62      	adds	r2, r4, #1
9001eab4:	fb06 3000 	mla	r0, r6, r0, r3
9001eab8:	b2ad      	uxth	r5, r5
9001eaba:	b280      	uxth	r0, r0
9001eabc:	1c6b      	adds	r3, r5, #1
9001eabe:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9001eac2:	1c42      	adds	r2, r0, #1
9001eac4:	eb03 2315 	add.w	r3, r3, r5, lsr #8
9001eac8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9001eacc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001ead0:	095b      	lsrs	r3, r3, #5
9001ead2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001ead6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001eada:	4323      	orrs	r3, r4
9001eadc:	4303      	orrs	r3, r0
9001eade:	800b      	strh	r3, [r1, #0]
9001eae0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001eae4:	2d0f      	cmp	r5, #15
9001eae6:	d88f      	bhi.n	9001ea08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
9001eae8:	463b      	mov	r3, r7
9001eaea:	463c      	mov	r4, r7
9001eaec:	e7a6      	b.n	9001ea3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
9001eaee:	bf00      	nop
9001eaf0:	900236e6 	.word	0x900236e6
9001eaf4:	90023ca9 	.word	0x90023ca9
9001eaf8:	900237cf 	.word	0x900237cf
9001eafc:	24012ae8 	.word	0x24012ae8

9001eb00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001eb00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eb04:	ed2d 8b08 	vpush	{d8-d11}
9001eb08:	b093      	sub	sp, #76	; 0x4c
9001eb0a:	461d      	mov	r5, r3
9001eb0c:	eeb0 aa40 	vmov.f32	s20, s0
9001eb10:	920c      	str	r2, [sp, #48]	; 0x30
9001eb12:	eef0 9a60 	vmov.f32	s19, s1
9001eb16:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9001eb18:	eeb0 9a41 	vmov.f32	s18, s2
9001eb1c:	9011      	str	r0, [sp, #68]	; 0x44
9001eb1e:	eeb0 8a62 	vmov.f32	s16, s5
9001eb22:	6850      	ldr	r0, [r2, #4]
9001eb24:	eef0 8a43 	vmov.f32	s17, s6
9001eb28:	9107      	str	r1, [sp, #28]
9001eb2a:	eef0 ba44 	vmov.f32	s23, s8
9001eb2e:	6812      	ldr	r2, [r2, #0]
9001eb30:	eeb0 ba64 	vmov.f32	s22, s9
9001eb34:	eef0 aa45 	vmov.f32	s21, s10
9001eb38:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
9001eb3c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
9001eb40:	fb00 1303 	mla	r3, r0, r3, r1
9001eb44:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9001eb48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001eb4a:	689b      	ldr	r3, [r3, #8]
9001eb4c:	3301      	adds	r3, #1
9001eb4e:	f023 0301 	bic.w	r3, r3, #1
9001eb52:	9306      	str	r3, [sp, #24]
9001eb54:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001eb56:	681f      	ldr	r7, [r3, #0]
9001eb58:	9b07      	ldr	r3, [sp, #28]
9001eb5a:	2b00      	cmp	r3, #0
9001eb5c:	dc03      	bgt.n	9001eb66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001eb5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001eb60:	2b00      	cmp	r3, #0
9001eb62:	f340 8262 	ble.w	9001f02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
9001eb66:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001eb68:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001eb6c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001eb70:	1e48      	subs	r0, r1, #1
9001eb72:	f102 3cff 	add.w	ip, r2, #4294967295
9001eb76:	2d00      	cmp	r5, #0
9001eb78:	f340 80ee 	ble.w	9001ed58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
9001eb7c:	ea5f 4e24 	movs.w	lr, r4, asr #16
9001eb80:	ea4f 4326 	mov.w	r3, r6, asr #16
9001eb84:	d406      	bmi.n	9001eb94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001eb86:	4586      	cmp	lr, r0
9001eb88:	da04      	bge.n	9001eb94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001eb8a:	2b00      	cmp	r3, #0
9001eb8c:	db02      	blt.n	9001eb94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001eb8e:	4563      	cmp	r3, ip
9001eb90:	f2c0 80e3 	blt.w	9001ed5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
9001eb94:	f11e 0e01 	adds.w	lr, lr, #1
9001eb98:	f100 80d6 	bmi.w	9001ed48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
9001eb9c:	4571      	cmp	r1, lr
9001eb9e:	f2c0 80d3 	blt.w	9001ed48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
9001eba2:	3301      	adds	r3, #1
9001eba4:	f100 80d0 	bmi.w	9001ed48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
9001eba8:	429a      	cmp	r2, r3
9001ebaa:	f2c0 80cd 	blt.w	9001ed48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
9001ebae:	46c8      	mov	r8, r9
9001ebb0:	f9bd a018 	ldrsh.w	sl, [sp, #24]
9001ebb4:	9509      	str	r5, [sp, #36]	; 0x24
9001ebb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ebb8:	2b00      	cmp	r3, #0
9001ebba:	f340 80eb 	ble.w	9001ed94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001ebbe:	f3c4 3303 	ubfx	r3, r4, #12, #4
9001ebc2:	1430      	asrs	r0, r6, #16
9001ebc4:	f3c6 3103 	ubfx	r1, r6, #12, #4
9001ebc8:	9308      	str	r3, [sp, #32]
9001ebca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001ebcc:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
9001ebd0:	1423      	asrs	r3, r4, #16
9001ebd2:	f100 813c 	bmi.w	9001ee4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
9001ebd6:	f10c 3bff 	add.w	fp, ip, #4294967295
9001ebda:	455b      	cmp	r3, fp
9001ebdc:	f280 8137 	bge.w	9001ee4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
9001ebe0:	2800      	cmp	r0, #0
9001ebe2:	f2c0 8134 	blt.w	9001ee4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
9001ebe6:	f10e 3bff 	add.w	fp, lr, #4294967295
9001ebea:	4558      	cmp	r0, fp
9001ebec:	f280 812f 	bge.w	9001ee4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
9001ebf0:	9a06      	ldr	r2, [sp, #24]
9001ebf2:	fb00 3302 	mla	r3, r0, r2, r3
9001ebf6:	0858      	lsrs	r0, r3, #1
9001ebf8:	07da      	lsls	r2, r3, #31
9001ebfa:	9a08      	ldr	r2, [sp, #32]
9001ebfc:	f817 c000 	ldrb.w	ip, [r7, r0]
9001ec00:	bf54      	ite	pl
9001ec02:	f00c 0c0f 	andpl.w	ip, ip, #15
9001ec06:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9001ec0a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9001ec0e:	fa5f fc8c 	uxtb.w	ip, ip
9001ec12:	2a00      	cmp	r2, #0
9001ec14:	f000 8102 	beq.w	9001ee1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
9001ec18:	1c58      	adds	r0, r3, #1
9001ec1a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
9001ec1e:	07c0      	lsls	r0, r0, #31
9001ec20:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001ec24:	bf54      	ite	pl
9001ec26:	f00e 0e0f 	andpl.w	lr, lr, #15
9001ec2a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
9001ec2e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
9001ec32:	fa5f fe8e 	uxtb.w	lr, lr
9001ec36:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
9001ec3a:	b1b9      	cbz	r1, 9001ec6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001ec3c:	4453      	add	r3, sl
9001ec3e:	0858      	lsrs	r0, r3, #1
9001ec40:	07da      	lsls	r2, r3, #31
9001ec42:	5c38      	ldrb	r0, [r7, r0]
9001ec44:	bf54      	ite	pl
9001ec46:	f000 000f 	andpl.w	r0, r0, #15
9001ec4a:	1100      	asrmi	r0, r0, #4
9001ec4c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9001ec50:	b2c0      	uxtb	r0, r0
9001ec52:	900a      	str	r0, [sp, #40]	; 0x28
9001ec54:	1c58      	adds	r0, r3, #1
9001ec56:	0843      	lsrs	r3, r0, #1
9001ec58:	07c2      	lsls	r2, r0, #31
9001ec5a:	5cfb      	ldrb	r3, [r7, r3]
9001ec5c:	bf54      	ite	pl
9001ec5e:	f003 030f 	andpl.w	r3, r3, #15
9001ec62:	111b      	asrmi	r3, r3, #4
9001ec64:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9001ec68:	b2db      	uxtb	r3, r3
9001ec6a:	930e      	str	r3, [sp, #56]	; 0x38
9001ec6c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001ec70:	b289      	uxth	r1, r1
9001ec72:	fb02 f301 	mul.w	r3, r2, r1
9001ec76:	0112      	lsls	r2, r2, #4
9001ec78:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
9001ec7c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
9001ec80:	1ad2      	subs	r2, r2, r3
9001ec82:	b289      	uxth	r1, r1
9001ec84:	b292      	uxth	r2, r2
9001ec86:	1a40      	subs	r0, r0, r1
9001ec88:	fa1f fe80 	uxth.w	lr, r0
9001ec8c:	980d      	ldr	r0, [sp, #52]	; 0x34
9001ec8e:	4342      	muls	r2, r0
9001ec90:	fb0c 2c0e 	mla	ip, ip, lr, r2
9001ec94:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001ec96:	fb01 c102 	mla	r1, r1, r2, ip
9001ec9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001ec9c:	fb03 1302 	mla	r3, r3, r2, r1
9001eca0:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001eca4:	2b00      	cmp	r3, #0
9001eca6:	d045      	beq.n	9001ed34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001eca8:	4a79      	ldr	r2, [pc, #484]	; (9001ee90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>)
9001ecaa:	2bff      	cmp	r3, #255	; 0xff
9001ecac:	6811      	ldr	r1, [r2, #0]
9001ecae:	ea4f 2e11 	mov.w	lr, r1, lsr #8
9001ecb2:	ea4f 02d1 	mov.w	r2, r1, lsr #3
9001ecb6:	ea4f 01c1 	mov.w	r1, r1, lsl #3
9001ecba:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001ecbe:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001ecc2:	b2c9      	uxtb	r1, r1
9001ecc4:	f000 80bb 	beq.w	9001ee3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001ecc8:	f8b8 c000 	ldrh.w	ip, [r8]
9001eccc:	fa1f fb83 	uxth.w	fp, r3
9001ecd0:	43db      	mvns	r3, r3
9001ecd2:	fb1e fe0b 	smulbb	lr, lr, fp
9001ecd6:	ea4f 202c 	mov.w	r0, ip, asr #8
9001ecda:	fb12 f20b 	smulbb	r2, r2, fp
9001ecde:	b2db      	uxtb	r3, r3
9001ece0:	fb11 f10b 	smulbb	r1, r1, fp
9001ece4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001ece8:	fb00 e003 	mla	r0, r0, r3, lr
9001ecec:	ea4f 0eec 	mov.w	lr, ip, asr #3
9001ecf0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ecf4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001ecf8:	b280      	uxth	r0, r0
9001ecfa:	fa5f fc8c 	uxtb.w	ip, ip
9001ecfe:	fb0e 2203 	mla	r2, lr, r3, r2
9001ed02:	fb0c 1303 	mla	r3, ip, r3, r1
9001ed06:	1c41      	adds	r1, r0, #1
9001ed08:	b292      	uxth	r2, r2
9001ed0a:	b29b      	uxth	r3, r3
9001ed0c:	f102 0e01 	add.w	lr, r2, #1
9001ed10:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9001ed14:	1c59      	adds	r1, r3, #1
9001ed16:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001ed1a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001ed1e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001ed22:	0952      	lsrs	r2, r2, #5
9001ed24:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001ed28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001ed2c:	4310      	orrs	r0, r2
9001ed2e:	4318      	orrs	r0, r3
9001ed30:	f8a8 0000 	strh.w	r0, [r8]
9001ed34:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001ed36:	f108 0802 	add.w	r8, r8, #2
9001ed3a:	441c      	add	r4, r3
9001ed3c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001ed3e:	441e      	add	r6, r3
9001ed40:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ed42:	3b01      	subs	r3, #1
9001ed44:	9309      	str	r3, [sp, #36]	; 0x24
9001ed46:	e736      	b.n	9001ebb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
9001ed48:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001ed4a:	3d01      	subs	r5, #1
9001ed4c:	f109 0902 	add.w	r9, r9, #2
9001ed50:	441c      	add	r4, r3
9001ed52:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001ed54:	441e      	add	r6, r3
9001ed56:	e70e      	b.n	9001eb76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ed58:	d020      	beq.n	9001ed9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
9001ed5a:	1e6b      	subs	r3, r5, #1
9001ed5c:	9827      	ldr	r0, [sp, #156]	; 0x9c
9001ed5e:	fb00 4003 	mla	r0, r0, r3, r4
9001ed62:	1400      	asrs	r0, r0, #16
9001ed64:	f53f af23 	bmi.w	9001ebae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001ed68:	3901      	subs	r1, #1
9001ed6a:	4288      	cmp	r0, r1
9001ed6c:	f6bf af1f 	bge.w	9001ebae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001ed70:	9928      	ldr	r1, [sp, #160]	; 0xa0
9001ed72:	fb01 6303 	mla	r3, r1, r3, r6
9001ed76:	141b      	asrs	r3, r3, #16
9001ed78:	f53f af19 	bmi.w	9001ebae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001ed7c:	3a01      	subs	r2, #1
9001ed7e:	4293      	cmp	r3, r2
9001ed80:	f6bf af15 	bge.w	9001ebae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001ed84:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001ed88:	46aa      	mov	sl, r5
9001ed8a:	46c8      	mov	r8, r9
9001ed8c:	9308      	str	r3, [sp, #32]
9001ed8e:	f1ba 0f00 	cmp.w	sl, #0
9001ed92:	dc7f      	bgt.n	9001ee94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
9001ed94:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9001ed98:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9001ed9c:	9b07      	ldr	r3, [sp, #28]
9001ed9e:	2b00      	cmp	r3, #0
9001eda0:	f340 8143 	ble.w	9001f02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
9001eda4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001eda8:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001edaa:	ee3a aa2b 	vadd.f32	s20, s20, s23
9001edae:	ee79 9a8b 	vadd.f32	s19, s19, s22
9001edb2:	eef0 6a48 	vmov.f32	s13, s16
9001edb6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
9001edba:	ee39 9a2a 	vadd.f32	s18, s18, s21
9001edbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001edc2:	ee16 4a90 	vmov	r4, s13
9001edc6:	eef0 6a68 	vmov.f32	s13, s17
9001edca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001edce:	ee16 6a90 	vmov	r6, s13
9001edd2:	ee29 7aa7 	vmul.f32	s14, s19, s15
9001edd6:	ee69 7a27 	vmul.f32	s15, s18, s15
9001edda:	ee37 8a48 	vsub.f32	s16, s14, s16
9001edde:	ee77 8ae8 	vsub.f32	s17, s15, s17
9001ede2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
9001ede6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
9001edea:	ee18 2a10 	vmov	r2, s16
9001edee:	eeb0 8a47 	vmov.f32	s16, s14
9001edf2:	fb92 f3f3 	sdiv	r3, r2, r3
9001edf6:	ee18 2a90 	vmov	r2, s17
9001edfa:	9327      	str	r3, [sp, #156]	; 0x9c
9001edfc:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001edfe:	eef0 8a67 	vmov.f32	s17, s15
9001ee02:	fb92 f3f3 	sdiv	r3, r2, r3
9001ee06:	9328      	str	r3, [sp, #160]	; 0xa0
9001ee08:	9b07      	ldr	r3, [sp, #28]
9001ee0a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001ee0c:	3b01      	subs	r3, #1
9001ee0e:	9307      	str	r3, [sp, #28]
9001ee10:	bf08      	it	eq
9001ee12:	4615      	moveq	r5, r2
9001ee14:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ee16:	bf18      	it	ne
9001ee18:	461d      	movne	r5, r3
9001ee1a:	e69d      	b.n	9001eb58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001ee1c:	2900      	cmp	r1, #0
9001ee1e:	f43f af25 	beq.w	9001ec6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001ee22:	eb0a 0003 	add.w	r0, sl, r3
9001ee26:	0843      	lsrs	r3, r0, #1
9001ee28:	07c0      	lsls	r0, r0, #31
9001ee2a:	5cfb      	ldrb	r3, [r7, r3]
9001ee2c:	bf54      	ite	pl
9001ee2e:	f003 030f 	andpl.w	r3, r3, #15
9001ee32:	111b      	asrmi	r3, r3, #4
9001ee34:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9001ee38:	b2db      	uxtb	r3, r3
9001ee3a:	930a      	str	r3, [sp, #40]	; 0x28
9001ee3c:	e716      	b.n	9001ec6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001ee3e:	00d2      	lsls	r2, r2, #3
9001ee40:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
9001ee44:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
9001ee48:	f8a8 1000 	strh.w	r1, [r8]
9001ee4c:	e772      	b.n	9001ed34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001ee4e:	f113 0b01 	adds.w	fp, r3, #1
9001ee52:	f53f af6f 	bmi.w	9001ed34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001ee56:	45dc      	cmp	ip, fp
9001ee58:	f6ff af6c 	blt.w	9001ed34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001ee5c:	f110 0b01 	adds.w	fp, r0, #1
9001ee60:	f53f af68 	bmi.w	9001ed34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001ee64:	45de      	cmp	lr, fp
9001ee66:	f6ff af65 	blt.w	9001ed34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001ee6a:	9302      	str	r3, [sp, #8]
9001ee6c:	fa0f f38e 	sxth.w	r3, lr
9001ee70:	9a08      	ldr	r2, [sp, #32]
9001ee72:	9301      	str	r3, [sp, #4]
9001ee74:	fa0f f38c 	sxth.w	r3, ip
9001ee78:	9105      	str	r1, [sp, #20]
9001ee7a:	4641      	mov	r1, r8
9001ee7c:	9300      	str	r3, [sp, #0]
9001ee7e:	4653      	mov	r3, sl
9001ee80:	e9cd 0203 	strd	r0, r2, [sp, #12]
9001ee84:	463a      	mov	r2, r7
9001ee86:	9811      	ldr	r0, [sp, #68]	; 0x44
9001ee88:	f7ff fd56 	bl	9001e938 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9001ee8c:	e752      	b.n	9001ed34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001ee8e:	bf00      	nop
9001ee90:	24012ae8 	.word	0x24012ae8
9001ee94:	1422      	asrs	r2, r4, #16
9001ee96:	9906      	ldr	r1, [sp, #24]
9001ee98:	1433      	asrs	r3, r6, #16
9001ee9a:	f3c4 3003 	ubfx	r0, r4, #12, #4
9001ee9e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9001eea2:	fb01 2303 	mla	r3, r1, r3, r2
9001eea6:	085a      	lsrs	r2, r3, #1
9001eea8:	07d9      	lsls	r1, r3, #31
9001eeaa:	5cba      	ldrb	r2, [r7, r2]
9001eeac:	bf54      	ite	pl
9001eeae:	f002 020f 	andpl.w	r2, r2, #15
9001eeb2:	1112      	asrmi	r2, r2, #4
9001eeb4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001eeb8:	b2d2      	uxtb	r2, r2
9001eeba:	2800      	cmp	r0, #0
9001eebc:	f000 809c 	beq.w	9001eff8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f8>
9001eec0:	f103 0e01 	add.w	lr, r3, #1
9001eec4:	ea4f 015e 	mov.w	r1, lr, lsr #1
9001eec8:	f01e 0f01 	tst.w	lr, #1
9001eecc:	5c79      	ldrb	r1, [r7, r1]
9001eece:	bf0c      	ite	eq
9001eed0:	f001 010f 	andeq.w	r1, r1, #15
9001eed4:	1109      	asrne	r1, r1, #4
9001eed6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9001eeda:	b2c9      	uxtb	r1, r1
9001eedc:	910f      	str	r1, [sp, #60]	; 0x3c
9001eede:	f1bc 0f00 	cmp.w	ip, #0
9001eee2:	d01a      	beq.n	9001ef1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41a>
9001eee4:	9908      	ldr	r1, [sp, #32]
9001eee6:	440b      	add	r3, r1
9001eee8:	0859      	lsrs	r1, r3, #1
9001eeea:	f013 0f01 	tst.w	r3, #1
9001eeee:	f103 0301 	add.w	r3, r3, #1
9001eef2:	5c79      	ldrb	r1, [r7, r1]
9001eef4:	bf0c      	ite	eq
9001eef6:	f001 010f 	andeq.w	r1, r1, #15
9001eefa:	1109      	asrne	r1, r1, #4
9001eefc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9001ef00:	b2c9      	uxtb	r1, r1
9001ef02:	910b      	str	r1, [sp, #44]	; 0x2c
9001ef04:	0859      	lsrs	r1, r3, #1
9001ef06:	07db      	lsls	r3, r3, #31
9001ef08:	5c79      	ldrb	r1, [r7, r1]
9001ef0a:	bf54      	ite	pl
9001ef0c:	f001 010f 	andpl.w	r1, r1, #15
9001ef10:	1109      	asrmi	r1, r1, #4
9001ef12:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9001ef16:	b2c9      	uxtb	r1, r1
9001ef18:	9110      	str	r1, [sp, #64]	; 0x40
9001ef1a:	b280      	uxth	r0, r0
9001ef1c:	fa1f fc8c 	uxth.w	ip, ip
9001ef20:	fb00 f30c 	mul.w	r3, r0, ip
9001ef24:	0100      	lsls	r0, r0, #4
9001ef26:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
9001ef2a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
9001ef2e:	1ac0      	subs	r0, r0, r3
9001ef30:	fa1f fc8c 	uxth.w	ip, ip
9001ef34:	b280      	uxth	r0, r0
9001ef36:	eba1 010c 	sub.w	r1, r1, ip
9001ef3a:	fa1f fe81 	uxth.w	lr, r1
9001ef3e:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001ef40:	4348      	muls	r0, r1
9001ef42:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001ef44:	fb02 020e 	mla	r2, r2, lr, r0
9001ef48:	fb0c 2c01 	mla	ip, ip, r1, r2
9001ef4c:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001ef4e:	fb03 c302 	mla	r3, r3, r2, ip
9001ef52:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001ef56:	2b00      	cmp	r3, #0
9001ef58:	d045      	beq.n	9001efe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
9001ef5a:	4a36      	ldr	r2, [pc, #216]	; (9001f034 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>)
9001ef5c:	2bff      	cmp	r3, #255	; 0xff
9001ef5e:	6811      	ldr	r1, [r2, #0]
9001ef60:	ea4f 2e11 	mov.w	lr, r1, lsr #8
9001ef64:	ea4f 02d1 	mov.w	r2, r1, lsr #3
9001ef68:	ea4f 01c1 	mov.w	r1, r1, lsl #3
9001ef6c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001ef70:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001ef74:	b2c9      	uxtb	r1, r1
9001ef76:	d050      	beq.n	9001f01a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51a>
9001ef78:	f8b8 c000 	ldrh.w	ip, [r8]
9001ef7c:	fa1f fb83 	uxth.w	fp, r3
9001ef80:	43db      	mvns	r3, r3
9001ef82:	fb1e fe0b 	smulbb	lr, lr, fp
9001ef86:	ea4f 202c 	mov.w	r0, ip, asr #8
9001ef8a:	fb12 f20b 	smulbb	r2, r2, fp
9001ef8e:	b2db      	uxtb	r3, r3
9001ef90:	fb11 f10b 	smulbb	r1, r1, fp
9001ef94:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001ef98:	fb00 e003 	mla	r0, r0, r3, lr
9001ef9c:	ea4f 0eec 	mov.w	lr, ip, asr #3
9001efa0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001efa4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001efa8:	b280      	uxth	r0, r0
9001efaa:	fa5f fc8c 	uxtb.w	ip, ip
9001efae:	fb0e 2203 	mla	r2, lr, r3, r2
9001efb2:	fb0c 1103 	mla	r1, ip, r3, r1
9001efb6:	b292      	uxth	r2, r2
9001efb8:	b289      	uxth	r1, r1
9001efba:	f102 0e01 	add.w	lr, r2, #1
9001efbe:	1c4b      	adds	r3, r1, #1
9001efc0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001efc4:	f100 0e01 	add.w	lr, r0, #1
9001efc8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9001efcc:	0952      	lsrs	r2, r2, #5
9001efce:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
9001efd2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9001efd6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001efda:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001efde:	4302      	orrs	r2, r0
9001efe0:	430a      	orrs	r2, r1
9001efe2:	f8a8 2000 	strh.w	r2, [r8]
9001efe6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001efe8:	f108 0802 	add.w	r8, r8, #2
9001efec:	f10a 3aff 	add.w	sl, sl, #4294967295
9001eff0:	441c      	add	r4, r3
9001eff2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001eff4:	441e      	add	r6, r3
9001eff6:	e6ca      	b.n	9001ed8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
9001eff8:	f1bc 0f00 	cmp.w	ip, #0
9001effc:	d08d      	beq.n	9001ef1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41a>
9001effe:	9908      	ldr	r1, [sp, #32]
9001f000:	440b      	add	r3, r1
9001f002:	0859      	lsrs	r1, r3, #1
9001f004:	07db      	lsls	r3, r3, #31
9001f006:	5c79      	ldrb	r1, [r7, r1]
9001f008:	bf54      	ite	pl
9001f00a:	f001 010f 	andpl.w	r1, r1, #15
9001f00e:	1109      	asrmi	r1, r1, #4
9001f010:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9001f014:	b2c9      	uxtb	r1, r1
9001f016:	910b      	str	r1, [sp, #44]	; 0x2c
9001f018:	e77f      	b.n	9001ef1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41a>
9001f01a:	00d2      	lsls	r2, r2, #3
9001f01c:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
9001f020:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
9001f024:	f8a8 1000 	strh.w	r1, [r8]
9001f028:	e7dd      	b.n	9001efe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
9001f02a:	b013      	add	sp, #76	; 0x4c
9001f02c:	ecbd 8b08 	vpop	{d8-d11}
9001f030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f034:	24012ae8 	.word	0x24012ae8

9001f038 <CRC_Lock>:
9001f038:	4a1d      	ldr	r2, [pc, #116]	; (9001f0b0 <CRC_Lock+0x78>)
9001f03a:	b530      	push	{r4, r5, lr}
9001f03c:	6813      	ldr	r3, [r2, #0]
9001f03e:	f64f 74f0 	movw	r4, #65520	; 0xfff0
9001f042:	f24c 2540 	movw	r5, #49728	; 0xc240
9001f046:	f023 0301 	bic.w	r3, r3, #1
9001f04a:	6013      	str	r3, [r2, #0]
9001f04c:	4b19      	ldr	r3, [pc, #100]	; (9001f0b4 <CRC_Lock+0x7c>)
9001f04e:	681a      	ldr	r2, [r3, #0]
9001f050:	4022      	ands	r2, r4
9001f052:	42aa      	cmp	r2, r5
9001f054:	d005      	beq.n	9001f062 <CRC_Lock+0x2a>
9001f056:	681b      	ldr	r3, [r3, #0]
9001f058:	f24c 2270 	movw	r2, #49776	; 0xc270
9001f05c:	4023      	ands	r3, r4
9001f05e:	4293      	cmp	r3, r2
9001f060:	d11d      	bne.n	9001f09e <CRC_Lock+0x66>
9001f062:	4b15      	ldr	r3, [pc, #84]	; (9001f0b8 <CRC_Lock+0x80>)
9001f064:	681b      	ldr	r3, [r3, #0]
9001f066:	b9d3      	cbnz	r3, 9001f09e <CRC_Lock+0x66>
9001f068:	4a14      	ldr	r2, [pc, #80]	; (9001f0bc <CRC_Lock+0x84>)
9001f06a:	6813      	ldr	r3, [r2, #0]
9001f06c:	f3c3 030b 	ubfx	r3, r3, #0, #12
9001f070:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
9001f074:	d006      	beq.n	9001f084 <CRC_Lock+0x4c>
9001f076:	6813      	ldr	r3, [r2, #0]
9001f078:	f240 4283 	movw	r2, #1155	; 0x483
9001f07c:	f3c3 030b 	ubfx	r3, r3, #0, #12
9001f080:	4293      	cmp	r3, r2
9001f082:	d10c      	bne.n	9001f09e <CRC_Lock+0x66>
9001f084:	4b0e      	ldr	r3, [pc, #56]	; (9001f0c0 <CRC_Lock+0x88>)
9001f086:	2201      	movs	r2, #1
9001f088:	601a      	str	r2, [r3, #0]
9001f08a:	681a      	ldr	r2, [r3, #0]
9001f08c:	2a00      	cmp	r2, #0
9001f08e:	d1fc      	bne.n	9001f08a <CRC_Lock+0x52>
9001f090:	4b0c      	ldr	r3, [pc, #48]	; (9001f0c4 <CRC_Lock+0x8c>)
9001f092:	6018      	str	r0, [r3, #0]
9001f094:	6818      	ldr	r0, [r3, #0]
9001f096:	1a43      	subs	r3, r0, r1
9001f098:	4258      	negs	r0, r3
9001f09a:	4158      	adcs	r0, r3
9001f09c:	bd30      	pop	{r4, r5, pc}
9001f09e:	4b0a      	ldr	r3, [pc, #40]	; (9001f0c8 <CRC_Lock+0x90>)
9001f0a0:	2201      	movs	r2, #1
9001f0a2:	601a      	str	r2, [r3, #0]
9001f0a4:	681a      	ldr	r2, [r3, #0]
9001f0a6:	2a00      	cmp	r2, #0
9001f0a8:	d1fc      	bne.n	9001f0a4 <CRC_Lock+0x6c>
9001f0aa:	4b08      	ldr	r3, [pc, #32]	; (9001f0cc <CRC_Lock+0x94>)
9001f0ac:	e7f1      	b.n	9001f092 <CRC_Lock+0x5a>
9001f0ae:	bf00      	nop
9001f0b0:	e0002000 	.word	0xe0002000
9001f0b4:	e000ed00 	.word	0xe000ed00
9001f0b8:	e0042000 	.word	0xe0042000
9001f0bc:	5c001000 	.word	0x5c001000
9001f0c0:	58024c08 	.word	0x58024c08
9001f0c4:	58024c00 	.word	0x58024c00
9001f0c8:	40023008 	.word	0x40023008
9001f0cc:	40023000 	.word	0x40023000

9001f0d0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
9001f0d0:	6101      	str	r1, [r0, #16]
9001f0d2:	4770      	bx	lr

9001f0d4 <_ZN8touchgfx8Gestures4tickEv>:
9001f0d4:	7b83      	ldrb	r3, [r0, #14]
9001f0d6:	b14b      	cbz	r3, 9001f0ec <_ZN8touchgfx8Gestures4tickEv+0x18>
9001f0d8:	8903      	ldrh	r3, [r0, #8]
9001f0da:	3301      	adds	r3, #1
9001f0dc:	b29b      	uxth	r3, r3
9001f0de:	2b07      	cmp	r3, #7
9001f0e0:	8103      	strh	r3, [r0, #8]
9001f0e2:	bf81      	itttt	hi
9001f0e4:	2300      	movhi	r3, #0
9001f0e6:	8143      	strhhi	r3, [r0, #10]
9001f0e8:	8183      	strhhi	r3, [r0, #12]
9001f0ea:	7383      	strbhi	r3, [r0, #14]
9001f0ec:	4770      	bx	lr
	...

9001f0f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
9001f0f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9001f0f4:	4604      	mov	r4, r0
9001f0f6:	4698      	mov	r8, r3
9001f0f8:	8880      	ldrh	r0, [r0, #4]
9001f0fa:	4617      	mov	r7, r2
9001f0fc:	4b1d      	ldr	r3, [pc, #116]	; (9001f174 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
9001f0fe:	460e      	mov	r6, r1
9001f100:	f8ad 0006 	strh.w	r0, [sp, #6]
9001f104:	eba8 0000 	sub.w	r0, r8, r0
9001f108:	9300      	str	r3, [sp, #0]
9001f10a:	2300      	movs	r3, #0
9001f10c:	b280      	uxth	r0, r0
9001f10e:	8aa2      	ldrh	r2, [r4, #20]
9001f110:	f88d 3004 	strb.w	r3, [sp, #4]
9001f114:	b203      	sxth	r3, r0
9001f116:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
9001f11a:	88e1      	ldrh	r1, [r4, #6]
9001f11c:	2b00      	cmp	r3, #0
9001f11e:	f8ad 800a 	strh.w	r8, [sp, #10]
9001f122:	f8ad 1008 	strh.w	r1, [sp, #8]
9001f126:	bfb8      	it	lt
9001f128:	4240      	neglt	r0, r0
9001f12a:	f8ad 500c 	strh.w	r5, [sp, #12]
9001f12e:	bfb8      	it	lt
9001f130:	b203      	sxthlt	r3, r0
9001f132:	4293      	cmp	r3, r2
9001f134:	dc08      	bgt.n	9001f148 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
9001f136:	1a69      	subs	r1, r5, r1
9001f138:	b289      	uxth	r1, r1
9001f13a:	b20b      	sxth	r3, r1
9001f13c:	2b00      	cmp	r3, #0
9001f13e:	bfbc      	itt	lt
9001f140:	4249      	neglt	r1, r1
9001f142:	b20b      	sxthlt	r3, r1
9001f144:	429a      	cmp	r2, r3
9001f146:	da13      	bge.n	9001f170 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
9001f148:	6920      	ldr	r0, [r4, #16]
9001f14a:	4669      	mov	r1, sp
9001f14c:	eba8 0606 	sub.w	r6, r8, r6
9001f150:	1bef      	subs	r7, r5, r7
9001f152:	6803      	ldr	r3, [r0, #0]
9001f154:	685b      	ldr	r3, [r3, #4]
9001f156:	4798      	blx	r3
9001f158:	2300      	movs	r3, #0
9001f15a:	2001      	movs	r0, #1
9001f15c:	8166      	strh	r6, [r4, #10]
9001f15e:	8123      	strh	r3, [r4, #8]
9001f160:	81a7      	strh	r7, [r4, #12]
9001f162:	f8a4 8004 	strh.w	r8, [r4, #4]
9001f166:	80e5      	strh	r5, [r4, #6]
9001f168:	73a0      	strb	r0, [r4, #14]
9001f16a:	b004      	add	sp, #16
9001f16c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001f170:	2000      	movs	r0, #0
9001f172:	e7fa      	b.n	9001f16a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
9001f174:	90022b64 	.word	0x90022b64

9001f178 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
9001f178:	b5f0      	push	{r4, r5, r6, r7, lr}
9001f17a:	461e      	mov	r6, r3
9001f17c:	1e4b      	subs	r3, r1, #1
9001f17e:	b085      	sub	sp, #20
9001f180:	4604      	mov	r4, r0
9001f182:	2b01      	cmp	r3, #1
9001f184:	460d      	mov	r5, r1
9001f186:	4617      	mov	r7, r2
9001f188:	d84b      	bhi.n	9001f222 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
9001f18a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001f18e:	1cd3      	adds	r3, r2, #3
9001f190:	b29b      	uxth	r3, r3
9001f192:	2b06      	cmp	r3, #6
9001f194:	d916      	bls.n	9001f1c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
9001f196:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 9001f238 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9001f19a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001f19e:	f8cd c004 	str.w	ip, [sp, #4]
9001f1a2:	f04f 0c00 	mov.w	ip, #0
9001f1a6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001f1aa:	6900      	ldr	r0, [r0, #16]
9001f1ac:	f8ad 100c 	strh.w	r1, [sp, #12]
9001f1b0:	a901      	add	r1, sp, #4
9001f1b2:	f88d c008 	strb.w	ip, [sp, #8]
9001f1b6:	f8ad 200a 	strh.w	r2, [sp, #10]
9001f1ba:	f8ad 300e 	strh.w	r3, [sp, #14]
9001f1be:	6803      	ldr	r3, [r0, #0]
9001f1c0:	689b      	ldr	r3, [r3, #8]
9001f1c2:	4798      	blx	r3
9001f1c4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9001f1c8:	1cd3      	adds	r3, r2, #3
9001f1ca:	b29b      	uxth	r3, r3
9001f1cc:	2b06      	cmp	r3, #6
9001f1ce:	d916      	bls.n	9001f1fe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9001f1d0:	f8df c064 	ldr.w	ip, [pc, #100]	; 9001f238 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9001f1d4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001f1d8:	f8cd c004 	str.w	ip, [sp, #4]
9001f1dc:	f04f 0c01 	mov.w	ip, #1
9001f1e0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001f1e4:	6920      	ldr	r0, [r4, #16]
9001f1e6:	f8ad 100c 	strh.w	r1, [sp, #12]
9001f1ea:	a901      	add	r1, sp, #4
9001f1ec:	f88d c008 	strb.w	ip, [sp, #8]
9001f1f0:	f8ad 200a 	strh.w	r2, [sp, #10]
9001f1f4:	f8ad 300e 	strh.w	r3, [sp, #14]
9001f1f8:	6803      	ldr	r3, [r0, #0]
9001f1fa:	689b      	ldr	r3, [r3, #8]
9001f1fc:	4798      	blx	r3
9001f1fe:	4b0d      	ldr	r3, [pc, #52]	; (9001f234 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
9001f200:	a901      	add	r1, sp, #4
9001f202:	6920      	ldr	r0, [r4, #16]
9001f204:	9301      	str	r3, [sp, #4]
9001f206:	2300      	movs	r3, #0
9001f208:	f88d 5008 	strb.w	r5, [sp, #8]
9001f20c:	f8ad 700a 	strh.w	r7, [sp, #10]
9001f210:	f8ad 600c 	strh.w	r6, [sp, #12]
9001f214:	f8ad 300e 	strh.w	r3, [sp, #14]
9001f218:	6803      	ldr	r3, [r0, #0]
9001f21a:	681b      	ldr	r3, [r3, #0]
9001f21c:	4798      	blx	r3
9001f21e:	b005      	add	sp, #20
9001f220:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001f222:	2900      	cmp	r1, #0
9001f224:	d1eb      	bne.n	9001f1fe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9001f226:	80a2      	strh	r2, [r4, #4]
9001f228:	80c6      	strh	r6, [r0, #6]
9001f22a:	60a1      	str	r1, [r4, #8]
9001f22c:	81a1      	strh	r1, [r4, #12]
9001f22e:	73a1      	strb	r1, [r4, #14]
9001f230:	e7e5      	b.n	9001f1fe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9001f232:	bf00      	nop
9001f234:	90022b50 	.word	0x90022b50
9001f238:	90022b78 	.word	0x90022b78

9001f23c <__aeabi_atexit>:
9001f23c:	460b      	mov	r3, r1
9001f23e:	4601      	mov	r1, r0
9001f240:	4618      	mov	r0, r3
9001f242:	f000 b853 	b.w	9001f2ec <__cxa_atexit>

9001f246 <_ZdlPvj>:
9001f246:	f000 b812 	b.w	9001f26e <_ZdlPv>

9001f24a <__cxa_guard_acquire>:
9001f24a:	6803      	ldr	r3, [r0, #0]
9001f24c:	07db      	lsls	r3, r3, #31
9001f24e:	d406      	bmi.n	9001f25e <__cxa_guard_acquire+0x14>
9001f250:	7843      	ldrb	r3, [r0, #1]
9001f252:	b103      	cbz	r3, 9001f256 <__cxa_guard_acquire+0xc>
9001f254:	deff      	udf	#255	; 0xff
9001f256:	2301      	movs	r3, #1
9001f258:	7043      	strb	r3, [r0, #1]
9001f25a:	4618      	mov	r0, r3
9001f25c:	4770      	bx	lr
9001f25e:	2000      	movs	r0, #0
9001f260:	4770      	bx	lr

9001f262 <__cxa_guard_release>:
9001f262:	2301      	movs	r3, #1
9001f264:	6003      	str	r3, [r0, #0]
9001f266:	4770      	bx	lr

9001f268 <__cxa_pure_virtual>:
9001f268:	b508      	push	{r3, lr}
9001f26a:	f000 f80f 	bl	9001f28c <_ZSt9terminatev>

9001f26e <_ZdlPv>:
9001f26e:	f000 b88f 	b.w	9001f390 <free>

9001f272 <_ZN10__cxxabiv111__terminateEPFvvE>:
9001f272:	b508      	push	{r3, lr}
9001f274:	4780      	blx	r0
9001f276:	f000 f80e 	bl	9001f296 <abort>
	...

9001f27c <_ZSt13get_terminatev>:
9001f27c:	4b02      	ldr	r3, [pc, #8]	; (9001f288 <_ZSt13get_terminatev+0xc>)
9001f27e:	6818      	ldr	r0, [r3, #0]
9001f280:	f3bf 8f5b 	dmb	ish
9001f284:	4770      	bx	lr
9001f286:	bf00      	nop
9001f288:	240000c4 	.word	0x240000c4

9001f28c <_ZSt9terminatev>:
9001f28c:	b508      	push	{r3, lr}
9001f28e:	f7ff fff5 	bl	9001f27c <_ZSt13get_terminatev>
9001f292:	f7ff ffee 	bl	9001f272 <_ZN10__cxxabiv111__terminateEPFvvE>

9001f296 <abort>:
9001f296:	b508      	push	{r3, lr}
9001f298:	2006      	movs	r0, #6
9001f29a:	f000 fc67 	bl	9001fb6c <raise>
9001f29e:	2001      	movs	r0, #1
9001f2a0:	f7e4 fb3c 	bl	9000391c <_exit>

9001f2a4 <__assert_func>:
9001f2a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9001f2a6:	4614      	mov	r4, r2
9001f2a8:	461a      	mov	r2, r3
9001f2aa:	4b09      	ldr	r3, [pc, #36]	; (9001f2d0 <__assert_func+0x2c>)
9001f2ac:	681b      	ldr	r3, [r3, #0]
9001f2ae:	4605      	mov	r5, r0
9001f2b0:	68d8      	ldr	r0, [r3, #12]
9001f2b2:	b14c      	cbz	r4, 9001f2c8 <__assert_func+0x24>
9001f2b4:	4b07      	ldr	r3, [pc, #28]	; (9001f2d4 <__assert_func+0x30>)
9001f2b6:	9100      	str	r1, [sp, #0]
9001f2b8:	e9cd 3401 	strd	r3, r4, [sp, #4]
9001f2bc:	4906      	ldr	r1, [pc, #24]	; (9001f2d8 <__assert_func+0x34>)
9001f2be:	462b      	mov	r3, r5
9001f2c0:	f000 f828 	bl	9001f314 <fiprintf>
9001f2c4:	f7ff ffe7 	bl	9001f296 <abort>
9001f2c8:	4b04      	ldr	r3, [pc, #16]	; (9001f2dc <__assert_func+0x38>)
9001f2ca:	461c      	mov	r4, r3
9001f2cc:	e7f3      	b.n	9001f2b6 <__assert_func+0x12>
9001f2ce:	bf00      	nop
9001f2d0:	240000c8 	.word	0x240000c8
9001f2d4:	90023f43 	.word	0x90023f43
9001f2d8:	90023f50 	.word	0x90023f50
9001f2dc:	9002157a 	.word	0x9002157a

9001f2e0 <atexit>:
9001f2e0:	2300      	movs	r3, #0
9001f2e2:	4601      	mov	r1, r0
9001f2e4:	461a      	mov	r2, r3
9001f2e6:	4618      	mov	r0, r3
9001f2e8:	f000 be06 	b.w	9001fef8 <__register_exitproc>

9001f2ec <__cxa_atexit>:
9001f2ec:	b510      	push	{r4, lr}
9001f2ee:	4c05      	ldr	r4, [pc, #20]	; (9001f304 <__cxa_atexit+0x18>)
9001f2f0:	4613      	mov	r3, r2
9001f2f2:	b12c      	cbz	r4, 9001f300 <__cxa_atexit+0x14>
9001f2f4:	460a      	mov	r2, r1
9001f2f6:	4601      	mov	r1, r0
9001f2f8:	2002      	movs	r0, #2
9001f2fa:	f000 fdfd 	bl	9001fef8 <__register_exitproc>
9001f2fe:	bd10      	pop	{r4, pc}
9001f300:	4620      	mov	r0, r4
9001f302:	e7fc      	b.n	9001f2fe <__cxa_atexit+0x12>
9001f304:	9001fef9 	.word	0x9001fef9

9001f308 <__errno>:
9001f308:	4b01      	ldr	r3, [pc, #4]	; (9001f310 <__errno+0x8>)
9001f30a:	6818      	ldr	r0, [r3, #0]
9001f30c:	4770      	bx	lr
9001f30e:	bf00      	nop
9001f310:	240000c8 	.word	0x240000c8

9001f314 <fiprintf>:
9001f314:	b40e      	push	{r1, r2, r3}
9001f316:	b503      	push	{r0, r1, lr}
9001f318:	4601      	mov	r1, r0
9001f31a:	ab03      	add	r3, sp, #12
9001f31c:	4805      	ldr	r0, [pc, #20]	; (9001f334 <fiprintf+0x20>)
9001f31e:	f853 2b04 	ldr.w	r2, [r3], #4
9001f322:	6800      	ldr	r0, [r0, #0]
9001f324:	9301      	str	r3, [sp, #4]
9001f326:	f000 f925 	bl	9001f574 <_vfiprintf_r>
9001f32a:	b002      	add	sp, #8
9001f32c:	f85d eb04 	ldr.w	lr, [sp], #4
9001f330:	b003      	add	sp, #12
9001f332:	4770      	bx	lr
9001f334:	240000c8 	.word	0x240000c8

9001f338 <__libc_init_array>:
9001f338:	b570      	push	{r4, r5, r6, lr}
9001f33a:	4d0d      	ldr	r5, [pc, #52]	; (9001f370 <__libc_init_array+0x38>)
9001f33c:	4c0d      	ldr	r4, [pc, #52]	; (9001f374 <__libc_init_array+0x3c>)
9001f33e:	1b64      	subs	r4, r4, r5
9001f340:	10a4      	asrs	r4, r4, #2
9001f342:	2600      	movs	r6, #0
9001f344:	42a6      	cmp	r6, r4
9001f346:	d109      	bne.n	9001f35c <__libc_init_array+0x24>
9001f348:	4d0b      	ldr	r5, [pc, #44]	; (9001f378 <__libc_init_array+0x40>)
9001f34a:	4c0c      	ldr	r4, [pc, #48]	; (9001f37c <__libc_init_array+0x44>)
9001f34c:	f001 f90e 	bl	9002056c <_init>
9001f350:	1b64      	subs	r4, r4, r5
9001f352:	10a4      	asrs	r4, r4, #2
9001f354:	2600      	movs	r6, #0
9001f356:	42a6      	cmp	r6, r4
9001f358:	d105      	bne.n	9001f366 <__libc_init_array+0x2e>
9001f35a:	bd70      	pop	{r4, r5, r6, pc}
9001f35c:	f855 3b04 	ldr.w	r3, [r5], #4
9001f360:	4798      	blx	r3
9001f362:	3601      	adds	r6, #1
9001f364:	e7ee      	b.n	9001f344 <__libc_init_array+0xc>
9001f366:	f855 3b04 	ldr.w	r3, [r5], #4
9001f36a:	4798      	blx	r3
9001f36c:	3601      	adds	r6, #1
9001f36e:	e7f2      	b.n	9001f356 <__libc_init_array+0x1e>
9001f370:	900241a4 	.word	0x900241a4
9001f374:	900241a4 	.word	0x900241a4
9001f378:	900241a4 	.word	0x900241a4
9001f37c:	900241b8 	.word	0x900241b8

9001f380 <malloc>:
9001f380:	4b02      	ldr	r3, [pc, #8]	; (9001f38c <malloc+0xc>)
9001f382:	4601      	mov	r1, r0
9001f384:	6818      	ldr	r0, [r3, #0]
9001f386:	f000 b871 	b.w	9001f46c <_malloc_r>
9001f38a:	bf00      	nop
9001f38c:	240000c8 	.word	0x240000c8

9001f390 <free>:
9001f390:	4b02      	ldr	r3, [pc, #8]	; (9001f39c <free+0xc>)
9001f392:	4601      	mov	r1, r0
9001f394:	6818      	ldr	r0, [r3, #0]
9001f396:	f000 b819 	b.w	9001f3cc <_free_r>
9001f39a:	bf00      	nop
9001f39c:	240000c8 	.word	0x240000c8

9001f3a0 <memcpy>:
9001f3a0:	440a      	add	r2, r1
9001f3a2:	4291      	cmp	r1, r2
9001f3a4:	f100 33ff 	add.w	r3, r0, #4294967295
9001f3a8:	d100      	bne.n	9001f3ac <memcpy+0xc>
9001f3aa:	4770      	bx	lr
9001f3ac:	b510      	push	{r4, lr}
9001f3ae:	f811 4b01 	ldrb.w	r4, [r1], #1
9001f3b2:	f803 4f01 	strb.w	r4, [r3, #1]!
9001f3b6:	4291      	cmp	r1, r2
9001f3b8:	d1f9      	bne.n	9001f3ae <memcpy+0xe>
9001f3ba:	bd10      	pop	{r4, pc}

9001f3bc <memset>:
9001f3bc:	4402      	add	r2, r0
9001f3be:	4603      	mov	r3, r0
9001f3c0:	4293      	cmp	r3, r2
9001f3c2:	d100      	bne.n	9001f3c6 <memset+0xa>
9001f3c4:	4770      	bx	lr
9001f3c6:	f803 1b01 	strb.w	r1, [r3], #1
9001f3ca:	e7f9      	b.n	9001f3c0 <memset+0x4>

9001f3cc <_free_r>:
9001f3cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001f3ce:	2900      	cmp	r1, #0
9001f3d0:	d048      	beq.n	9001f464 <_free_r+0x98>
9001f3d2:	f851 3c04 	ldr.w	r3, [r1, #-4]
9001f3d6:	9001      	str	r0, [sp, #4]
9001f3d8:	2b00      	cmp	r3, #0
9001f3da:	f1a1 0404 	sub.w	r4, r1, #4
9001f3de:	bfb8      	it	lt
9001f3e0:	18e4      	addlt	r4, r4, r3
9001f3e2:	f001 f80b 	bl	900203fc <__malloc_lock>
9001f3e6:	4a20      	ldr	r2, [pc, #128]	; (9001f468 <_free_r+0x9c>)
9001f3e8:	9801      	ldr	r0, [sp, #4]
9001f3ea:	6813      	ldr	r3, [r2, #0]
9001f3ec:	4615      	mov	r5, r2
9001f3ee:	b933      	cbnz	r3, 9001f3fe <_free_r+0x32>
9001f3f0:	6063      	str	r3, [r4, #4]
9001f3f2:	6014      	str	r4, [r2, #0]
9001f3f4:	b003      	add	sp, #12
9001f3f6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9001f3fa:	f001 b805 	b.w	90020408 <__malloc_unlock>
9001f3fe:	42a3      	cmp	r3, r4
9001f400:	d90b      	bls.n	9001f41a <_free_r+0x4e>
9001f402:	6821      	ldr	r1, [r4, #0]
9001f404:	1862      	adds	r2, r4, r1
9001f406:	4293      	cmp	r3, r2
9001f408:	bf04      	itt	eq
9001f40a:	681a      	ldreq	r2, [r3, #0]
9001f40c:	685b      	ldreq	r3, [r3, #4]
9001f40e:	6063      	str	r3, [r4, #4]
9001f410:	bf04      	itt	eq
9001f412:	1852      	addeq	r2, r2, r1
9001f414:	6022      	streq	r2, [r4, #0]
9001f416:	602c      	str	r4, [r5, #0]
9001f418:	e7ec      	b.n	9001f3f4 <_free_r+0x28>
9001f41a:	461a      	mov	r2, r3
9001f41c:	685b      	ldr	r3, [r3, #4]
9001f41e:	b10b      	cbz	r3, 9001f424 <_free_r+0x58>
9001f420:	42a3      	cmp	r3, r4
9001f422:	d9fa      	bls.n	9001f41a <_free_r+0x4e>
9001f424:	6811      	ldr	r1, [r2, #0]
9001f426:	1855      	adds	r5, r2, r1
9001f428:	42a5      	cmp	r5, r4
9001f42a:	d10b      	bne.n	9001f444 <_free_r+0x78>
9001f42c:	6824      	ldr	r4, [r4, #0]
9001f42e:	4421      	add	r1, r4
9001f430:	1854      	adds	r4, r2, r1
9001f432:	42a3      	cmp	r3, r4
9001f434:	6011      	str	r1, [r2, #0]
9001f436:	d1dd      	bne.n	9001f3f4 <_free_r+0x28>
9001f438:	681c      	ldr	r4, [r3, #0]
9001f43a:	685b      	ldr	r3, [r3, #4]
9001f43c:	6053      	str	r3, [r2, #4]
9001f43e:	4421      	add	r1, r4
9001f440:	6011      	str	r1, [r2, #0]
9001f442:	e7d7      	b.n	9001f3f4 <_free_r+0x28>
9001f444:	d902      	bls.n	9001f44c <_free_r+0x80>
9001f446:	230c      	movs	r3, #12
9001f448:	6003      	str	r3, [r0, #0]
9001f44a:	e7d3      	b.n	9001f3f4 <_free_r+0x28>
9001f44c:	6825      	ldr	r5, [r4, #0]
9001f44e:	1961      	adds	r1, r4, r5
9001f450:	428b      	cmp	r3, r1
9001f452:	bf04      	itt	eq
9001f454:	6819      	ldreq	r1, [r3, #0]
9001f456:	685b      	ldreq	r3, [r3, #4]
9001f458:	6063      	str	r3, [r4, #4]
9001f45a:	bf04      	itt	eq
9001f45c:	1949      	addeq	r1, r1, r5
9001f45e:	6021      	streq	r1, [r4, #0]
9001f460:	6054      	str	r4, [r2, #4]
9001f462:	e7c7      	b.n	9001f3f4 <_free_r+0x28>
9001f464:	b003      	add	sp, #12
9001f466:	bd30      	pop	{r4, r5, pc}
9001f468:	24012bdc 	.word	0x24012bdc

9001f46c <_malloc_r>:
9001f46c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001f46e:	1ccd      	adds	r5, r1, #3
9001f470:	f025 0503 	bic.w	r5, r5, #3
9001f474:	3508      	adds	r5, #8
9001f476:	2d0c      	cmp	r5, #12
9001f478:	bf38      	it	cc
9001f47a:	250c      	movcc	r5, #12
9001f47c:	2d00      	cmp	r5, #0
9001f47e:	4606      	mov	r6, r0
9001f480:	db01      	blt.n	9001f486 <_malloc_r+0x1a>
9001f482:	42a9      	cmp	r1, r5
9001f484:	d903      	bls.n	9001f48e <_malloc_r+0x22>
9001f486:	230c      	movs	r3, #12
9001f488:	6033      	str	r3, [r6, #0]
9001f48a:	2000      	movs	r0, #0
9001f48c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001f48e:	f000 ffb5 	bl	900203fc <__malloc_lock>
9001f492:	4921      	ldr	r1, [pc, #132]	; (9001f518 <_malloc_r+0xac>)
9001f494:	680a      	ldr	r2, [r1, #0]
9001f496:	4614      	mov	r4, r2
9001f498:	b99c      	cbnz	r4, 9001f4c2 <_malloc_r+0x56>
9001f49a:	4f20      	ldr	r7, [pc, #128]	; (9001f51c <_malloc_r+0xb0>)
9001f49c:	683b      	ldr	r3, [r7, #0]
9001f49e:	b923      	cbnz	r3, 9001f4aa <_malloc_r+0x3e>
9001f4a0:	4621      	mov	r1, r4
9001f4a2:	4630      	mov	r0, r6
9001f4a4:	f000 fb2a 	bl	9001fafc <_sbrk_r>
9001f4a8:	6038      	str	r0, [r7, #0]
9001f4aa:	4629      	mov	r1, r5
9001f4ac:	4630      	mov	r0, r6
9001f4ae:	f000 fb25 	bl	9001fafc <_sbrk_r>
9001f4b2:	1c43      	adds	r3, r0, #1
9001f4b4:	d123      	bne.n	9001f4fe <_malloc_r+0x92>
9001f4b6:	230c      	movs	r3, #12
9001f4b8:	6033      	str	r3, [r6, #0]
9001f4ba:	4630      	mov	r0, r6
9001f4bc:	f000 ffa4 	bl	90020408 <__malloc_unlock>
9001f4c0:	e7e3      	b.n	9001f48a <_malloc_r+0x1e>
9001f4c2:	6823      	ldr	r3, [r4, #0]
9001f4c4:	1b5b      	subs	r3, r3, r5
9001f4c6:	d417      	bmi.n	9001f4f8 <_malloc_r+0x8c>
9001f4c8:	2b0b      	cmp	r3, #11
9001f4ca:	d903      	bls.n	9001f4d4 <_malloc_r+0x68>
9001f4cc:	6023      	str	r3, [r4, #0]
9001f4ce:	441c      	add	r4, r3
9001f4d0:	6025      	str	r5, [r4, #0]
9001f4d2:	e004      	b.n	9001f4de <_malloc_r+0x72>
9001f4d4:	6863      	ldr	r3, [r4, #4]
9001f4d6:	42a2      	cmp	r2, r4
9001f4d8:	bf0c      	ite	eq
9001f4da:	600b      	streq	r3, [r1, #0]
9001f4dc:	6053      	strne	r3, [r2, #4]
9001f4de:	4630      	mov	r0, r6
9001f4e0:	f000 ff92 	bl	90020408 <__malloc_unlock>
9001f4e4:	f104 000b 	add.w	r0, r4, #11
9001f4e8:	1d23      	adds	r3, r4, #4
9001f4ea:	f020 0007 	bic.w	r0, r0, #7
9001f4ee:	1ac2      	subs	r2, r0, r3
9001f4f0:	d0cc      	beq.n	9001f48c <_malloc_r+0x20>
9001f4f2:	1a1b      	subs	r3, r3, r0
9001f4f4:	50a3      	str	r3, [r4, r2]
9001f4f6:	e7c9      	b.n	9001f48c <_malloc_r+0x20>
9001f4f8:	4622      	mov	r2, r4
9001f4fa:	6864      	ldr	r4, [r4, #4]
9001f4fc:	e7cc      	b.n	9001f498 <_malloc_r+0x2c>
9001f4fe:	1cc4      	adds	r4, r0, #3
9001f500:	f024 0403 	bic.w	r4, r4, #3
9001f504:	42a0      	cmp	r0, r4
9001f506:	d0e3      	beq.n	9001f4d0 <_malloc_r+0x64>
9001f508:	1a21      	subs	r1, r4, r0
9001f50a:	4630      	mov	r0, r6
9001f50c:	f000 faf6 	bl	9001fafc <_sbrk_r>
9001f510:	3001      	adds	r0, #1
9001f512:	d1dd      	bne.n	9001f4d0 <_malloc_r+0x64>
9001f514:	e7cf      	b.n	9001f4b6 <_malloc_r+0x4a>
9001f516:	bf00      	nop
9001f518:	24012bdc 	.word	0x24012bdc
9001f51c:	24012be0 	.word	0x24012be0

9001f520 <__sfputc_r>:
9001f520:	6893      	ldr	r3, [r2, #8]
9001f522:	3b01      	subs	r3, #1
9001f524:	2b00      	cmp	r3, #0
9001f526:	b410      	push	{r4}
9001f528:	6093      	str	r3, [r2, #8]
9001f52a:	da08      	bge.n	9001f53e <__sfputc_r+0x1e>
9001f52c:	6994      	ldr	r4, [r2, #24]
9001f52e:	42a3      	cmp	r3, r4
9001f530:	db01      	blt.n	9001f536 <__sfputc_r+0x16>
9001f532:	290a      	cmp	r1, #10
9001f534:	d103      	bne.n	9001f53e <__sfputc_r+0x1e>
9001f536:	f85d 4b04 	ldr.w	r4, [sp], #4
9001f53a:	f000 bc1d 	b.w	9001fd78 <__swbuf_r>
9001f53e:	6813      	ldr	r3, [r2, #0]
9001f540:	1c58      	adds	r0, r3, #1
9001f542:	6010      	str	r0, [r2, #0]
9001f544:	7019      	strb	r1, [r3, #0]
9001f546:	4608      	mov	r0, r1
9001f548:	f85d 4b04 	ldr.w	r4, [sp], #4
9001f54c:	4770      	bx	lr

9001f54e <__sfputs_r>:
9001f54e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001f550:	4606      	mov	r6, r0
9001f552:	460f      	mov	r7, r1
9001f554:	4614      	mov	r4, r2
9001f556:	18d5      	adds	r5, r2, r3
9001f558:	42ac      	cmp	r4, r5
9001f55a:	d101      	bne.n	9001f560 <__sfputs_r+0x12>
9001f55c:	2000      	movs	r0, #0
9001f55e:	e007      	b.n	9001f570 <__sfputs_r+0x22>
9001f560:	f814 1b01 	ldrb.w	r1, [r4], #1
9001f564:	463a      	mov	r2, r7
9001f566:	4630      	mov	r0, r6
9001f568:	f7ff ffda 	bl	9001f520 <__sfputc_r>
9001f56c:	1c43      	adds	r3, r0, #1
9001f56e:	d1f3      	bne.n	9001f558 <__sfputs_r+0xa>
9001f570:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9001f574 <_vfiprintf_r>:
9001f574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f578:	460d      	mov	r5, r1
9001f57a:	b09d      	sub	sp, #116	; 0x74
9001f57c:	4614      	mov	r4, r2
9001f57e:	4698      	mov	r8, r3
9001f580:	4606      	mov	r6, r0
9001f582:	b118      	cbz	r0, 9001f58c <_vfiprintf_r+0x18>
9001f584:	6983      	ldr	r3, [r0, #24]
9001f586:	b90b      	cbnz	r3, 9001f58c <_vfiprintf_r+0x18>
9001f588:	f000 fe32 	bl	900201f0 <__sinit>
9001f58c:	4b89      	ldr	r3, [pc, #548]	; (9001f7b4 <_vfiprintf_r+0x240>)
9001f58e:	429d      	cmp	r5, r3
9001f590:	d11b      	bne.n	9001f5ca <_vfiprintf_r+0x56>
9001f592:	6875      	ldr	r5, [r6, #4]
9001f594:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9001f596:	07d9      	lsls	r1, r3, #31
9001f598:	d405      	bmi.n	9001f5a6 <_vfiprintf_r+0x32>
9001f59a:	89ab      	ldrh	r3, [r5, #12]
9001f59c:	059a      	lsls	r2, r3, #22
9001f59e:	d402      	bmi.n	9001f5a6 <_vfiprintf_r+0x32>
9001f5a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
9001f5a2:	f000 fec3 	bl	9002032c <__retarget_lock_acquire_recursive>
9001f5a6:	89ab      	ldrh	r3, [r5, #12]
9001f5a8:	071b      	lsls	r3, r3, #28
9001f5aa:	d501      	bpl.n	9001f5b0 <_vfiprintf_r+0x3c>
9001f5ac:	692b      	ldr	r3, [r5, #16]
9001f5ae:	b9eb      	cbnz	r3, 9001f5ec <_vfiprintf_r+0x78>
9001f5b0:	4629      	mov	r1, r5
9001f5b2:	4630      	mov	r0, r6
9001f5b4:	f000 fc32 	bl	9001fe1c <__swsetup_r>
9001f5b8:	b1c0      	cbz	r0, 9001f5ec <_vfiprintf_r+0x78>
9001f5ba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9001f5bc:	07dc      	lsls	r4, r3, #31
9001f5be:	d50e      	bpl.n	9001f5de <_vfiprintf_r+0x6a>
9001f5c0:	f04f 30ff 	mov.w	r0, #4294967295
9001f5c4:	b01d      	add	sp, #116	; 0x74
9001f5c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f5ca:	4b7b      	ldr	r3, [pc, #492]	; (9001f7b8 <_vfiprintf_r+0x244>)
9001f5cc:	429d      	cmp	r5, r3
9001f5ce:	d101      	bne.n	9001f5d4 <_vfiprintf_r+0x60>
9001f5d0:	68b5      	ldr	r5, [r6, #8]
9001f5d2:	e7df      	b.n	9001f594 <_vfiprintf_r+0x20>
9001f5d4:	4b79      	ldr	r3, [pc, #484]	; (9001f7bc <_vfiprintf_r+0x248>)
9001f5d6:	429d      	cmp	r5, r3
9001f5d8:	bf08      	it	eq
9001f5da:	68f5      	ldreq	r5, [r6, #12]
9001f5dc:	e7da      	b.n	9001f594 <_vfiprintf_r+0x20>
9001f5de:	89ab      	ldrh	r3, [r5, #12]
9001f5e0:	0598      	lsls	r0, r3, #22
9001f5e2:	d4ed      	bmi.n	9001f5c0 <_vfiprintf_r+0x4c>
9001f5e4:	6da8      	ldr	r0, [r5, #88]	; 0x58
9001f5e6:	f000 fea3 	bl	90020330 <__retarget_lock_release_recursive>
9001f5ea:	e7e9      	b.n	9001f5c0 <_vfiprintf_r+0x4c>
9001f5ec:	2300      	movs	r3, #0
9001f5ee:	9309      	str	r3, [sp, #36]	; 0x24
9001f5f0:	2320      	movs	r3, #32
9001f5f2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
9001f5f6:	f8cd 800c 	str.w	r8, [sp, #12]
9001f5fa:	2330      	movs	r3, #48	; 0x30
9001f5fc:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 9001f7c0 <_vfiprintf_r+0x24c>
9001f600:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
9001f604:	f04f 0901 	mov.w	r9, #1
9001f608:	4623      	mov	r3, r4
9001f60a:	469a      	mov	sl, r3
9001f60c:	f813 2b01 	ldrb.w	r2, [r3], #1
9001f610:	b10a      	cbz	r2, 9001f616 <_vfiprintf_r+0xa2>
9001f612:	2a25      	cmp	r2, #37	; 0x25
9001f614:	d1f9      	bne.n	9001f60a <_vfiprintf_r+0x96>
9001f616:	ebba 0b04 	subs.w	fp, sl, r4
9001f61a:	d00b      	beq.n	9001f634 <_vfiprintf_r+0xc0>
9001f61c:	465b      	mov	r3, fp
9001f61e:	4622      	mov	r2, r4
9001f620:	4629      	mov	r1, r5
9001f622:	4630      	mov	r0, r6
9001f624:	f7ff ff93 	bl	9001f54e <__sfputs_r>
9001f628:	3001      	adds	r0, #1
9001f62a:	f000 80aa 	beq.w	9001f782 <_vfiprintf_r+0x20e>
9001f62e:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001f630:	445a      	add	r2, fp
9001f632:	9209      	str	r2, [sp, #36]	; 0x24
9001f634:	f89a 3000 	ldrb.w	r3, [sl]
9001f638:	2b00      	cmp	r3, #0
9001f63a:	f000 80a2 	beq.w	9001f782 <_vfiprintf_r+0x20e>
9001f63e:	2300      	movs	r3, #0
9001f640:	f04f 32ff 	mov.w	r2, #4294967295
9001f644:	e9cd 2305 	strd	r2, r3, [sp, #20]
9001f648:	f10a 0a01 	add.w	sl, sl, #1
9001f64c:	9304      	str	r3, [sp, #16]
9001f64e:	9307      	str	r3, [sp, #28]
9001f650:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
9001f654:	931a      	str	r3, [sp, #104]	; 0x68
9001f656:	4654      	mov	r4, sl
9001f658:	2205      	movs	r2, #5
9001f65a:	f814 1b01 	ldrb.w	r1, [r4], #1
9001f65e:	4858      	ldr	r0, [pc, #352]	; (9001f7c0 <_vfiprintf_r+0x24c>)
9001f660:	f7e0 fe3e 	bl	900002e0 <memchr>
9001f664:	9a04      	ldr	r2, [sp, #16]
9001f666:	b9d8      	cbnz	r0, 9001f6a0 <_vfiprintf_r+0x12c>
9001f668:	06d1      	lsls	r1, r2, #27
9001f66a:	bf44      	itt	mi
9001f66c:	2320      	movmi	r3, #32
9001f66e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
9001f672:	0713      	lsls	r3, r2, #28
9001f674:	bf44      	itt	mi
9001f676:	232b      	movmi	r3, #43	; 0x2b
9001f678:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
9001f67c:	f89a 3000 	ldrb.w	r3, [sl]
9001f680:	2b2a      	cmp	r3, #42	; 0x2a
9001f682:	d015      	beq.n	9001f6b0 <_vfiprintf_r+0x13c>
9001f684:	9a07      	ldr	r2, [sp, #28]
9001f686:	4654      	mov	r4, sl
9001f688:	2000      	movs	r0, #0
9001f68a:	f04f 0c0a 	mov.w	ip, #10
9001f68e:	4621      	mov	r1, r4
9001f690:	f811 3b01 	ldrb.w	r3, [r1], #1
9001f694:	3b30      	subs	r3, #48	; 0x30
9001f696:	2b09      	cmp	r3, #9
9001f698:	d94e      	bls.n	9001f738 <_vfiprintf_r+0x1c4>
9001f69a:	b1b0      	cbz	r0, 9001f6ca <_vfiprintf_r+0x156>
9001f69c:	9207      	str	r2, [sp, #28]
9001f69e:	e014      	b.n	9001f6ca <_vfiprintf_r+0x156>
9001f6a0:	eba0 0308 	sub.w	r3, r0, r8
9001f6a4:	fa09 f303 	lsl.w	r3, r9, r3
9001f6a8:	4313      	orrs	r3, r2
9001f6aa:	9304      	str	r3, [sp, #16]
9001f6ac:	46a2      	mov	sl, r4
9001f6ae:	e7d2      	b.n	9001f656 <_vfiprintf_r+0xe2>
9001f6b0:	9b03      	ldr	r3, [sp, #12]
9001f6b2:	1d19      	adds	r1, r3, #4
9001f6b4:	681b      	ldr	r3, [r3, #0]
9001f6b6:	9103      	str	r1, [sp, #12]
9001f6b8:	2b00      	cmp	r3, #0
9001f6ba:	bfbb      	ittet	lt
9001f6bc:	425b      	neglt	r3, r3
9001f6be:	f042 0202 	orrlt.w	r2, r2, #2
9001f6c2:	9307      	strge	r3, [sp, #28]
9001f6c4:	9307      	strlt	r3, [sp, #28]
9001f6c6:	bfb8      	it	lt
9001f6c8:	9204      	strlt	r2, [sp, #16]
9001f6ca:	7823      	ldrb	r3, [r4, #0]
9001f6cc:	2b2e      	cmp	r3, #46	; 0x2e
9001f6ce:	d10c      	bne.n	9001f6ea <_vfiprintf_r+0x176>
9001f6d0:	7863      	ldrb	r3, [r4, #1]
9001f6d2:	2b2a      	cmp	r3, #42	; 0x2a
9001f6d4:	d135      	bne.n	9001f742 <_vfiprintf_r+0x1ce>
9001f6d6:	9b03      	ldr	r3, [sp, #12]
9001f6d8:	1d1a      	adds	r2, r3, #4
9001f6da:	681b      	ldr	r3, [r3, #0]
9001f6dc:	9203      	str	r2, [sp, #12]
9001f6de:	2b00      	cmp	r3, #0
9001f6e0:	bfb8      	it	lt
9001f6e2:	f04f 33ff 	movlt.w	r3, #4294967295
9001f6e6:	3402      	adds	r4, #2
9001f6e8:	9305      	str	r3, [sp, #20]
9001f6ea:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 9001f7d0 <_vfiprintf_r+0x25c>
9001f6ee:	7821      	ldrb	r1, [r4, #0]
9001f6f0:	2203      	movs	r2, #3
9001f6f2:	4650      	mov	r0, sl
9001f6f4:	f7e0 fdf4 	bl	900002e0 <memchr>
9001f6f8:	b140      	cbz	r0, 9001f70c <_vfiprintf_r+0x198>
9001f6fa:	2340      	movs	r3, #64	; 0x40
9001f6fc:	eba0 000a 	sub.w	r0, r0, sl
9001f700:	fa03 f000 	lsl.w	r0, r3, r0
9001f704:	9b04      	ldr	r3, [sp, #16]
9001f706:	4303      	orrs	r3, r0
9001f708:	3401      	adds	r4, #1
9001f70a:	9304      	str	r3, [sp, #16]
9001f70c:	f814 1b01 	ldrb.w	r1, [r4], #1
9001f710:	482c      	ldr	r0, [pc, #176]	; (9001f7c4 <_vfiprintf_r+0x250>)
9001f712:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
9001f716:	2206      	movs	r2, #6
9001f718:	f7e0 fde2 	bl	900002e0 <memchr>
9001f71c:	2800      	cmp	r0, #0
9001f71e:	d03f      	beq.n	9001f7a0 <_vfiprintf_r+0x22c>
9001f720:	4b29      	ldr	r3, [pc, #164]	; (9001f7c8 <_vfiprintf_r+0x254>)
9001f722:	bb1b      	cbnz	r3, 9001f76c <_vfiprintf_r+0x1f8>
9001f724:	9b03      	ldr	r3, [sp, #12]
9001f726:	3307      	adds	r3, #7
9001f728:	f023 0307 	bic.w	r3, r3, #7
9001f72c:	3308      	adds	r3, #8
9001f72e:	9303      	str	r3, [sp, #12]
9001f730:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f732:	443b      	add	r3, r7
9001f734:	9309      	str	r3, [sp, #36]	; 0x24
9001f736:	e767      	b.n	9001f608 <_vfiprintf_r+0x94>
9001f738:	fb0c 3202 	mla	r2, ip, r2, r3
9001f73c:	460c      	mov	r4, r1
9001f73e:	2001      	movs	r0, #1
9001f740:	e7a5      	b.n	9001f68e <_vfiprintf_r+0x11a>
9001f742:	2300      	movs	r3, #0
9001f744:	3401      	adds	r4, #1
9001f746:	9305      	str	r3, [sp, #20]
9001f748:	4619      	mov	r1, r3
9001f74a:	f04f 0c0a 	mov.w	ip, #10
9001f74e:	4620      	mov	r0, r4
9001f750:	f810 2b01 	ldrb.w	r2, [r0], #1
9001f754:	3a30      	subs	r2, #48	; 0x30
9001f756:	2a09      	cmp	r2, #9
9001f758:	d903      	bls.n	9001f762 <_vfiprintf_r+0x1ee>
9001f75a:	2b00      	cmp	r3, #0
9001f75c:	d0c5      	beq.n	9001f6ea <_vfiprintf_r+0x176>
9001f75e:	9105      	str	r1, [sp, #20]
9001f760:	e7c3      	b.n	9001f6ea <_vfiprintf_r+0x176>
9001f762:	fb0c 2101 	mla	r1, ip, r1, r2
9001f766:	4604      	mov	r4, r0
9001f768:	2301      	movs	r3, #1
9001f76a:	e7f0      	b.n	9001f74e <_vfiprintf_r+0x1da>
9001f76c:	ab03      	add	r3, sp, #12
9001f76e:	9300      	str	r3, [sp, #0]
9001f770:	462a      	mov	r2, r5
9001f772:	4b16      	ldr	r3, [pc, #88]	; (9001f7cc <_vfiprintf_r+0x258>)
9001f774:	a904      	add	r1, sp, #16
9001f776:	4630      	mov	r0, r6
9001f778:	f3af 8000 	nop.w
9001f77c:	4607      	mov	r7, r0
9001f77e:	1c78      	adds	r0, r7, #1
9001f780:	d1d6      	bne.n	9001f730 <_vfiprintf_r+0x1bc>
9001f782:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9001f784:	07d9      	lsls	r1, r3, #31
9001f786:	d405      	bmi.n	9001f794 <_vfiprintf_r+0x220>
9001f788:	89ab      	ldrh	r3, [r5, #12]
9001f78a:	059a      	lsls	r2, r3, #22
9001f78c:	d402      	bmi.n	9001f794 <_vfiprintf_r+0x220>
9001f78e:	6da8      	ldr	r0, [r5, #88]	; 0x58
9001f790:	f000 fdce 	bl	90020330 <__retarget_lock_release_recursive>
9001f794:	89ab      	ldrh	r3, [r5, #12]
9001f796:	065b      	lsls	r3, r3, #25
9001f798:	f53f af12 	bmi.w	9001f5c0 <_vfiprintf_r+0x4c>
9001f79c:	9809      	ldr	r0, [sp, #36]	; 0x24
9001f79e:	e711      	b.n	9001f5c4 <_vfiprintf_r+0x50>
9001f7a0:	ab03      	add	r3, sp, #12
9001f7a2:	9300      	str	r3, [sp, #0]
9001f7a4:	462a      	mov	r2, r5
9001f7a6:	4b09      	ldr	r3, [pc, #36]	; (9001f7cc <_vfiprintf_r+0x258>)
9001f7a8:	a904      	add	r1, sp, #16
9001f7aa:	4630      	mov	r0, r6
9001f7ac:	f000 f880 	bl	9001f8b0 <_printf_i>
9001f7b0:	e7e4      	b.n	9001f77c <_vfiprintf_r+0x208>
9001f7b2:	bf00      	nop
9001f7b4:	90024158 	.word	0x90024158
9001f7b8:	90024178 	.word	0x90024178
9001f7bc:	90024138 	.word	0x90024138
9001f7c0:	90023f84 	.word	0x90023f84
9001f7c4:	90023f8e 	.word	0x90023f8e
9001f7c8:	00000000 	.word	0x00000000
9001f7cc:	9001f54f 	.word	0x9001f54f
9001f7d0:	90023f8a 	.word	0x90023f8a

9001f7d4 <_printf_common>:
9001f7d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001f7d8:	4616      	mov	r6, r2
9001f7da:	4699      	mov	r9, r3
9001f7dc:	688a      	ldr	r2, [r1, #8]
9001f7de:	690b      	ldr	r3, [r1, #16]
9001f7e0:	f8dd 8020 	ldr.w	r8, [sp, #32]
9001f7e4:	4293      	cmp	r3, r2
9001f7e6:	bfb8      	it	lt
9001f7e8:	4613      	movlt	r3, r2
9001f7ea:	6033      	str	r3, [r6, #0]
9001f7ec:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
9001f7f0:	4607      	mov	r7, r0
9001f7f2:	460c      	mov	r4, r1
9001f7f4:	b10a      	cbz	r2, 9001f7fa <_printf_common+0x26>
9001f7f6:	3301      	adds	r3, #1
9001f7f8:	6033      	str	r3, [r6, #0]
9001f7fa:	6823      	ldr	r3, [r4, #0]
9001f7fc:	0699      	lsls	r1, r3, #26
9001f7fe:	bf42      	ittt	mi
9001f800:	6833      	ldrmi	r3, [r6, #0]
9001f802:	3302      	addmi	r3, #2
9001f804:	6033      	strmi	r3, [r6, #0]
9001f806:	6825      	ldr	r5, [r4, #0]
9001f808:	f015 0506 	ands.w	r5, r5, #6
9001f80c:	d106      	bne.n	9001f81c <_printf_common+0x48>
9001f80e:	f104 0a19 	add.w	sl, r4, #25
9001f812:	68e3      	ldr	r3, [r4, #12]
9001f814:	6832      	ldr	r2, [r6, #0]
9001f816:	1a9b      	subs	r3, r3, r2
9001f818:	42ab      	cmp	r3, r5
9001f81a:	dc26      	bgt.n	9001f86a <_printf_common+0x96>
9001f81c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
9001f820:	1e13      	subs	r3, r2, #0
9001f822:	6822      	ldr	r2, [r4, #0]
9001f824:	bf18      	it	ne
9001f826:	2301      	movne	r3, #1
9001f828:	0692      	lsls	r2, r2, #26
9001f82a:	d42b      	bmi.n	9001f884 <_printf_common+0xb0>
9001f82c:	f104 0243 	add.w	r2, r4, #67	; 0x43
9001f830:	4649      	mov	r1, r9
9001f832:	4638      	mov	r0, r7
9001f834:	47c0      	blx	r8
9001f836:	3001      	adds	r0, #1
9001f838:	d01e      	beq.n	9001f878 <_printf_common+0xa4>
9001f83a:	6823      	ldr	r3, [r4, #0]
9001f83c:	68e5      	ldr	r5, [r4, #12]
9001f83e:	6832      	ldr	r2, [r6, #0]
9001f840:	f003 0306 	and.w	r3, r3, #6
9001f844:	2b04      	cmp	r3, #4
9001f846:	bf08      	it	eq
9001f848:	1aad      	subeq	r5, r5, r2
9001f84a:	68a3      	ldr	r3, [r4, #8]
9001f84c:	6922      	ldr	r2, [r4, #16]
9001f84e:	bf0c      	ite	eq
9001f850:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9001f854:	2500      	movne	r5, #0
9001f856:	4293      	cmp	r3, r2
9001f858:	bfc4      	itt	gt
9001f85a:	1a9b      	subgt	r3, r3, r2
9001f85c:	18ed      	addgt	r5, r5, r3
9001f85e:	2600      	movs	r6, #0
9001f860:	341a      	adds	r4, #26
9001f862:	42b5      	cmp	r5, r6
9001f864:	d11a      	bne.n	9001f89c <_printf_common+0xc8>
9001f866:	2000      	movs	r0, #0
9001f868:	e008      	b.n	9001f87c <_printf_common+0xa8>
9001f86a:	2301      	movs	r3, #1
9001f86c:	4652      	mov	r2, sl
9001f86e:	4649      	mov	r1, r9
9001f870:	4638      	mov	r0, r7
9001f872:	47c0      	blx	r8
9001f874:	3001      	adds	r0, #1
9001f876:	d103      	bne.n	9001f880 <_printf_common+0xac>
9001f878:	f04f 30ff 	mov.w	r0, #4294967295
9001f87c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001f880:	3501      	adds	r5, #1
9001f882:	e7c6      	b.n	9001f812 <_printf_common+0x3e>
9001f884:	18e1      	adds	r1, r4, r3
9001f886:	1c5a      	adds	r2, r3, #1
9001f888:	2030      	movs	r0, #48	; 0x30
9001f88a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
9001f88e:	4422      	add	r2, r4
9001f890:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
9001f894:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
9001f898:	3302      	adds	r3, #2
9001f89a:	e7c7      	b.n	9001f82c <_printf_common+0x58>
9001f89c:	2301      	movs	r3, #1
9001f89e:	4622      	mov	r2, r4
9001f8a0:	4649      	mov	r1, r9
9001f8a2:	4638      	mov	r0, r7
9001f8a4:	47c0      	blx	r8
9001f8a6:	3001      	adds	r0, #1
9001f8a8:	d0e6      	beq.n	9001f878 <_printf_common+0xa4>
9001f8aa:	3601      	adds	r6, #1
9001f8ac:	e7d9      	b.n	9001f862 <_printf_common+0x8e>
	...

9001f8b0 <_printf_i>:
9001f8b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001f8b4:	460c      	mov	r4, r1
9001f8b6:	4691      	mov	r9, r2
9001f8b8:	7e27      	ldrb	r7, [r4, #24]
9001f8ba:	990c      	ldr	r1, [sp, #48]	; 0x30
9001f8bc:	2f78      	cmp	r7, #120	; 0x78
9001f8be:	4680      	mov	r8, r0
9001f8c0:	469a      	mov	sl, r3
9001f8c2:	f104 0243 	add.w	r2, r4, #67	; 0x43
9001f8c6:	d807      	bhi.n	9001f8d8 <_printf_i+0x28>
9001f8c8:	2f62      	cmp	r7, #98	; 0x62
9001f8ca:	d80a      	bhi.n	9001f8e2 <_printf_i+0x32>
9001f8cc:	2f00      	cmp	r7, #0
9001f8ce:	f000 80d8 	beq.w	9001fa82 <_printf_i+0x1d2>
9001f8d2:	2f58      	cmp	r7, #88	; 0x58
9001f8d4:	f000 80a3 	beq.w	9001fa1e <_printf_i+0x16e>
9001f8d8:	f104 0642 	add.w	r6, r4, #66	; 0x42
9001f8dc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
9001f8e0:	e03a      	b.n	9001f958 <_printf_i+0xa8>
9001f8e2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
9001f8e6:	2b15      	cmp	r3, #21
9001f8e8:	d8f6      	bhi.n	9001f8d8 <_printf_i+0x28>
9001f8ea:	a001      	add	r0, pc, #4	; (adr r0, 9001f8f0 <_printf_i+0x40>)
9001f8ec:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
9001f8f0:	9001f949 	.word	0x9001f949
9001f8f4:	9001f95d 	.word	0x9001f95d
9001f8f8:	9001f8d9 	.word	0x9001f8d9
9001f8fc:	9001f8d9 	.word	0x9001f8d9
9001f900:	9001f8d9 	.word	0x9001f8d9
9001f904:	9001f8d9 	.word	0x9001f8d9
9001f908:	9001f95d 	.word	0x9001f95d
9001f90c:	9001f8d9 	.word	0x9001f8d9
9001f910:	9001f8d9 	.word	0x9001f8d9
9001f914:	9001f8d9 	.word	0x9001f8d9
9001f918:	9001f8d9 	.word	0x9001f8d9
9001f91c:	9001fa69 	.word	0x9001fa69
9001f920:	9001f98d 	.word	0x9001f98d
9001f924:	9001fa4b 	.word	0x9001fa4b
9001f928:	9001f8d9 	.word	0x9001f8d9
9001f92c:	9001f8d9 	.word	0x9001f8d9
9001f930:	9001fa8b 	.word	0x9001fa8b
9001f934:	9001f8d9 	.word	0x9001f8d9
9001f938:	9001f98d 	.word	0x9001f98d
9001f93c:	9001f8d9 	.word	0x9001f8d9
9001f940:	9001f8d9 	.word	0x9001f8d9
9001f944:	9001fa53 	.word	0x9001fa53
9001f948:	680b      	ldr	r3, [r1, #0]
9001f94a:	1d1a      	adds	r2, r3, #4
9001f94c:	681b      	ldr	r3, [r3, #0]
9001f94e:	600a      	str	r2, [r1, #0]
9001f950:	f104 0642 	add.w	r6, r4, #66	; 0x42
9001f954:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9001f958:	2301      	movs	r3, #1
9001f95a:	e0a3      	b.n	9001faa4 <_printf_i+0x1f4>
9001f95c:	6825      	ldr	r5, [r4, #0]
9001f95e:	6808      	ldr	r0, [r1, #0]
9001f960:	062e      	lsls	r6, r5, #24
9001f962:	f100 0304 	add.w	r3, r0, #4
9001f966:	d50a      	bpl.n	9001f97e <_printf_i+0xce>
9001f968:	6805      	ldr	r5, [r0, #0]
9001f96a:	600b      	str	r3, [r1, #0]
9001f96c:	2d00      	cmp	r5, #0
9001f96e:	da03      	bge.n	9001f978 <_printf_i+0xc8>
9001f970:	232d      	movs	r3, #45	; 0x2d
9001f972:	426d      	negs	r5, r5
9001f974:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9001f978:	485e      	ldr	r0, [pc, #376]	; (9001faf4 <_printf_i+0x244>)
9001f97a:	230a      	movs	r3, #10
9001f97c:	e019      	b.n	9001f9b2 <_printf_i+0x102>
9001f97e:	f015 0f40 	tst.w	r5, #64	; 0x40
9001f982:	6805      	ldr	r5, [r0, #0]
9001f984:	600b      	str	r3, [r1, #0]
9001f986:	bf18      	it	ne
9001f988:	b22d      	sxthne	r5, r5
9001f98a:	e7ef      	b.n	9001f96c <_printf_i+0xbc>
9001f98c:	680b      	ldr	r3, [r1, #0]
9001f98e:	6825      	ldr	r5, [r4, #0]
9001f990:	1d18      	adds	r0, r3, #4
9001f992:	6008      	str	r0, [r1, #0]
9001f994:	0628      	lsls	r0, r5, #24
9001f996:	d501      	bpl.n	9001f99c <_printf_i+0xec>
9001f998:	681d      	ldr	r5, [r3, #0]
9001f99a:	e002      	b.n	9001f9a2 <_printf_i+0xf2>
9001f99c:	0669      	lsls	r1, r5, #25
9001f99e:	d5fb      	bpl.n	9001f998 <_printf_i+0xe8>
9001f9a0:	881d      	ldrh	r5, [r3, #0]
9001f9a2:	4854      	ldr	r0, [pc, #336]	; (9001faf4 <_printf_i+0x244>)
9001f9a4:	2f6f      	cmp	r7, #111	; 0x6f
9001f9a6:	bf0c      	ite	eq
9001f9a8:	2308      	moveq	r3, #8
9001f9aa:	230a      	movne	r3, #10
9001f9ac:	2100      	movs	r1, #0
9001f9ae:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
9001f9b2:	6866      	ldr	r6, [r4, #4]
9001f9b4:	60a6      	str	r6, [r4, #8]
9001f9b6:	2e00      	cmp	r6, #0
9001f9b8:	bfa2      	ittt	ge
9001f9ba:	6821      	ldrge	r1, [r4, #0]
9001f9bc:	f021 0104 	bicge.w	r1, r1, #4
9001f9c0:	6021      	strge	r1, [r4, #0]
9001f9c2:	b90d      	cbnz	r5, 9001f9c8 <_printf_i+0x118>
9001f9c4:	2e00      	cmp	r6, #0
9001f9c6:	d04d      	beq.n	9001fa64 <_printf_i+0x1b4>
9001f9c8:	4616      	mov	r6, r2
9001f9ca:	fbb5 f1f3 	udiv	r1, r5, r3
9001f9ce:	fb03 5711 	mls	r7, r3, r1, r5
9001f9d2:	5dc7      	ldrb	r7, [r0, r7]
9001f9d4:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001f9d8:	462f      	mov	r7, r5
9001f9da:	42bb      	cmp	r3, r7
9001f9dc:	460d      	mov	r5, r1
9001f9de:	d9f4      	bls.n	9001f9ca <_printf_i+0x11a>
9001f9e0:	2b08      	cmp	r3, #8
9001f9e2:	d10b      	bne.n	9001f9fc <_printf_i+0x14c>
9001f9e4:	6823      	ldr	r3, [r4, #0]
9001f9e6:	07df      	lsls	r7, r3, #31
9001f9e8:	d508      	bpl.n	9001f9fc <_printf_i+0x14c>
9001f9ea:	6923      	ldr	r3, [r4, #16]
9001f9ec:	6861      	ldr	r1, [r4, #4]
9001f9ee:	4299      	cmp	r1, r3
9001f9f0:	bfde      	ittt	le
9001f9f2:	2330      	movle	r3, #48	; 0x30
9001f9f4:	f806 3c01 	strble.w	r3, [r6, #-1]
9001f9f8:	f106 36ff 	addle.w	r6, r6, #4294967295
9001f9fc:	1b92      	subs	r2, r2, r6
9001f9fe:	6122      	str	r2, [r4, #16]
9001fa00:	f8cd a000 	str.w	sl, [sp]
9001fa04:	464b      	mov	r3, r9
9001fa06:	aa03      	add	r2, sp, #12
9001fa08:	4621      	mov	r1, r4
9001fa0a:	4640      	mov	r0, r8
9001fa0c:	f7ff fee2 	bl	9001f7d4 <_printf_common>
9001fa10:	3001      	adds	r0, #1
9001fa12:	d14c      	bne.n	9001faae <_printf_i+0x1fe>
9001fa14:	f04f 30ff 	mov.w	r0, #4294967295
9001fa18:	b004      	add	sp, #16
9001fa1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001fa1e:	4835      	ldr	r0, [pc, #212]	; (9001faf4 <_printf_i+0x244>)
9001fa20:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
9001fa24:	6823      	ldr	r3, [r4, #0]
9001fa26:	680e      	ldr	r6, [r1, #0]
9001fa28:	061f      	lsls	r7, r3, #24
9001fa2a:	f856 5b04 	ldr.w	r5, [r6], #4
9001fa2e:	600e      	str	r6, [r1, #0]
9001fa30:	d514      	bpl.n	9001fa5c <_printf_i+0x1ac>
9001fa32:	07d9      	lsls	r1, r3, #31
9001fa34:	bf44      	itt	mi
9001fa36:	f043 0320 	orrmi.w	r3, r3, #32
9001fa3a:	6023      	strmi	r3, [r4, #0]
9001fa3c:	b91d      	cbnz	r5, 9001fa46 <_printf_i+0x196>
9001fa3e:	6823      	ldr	r3, [r4, #0]
9001fa40:	f023 0320 	bic.w	r3, r3, #32
9001fa44:	6023      	str	r3, [r4, #0]
9001fa46:	2310      	movs	r3, #16
9001fa48:	e7b0      	b.n	9001f9ac <_printf_i+0xfc>
9001fa4a:	6823      	ldr	r3, [r4, #0]
9001fa4c:	f043 0320 	orr.w	r3, r3, #32
9001fa50:	6023      	str	r3, [r4, #0]
9001fa52:	2378      	movs	r3, #120	; 0x78
9001fa54:	4828      	ldr	r0, [pc, #160]	; (9001faf8 <_printf_i+0x248>)
9001fa56:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9001fa5a:	e7e3      	b.n	9001fa24 <_printf_i+0x174>
9001fa5c:	065e      	lsls	r6, r3, #25
9001fa5e:	bf48      	it	mi
9001fa60:	b2ad      	uxthmi	r5, r5
9001fa62:	e7e6      	b.n	9001fa32 <_printf_i+0x182>
9001fa64:	4616      	mov	r6, r2
9001fa66:	e7bb      	b.n	9001f9e0 <_printf_i+0x130>
9001fa68:	680b      	ldr	r3, [r1, #0]
9001fa6a:	6826      	ldr	r6, [r4, #0]
9001fa6c:	6960      	ldr	r0, [r4, #20]
9001fa6e:	1d1d      	adds	r5, r3, #4
9001fa70:	600d      	str	r5, [r1, #0]
9001fa72:	0635      	lsls	r5, r6, #24
9001fa74:	681b      	ldr	r3, [r3, #0]
9001fa76:	d501      	bpl.n	9001fa7c <_printf_i+0x1cc>
9001fa78:	6018      	str	r0, [r3, #0]
9001fa7a:	e002      	b.n	9001fa82 <_printf_i+0x1d2>
9001fa7c:	0671      	lsls	r1, r6, #25
9001fa7e:	d5fb      	bpl.n	9001fa78 <_printf_i+0x1c8>
9001fa80:	8018      	strh	r0, [r3, #0]
9001fa82:	2300      	movs	r3, #0
9001fa84:	6123      	str	r3, [r4, #16]
9001fa86:	4616      	mov	r6, r2
9001fa88:	e7ba      	b.n	9001fa00 <_printf_i+0x150>
9001fa8a:	680b      	ldr	r3, [r1, #0]
9001fa8c:	1d1a      	adds	r2, r3, #4
9001fa8e:	600a      	str	r2, [r1, #0]
9001fa90:	681e      	ldr	r6, [r3, #0]
9001fa92:	6862      	ldr	r2, [r4, #4]
9001fa94:	2100      	movs	r1, #0
9001fa96:	4630      	mov	r0, r6
9001fa98:	f7e0 fc22 	bl	900002e0 <memchr>
9001fa9c:	b108      	cbz	r0, 9001faa2 <_printf_i+0x1f2>
9001fa9e:	1b80      	subs	r0, r0, r6
9001faa0:	6060      	str	r0, [r4, #4]
9001faa2:	6863      	ldr	r3, [r4, #4]
9001faa4:	6123      	str	r3, [r4, #16]
9001faa6:	2300      	movs	r3, #0
9001faa8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9001faac:	e7a8      	b.n	9001fa00 <_printf_i+0x150>
9001faae:	6923      	ldr	r3, [r4, #16]
9001fab0:	4632      	mov	r2, r6
9001fab2:	4649      	mov	r1, r9
9001fab4:	4640      	mov	r0, r8
9001fab6:	47d0      	blx	sl
9001fab8:	3001      	adds	r0, #1
9001faba:	d0ab      	beq.n	9001fa14 <_printf_i+0x164>
9001fabc:	6823      	ldr	r3, [r4, #0]
9001fabe:	079b      	lsls	r3, r3, #30
9001fac0:	d413      	bmi.n	9001faea <_printf_i+0x23a>
9001fac2:	68e0      	ldr	r0, [r4, #12]
9001fac4:	9b03      	ldr	r3, [sp, #12]
9001fac6:	4298      	cmp	r0, r3
9001fac8:	bfb8      	it	lt
9001faca:	4618      	movlt	r0, r3
9001facc:	e7a4      	b.n	9001fa18 <_printf_i+0x168>
9001face:	2301      	movs	r3, #1
9001fad0:	4632      	mov	r2, r6
9001fad2:	4649      	mov	r1, r9
9001fad4:	4640      	mov	r0, r8
9001fad6:	47d0      	blx	sl
9001fad8:	3001      	adds	r0, #1
9001fada:	d09b      	beq.n	9001fa14 <_printf_i+0x164>
9001fadc:	3501      	adds	r5, #1
9001fade:	68e3      	ldr	r3, [r4, #12]
9001fae0:	9903      	ldr	r1, [sp, #12]
9001fae2:	1a5b      	subs	r3, r3, r1
9001fae4:	42ab      	cmp	r3, r5
9001fae6:	dcf2      	bgt.n	9001face <_printf_i+0x21e>
9001fae8:	e7eb      	b.n	9001fac2 <_printf_i+0x212>
9001faea:	2500      	movs	r5, #0
9001faec:	f104 0619 	add.w	r6, r4, #25
9001faf0:	e7f5      	b.n	9001fade <_printf_i+0x22e>
9001faf2:	bf00      	nop
9001faf4:	90023f95 	.word	0x90023f95
9001faf8:	90023fa6 	.word	0x90023fa6

9001fafc <_sbrk_r>:
9001fafc:	b538      	push	{r3, r4, r5, lr}
9001fafe:	4d06      	ldr	r5, [pc, #24]	; (9001fb18 <_sbrk_r+0x1c>)
9001fb00:	2300      	movs	r3, #0
9001fb02:	4604      	mov	r4, r0
9001fb04:	4608      	mov	r0, r1
9001fb06:	602b      	str	r3, [r5, #0]
9001fb08:	f7e3 ff34 	bl	90003974 <_sbrk>
9001fb0c:	1c43      	adds	r3, r0, #1
9001fb0e:	d102      	bne.n	9001fb16 <_sbrk_r+0x1a>
9001fb10:	682b      	ldr	r3, [r5, #0]
9001fb12:	b103      	cbz	r3, 9001fb16 <_sbrk_r+0x1a>
9001fb14:	6023      	str	r3, [r4, #0]
9001fb16:	bd38      	pop	{r3, r4, r5, pc}
9001fb18:	240130e8 	.word	0x240130e8

9001fb1c <_raise_r>:
9001fb1c:	291f      	cmp	r1, #31
9001fb1e:	b538      	push	{r3, r4, r5, lr}
9001fb20:	4604      	mov	r4, r0
9001fb22:	460d      	mov	r5, r1
9001fb24:	d904      	bls.n	9001fb30 <_raise_r+0x14>
9001fb26:	2316      	movs	r3, #22
9001fb28:	6003      	str	r3, [r0, #0]
9001fb2a:	f04f 30ff 	mov.w	r0, #4294967295
9001fb2e:	bd38      	pop	{r3, r4, r5, pc}
9001fb30:	6c42      	ldr	r2, [r0, #68]	; 0x44
9001fb32:	b112      	cbz	r2, 9001fb3a <_raise_r+0x1e>
9001fb34:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9001fb38:	b94b      	cbnz	r3, 9001fb4e <_raise_r+0x32>
9001fb3a:	4620      	mov	r0, r4
9001fb3c:	f000 f830 	bl	9001fba0 <_getpid_r>
9001fb40:	462a      	mov	r2, r5
9001fb42:	4601      	mov	r1, r0
9001fb44:	4620      	mov	r0, r4
9001fb46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9001fb4a:	f000 b817 	b.w	9001fb7c <_kill_r>
9001fb4e:	2b01      	cmp	r3, #1
9001fb50:	d00a      	beq.n	9001fb68 <_raise_r+0x4c>
9001fb52:	1c59      	adds	r1, r3, #1
9001fb54:	d103      	bne.n	9001fb5e <_raise_r+0x42>
9001fb56:	2316      	movs	r3, #22
9001fb58:	6003      	str	r3, [r0, #0]
9001fb5a:	2001      	movs	r0, #1
9001fb5c:	e7e7      	b.n	9001fb2e <_raise_r+0x12>
9001fb5e:	2400      	movs	r4, #0
9001fb60:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
9001fb64:	4628      	mov	r0, r5
9001fb66:	4798      	blx	r3
9001fb68:	2000      	movs	r0, #0
9001fb6a:	e7e0      	b.n	9001fb2e <_raise_r+0x12>

9001fb6c <raise>:
9001fb6c:	4b02      	ldr	r3, [pc, #8]	; (9001fb78 <raise+0xc>)
9001fb6e:	4601      	mov	r1, r0
9001fb70:	6818      	ldr	r0, [r3, #0]
9001fb72:	f7ff bfd3 	b.w	9001fb1c <_raise_r>
9001fb76:	bf00      	nop
9001fb78:	240000c8 	.word	0x240000c8

9001fb7c <_kill_r>:
9001fb7c:	b538      	push	{r3, r4, r5, lr}
9001fb7e:	4d07      	ldr	r5, [pc, #28]	; (9001fb9c <_kill_r+0x20>)
9001fb80:	2300      	movs	r3, #0
9001fb82:	4604      	mov	r4, r0
9001fb84:	4608      	mov	r0, r1
9001fb86:	4611      	mov	r1, r2
9001fb88:	602b      	str	r3, [r5, #0]
9001fb8a:	f7e3 febf 	bl	9000390c <_kill>
9001fb8e:	1c43      	adds	r3, r0, #1
9001fb90:	d102      	bne.n	9001fb98 <_kill_r+0x1c>
9001fb92:	682b      	ldr	r3, [r5, #0]
9001fb94:	b103      	cbz	r3, 9001fb98 <_kill_r+0x1c>
9001fb96:	6023      	str	r3, [r4, #0]
9001fb98:	bd38      	pop	{r3, r4, r5, pc}
9001fb9a:	bf00      	nop
9001fb9c:	240130e8 	.word	0x240130e8

9001fba0 <_getpid_r>:
9001fba0:	f7e3 beb2 	b.w	90003908 <_getpid>

9001fba4 <strtok>:
9001fba4:	4b16      	ldr	r3, [pc, #88]	; (9001fc00 <strtok+0x5c>)
9001fba6:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001fba8:	681e      	ldr	r6, [r3, #0]
9001fbaa:	6db4      	ldr	r4, [r6, #88]	; 0x58
9001fbac:	4605      	mov	r5, r0
9001fbae:	b9fc      	cbnz	r4, 9001fbf0 <strtok+0x4c>
9001fbb0:	2050      	movs	r0, #80	; 0x50
9001fbb2:	9101      	str	r1, [sp, #4]
9001fbb4:	f7ff fbe4 	bl	9001f380 <malloc>
9001fbb8:	9901      	ldr	r1, [sp, #4]
9001fbba:	65b0      	str	r0, [r6, #88]	; 0x58
9001fbbc:	4602      	mov	r2, r0
9001fbbe:	b920      	cbnz	r0, 9001fbca <strtok+0x26>
9001fbc0:	4b10      	ldr	r3, [pc, #64]	; (9001fc04 <strtok+0x60>)
9001fbc2:	4811      	ldr	r0, [pc, #68]	; (9001fc08 <strtok+0x64>)
9001fbc4:	2157      	movs	r1, #87	; 0x57
9001fbc6:	f7ff fb6d 	bl	9001f2a4 <__assert_func>
9001fbca:	e9c0 4400 	strd	r4, r4, [r0]
9001fbce:	e9c0 4402 	strd	r4, r4, [r0, #8]
9001fbd2:	e9c0 4404 	strd	r4, r4, [r0, #16]
9001fbd6:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
9001fbda:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
9001fbde:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
9001fbe2:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
9001fbe6:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
9001fbea:	6184      	str	r4, [r0, #24]
9001fbec:	7704      	strb	r4, [r0, #28]
9001fbee:	6244      	str	r4, [r0, #36]	; 0x24
9001fbf0:	6db2      	ldr	r2, [r6, #88]	; 0x58
9001fbf2:	2301      	movs	r3, #1
9001fbf4:	4628      	mov	r0, r5
9001fbf6:	b002      	add	sp, #8
9001fbf8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001fbfc:	f000 b806 	b.w	9001fc0c <__strtok_r>
9001fc00:	240000c8 	.word	0x240000c8
9001fc04:	90023fbc 	.word	0x90023fbc
9001fc08:	90023fd3 	.word	0x90023fd3

9001fc0c <__strtok_r>:
9001fc0c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001fc0e:	b908      	cbnz	r0, 9001fc14 <__strtok_r+0x8>
9001fc10:	6810      	ldr	r0, [r2, #0]
9001fc12:	b188      	cbz	r0, 9001fc38 <__strtok_r+0x2c>
9001fc14:	4604      	mov	r4, r0
9001fc16:	4620      	mov	r0, r4
9001fc18:	f814 5b01 	ldrb.w	r5, [r4], #1
9001fc1c:	460f      	mov	r7, r1
9001fc1e:	f817 6b01 	ldrb.w	r6, [r7], #1
9001fc22:	b91e      	cbnz	r6, 9001fc2c <__strtok_r+0x20>
9001fc24:	b965      	cbnz	r5, 9001fc40 <__strtok_r+0x34>
9001fc26:	6015      	str	r5, [r2, #0]
9001fc28:	4628      	mov	r0, r5
9001fc2a:	e005      	b.n	9001fc38 <__strtok_r+0x2c>
9001fc2c:	42b5      	cmp	r5, r6
9001fc2e:	d1f6      	bne.n	9001fc1e <__strtok_r+0x12>
9001fc30:	2b00      	cmp	r3, #0
9001fc32:	d1f0      	bne.n	9001fc16 <__strtok_r+0xa>
9001fc34:	6014      	str	r4, [r2, #0]
9001fc36:	7003      	strb	r3, [r0, #0]
9001fc38:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001fc3a:	461c      	mov	r4, r3
9001fc3c:	e00c      	b.n	9001fc58 <__strtok_r+0x4c>
9001fc3e:	b915      	cbnz	r5, 9001fc46 <__strtok_r+0x3a>
9001fc40:	f814 3b01 	ldrb.w	r3, [r4], #1
9001fc44:	460e      	mov	r6, r1
9001fc46:	f816 5b01 	ldrb.w	r5, [r6], #1
9001fc4a:	42ab      	cmp	r3, r5
9001fc4c:	d1f7      	bne.n	9001fc3e <__strtok_r+0x32>
9001fc4e:	2b00      	cmp	r3, #0
9001fc50:	d0f3      	beq.n	9001fc3a <__strtok_r+0x2e>
9001fc52:	2300      	movs	r3, #0
9001fc54:	f804 3c01 	strb.w	r3, [r4, #-1]
9001fc58:	6014      	str	r4, [r2, #0]
9001fc5a:	e7ed      	b.n	9001fc38 <__strtok_r+0x2c>

9001fc5c <_strtol_l.isra.0>:
9001fc5c:	2b01      	cmp	r3, #1
9001fc5e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001fc62:	d001      	beq.n	9001fc68 <_strtol_l.isra.0+0xc>
9001fc64:	2b24      	cmp	r3, #36	; 0x24
9001fc66:	d906      	bls.n	9001fc76 <_strtol_l.isra.0+0x1a>
9001fc68:	f7ff fb4e 	bl	9001f308 <__errno>
9001fc6c:	2316      	movs	r3, #22
9001fc6e:	6003      	str	r3, [r0, #0]
9001fc70:	2000      	movs	r0, #0
9001fc72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001fc76:	4f3a      	ldr	r7, [pc, #232]	; (9001fd60 <_strtol_l.isra.0+0x104>)
9001fc78:	468e      	mov	lr, r1
9001fc7a:	4676      	mov	r6, lr
9001fc7c:	f81e 4b01 	ldrb.w	r4, [lr], #1
9001fc80:	5de5      	ldrb	r5, [r4, r7]
9001fc82:	f015 0508 	ands.w	r5, r5, #8
9001fc86:	d1f8      	bne.n	9001fc7a <_strtol_l.isra.0+0x1e>
9001fc88:	2c2d      	cmp	r4, #45	; 0x2d
9001fc8a:	d134      	bne.n	9001fcf6 <_strtol_l.isra.0+0x9a>
9001fc8c:	f89e 4000 	ldrb.w	r4, [lr]
9001fc90:	f04f 0801 	mov.w	r8, #1
9001fc94:	f106 0e02 	add.w	lr, r6, #2
9001fc98:	2b00      	cmp	r3, #0
9001fc9a:	d05c      	beq.n	9001fd56 <_strtol_l.isra.0+0xfa>
9001fc9c:	2b10      	cmp	r3, #16
9001fc9e:	d10c      	bne.n	9001fcba <_strtol_l.isra.0+0x5e>
9001fca0:	2c30      	cmp	r4, #48	; 0x30
9001fca2:	d10a      	bne.n	9001fcba <_strtol_l.isra.0+0x5e>
9001fca4:	f89e 4000 	ldrb.w	r4, [lr]
9001fca8:	f004 04df 	and.w	r4, r4, #223	; 0xdf
9001fcac:	2c58      	cmp	r4, #88	; 0x58
9001fcae:	d14d      	bne.n	9001fd4c <_strtol_l.isra.0+0xf0>
9001fcb0:	f89e 4001 	ldrb.w	r4, [lr, #1]
9001fcb4:	2310      	movs	r3, #16
9001fcb6:	f10e 0e02 	add.w	lr, lr, #2
9001fcba:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
9001fcbe:	f10c 3cff 	add.w	ip, ip, #4294967295
9001fcc2:	2600      	movs	r6, #0
9001fcc4:	fbbc f9f3 	udiv	r9, ip, r3
9001fcc8:	4635      	mov	r5, r6
9001fcca:	fb03 ca19 	mls	sl, r3, r9, ip
9001fcce:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
9001fcd2:	2f09      	cmp	r7, #9
9001fcd4:	d818      	bhi.n	9001fd08 <_strtol_l.isra.0+0xac>
9001fcd6:	463c      	mov	r4, r7
9001fcd8:	42a3      	cmp	r3, r4
9001fcda:	dd24      	ble.n	9001fd26 <_strtol_l.isra.0+0xca>
9001fcdc:	2e00      	cmp	r6, #0
9001fcde:	db1f      	blt.n	9001fd20 <_strtol_l.isra.0+0xc4>
9001fce0:	45a9      	cmp	r9, r5
9001fce2:	d31d      	bcc.n	9001fd20 <_strtol_l.isra.0+0xc4>
9001fce4:	d101      	bne.n	9001fcea <_strtol_l.isra.0+0x8e>
9001fce6:	45a2      	cmp	sl, r4
9001fce8:	db1a      	blt.n	9001fd20 <_strtol_l.isra.0+0xc4>
9001fcea:	fb05 4503 	mla	r5, r5, r3, r4
9001fcee:	2601      	movs	r6, #1
9001fcf0:	f81e 4b01 	ldrb.w	r4, [lr], #1
9001fcf4:	e7eb      	b.n	9001fcce <_strtol_l.isra.0+0x72>
9001fcf6:	2c2b      	cmp	r4, #43	; 0x2b
9001fcf8:	bf08      	it	eq
9001fcfa:	f89e 4000 	ldrbeq.w	r4, [lr]
9001fcfe:	46a8      	mov	r8, r5
9001fd00:	bf08      	it	eq
9001fd02:	f106 0e02 	addeq.w	lr, r6, #2
9001fd06:	e7c7      	b.n	9001fc98 <_strtol_l.isra.0+0x3c>
9001fd08:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
9001fd0c:	2f19      	cmp	r7, #25
9001fd0e:	d801      	bhi.n	9001fd14 <_strtol_l.isra.0+0xb8>
9001fd10:	3c37      	subs	r4, #55	; 0x37
9001fd12:	e7e1      	b.n	9001fcd8 <_strtol_l.isra.0+0x7c>
9001fd14:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
9001fd18:	2f19      	cmp	r7, #25
9001fd1a:	d804      	bhi.n	9001fd26 <_strtol_l.isra.0+0xca>
9001fd1c:	3c57      	subs	r4, #87	; 0x57
9001fd1e:	e7db      	b.n	9001fcd8 <_strtol_l.isra.0+0x7c>
9001fd20:	f04f 36ff 	mov.w	r6, #4294967295
9001fd24:	e7e4      	b.n	9001fcf0 <_strtol_l.isra.0+0x94>
9001fd26:	2e00      	cmp	r6, #0
9001fd28:	da05      	bge.n	9001fd36 <_strtol_l.isra.0+0xda>
9001fd2a:	2322      	movs	r3, #34	; 0x22
9001fd2c:	6003      	str	r3, [r0, #0]
9001fd2e:	4665      	mov	r5, ip
9001fd30:	b942      	cbnz	r2, 9001fd44 <_strtol_l.isra.0+0xe8>
9001fd32:	4628      	mov	r0, r5
9001fd34:	e79d      	b.n	9001fc72 <_strtol_l.isra.0+0x16>
9001fd36:	f1b8 0f00 	cmp.w	r8, #0
9001fd3a:	d000      	beq.n	9001fd3e <_strtol_l.isra.0+0xe2>
9001fd3c:	426d      	negs	r5, r5
9001fd3e:	2a00      	cmp	r2, #0
9001fd40:	d0f7      	beq.n	9001fd32 <_strtol_l.isra.0+0xd6>
9001fd42:	b10e      	cbz	r6, 9001fd48 <_strtol_l.isra.0+0xec>
9001fd44:	f10e 31ff 	add.w	r1, lr, #4294967295
9001fd48:	6011      	str	r1, [r2, #0]
9001fd4a:	e7f2      	b.n	9001fd32 <_strtol_l.isra.0+0xd6>
9001fd4c:	2430      	movs	r4, #48	; 0x30
9001fd4e:	2b00      	cmp	r3, #0
9001fd50:	d1b3      	bne.n	9001fcba <_strtol_l.isra.0+0x5e>
9001fd52:	2308      	movs	r3, #8
9001fd54:	e7b1      	b.n	9001fcba <_strtol_l.isra.0+0x5e>
9001fd56:	2c30      	cmp	r4, #48	; 0x30
9001fd58:	d0a4      	beq.n	9001fca4 <_strtol_l.isra.0+0x48>
9001fd5a:	230a      	movs	r3, #10
9001fd5c:	e7ad      	b.n	9001fcba <_strtol_l.isra.0+0x5e>
9001fd5e:	bf00      	nop
9001fd60:	90024035 	.word	0x90024035

9001fd64 <strtol>:
9001fd64:	4613      	mov	r3, r2
9001fd66:	460a      	mov	r2, r1
9001fd68:	4601      	mov	r1, r0
9001fd6a:	4802      	ldr	r0, [pc, #8]	; (9001fd74 <strtol+0x10>)
9001fd6c:	6800      	ldr	r0, [r0, #0]
9001fd6e:	f7ff bf75 	b.w	9001fc5c <_strtol_l.isra.0>
9001fd72:	bf00      	nop
9001fd74:	240000c8 	.word	0x240000c8

9001fd78 <__swbuf_r>:
9001fd78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001fd7a:	460e      	mov	r6, r1
9001fd7c:	4614      	mov	r4, r2
9001fd7e:	4605      	mov	r5, r0
9001fd80:	b118      	cbz	r0, 9001fd8a <__swbuf_r+0x12>
9001fd82:	6983      	ldr	r3, [r0, #24]
9001fd84:	b90b      	cbnz	r3, 9001fd8a <__swbuf_r+0x12>
9001fd86:	f000 fa33 	bl	900201f0 <__sinit>
9001fd8a:	4b21      	ldr	r3, [pc, #132]	; (9001fe10 <__swbuf_r+0x98>)
9001fd8c:	429c      	cmp	r4, r3
9001fd8e:	d12b      	bne.n	9001fde8 <__swbuf_r+0x70>
9001fd90:	686c      	ldr	r4, [r5, #4]
9001fd92:	69a3      	ldr	r3, [r4, #24]
9001fd94:	60a3      	str	r3, [r4, #8]
9001fd96:	89a3      	ldrh	r3, [r4, #12]
9001fd98:	071a      	lsls	r2, r3, #28
9001fd9a:	d52f      	bpl.n	9001fdfc <__swbuf_r+0x84>
9001fd9c:	6923      	ldr	r3, [r4, #16]
9001fd9e:	b36b      	cbz	r3, 9001fdfc <__swbuf_r+0x84>
9001fda0:	6923      	ldr	r3, [r4, #16]
9001fda2:	6820      	ldr	r0, [r4, #0]
9001fda4:	1ac0      	subs	r0, r0, r3
9001fda6:	6963      	ldr	r3, [r4, #20]
9001fda8:	b2f6      	uxtb	r6, r6
9001fdaa:	4283      	cmp	r3, r0
9001fdac:	4637      	mov	r7, r6
9001fdae:	dc04      	bgt.n	9001fdba <__swbuf_r+0x42>
9001fdb0:	4621      	mov	r1, r4
9001fdb2:	4628      	mov	r0, r5
9001fdb4:	f000 f988 	bl	900200c8 <_fflush_r>
9001fdb8:	bb30      	cbnz	r0, 9001fe08 <__swbuf_r+0x90>
9001fdba:	68a3      	ldr	r3, [r4, #8]
9001fdbc:	3b01      	subs	r3, #1
9001fdbe:	60a3      	str	r3, [r4, #8]
9001fdc0:	6823      	ldr	r3, [r4, #0]
9001fdc2:	1c5a      	adds	r2, r3, #1
9001fdc4:	6022      	str	r2, [r4, #0]
9001fdc6:	701e      	strb	r6, [r3, #0]
9001fdc8:	6963      	ldr	r3, [r4, #20]
9001fdca:	3001      	adds	r0, #1
9001fdcc:	4283      	cmp	r3, r0
9001fdce:	d004      	beq.n	9001fdda <__swbuf_r+0x62>
9001fdd0:	89a3      	ldrh	r3, [r4, #12]
9001fdd2:	07db      	lsls	r3, r3, #31
9001fdd4:	d506      	bpl.n	9001fde4 <__swbuf_r+0x6c>
9001fdd6:	2e0a      	cmp	r6, #10
9001fdd8:	d104      	bne.n	9001fde4 <__swbuf_r+0x6c>
9001fdda:	4621      	mov	r1, r4
9001fddc:	4628      	mov	r0, r5
9001fdde:	f000 f973 	bl	900200c8 <_fflush_r>
9001fde2:	b988      	cbnz	r0, 9001fe08 <__swbuf_r+0x90>
9001fde4:	4638      	mov	r0, r7
9001fde6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001fde8:	4b0a      	ldr	r3, [pc, #40]	; (9001fe14 <__swbuf_r+0x9c>)
9001fdea:	429c      	cmp	r4, r3
9001fdec:	d101      	bne.n	9001fdf2 <__swbuf_r+0x7a>
9001fdee:	68ac      	ldr	r4, [r5, #8]
9001fdf0:	e7cf      	b.n	9001fd92 <__swbuf_r+0x1a>
9001fdf2:	4b09      	ldr	r3, [pc, #36]	; (9001fe18 <__swbuf_r+0xa0>)
9001fdf4:	429c      	cmp	r4, r3
9001fdf6:	bf08      	it	eq
9001fdf8:	68ec      	ldreq	r4, [r5, #12]
9001fdfa:	e7ca      	b.n	9001fd92 <__swbuf_r+0x1a>
9001fdfc:	4621      	mov	r1, r4
9001fdfe:	4628      	mov	r0, r5
9001fe00:	f000 f80c 	bl	9001fe1c <__swsetup_r>
9001fe04:	2800      	cmp	r0, #0
9001fe06:	d0cb      	beq.n	9001fda0 <__swbuf_r+0x28>
9001fe08:	f04f 37ff 	mov.w	r7, #4294967295
9001fe0c:	e7ea      	b.n	9001fde4 <__swbuf_r+0x6c>
9001fe0e:	bf00      	nop
9001fe10:	90024158 	.word	0x90024158
9001fe14:	90024178 	.word	0x90024178
9001fe18:	90024138 	.word	0x90024138

9001fe1c <__swsetup_r>:
9001fe1c:	4b32      	ldr	r3, [pc, #200]	; (9001fee8 <__swsetup_r+0xcc>)
9001fe1e:	b570      	push	{r4, r5, r6, lr}
9001fe20:	681d      	ldr	r5, [r3, #0]
9001fe22:	4606      	mov	r6, r0
9001fe24:	460c      	mov	r4, r1
9001fe26:	b125      	cbz	r5, 9001fe32 <__swsetup_r+0x16>
9001fe28:	69ab      	ldr	r3, [r5, #24]
9001fe2a:	b913      	cbnz	r3, 9001fe32 <__swsetup_r+0x16>
9001fe2c:	4628      	mov	r0, r5
9001fe2e:	f000 f9df 	bl	900201f0 <__sinit>
9001fe32:	4b2e      	ldr	r3, [pc, #184]	; (9001feec <__swsetup_r+0xd0>)
9001fe34:	429c      	cmp	r4, r3
9001fe36:	d10f      	bne.n	9001fe58 <__swsetup_r+0x3c>
9001fe38:	686c      	ldr	r4, [r5, #4]
9001fe3a:	89a3      	ldrh	r3, [r4, #12]
9001fe3c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9001fe40:	0719      	lsls	r1, r3, #28
9001fe42:	d42c      	bmi.n	9001fe9e <__swsetup_r+0x82>
9001fe44:	06dd      	lsls	r5, r3, #27
9001fe46:	d411      	bmi.n	9001fe6c <__swsetup_r+0x50>
9001fe48:	2309      	movs	r3, #9
9001fe4a:	6033      	str	r3, [r6, #0]
9001fe4c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
9001fe50:	81a3      	strh	r3, [r4, #12]
9001fe52:	f04f 30ff 	mov.w	r0, #4294967295
9001fe56:	e03e      	b.n	9001fed6 <__swsetup_r+0xba>
9001fe58:	4b25      	ldr	r3, [pc, #148]	; (9001fef0 <__swsetup_r+0xd4>)
9001fe5a:	429c      	cmp	r4, r3
9001fe5c:	d101      	bne.n	9001fe62 <__swsetup_r+0x46>
9001fe5e:	68ac      	ldr	r4, [r5, #8]
9001fe60:	e7eb      	b.n	9001fe3a <__swsetup_r+0x1e>
9001fe62:	4b24      	ldr	r3, [pc, #144]	; (9001fef4 <__swsetup_r+0xd8>)
9001fe64:	429c      	cmp	r4, r3
9001fe66:	bf08      	it	eq
9001fe68:	68ec      	ldreq	r4, [r5, #12]
9001fe6a:	e7e6      	b.n	9001fe3a <__swsetup_r+0x1e>
9001fe6c:	0758      	lsls	r0, r3, #29
9001fe6e:	d512      	bpl.n	9001fe96 <__swsetup_r+0x7a>
9001fe70:	6b61      	ldr	r1, [r4, #52]	; 0x34
9001fe72:	b141      	cbz	r1, 9001fe86 <__swsetup_r+0x6a>
9001fe74:	f104 0344 	add.w	r3, r4, #68	; 0x44
9001fe78:	4299      	cmp	r1, r3
9001fe7a:	d002      	beq.n	9001fe82 <__swsetup_r+0x66>
9001fe7c:	4630      	mov	r0, r6
9001fe7e:	f7ff faa5 	bl	9001f3cc <_free_r>
9001fe82:	2300      	movs	r3, #0
9001fe84:	6363      	str	r3, [r4, #52]	; 0x34
9001fe86:	89a3      	ldrh	r3, [r4, #12]
9001fe88:	f023 0324 	bic.w	r3, r3, #36	; 0x24
9001fe8c:	81a3      	strh	r3, [r4, #12]
9001fe8e:	2300      	movs	r3, #0
9001fe90:	6063      	str	r3, [r4, #4]
9001fe92:	6923      	ldr	r3, [r4, #16]
9001fe94:	6023      	str	r3, [r4, #0]
9001fe96:	89a3      	ldrh	r3, [r4, #12]
9001fe98:	f043 0308 	orr.w	r3, r3, #8
9001fe9c:	81a3      	strh	r3, [r4, #12]
9001fe9e:	6923      	ldr	r3, [r4, #16]
9001fea0:	b94b      	cbnz	r3, 9001feb6 <__swsetup_r+0x9a>
9001fea2:	89a3      	ldrh	r3, [r4, #12]
9001fea4:	f403 7320 	and.w	r3, r3, #640	; 0x280
9001fea8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
9001feac:	d003      	beq.n	9001feb6 <__swsetup_r+0x9a>
9001feae:	4621      	mov	r1, r4
9001feb0:	4630      	mov	r0, r6
9001feb2:	f000 fa63 	bl	9002037c <__smakebuf_r>
9001feb6:	89a0      	ldrh	r0, [r4, #12]
9001feb8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9001febc:	f010 0301 	ands.w	r3, r0, #1
9001fec0:	d00a      	beq.n	9001fed8 <__swsetup_r+0xbc>
9001fec2:	2300      	movs	r3, #0
9001fec4:	60a3      	str	r3, [r4, #8]
9001fec6:	6963      	ldr	r3, [r4, #20]
9001fec8:	425b      	negs	r3, r3
9001feca:	61a3      	str	r3, [r4, #24]
9001fecc:	6923      	ldr	r3, [r4, #16]
9001fece:	b943      	cbnz	r3, 9001fee2 <__swsetup_r+0xc6>
9001fed0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
9001fed4:	d1ba      	bne.n	9001fe4c <__swsetup_r+0x30>
9001fed6:	bd70      	pop	{r4, r5, r6, pc}
9001fed8:	0781      	lsls	r1, r0, #30
9001feda:	bf58      	it	pl
9001fedc:	6963      	ldrpl	r3, [r4, #20]
9001fede:	60a3      	str	r3, [r4, #8]
9001fee0:	e7f4      	b.n	9001fecc <__swsetup_r+0xb0>
9001fee2:	2000      	movs	r0, #0
9001fee4:	e7f7      	b.n	9001fed6 <__swsetup_r+0xba>
9001fee6:	bf00      	nop
9001fee8:	240000c8 	.word	0x240000c8
9001feec:	90024158 	.word	0x90024158
9001fef0:	90024178 	.word	0x90024178
9001fef4:	90024138 	.word	0x90024138

9001fef8 <__register_exitproc>:
9001fef8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001fefc:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 9001ffb8 <__register_exitproc+0xc0>
9001ff00:	4606      	mov	r6, r0
9001ff02:	f8d8 0000 	ldr.w	r0, [r8]
9001ff06:	461f      	mov	r7, r3
9001ff08:	460d      	mov	r5, r1
9001ff0a:	4691      	mov	r9, r2
9001ff0c:	f000 fa0e 	bl	9002032c <__retarget_lock_acquire_recursive>
9001ff10:	4b25      	ldr	r3, [pc, #148]	; (9001ffa8 <__register_exitproc+0xb0>)
9001ff12:	681c      	ldr	r4, [r3, #0]
9001ff14:	b934      	cbnz	r4, 9001ff24 <__register_exitproc+0x2c>
9001ff16:	4c25      	ldr	r4, [pc, #148]	; (9001ffac <__register_exitproc+0xb4>)
9001ff18:	601c      	str	r4, [r3, #0]
9001ff1a:	4b25      	ldr	r3, [pc, #148]	; (9001ffb0 <__register_exitproc+0xb8>)
9001ff1c:	b113      	cbz	r3, 9001ff24 <__register_exitproc+0x2c>
9001ff1e:	681b      	ldr	r3, [r3, #0]
9001ff20:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
9001ff24:	6863      	ldr	r3, [r4, #4]
9001ff26:	2b1f      	cmp	r3, #31
9001ff28:	dd07      	ble.n	9001ff3a <__register_exitproc+0x42>
9001ff2a:	f8d8 0000 	ldr.w	r0, [r8]
9001ff2e:	f000 f9ff 	bl	90020330 <__retarget_lock_release_recursive>
9001ff32:	f04f 30ff 	mov.w	r0, #4294967295
9001ff36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001ff3a:	b34e      	cbz	r6, 9001ff90 <__register_exitproc+0x98>
9001ff3c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9001ff40:	b988      	cbnz	r0, 9001ff66 <__register_exitproc+0x6e>
9001ff42:	4b1c      	ldr	r3, [pc, #112]	; (9001ffb4 <__register_exitproc+0xbc>)
9001ff44:	b923      	cbnz	r3, 9001ff50 <__register_exitproc+0x58>
9001ff46:	f8d8 0000 	ldr.w	r0, [r8]
9001ff4a:	f000 f9f0 	bl	9002032e <__retarget_lock_release>
9001ff4e:	e7f0      	b.n	9001ff32 <__register_exitproc+0x3a>
9001ff50:	f44f 7084 	mov.w	r0, #264	; 0x108
9001ff54:	f7ff fa14 	bl	9001f380 <malloc>
9001ff58:	2800      	cmp	r0, #0
9001ff5a:	d0f4      	beq.n	9001ff46 <__register_exitproc+0x4e>
9001ff5c:	2300      	movs	r3, #0
9001ff5e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
9001ff62:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
9001ff66:	6863      	ldr	r3, [r4, #4]
9001ff68:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9001ff6c:	2201      	movs	r2, #1
9001ff6e:	409a      	lsls	r2, r3
9001ff70:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9001ff74:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
9001ff78:	4313      	orrs	r3, r2
9001ff7a:	2e02      	cmp	r6, #2
9001ff7c:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
9001ff80:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
9001ff84:	bf02      	ittt	eq
9001ff86:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
9001ff8a:	431a      	orreq	r2, r3
9001ff8c:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
9001ff90:	6863      	ldr	r3, [r4, #4]
9001ff92:	f8d8 0000 	ldr.w	r0, [r8]
9001ff96:	1c5a      	adds	r2, r3, #1
9001ff98:	3302      	adds	r3, #2
9001ff9a:	6062      	str	r2, [r4, #4]
9001ff9c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
9001ffa0:	f000 f9c6 	bl	90020330 <__retarget_lock_release_recursive>
9001ffa4:	2000      	movs	r0, #0
9001ffa6:	e7c6      	b.n	9001ff36 <__register_exitproc+0x3e>
9001ffa8:	24012d78 	.word	0x24012d78
9001ffac:	24012cec 	.word	0x24012cec
9001ffb0:	90023fb8 	.word	0x90023fb8
9001ffb4:	9001f381 	.word	0x9001f381
9001ffb8:	2400012c 	.word	0x2400012c

9001ffbc <__sflush_r>:
9001ffbc:	898a      	ldrh	r2, [r1, #12]
9001ffbe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001ffc2:	4605      	mov	r5, r0
9001ffc4:	0710      	lsls	r0, r2, #28
9001ffc6:	460c      	mov	r4, r1
9001ffc8:	d458      	bmi.n	9002007c <__sflush_r+0xc0>
9001ffca:	684b      	ldr	r3, [r1, #4]
9001ffcc:	2b00      	cmp	r3, #0
9001ffce:	dc05      	bgt.n	9001ffdc <__sflush_r+0x20>
9001ffd0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9001ffd2:	2b00      	cmp	r3, #0
9001ffd4:	dc02      	bgt.n	9001ffdc <__sflush_r+0x20>
9001ffd6:	2000      	movs	r0, #0
9001ffd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001ffdc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9001ffde:	2e00      	cmp	r6, #0
9001ffe0:	d0f9      	beq.n	9001ffd6 <__sflush_r+0x1a>
9001ffe2:	2300      	movs	r3, #0
9001ffe4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
9001ffe8:	682f      	ldr	r7, [r5, #0]
9001ffea:	602b      	str	r3, [r5, #0]
9001ffec:	d032      	beq.n	90020054 <__sflush_r+0x98>
9001ffee:	6d60      	ldr	r0, [r4, #84]	; 0x54
9001fff0:	89a3      	ldrh	r3, [r4, #12]
9001fff2:	075a      	lsls	r2, r3, #29
9001fff4:	d505      	bpl.n	90020002 <__sflush_r+0x46>
9001fff6:	6863      	ldr	r3, [r4, #4]
9001fff8:	1ac0      	subs	r0, r0, r3
9001fffa:	6b63      	ldr	r3, [r4, #52]	; 0x34
9001fffc:	b10b      	cbz	r3, 90020002 <__sflush_r+0x46>
9001fffe:	6c23      	ldr	r3, [r4, #64]	; 0x40
90020000:	1ac0      	subs	r0, r0, r3
90020002:	2300      	movs	r3, #0
90020004:	4602      	mov	r2, r0
90020006:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90020008:	6a21      	ldr	r1, [r4, #32]
9002000a:	4628      	mov	r0, r5
9002000c:	47b0      	blx	r6
9002000e:	1c43      	adds	r3, r0, #1
90020010:	89a3      	ldrh	r3, [r4, #12]
90020012:	d106      	bne.n	90020022 <__sflush_r+0x66>
90020014:	6829      	ldr	r1, [r5, #0]
90020016:	291d      	cmp	r1, #29
90020018:	d82c      	bhi.n	90020074 <__sflush_r+0xb8>
9002001a:	4a2a      	ldr	r2, [pc, #168]	; (900200c4 <__sflush_r+0x108>)
9002001c:	40ca      	lsrs	r2, r1
9002001e:	07d6      	lsls	r6, r2, #31
90020020:	d528      	bpl.n	90020074 <__sflush_r+0xb8>
90020022:	2200      	movs	r2, #0
90020024:	6062      	str	r2, [r4, #4]
90020026:	04d9      	lsls	r1, r3, #19
90020028:	6922      	ldr	r2, [r4, #16]
9002002a:	6022      	str	r2, [r4, #0]
9002002c:	d504      	bpl.n	90020038 <__sflush_r+0x7c>
9002002e:	1c42      	adds	r2, r0, #1
90020030:	d101      	bne.n	90020036 <__sflush_r+0x7a>
90020032:	682b      	ldr	r3, [r5, #0]
90020034:	b903      	cbnz	r3, 90020038 <__sflush_r+0x7c>
90020036:	6560      	str	r0, [r4, #84]	; 0x54
90020038:	6b61      	ldr	r1, [r4, #52]	; 0x34
9002003a:	602f      	str	r7, [r5, #0]
9002003c:	2900      	cmp	r1, #0
9002003e:	d0ca      	beq.n	9001ffd6 <__sflush_r+0x1a>
90020040:	f104 0344 	add.w	r3, r4, #68	; 0x44
90020044:	4299      	cmp	r1, r3
90020046:	d002      	beq.n	9002004e <__sflush_r+0x92>
90020048:	4628      	mov	r0, r5
9002004a:	f7ff f9bf 	bl	9001f3cc <_free_r>
9002004e:	2000      	movs	r0, #0
90020050:	6360      	str	r0, [r4, #52]	; 0x34
90020052:	e7c1      	b.n	9001ffd8 <__sflush_r+0x1c>
90020054:	6a21      	ldr	r1, [r4, #32]
90020056:	2301      	movs	r3, #1
90020058:	4628      	mov	r0, r5
9002005a:	47b0      	blx	r6
9002005c:	1c41      	adds	r1, r0, #1
9002005e:	d1c7      	bne.n	9001fff0 <__sflush_r+0x34>
90020060:	682b      	ldr	r3, [r5, #0]
90020062:	2b00      	cmp	r3, #0
90020064:	d0c4      	beq.n	9001fff0 <__sflush_r+0x34>
90020066:	2b1d      	cmp	r3, #29
90020068:	d001      	beq.n	9002006e <__sflush_r+0xb2>
9002006a:	2b16      	cmp	r3, #22
9002006c:	d101      	bne.n	90020072 <__sflush_r+0xb6>
9002006e:	602f      	str	r7, [r5, #0]
90020070:	e7b1      	b.n	9001ffd6 <__sflush_r+0x1a>
90020072:	89a3      	ldrh	r3, [r4, #12]
90020074:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90020078:	81a3      	strh	r3, [r4, #12]
9002007a:	e7ad      	b.n	9001ffd8 <__sflush_r+0x1c>
9002007c:	690f      	ldr	r7, [r1, #16]
9002007e:	2f00      	cmp	r7, #0
90020080:	d0a9      	beq.n	9001ffd6 <__sflush_r+0x1a>
90020082:	0793      	lsls	r3, r2, #30
90020084:	680e      	ldr	r6, [r1, #0]
90020086:	bf08      	it	eq
90020088:	694b      	ldreq	r3, [r1, #20]
9002008a:	600f      	str	r7, [r1, #0]
9002008c:	bf18      	it	ne
9002008e:	2300      	movne	r3, #0
90020090:	eba6 0807 	sub.w	r8, r6, r7
90020094:	608b      	str	r3, [r1, #8]
90020096:	f1b8 0f00 	cmp.w	r8, #0
9002009a:	dd9c      	ble.n	9001ffd6 <__sflush_r+0x1a>
9002009c:	6a21      	ldr	r1, [r4, #32]
9002009e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
900200a0:	4643      	mov	r3, r8
900200a2:	463a      	mov	r2, r7
900200a4:	4628      	mov	r0, r5
900200a6:	47b0      	blx	r6
900200a8:	2800      	cmp	r0, #0
900200aa:	dc06      	bgt.n	900200ba <__sflush_r+0xfe>
900200ac:	89a3      	ldrh	r3, [r4, #12]
900200ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
900200b2:	81a3      	strh	r3, [r4, #12]
900200b4:	f04f 30ff 	mov.w	r0, #4294967295
900200b8:	e78e      	b.n	9001ffd8 <__sflush_r+0x1c>
900200ba:	4407      	add	r7, r0
900200bc:	eba8 0800 	sub.w	r8, r8, r0
900200c0:	e7e9      	b.n	90020096 <__sflush_r+0xda>
900200c2:	bf00      	nop
900200c4:	20400001 	.word	0x20400001

900200c8 <_fflush_r>:
900200c8:	b538      	push	{r3, r4, r5, lr}
900200ca:	690b      	ldr	r3, [r1, #16]
900200cc:	4605      	mov	r5, r0
900200ce:	460c      	mov	r4, r1
900200d0:	b913      	cbnz	r3, 900200d8 <_fflush_r+0x10>
900200d2:	2500      	movs	r5, #0
900200d4:	4628      	mov	r0, r5
900200d6:	bd38      	pop	{r3, r4, r5, pc}
900200d8:	b118      	cbz	r0, 900200e2 <_fflush_r+0x1a>
900200da:	6983      	ldr	r3, [r0, #24]
900200dc:	b90b      	cbnz	r3, 900200e2 <_fflush_r+0x1a>
900200de:	f000 f887 	bl	900201f0 <__sinit>
900200e2:	4b14      	ldr	r3, [pc, #80]	; (90020134 <_fflush_r+0x6c>)
900200e4:	429c      	cmp	r4, r3
900200e6:	d11b      	bne.n	90020120 <_fflush_r+0x58>
900200e8:	686c      	ldr	r4, [r5, #4]
900200ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
900200ee:	2b00      	cmp	r3, #0
900200f0:	d0ef      	beq.n	900200d2 <_fflush_r+0xa>
900200f2:	6e62      	ldr	r2, [r4, #100]	; 0x64
900200f4:	07d0      	lsls	r0, r2, #31
900200f6:	d404      	bmi.n	90020102 <_fflush_r+0x3a>
900200f8:	0599      	lsls	r1, r3, #22
900200fa:	d402      	bmi.n	90020102 <_fflush_r+0x3a>
900200fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
900200fe:	f000 f915 	bl	9002032c <__retarget_lock_acquire_recursive>
90020102:	4628      	mov	r0, r5
90020104:	4621      	mov	r1, r4
90020106:	f7ff ff59 	bl	9001ffbc <__sflush_r>
9002010a:	6e63      	ldr	r3, [r4, #100]	; 0x64
9002010c:	07da      	lsls	r2, r3, #31
9002010e:	4605      	mov	r5, r0
90020110:	d4e0      	bmi.n	900200d4 <_fflush_r+0xc>
90020112:	89a3      	ldrh	r3, [r4, #12]
90020114:	059b      	lsls	r3, r3, #22
90020116:	d4dd      	bmi.n	900200d4 <_fflush_r+0xc>
90020118:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002011a:	f000 f909 	bl	90020330 <__retarget_lock_release_recursive>
9002011e:	e7d9      	b.n	900200d4 <_fflush_r+0xc>
90020120:	4b05      	ldr	r3, [pc, #20]	; (90020138 <_fflush_r+0x70>)
90020122:	429c      	cmp	r4, r3
90020124:	d101      	bne.n	9002012a <_fflush_r+0x62>
90020126:	68ac      	ldr	r4, [r5, #8]
90020128:	e7df      	b.n	900200ea <_fflush_r+0x22>
9002012a:	4b04      	ldr	r3, [pc, #16]	; (9002013c <_fflush_r+0x74>)
9002012c:	429c      	cmp	r4, r3
9002012e:	bf08      	it	eq
90020130:	68ec      	ldreq	r4, [r5, #12]
90020132:	e7da      	b.n	900200ea <_fflush_r+0x22>
90020134:	90024158 	.word	0x90024158
90020138:	90024178 	.word	0x90024178
9002013c:	90024138 	.word	0x90024138

90020140 <std>:
90020140:	2300      	movs	r3, #0
90020142:	b510      	push	{r4, lr}
90020144:	4604      	mov	r4, r0
90020146:	e9c0 3300 	strd	r3, r3, [r0]
9002014a:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002014e:	6083      	str	r3, [r0, #8]
90020150:	8181      	strh	r1, [r0, #12]
90020152:	6643      	str	r3, [r0, #100]	; 0x64
90020154:	81c2      	strh	r2, [r0, #14]
90020156:	6183      	str	r3, [r0, #24]
90020158:	4619      	mov	r1, r3
9002015a:	2208      	movs	r2, #8
9002015c:	305c      	adds	r0, #92	; 0x5c
9002015e:	f7ff f92d 	bl	9001f3bc <memset>
90020162:	4b05      	ldr	r3, [pc, #20]	; (90020178 <std+0x38>)
90020164:	6263      	str	r3, [r4, #36]	; 0x24
90020166:	4b05      	ldr	r3, [pc, #20]	; (9002017c <std+0x3c>)
90020168:	62a3      	str	r3, [r4, #40]	; 0x28
9002016a:	4b05      	ldr	r3, [pc, #20]	; (90020180 <std+0x40>)
9002016c:	62e3      	str	r3, [r4, #44]	; 0x2c
9002016e:	4b05      	ldr	r3, [pc, #20]	; (90020184 <std+0x44>)
90020170:	6224      	str	r4, [r4, #32]
90020172:	6323      	str	r3, [r4, #48]	; 0x30
90020174:	bd10      	pop	{r4, pc}
90020176:	bf00      	nop
90020178:	90020415 	.word	0x90020415
9002017c:	90020437 	.word	0x90020437
90020180:	9002046f 	.word	0x9002046f
90020184:	90020493 	.word	0x90020493

90020188 <_cleanup_r>:
90020188:	4901      	ldr	r1, [pc, #4]	; (90020190 <_cleanup_r+0x8>)
9002018a:	f000 b8af 	b.w	900202ec <_fwalk_reent>
9002018e:	bf00      	nop
90020190:	900200c9 	.word	0x900200c9

90020194 <__sfmoreglue>:
90020194:	b570      	push	{r4, r5, r6, lr}
90020196:	1e4a      	subs	r2, r1, #1
90020198:	2568      	movs	r5, #104	; 0x68
9002019a:	4355      	muls	r5, r2
9002019c:	460e      	mov	r6, r1
9002019e:	f105 0174 	add.w	r1, r5, #116	; 0x74
900201a2:	f7ff f963 	bl	9001f46c <_malloc_r>
900201a6:	4604      	mov	r4, r0
900201a8:	b140      	cbz	r0, 900201bc <__sfmoreglue+0x28>
900201aa:	2100      	movs	r1, #0
900201ac:	e9c0 1600 	strd	r1, r6, [r0]
900201b0:	300c      	adds	r0, #12
900201b2:	60a0      	str	r0, [r4, #8]
900201b4:	f105 0268 	add.w	r2, r5, #104	; 0x68
900201b8:	f7ff f900 	bl	9001f3bc <memset>
900201bc:	4620      	mov	r0, r4
900201be:	bd70      	pop	{r4, r5, r6, pc}

900201c0 <__sfp_lock_acquire>:
900201c0:	4801      	ldr	r0, [pc, #4]	; (900201c8 <__sfp_lock_acquire+0x8>)
900201c2:	f000 b8b3 	b.w	9002032c <__retarget_lock_acquire_recursive>
900201c6:	bf00      	nop
900201c8:	240130e4 	.word	0x240130e4

900201cc <__sfp_lock_release>:
900201cc:	4801      	ldr	r0, [pc, #4]	; (900201d4 <__sfp_lock_release+0x8>)
900201ce:	f000 b8af 	b.w	90020330 <__retarget_lock_release_recursive>
900201d2:	bf00      	nop
900201d4:	240130e4 	.word	0x240130e4

900201d8 <__sinit_lock_acquire>:
900201d8:	4801      	ldr	r0, [pc, #4]	; (900201e0 <__sinit_lock_acquire+0x8>)
900201da:	f000 b8a7 	b.w	9002032c <__retarget_lock_acquire_recursive>
900201de:	bf00      	nop
900201e0:	240130df 	.word	0x240130df

900201e4 <__sinit_lock_release>:
900201e4:	4801      	ldr	r0, [pc, #4]	; (900201ec <__sinit_lock_release+0x8>)
900201e6:	f000 b8a3 	b.w	90020330 <__retarget_lock_release_recursive>
900201ea:	bf00      	nop
900201ec:	240130df 	.word	0x240130df

900201f0 <__sinit>:
900201f0:	b510      	push	{r4, lr}
900201f2:	4604      	mov	r4, r0
900201f4:	f7ff fff0 	bl	900201d8 <__sinit_lock_acquire>
900201f8:	69a3      	ldr	r3, [r4, #24]
900201fa:	b11b      	cbz	r3, 90020204 <__sinit+0x14>
900201fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020200:	f7ff bff0 	b.w	900201e4 <__sinit_lock_release>
90020204:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
90020208:	6523      	str	r3, [r4, #80]	; 0x50
9002020a:	4b13      	ldr	r3, [pc, #76]	; (90020258 <__sinit+0x68>)
9002020c:	4a13      	ldr	r2, [pc, #76]	; (9002025c <__sinit+0x6c>)
9002020e:	681b      	ldr	r3, [r3, #0]
90020210:	62a2      	str	r2, [r4, #40]	; 0x28
90020212:	42a3      	cmp	r3, r4
90020214:	bf04      	itt	eq
90020216:	2301      	moveq	r3, #1
90020218:	61a3      	streq	r3, [r4, #24]
9002021a:	4620      	mov	r0, r4
9002021c:	f000 f820 	bl	90020260 <__sfp>
90020220:	6060      	str	r0, [r4, #4]
90020222:	4620      	mov	r0, r4
90020224:	f000 f81c 	bl	90020260 <__sfp>
90020228:	60a0      	str	r0, [r4, #8]
9002022a:	4620      	mov	r0, r4
9002022c:	f000 f818 	bl	90020260 <__sfp>
90020230:	2200      	movs	r2, #0
90020232:	60e0      	str	r0, [r4, #12]
90020234:	2104      	movs	r1, #4
90020236:	6860      	ldr	r0, [r4, #4]
90020238:	f7ff ff82 	bl	90020140 <std>
9002023c:	68a0      	ldr	r0, [r4, #8]
9002023e:	2201      	movs	r2, #1
90020240:	2109      	movs	r1, #9
90020242:	f7ff ff7d 	bl	90020140 <std>
90020246:	68e0      	ldr	r0, [r4, #12]
90020248:	2202      	movs	r2, #2
9002024a:	2112      	movs	r1, #18
9002024c:	f7ff ff78 	bl	90020140 <std>
90020250:	2301      	movs	r3, #1
90020252:	61a3      	str	r3, [r4, #24]
90020254:	e7d2      	b.n	900201fc <__sinit+0xc>
90020256:	bf00      	nop
90020258:	90023f80 	.word	0x90023f80
9002025c:	90020189 	.word	0x90020189

90020260 <__sfp>:
90020260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90020262:	4607      	mov	r7, r0
90020264:	f7ff ffac 	bl	900201c0 <__sfp_lock_acquire>
90020268:	4b1e      	ldr	r3, [pc, #120]	; (900202e4 <__sfp+0x84>)
9002026a:	681e      	ldr	r6, [r3, #0]
9002026c:	69b3      	ldr	r3, [r6, #24]
9002026e:	b913      	cbnz	r3, 90020276 <__sfp+0x16>
90020270:	4630      	mov	r0, r6
90020272:	f7ff ffbd 	bl	900201f0 <__sinit>
90020276:	3648      	adds	r6, #72	; 0x48
90020278:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
9002027c:	3b01      	subs	r3, #1
9002027e:	d503      	bpl.n	90020288 <__sfp+0x28>
90020280:	6833      	ldr	r3, [r6, #0]
90020282:	b30b      	cbz	r3, 900202c8 <__sfp+0x68>
90020284:	6836      	ldr	r6, [r6, #0]
90020286:	e7f7      	b.n	90020278 <__sfp+0x18>
90020288:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
9002028c:	b9d5      	cbnz	r5, 900202c4 <__sfp+0x64>
9002028e:	4b16      	ldr	r3, [pc, #88]	; (900202e8 <__sfp+0x88>)
90020290:	60e3      	str	r3, [r4, #12]
90020292:	f104 0058 	add.w	r0, r4, #88	; 0x58
90020296:	6665      	str	r5, [r4, #100]	; 0x64
90020298:	f000 f847 	bl	9002032a <__retarget_lock_init_recursive>
9002029c:	f7ff ff96 	bl	900201cc <__sfp_lock_release>
900202a0:	e9c4 5501 	strd	r5, r5, [r4, #4]
900202a4:	e9c4 5504 	strd	r5, r5, [r4, #16]
900202a8:	6025      	str	r5, [r4, #0]
900202aa:	61a5      	str	r5, [r4, #24]
900202ac:	2208      	movs	r2, #8
900202ae:	4629      	mov	r1, r5
900202b0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
900202b4:	f7ff f882 	bl	9001f3bc <memset>
900202b8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
900202bc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
900202c0:	4620      	mov	r0, r4
900202c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900202c4:	3468      	adds	r4, #104	; 0x68
900202c6:	e7d9      	b.n	9002027c <__sfp+0x1c>
900202c8:	2104      	movs	r1, #4
900202ca:	4638      	mov	r0, r7
900202cc:	f7ff ff62 	bl	90020194 <__sfmoreglue>
900202d0:	4604      	mov	r4, r0
900202d2:	6030      	str	r0, [r6, #0]
900202d4:	2800      	cmp	r0, #0
900202d6:	d1d5      	bne.n	90020284 <__sfp+0x24>
900202d8:	f7ff ff78 	bl	900201cc <__sfp_lock_release>
900202dc:	230c      	movs	r3, #12
900202de:	603b      	str	r3, [r7, #0]
900202e0:	e7ee      	b.n	900202c0 <__sfp+0x60>
900202e2:	bf00      	nop
900202e4:	90023f80 	.word	0x90023f80
900202e8:	ffff0001 	.word	0xffff0001

900202ec <_fwalk_reent>:
900202ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900202f0:	4606      	mov	r6, r0
900202f2:	4688      	mov	r8, r1
900202f4:	f100 0448 	add.w	r4, r0, #72	; 0x48
900202f8:	2700      	movs	r7, #0
900202fa:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
900202fe:	f1b9 0901 	subs.w	r9, r9, #1
90020302:	d505      	bpl.n	90020310 <_fwalk_reent+0x24>
90020304:	6824      	ldr	r4, [r4, #0]
90020306:	2c00      	cmp	r4, #0
90020308:	d1f7      	bne.n	900202fa <_fwalk_reent+0xe>
9002030a:	4638      	mov	r0, r7
9002030c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90020310:	89ab      	ldrh	r3, [r5, #12]
90020312:	2b01      	cmp	r3, #1
90020314:	d907      	bls.n	90020326 <_fwalk_reent+0x3a>
90020316:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002031a:	3301      	adds	r3, #1
9002031c:	d003      	beq.n	90020326 <_fwalk_reent+0x3a>
9002031e:	4629      	mov	r1, r5
90020320:	4630      	mov	r0, r6
90020322:	47c0      	blx	r8
90020324:	4307      	orrs	r7, r0
90020326:	3568      	adds	r5, #104	; 0x68
90020328:	e7e9      	b.n	900202fe <_fwalk_reent+0x12>

9002032a <__retarget_lock_init_recursive>:
9002032a:	4770      	bx	lr

9002032c <__retarget_lock_acquire_recursive>:
9002032c:	4770      	bx	lr

9002032e <__retarget_lock_release>:
9002032e:	4770      	bx	lr

90020330 <__retarget_lock_release_recursive>:
90020330:	4770      	bx	lr

90020332 <__swhatbuf_r>:
90020332:	b570      	push	{r4, r5, r6, lr}
90020334:	460e      	mov	r6, r1
90020336:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002033a:	2900      	cmp	r1, #0
9002033c:	b096      	sub	sp, #88	; 0x58
9002033e:	4614      	mov	r4, r2
90020340:	461d      	mov	r5, r3
90020342:	da07      	bge.n	90020354 <__swhatbuf_r+0x22>
90020344:	2300      	movs	r3, #0
90020346:	602b      	str	r3, [r5, #0]
90020348:	89b3      	ldrh	r3, [r6, #12]
9002034a:	061a      	lsls	r2, r3, #24
9002034c:	d410      	bmi.n	90020370 <__swhatbuf_r+0x3e>
9002034e:	f44f 6380 	mov.w	r3, #1024	; 0x400
90020352:	e00e      	b.n	90020372 <__swhatbuf_r+0x40>
90020354:	466a      	mov	r2, sp
90020356:	f000 f8c3 	bl	900204e0 <_fstat_r>
9002035a:	2800      	cmp	r0, #0
9002035c:	dbf2      	blt.n	90020344 <__swhatbuf_r+0x12>
9002035e:	9a01      	ldr	r2, [sp, #4]
90020360:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
90020364:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
90020368:	425a      	negs	r2, r3
9002036a:	415a      	adcs	r2, r3
9002036c:	602a      	str	r2, [r5, #0]
9002036e:	e7ee      	b.n	9002034e <__swhatbuf_r+0x1c>
90020370:	2340      	movs	r3, #64	; 0x40
90020372:	2000      	movs	r0, #0
90020374:	6023      	str	r3, [r4, #0]
90020376:	b016      	add	sp, #88	; 0x58
90020378:	bd70      	pop	{r4, r5, r6, pc}
	...

9002037c <__smakebuf_r>:
9002037c:	898b      	ldrh	r3, [r1, #12]
9002037e:	b573      	push	{r0, r1, r4, r5, r6, lr}
90020380:	079d      	lsls	r5, r3, #30
90020382:	4606      	mov	r6, r0
90020384:	460c      	mov	r4, r1
90020386:	d507      	bpl.n	90020398 <__smakebuf_r+0x1c>
90020388:	f104 0347 	add.w	r3, r4, #71	; 0x47
9002038c:	6023      	str	r3, [r4, #0]
9002038e:	6123      	str	r3, [r4, #16]
90020390:	2301      	movs	r3, #1
90020392:	6163      	str	r3, [r4, #20]
90020394:	b002      	add	sp, #8
90020396:	bd70      	pop	{r4, r5, r6, pc}
90020398:	ab01      	add	r3, sp, #4
9002039a:	466a      	mov	r2, sp
9002039c:	f7ff ffc9 	bl	90020332 <__swhatbuf_r>
900203a0:	9900      	ldr	r1, [sp, #0]
900203a2:	4605      	mov	r5, r0
900203a4:	4630      	mov	r0, r6
900203a6:	f7ff f861 	bl	9001f46c <_malloc_r>
900203aa:	b948      	cbnz	r0, 900203c0 <__smakebuf_r+0x44>
900203ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
900203b0:	059a      	lsls	r2, r3, #22
900203b2:	d4ef      	bmi.n	90020394 <__smakebuf_r+0x18>
900203b4:	f023 0303 	bic.w	r3, r3, #3
900203b8:	f043 0302 	orr.w	r3, r3, #2
900203bc:	81a3      	strh	r3, [r4, #12]
900203be:	e7e3      	b.n	90020388 <__smakebuf_r+0xc>
900203c0:	4b0d      	ldr	r3, [pc, #52]	; (900203f8 <__smakebuf_r+0x7c>)
900203c2:	62b3      	str	r3, [r6, #40]	; 0x28
900203c4:	89a3      	ldrh	r3, [r4, #12]
900203c6:	6020      	str	r0, [r4, #0]
900203c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900203cc:	81a3      	strh	r3, [r4, #12]
900203ce:	9b00      	ldr	r3, [sp, #0]
900203d0:	6163      	str	r3, [r4, #20]
900203d2:	9b01      	ldr	r3, [sp, #4]
900203d4:	6120      	str	r0, [r4, #16]
900203d6:	b15b      	cbz	r3, 900203f0 <__smakebuf_r+0x74>
900203d8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
900203dc:	4630      	mov	r0, r6
900203de:	f000 f891 	bl	90020504 <_isatty_r>
900203e2:	b128      	cbz	r0, 900203f0 <__smakebuf_r+0x74>
900203e4:	89a3      	ldrh	r3, [r4, #12]
900203e6:	f023 0303 	bic.w	r3, r3, #3
900203ea:	f043 0301 	orr.w	r3, r3, #1
900203ee:	81a3      	strh	r3, [r4, #12]
900203f0:	89a0      	ldrh	r0, [r4, #12]
900203f2:	4305      	orrs	r5, r0
900203f4:	81a5      	strh	r5, [r4, #12]
900203f6:	e7cd      	b.n	90020394 <__smakebuf_r+0x18>
900203f8:	90020189 	.word	0x90020189

900203fc <__malloc_lock>:
900203fc:	4801      	ldr	r0, [pc, #4]	; (90020404 <__malloc_lock+0x8>)
900203fe:	f7ff bf95 	b.w	9002032c <__retarget_lock_acquire_recursive>
90020402:	bf00      	nop
90020404:	240130e0 	.word	0x240130e0

90020408 <__malloc_unlock>:
90020408:	4801      	ldr	r0, [pc, #4]	; (90020410 <__malloc_unlock+0x8>)
9002040a:	f7ff bf91 	b.w	90020330 <__retarget_lock_release_recursive>
9002040e:	bf00      	nop
90020410:	240130e0 	.word	0x240130e0

90020414 <__sread>:
90020414:	b510      	push	{r4, lr}
90020416:	460c      	mov	r4, r1
90020418:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002041c:	f000 f894 	bl	90020548 <_read_r>
90020420:	2800      	cmp	r0, #0
90020422:	bfab      	itete	ge
90020424:	6d63      	ldrge	r3, [r4, #84]	; 0x54
90020426:	89a3      	ldrhlt	r3, [r4, #12]
90020428:	181b      	addge	r3, r3, r0
9002042a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
9002042e:	bfac      	ite	ge
90020430:	6563      	strge	r3, [r4, #84]	; 0x54
90020432:	81a3      	strhlt	r3, [r4, #12]
90020434:	bd10      	pop	{r4, pc}

90020436 <__swrite>:
90020436:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002043a:	461f      	mov	r7, r3
9002043c:	898b      	ldrh	r3, [r1, #12]
9002043e:	05db      	lsls	r3, r3, #23
90020440:	4605      	mov	r5, r0
90020442:	460c      	mov	r4, r1
90020444:	4616      	mov	r6, r2
90020446:	d505      	bpl.n	90020454 <__swrite+0x1e>
90020448:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002044c:	2302      	movs	r3, #2
9002044e:	2200      	movs	r2, #0
90020450:	f000 f868 	bl	90020524 <_lseek_r>
90020454:	89a3      	ldrh	r3, [r4, #12]
90020456:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002045a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9002045e:	81a3      	strh	r3, [r4, #12]
90020460:	4632      	mov	r2, r6
90020462:	463b      	mov	r3, r7
90020464:	4628      	mov	r0, r5
90020466:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002046a:	f000 b817 	b.w	9002049c <_write_r>

9002046e <__sseek>:
9002046e:	b510      	push	{r4, lr}
90020470:	460c      	mov	r4, r1
90020472:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90020476:	f000 f855 	bl	90020524 <_lseek_r>
9002047a:	1c43      	adds	r3, r0, #1
9002047c:	89a3      	ldrh	r3, [r4, #12]
9002047e:	bf15      	itete	ne
90020480:	6560      	strne	r0, [r4, #84]	; 0x54
90020482:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
90020486:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
9002048a:	81a3      	strheq	r3, [r4, #12]
9002048c:	bf18      	it	ne
9002048e:	81a3      	strhne	r3, [r4, #12]
90020490:	bd10      	pop	{r4, pc}

90020492 <__sclose>:
90020492:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90020496:	f000 b813 	b.w	900204c0 <_close_r>
	...

9002049c <_write_r>:
9002049c:	b538      	push	{r3, r4, r5, lr}
9002049e:	4d07      	ldr	r5, [pc, #28]	; (900204bc <_write_r+0x20>)
900204a0:	4604      	mov	r4, r0
900204a2:	4608      	mov	r0, r1
900204a4:	4611      	mov	r1, r2
900204a6:	2200      	movs	r2, #0
900204a8:	602a      	str	r2, [r5, #0]
900204aa:	461a      	mov	r2, r3
900204ac:	f7e3 fa49 	bl	90003942 <_write>
900204b0:	1c43      	adds	r3, r0, #1
900204b2:	d102      	bne.n	900204ba <_write_r+0x1e>
900204b4:	682b      	ldr	r3, [r5, #0]
900204b6:	b103      	cbz	r3, 900204ba <_write_r+0x1e>
900204b8:	6023      	str	r3, [r4, #0]
900204ba:	bd38      	pop	{r3, r4, r5, pc}
900204bc:	240130e8 	.word	0x240130e8

900204c0 <_close_r>:
900204c0:	b538      	push	{r3, r4, r5, lr}
900204c2:	4d06      	ldr	r5, [pc, #24]	; (900204dc <_close_r+0x1c>)
900204c4:	2300      	movs	r3, #0
900204c6:	4604      	mov	r4, r0
900204c8:	4608      	mov	r0, r1
900204ca:	602b      	str	r3, [r5, #0]
900204cc:	f7e3 fa46 	bl	9000395c <_close>
900204d0:	1c43      	adds	r3, r0, #1
900204d2:	d102      	bne.n	900204da <_close_r+0x1a>
900204d4:	682b      	ldr	r3, [r5, #0]
900204d6:	b103      	cbz	r3, 900204da <_close_r+0x1a>
900204d8:	6023      	str	r3, [r4, #0]
900204da:	bd38      	pop	{r3, r4, r5, pc}
900204dc:	240130e8 	.word	0x240130e8

900204e0 <_fstat_r>:
900204e0:	b538      	push	{r3, r4, r5, lr}
900204e2:	4d07      	ldr	r5, [pc, #28]	; (90020500 <_fstat_r+0x20>)
900204e4:	2300      	movs	r3, #0
900204e6:	4604      	mov	r4, r0
900204e8:	4608      	mov	r0, r1
900204ea:	4611      	mov	r1, r2
900204ec:	602b      	str	r3, [r5, #0]
900204ee:	f7e3 fa38 	bl	90003962 <_fstat>
900204f2:	1c43      	adds	r3, r0, #1
900204f4:	d102      	bne.n	900204fc <_fstat_r+0x1c>
900204f6:	682b      	ldr	r3, [r5, #0]
900204f8:	b103      	cbz	r3, 900204fc <_fstat_r+0x1c>
900204fa:	6023      	str	r3, [r4, #0]
900204fc:	bd38      	pop	{r3, r4, r5, pc}
900204fe:	bf00      	nop
90020500:	240130e8 	.word	0x240130e8

90020504 <_isatty_r>:
90020504:	b538      	push	{r3, r4, r5, lr}
90020506:	4d06      	ldr	r5, [pc, #24]	; (90020520 <_isatty_r+0x1c>)
90020508:	2300      	movs	r3, #0
9002050a:	4604      	mov	r4, r0
9002050c:	4608      	mov	r0, r1
9002050e:	602b      	str	r3, [r5, #0]
90020510:	f7e3 fa2c 	bl	9000396c <_isatty>
90020514:	1c43      	adds	r3, r0, #1
90020516:	d102      	bne.n	9002051e <_isatty_r+0x1a>
90020518:	682b      	ldr	r3, [r5, #0]
9002051a:	b103      	cbz	r3, 9002051e <_isatty_r+0x1a>
9002051c:	6023      	str	r3, [r4, #0]
9002051e:	bd38      	pop	{r3, r4, r5, pc}
90020520:	240130e8 	.word	0x240130e8

90020524 <_lseek_r>:
90020524:	b538      	push	{r3, r4, r5, lr}
90020526:	4d07      	ldr	r5, [pc, #28]	; (90020544 <_lseek_r+0x20>)
90020528:	4604      	mov	r4, r0
9002052a:	4608      	mov	r0, r1
9002052c:	4611      	mov	r1, r2
9002052e:	2200      	movs	r2, #0
90020530:	602a      	str	r2, [r5, #0]
90020532:	461a      	mov	r2, r3
90020534:	f7e3 fa1c 	bl	90003970 <_lseek>
90020538:	1c43      	adds	r3, r0, #1
9002053a:	d102      	bne.n	90020542 <_lseek_r+0x1e>
9002053c:	682b      	ldr	r3, [r5, #0]
9002053e:	b103      	cbz	r3, 90020542 <_lseek_r+0x1e>
90020540:	6023      	str	r3, [r4, #0]
90020542:	bd38      	pop	{r3, r4, r5, pc}
90020544:	240130e8 	.word	0x240130e8

90020548 <_read_r>:
90020548:	b538      	push	{r3, r4, r5, lr}
9002054a:	4d07      	ldr	r5, [pc, #28]	; (90020568 <_read_r+0x20>)
9002054c:	4604      	mov	r4, r0
9002054e:	4608      	mov	r0, r1
90020550:	4611      	mov	r1, r2
90020552:	2200      	movs	r2, #0
90020554:	602a      	str	r2, [r5, #0]
90020556:	461a      	mov	r2, r3
90020558:	f7e3 f9e6 	bl	90003928 <_read>
9002055c:	1c43      	adds	r3, r0, #1
9002055e:	d102      	bne.n	90020566 <_read_r+0x1e>
90020560:	682b      	ldr	r3, [r5, #0]
90020562:	b103      	cbz	r3, 90020566 <_read_r+0x1e>
90020564:	6023      	str	r3, [r4, #0]
90020566:	bd38      	pop	{r3, r4, r5, pc}
90020568:	240130e8 	.word	0x240130e8

9002056c <_init>:
9002056c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002056e:	bf00      	nop
90020570:	bcf8      	pop	{r3, r4, r5, r6, r7}
90020572:	bc08      	pop	{r3}
90020574:	469e      	mov	lr, r3
90020576:	4770      	bx	lr

90020578 <_fini>:
90020578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002057a:	bf00      	nop
9002057c:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002057e:	bc08      	pop	{r3}
90020580:	469e      	mov	lr, r3
90020582:	4770      	bx	lr
